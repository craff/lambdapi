
(; This file was generated by Holide. ;)

#REQUIRE hol.
#NAME set_2Dthm_2Da8.

Set_2Eset : hol.type -> hol.type.

Data_2EBool_2E_3F : A : hol.type -> hol.term A.

Set_2Eimage : A : hol.type -> hol.term A.

Set_2EfromPredicate : A : hol.type -> hol.term A.

Set_2Emember : A : hol.type -> hol.term A.

Set_2Esubset : A : hol.type -> hol.term A.

Set_2Einsert : A : hol.type -> hol.term A.

Set_2E_7B_7D : A : hol.type -> hol.term A.

Set_2Euniverse : A : hol.type -> hol.term A.

(; axiom ;)

thm_0 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.eq hol.bool (hol.eq A x_1 y_2) (hol.eq A y_2 x_1)))).

(; axiom ;)

thm_1 : A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))) (hol.eq (Set_2Eset A) s_1 t_2)))).

(; axiom ;)

thm_2 : A : hol.type -> B : hol.type -> hol.proof (hol.forall B (y_1 : hol.term B => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_1 (f_3 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2))))))).

(; axiom ;)

thm_3 : A : hol.type -> hol.proof (hol.forall (hol.arr A hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.forall A (x_2 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2)))).

(; axiom ;)

thm_4 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and hol.true t_1) t_1)).

(; axiom ;)

thm_5 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))).

(; axiom ;)

thm_6 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and t_1 hol.true) t_1)).

(; axiom ;)

thm_7 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and hol.false t_1) hol.false)).

(; axiom ;)

thm_8 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and t_1 hol.false) hol.false)).

(; axiom ;)

thm_9 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and t_1 t_1) t_1)).

(; axiom ;)

thm_10 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1)).

(; axiom ;)

thm_11 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1)).

(; axiom ;)

thm_12 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1))).

(; axiom ;)

thm_13 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))).

(; axiom ;)

thm_14 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (p_1 x_3) q_2)) q_2))).

(; axiom ;)

thm_15 : hol.proof hol.true.

(; axiom ;)

thm_16 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.eq A x_1 x_1)).

(; axiom ;)

thm_17 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))))))).

(; axiom ;)

thm_18 : hol.proof (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_1 t2_2) (hol.and t2_2 t1_1)))).

(; axiom ;)

thm_19 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp hol.true t_1) t_1)).

(; axiom ;)

thm_20 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 hol.true) hol.true)).

(; axiom ;)

thm_21 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp hol.false t_1) hol.true)).

(; axiom ;)

thm_22 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.imp t_1 t_1)).

(; axiom ;)

thm_23 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))).

(; axiom ;)

thm_24 : A : hol.type -> hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1)).

(; axiom ;)

thm_25 : A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2)))))).

(; axiom ;)

thm_26 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.or (hol.eq hol.bool t_1 hol.true) (hol.eq hol.bool t_1 hol.false))).

(; axiom ;)

thm_27 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.or (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp p_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))).

(; axiom ;)

thm_28 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)))))).

(; axiom ;)

thm_29 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.forall A (z_3 : hol.term A => hol.imp (hol.and (hol.eq A x_1 y_2) (hol.eq A y_2 z_3)) (hol.eq A x_1 z_3))))).

(; axiom ;)

thm_30 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.imp (hol.eq A x_1 y_2) (hol.eq A y_2 x_1)))).

(; axiom ;)

thm_31 : hol.proof (hol.eq hol.bool (hol.not hol.true) hol.false).

(; axiom ;)

thm_32 : hol.proof (hol.eq hol.bool (hol.not hol.false) hol.true).

(; axiom ;)

thm_33 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)).

(; axiom ;)

thm_34 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_1 y_2)))).

(; axiom ;)

thm_35 : A : hol.type -> hol.proof (hol.forall (hol.arr A hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.forall A (a_2 : hol.term A => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq A x_3 a_2) (p_1 x_3))) (p_1 a_2)))).

(; axiom ;)

thm_36 : A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 (Set_2Euniverse (Set_2Eset A)))).

(; axiom ;)

thm_37 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A)))).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_38 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (hol.forall (hol.arr A B)).

(; Theorem: |- ((= \lambda f. ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.! \lambda p. ((= ((Set.image f) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x))))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p x)))))))) \lambda f. ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.! \lambda p. ((= ((Set.image f) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x))))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p x)))))))) ;)

(; dict ;)

def thm_39 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4)))))) (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq B v_3 x_4) (p_2 x_4))))))) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4)))))) (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq B v_3 x_4) (p_2 x_4)))))))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4)))))) (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq B v_3 x_4) (p_2 x_4))))))).

(; Theorem: |- ((= \lambda f. ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.! \lambda p. ((= ((Set.image f) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x))))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p x)))))))) \lambda f. ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.! \lambda p. ((= ((Set.image f) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x))))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p x)))))))) ;)

(; dict ;)

def thm_40 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4)))))) (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq B v_3 x_4) (p_2 x_4))))))) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4)))))) (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq B v_3 x_4) (p_2 x_4)))))))) :=
  B : hol.type => A : hol.type => hol.TRANS (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4)))))) (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq B v_3 x_4) (p_2 x_4))))))) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4)))))) (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq B v_3 x_4) (p_2 x_4))))))) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4)))))) (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq B v_3 x_4) (p_2 x_4))))))) (thm_39 B A) (thm_39 B A).

(; Theorem: |- ((= (Data.Bool.! \lambda f. ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.! \lambda p. ((= ((Set.image f) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x))))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p x))))))))) (Data.Bool.! \lambda f. ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.! \lambda p. ((= ((Set.image f) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x))))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p x))))))))) ;)

(; dict ;)

def thm_41 : B : hol.type -> A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4)))))) (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq B v_3 x_4) (p_2 x_4)))))))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4)))))) (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq B v_3 x_4) (p_2 x_4))))))))) :=
  B : hol.type => A : hol.type => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B)) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4)))))) (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq B v_3 x_4) (p_2 x_4))))))) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4)))))) (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq B v_3 x_4) (p_2 x_4))))))) (thm_38 B A) (thm_40 B A).

(; Theorem: |- ((= (= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) (= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) ;)

(; dict ;)

def thm_42 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_43 : B : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr B hol.bool) hol.bool) hol.bool) (hol.forall (hol.arr B hol.bool)) (hol.forall (hol.arr B hol.bool))) :=
  B : hol.type => hol.REFL (hol.arr (hol.arr (hol.arr B hol.bool) hol.bool) hol.bool) (hol.forall (hol.arr B hol.bool)).

(; Theorem: |- ((= ((= ((= s) t)) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))) ((= ((= s) t)) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_44 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq (Set_2Eset A) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (hol.eq (Set_2Eset A) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1))))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.eq hol.bool (hol.eq (Set_2Eset A) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))).

(; Theorem: |- ((= ((= ((= s) t)) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))) ((= ((= s) t)) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_45 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq (Set_2Eset A) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (hol.eq (Set_2Eset A) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1))))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq (Set_2Eset A) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (hol.eq (Set_2Eset A) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (hol.eq (Set_2Eset A) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (thm_44 A t_1 s_2) (thm_44 A t_1 s_2).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_46 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (hol.forall (Set_2Eset A)).

(; Theorem: |- ((= ((= ((= x) y)) ((= y) x))) ((= ((= x) y)) ((= y) x))) ;)

(; dict ;)

def thm_47 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)).

(; Theorem: |- ((= ((= ((= x) y)) ((= y) x))) ((= ((= x) y)) ((= y) x))) ;)

(; dict ;)

def thm_48 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (thm_47 A y_1 x_2) (thm_47 A y_1 x_2).

(; Theorem: |- (Data.Bool.! \lambda y. ((= ((= x) y)) ((= y) x))) ;)

(; dict ;)

def thm_49 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.forall A (y_2 : hol.term A => hol.eq hol.bool (hol.eq A x_1 y_2) (hol.eq A y_2 x_1))) :=
  A : hol.type => x_1 : hol.term A => thm_0 A x_1.

(; Theorem: |- ((= ((= x) y)) ((= y) x)) ;)

(; dict ;)

def thm_50 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => thm_49 A x_2 y_1.

(; Theorem: |- ((= ((= x) y)) ((= y) x)) ;)

(; dict ;)

def thm_51 : y_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool x_2 y_1) (hol.eq hol.bool y_1 x_2)) :=
  y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => (A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.EQ_MP (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (thm_48 A y_1 x_2) (thm_50 A y_1 x_2)) hol.bool y_1 x_2.

(; Theorem: |- ((= ((= ((= s) t)) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))) ((= (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))) ((= s) t))) ;)

(; dict ;)

def thm_52 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq (Set_2Eset A) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1))) (hol.eq (Set_2Eset A) s_2 t_1))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => (y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => thm_51 y_1 x_2) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1))) (hol.eq (Set_2Eset A) s_2 t_1).

(; Theorem: |- ((= \lambda t. ((= ((= s) t)) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))) \lambda t. ((= (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))) ((= s) t))) ;)

(; dict ;)

def thm_53 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2)))) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))) (hol.eq (Set_2Eset A) s_1 t_2))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.ABS_THM (Set_2Eset A) hol.bool (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2)))) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))) (hol.eq (Set_2Eset A) s_1 t_2)) (t_2 : hol.term (Set_2Eset A) => thm_52 A t_2 s_1).

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((= ((= s) t)) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))))) (Data.Bool.! \lambda t. ((= (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))) ((= s) t)))) ;)

(; dict ;)

def thm_54 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))))) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))) (hol.eq (Set_2Eset A) s_1 t_2)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2)))) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))) (hol.eq (Set_2Eset A) s_1 t_2)) (thm_46 A) (thm_53 A s_1).

(; Theorem: |- ((= \lambda s. (Data.Bool.! \lambda t. ((= ((= s) t)) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))))) \lambda s. (Data.Bool.! \lambda t. ((= (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))) ((= s) t)))) ;)

(; dict ;)

def thm_55 : A : hol.type -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))))) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))) (hol.eq (Set_2Eset A) s_1 t_2)))) :=
  A : hol.type => hol.ABS_THM (Set_2Eset A) hol.bool (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))))) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))) (hol.eq (Set_2Eset A) s_1 t_2))) (s_1 : hol.term (Set_2Eset A) => thm_54 A s_1).

(; Theorem: |- ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= ((= s) t)) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))))) (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))) ((= s) t))))) ;)

(; dict ;)

def thm_56 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2)))))) (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))) (hol.eq (Set_2Eset A) s_1 t_2))))) :=
  A : hol.type => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))))) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))) (hol.eq (Set_2Eset A) s_1 t_2))) (thm_46 A) (thm_55 A).

(; Theorem: |- ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))) ((= s) t))))) (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= ((= s) t)) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))))) ;)

(; dict ;)

def thm_57 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))) (hol.eq (Set_2Eset A) s_1 t_2)))) (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))))))) :=
  A : hol.type => hol.SYM hol.bool (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2)))))) (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))) (hol.eq (Set_2Eset A) s_1 t_2)))) (thm_56 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= ((= s) t)) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))))) ;)

(; dict ;)

def thm_58 : A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2)))))) :=
  A : hol.type => hol.EQ_MP (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))) (hol.eq (Set_2Eset A) s_1 t_2)))) (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2)))))) (thm_57 A) (thm_1 A).

(; Theorem: |- (Data.Bool.! \lambda t. ((= ((= s) t)) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_59 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => thm_58 A s_1.

(; Theorem: |- ((= ((= s) t)) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))) ;)

(; dict ;)

def thm_60 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset A) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => thm_59 A s_2 t_1.

(; Theorem: |- ((= ((= s) t)) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))) ;)

(; dict ;)

def thm_61 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset B) s_2 t_1) (hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_1)))) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset B) => (A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.eq hol.bool (hol.eq (Set_2Eset A) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (hol.eq (Set_2Eset A) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (thm_45 A t_1 s_2) (thm_60 A t_1 s_2)) B t_1 s_2.

(; Theorem: |- ((= ((= ((Set.image f) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x))))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p x)))))) (Data.Bool.! \lambda x. ((= ((Set.member x) ((Set.image f) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x)))))))) ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p x)))))))) ;)

(; dict ;)

def thm_62 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_1 (f_2 x_4)))))) (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq B v_3 x_4) (p_1 x_4))))) (hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (p_1 (f_2 x_5))))))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_4 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq B v_4 x_5) (p_1 x_5)))))))) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => f_2 : hol.term (hol.arr A B) => (B : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset B) => thm_61 B t_1 s_2) B (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq B v_3 x_4) (p_1 x_4)))) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_1 (f_2 x_4)))))).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_63 : B : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr B hol.bool) hol.bool) (hol.forall B) (hol.forall B)) :=
  B : hol.type => hol.REFL (hol.arr (hol.arr B hol.bool) hol.bool) (hol.forall B).

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_64 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) (hol.eq hol.bool) (hol.eq hol.bool)) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) (hol.eq hol.bool).

(; Theorem: |- ((= ((= ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))))) ((= ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_65 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))).

(; Theorem: |- ((= ((= ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))))) ((= ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_66 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (thm_65 A B s_1 f_2 y_3) (thm_65 A B s_1 f_2 y_3).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda f. ((= ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))))) ;)

(; dict ;)

def thm_67 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_1 (f_3 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2)))))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => thm_2 A B y_1.

(; Theorem: |- (Data.Bool.! \lambda f. ((= ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_68 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term B -> hol.proof (hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_2 (f_3 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term B => thm_67 B A y_2 s_1.

(; Theorem: |- ((= ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_69 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => thm_68 B A s_1 y_3 f_2.

(; Theorem: |- ((= ((Set.member x) ((Set.image f) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x)))))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x))))))))) ;)

(; dict ;)

def thm_70 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (p_1 (f_2 x_5))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (p_1 (f_2 x_6))))))))) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => (A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => (A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (thm_66 A B s_1 f_2 y_3) (thm_69 A B s_1 f_2 y_3)) A B s_1 f_2 y_3) A B (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (p_1 (f_2 x_5))))) f_2 x_3.

(; Theorem: |- ((= Data.Bool.?) Data.Bool.?) ;)

(; dict ;)

def thm_71 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)).

(; Theorem: |- ((= (Data.Bool./\ ((= x) (f x)))) (Data.Bool./\ ((= x) (f x)))) ;)

(; dict ;)

def thm_72 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq B x_3 (f_2 x_1))) (hol.and (hol.eq B x_3 (f_2 x_1)))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (hol.eq B x_3 (f_2 x_1))).

(; Theorem: |- ((= (Set.member x)) (Set.member x)) ;)

(; dict ;)

def thm_73 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1)) :=
  A : hol.type => x_1 : hol.term A => hol.REFL (hol.arr (Set_2Eset A) hol.bool) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1).

(; Theorem: |- ((= Set.fromPredicate) Set.fromPredicate) ;)

(; dict ;)

def thm_74 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A))).

(; Theorem: |- ((= (Data.Bool./\ ((= v) x))) (Data.Bool./\ ((= v) x))) ;)

(; dict ;)

def thm_75 : A : hol.type -> x_1 : hol.term A -> v_2 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq A v_2 x_1)) (hol.and (hol.eq A v_2 x_1))) :=
  A : hol.type => x_1 : hol.term A => v_2 : hol.term A => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (hol.eq A v_2 x_1)).

(; Theorem: |- ((= (\lambda x. (p (f x)) x)) (p (f x))) ;)

(; dict ;)

def thm_76 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> p_3 : hol.term (hol.arr B hol.bool) -> hol.proof (hol.eq hol.bool ((x_4 : hol.term A => p_3 (f_2 x_4)) x_1) (p_3 (f_2 x_1))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => p_3 : hol.term (hol.arr B hol.bool) => hol.BETA_CONV A hol.bool (x_4 : hol.term A => p_3 (f_2 x_4)) x_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= v) x)) (\lambda x. (p (f x)) x))) ((Data.Bool./\ ((= v) x)) (p (f x)))) ;)

(; dict ;)

def thm_77 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> p_2 : hol.term (hol.arr B hol.bool) -> x_3 : hol.term A -> v_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (hol.eq A v_4 x_3) ((x_5 : hol.term A => p_2 (f_1 x_5)) x_3)) (hol.and (hol.eq A v_4 x_3) (p_2 (f_1 x_3)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => p_2 : hol.term (hol.arr B hol.bool) => x_3 : hol.term A => v_4 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq A v_4 x_3)) (hol.and (hol.eq A v_4 x_3)) ((x_5 : hol.term A => p_2 (f_1 x_5)) x_3) (p_2 (f_1 x_3)) (thm_75 A x_3 v_4) (thm_76 B A x_3 f_1 p_2).

(; Theorem: |- ((= \lambda x. ((Data.Bool./\ ((= v) x)) (\lambda x. (p (f x)) x))) \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x)))) ;)

(; dict ;)

def thm_78 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> p_2 : hol.term (hol.arr B hol.bool) -> v_3 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) ((x_5 : hol.term A => p_2 (f_1 x_5)) x_4)) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => p_2 : hol.term (hol.arr B hol.bool) => v_3 : hol.term A => hol.ABS_THM A hol.bool (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) ((x_5 : hol.term A => p_2 (f_1 x_5)) x_4)) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4))) (x_4 : hol.term A => thm_77 B A f_1 p_2 x_4 v_3).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (\lambda x. (p (f x)) x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x))))) ;)

(; dict ;)

def thm_79 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> p_2 : hol.term (hol.arr B hol.bool) -> v_3 : hol.term A -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) ((x_5 : hol.term A => p_2 (f_1 x_5)) x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => p_2 : hol.term (hol.arr B hol.bool) => v_3 : hol.term A => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) ((x_5 : hol.term A => p_2 (f_1 x_5)) x_4)) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4))) (thm_71 A) (thm_78 B A f_1 p_2 v_3).

(; Theorem: |- ((= \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (\lambda x. (p (f x)) x)))) \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x))))) ;)

(; dict ;)

def thm_80 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> p_2 : hol.term (hol.arr B hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) ((x_5 : hol.term A => p_2 (f_1 x_5)) x_4))) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => p_2 : hol.term (hol.arr B hol.bool) => hol.ABS_THM A hol.bool (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) ((x_5 : hol.term A => p_2 (f_1 x_5)) x_4))) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4)))) (v_3 : hol.term A => thm_79 B A f_1 p_2 v_3).

(; Theorem: |- ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (\lambda x. (p (f x)) x))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x)))))) ;)

(; dict ;)

def thm_81 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> p_2 : hol.term (hol.arr B hol.bool) -> hol.proof (hol.eq (Set_2Eset A) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) ((x_5 : hol.term A => p_2 (f_1 x_5)) x_4)))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => p_2 : hol.term (hol.arr B hol.bool) => hol.APP_THM (hol.arr A hol.bool) (Set_2Eset A) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A))) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) ((x_5 : hol.term A => p_2 (f_1 x_5)) x_4))) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4)))) (thm_74 A) (thm_80 B A f_1 p_2).

(; Theorem: |- ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (\lambda x. (p (f x)) x)))))) ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x))))))) ;)

(; dict ;)

def thm_82 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> p_2 : hol.term (hol.arr B hol.bool) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) ((x_6 : hol.term A => p_2 (f_1 x_6)) x_5))))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (p_2 (f_1 x_5))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => p_2 : hol.term (hol.arr B hol.bool) => x_3 : hol.term A => hol.APP_THM (Set_2Eset A) hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) ((x_6 : hol.term A => p_2 (f_1 x_6)) x_5)))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (p_2 (f_1 x_5))))) (thm_73 A x_3) (thm_81 B A f_1 p_2).

(; Theorem: |- ((= (= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (\lambda x. (p (f x)) x))))))) (= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x)))))))) ;)

(; dict ;)

def thm_83 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> p_2 : hol.term (hol.arr B hol.bool) -> x_3 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) ((x_6 : hol.term A => p_2 (f_1 x_6)) x_5)))))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (p_2 (f_1 x_5)))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => p_2 : hol.term (hol.arr B hol.bool) => x_3 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) ((x_6 : hol.term A => p_2 (f_1 x_6)) x_5))))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (p_2 (f_1 x_5)))))) thm_64 (thm_82 B A f_1 p_2 x_3).

(; Theorem: |- ((= ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (\lambda x. (p (f x)) x)))))) (\lambda x. (p (f x)) x))) ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x))))))) (p (f x)))) ;)

(; dict ;)

def thm_84 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> p_2 : hol.term (hol.arr B hol.bool) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) ((x_6 : hol.term A => p_2 (f_1 x_6)) x_5))))) ((x_4 : hol.term A => p_2 (f_1 x_4)) x_3)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (p_2 (f_1 x_5)))))) (p_2 (f_1 x_3)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => p_2 : hol.term (hol.arr B hol.bool) => x_3 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) ((x_6 : hol.term A => p_2 (f_1 x_6)) x_5)))))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (p_2 (f_1 x_5))))))) ((x_4 : hol.term A => p_2 (f_1 x_4)) x_3) (p_2 (f_1 x_3)) (thm_83 B A f_1 p_2 x_3) (thm_76 B A x_3 f_1 p_2).

(; Theorem: |- ((= ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) (p y)))))) (p x))) ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) (p y)))))) (p x))) ;)

(; dict ;)

def thm_85 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => x_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2)).

(; Theorem: |- ((= ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p x)))))) (p x))) ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p x)))))) (p x))) ;)

(; dict ;)

def thm_86 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_1 x_4))))) (p_1 x_2)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_1 x_4))))) (p_1 x_2))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => x_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_1 x_4))))) (p_1 x_2)).

(; Theorem: |- ((= ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) (p y)))))) (p x))) ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p x)))))) (p x))) ;)

(; dict ;)

def thm_87 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_1 x_4))))) (p_1 x_2))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => x_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_1 x_4))))) (p_1 x_2)) (thm_85 A p_1 x_2) (thm_86 A p_1 x_2).

(; Theorem: |- (Data.Bool.! \lambda x. ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) (p y)))))) (p x))) ;)

(; dict ;)

def thm_88 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.forall A (x_2 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_3 A p_1.

(; Theorem: |- ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) (p y)))))) (p x)) ;)

(; dict ;)

def thm_89 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => x_2 : hol.term A => thm_88 A p_1 x_2.

(; Theorem: |- ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p x)))))) (p x)) ;)

(; dict ;)

def thm_90 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_1 x_4))))) (p_1 x_2)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => x_2 : hol.term A => hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_4 : hol.term A => hol.and (hol.eq A v_3 y_4) (p_1 y_4))))) (p_1 x_2)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_1 x_4))))) (p_1 x_2)) (thm_87 A p_1 x_2) (thm_89 A p_1 x_2).

(; Theorem: |- ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= v) x_1)) (\lambda x. (p (f x)) x_1)))))) (\lambda x. (p (f x)) x)) ;)

(; dict ;)

def thm_91 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> p_2 : hol.term (hol.arr B hol.bool) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_5 : hol.term A => hol.and (hol.eq A v_4 x__1_5) ((x_6 : hol.term A => p_2 (f_1 x_6)) x__1_5))))) ((x_4 : hol.term A => p_2 (f_1 x_4)) x_3)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => p_2 : hol.term (hol.arr B hol.bool) => x_3 : hol.term A => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => x_2 : hol.term A => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => x_2 : hol.term A => thm_90 A p_1 x_2) A p_1 x_2) A (x_4 : hol.term A => p_2 (f_1 x_4)) x_3.

(; Theorem: |- ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x))))))) (p (f x))) ;)

(; dict ;)

def thm_92 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> p_2 : hol.term (hol.arr B hol.bool) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (p_2 (f_1 x_5)))))) (p_2 (f_1 x_3))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => p_2 : hol.term (hol.arr B hol.bool) => x_3 : hol.term A => hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_5 : hol.term A => hol.and (hol.eq A v_4 x__1_5) ((x_6 : hol.term A => p_2 (f_1 x_6)) x__1_5))))) ((x_4 : hol.term A => p_2 (f_1 x_4)) x_3)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (p_2 (f_1 x_5)))))) (p_2 (f_1 x_3))) (thm_84 B A f_1 p_2 x_3) (thm_91 B A f_1 p_2 x_3).

(; Theorem: |- ((= ((Data.Bool./\ ((= x) (f x))) ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x)))))))) ((Data.Bool./\ ((= x) (f x))) (p (f x)))) ;)

(; dict ;)

def thm_93 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B x_4 (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (p_1 (f_3 x_6))))))) (hol.and (hol.eq B x_4 (f_3 x_2)) (p_1 (f_3 x_2)))) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq B x_4 (f_3 x_2))) (hol.and (hol.eq B x_4 (f_3 x_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (p_1 (f_3 x_6)))))) (p_1 (f_3 x_2)) (thm_72 A B x_2 f_3 x_4) (thm_92 B A f_3 p_1 x_2).

(; Theorem: |- ((= \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x)))))))) \lambda x. ((Data.Bool./\ ((= x) (f x))) (p (f x)))) ;)

(; dict ;)

def thm_94 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hol.proof (hol.eq (hol.arr A hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (p_1 (f_2 x_6))))))) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (p_1 (f_2 x_4)))) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr B hol.bool) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => hol.ABS_THM A hol.bool (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (p_1 (f_2 x_6))))))) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (p_1 (f_2 x_4))) (x_4 : hol.term A => thm_93 A B p_1 x_4 f_2 x_3).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x))))))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (p (f x))))) ;)

(; dict ;)

def thm_95 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (p_1 (f_2 x_6)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (p_1 (f_2 x_4))))) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr B hol.bool) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (p_1 (f_2 x_6))))))) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (p_1 (f_2 x_4))) (thm_71 A) (thm_94 B A p_1 f_2 x_3).

(; Theorem: |- ((= ((Set.member x) ((Set.image f) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x)))))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (p (f x))))) ;)

(; dict ;)

def thm_96 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (p_1 (f_2 x_5))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (p_1 (f_2 x_4))))) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => hol.TRANS hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (p_1 (f_2 x_5))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (p_1 (f_2 x_6)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (thm_70 A B p_1 f_2 x_3) (thm_95 B A p_1 f_2 x_3).

(; Theorem: |- ((= (= ((Set.member x) ((Set.image f) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x))))))))) (= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (p (f x)))))) ;)

(; dict ;)

def thm_97 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (p_1 (f_2 x_5)))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (p_1 (f_2 x_4)))))) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (p_1 (f_2 x_5))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (p_1 (f_2 x_4)))) thm_64 (thm_96 A B p_1 f_2 x_3).

(; Theorem: |- ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= v) x_1)) (p x_1)))))) (p x)) ;)

(; dict ;)

def thm_98 : B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> x_2 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x__1_4 : hol.term B => hol.and (hol.eq B v_3 x__1_4) (p_1 x__1_4))))) (p_1 x_2)) :=
  B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => x_2 : hol.term B => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => x_2 : hol.term A => thm_90 A p_1 x_2) B p_1 x_2.

(; Theorem: |- ((= ((= ((Set.member x) ((Set.image f) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x)))))))) ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= v) x_1)) (p x_1))))))) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (p (f x))))) (p x))) ;)

(; dict ;)

def thm_99 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (p_1 (f_2 x_5))))))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_4 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x__1_5 : hol.term B => hol.and (hol.eq B v_4 x__1_5) (p_1 x__1_5)))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 x_3))) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (p_1 (f_2 x_5)))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (p_1 (f_2 x_4))))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_4 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x__1_5 : hol.term B => hol.and (hol.eq B v_4 x__1_5) (p_1 x__1_5))))) (p_1 x_3) (thm_97 A B p_1 f_2 x_3) (thm_98 B p_1 x_3).

(; Theorem: |- ((= \lambda x. ((= ((Set.member x) ((Set.image f) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x)))))))) ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= v) x_1)) (p x_1))))))) \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (p (f x))))) (p x))) ;)

(; dict ;)

def thm_100 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (x_3 : hol.term B => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (p_1 (f_2 x_5))))))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_4 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x__1_5 : hol.term B => hol.and (hol.eq B v_4 x__1_5) (p_1 x__1_5)))))) (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 x_3))) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => f_2 : hol.term (hol.arr A B) => hol.ABS_THM B hol.bool (x_3 : hol.term B => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (p_1 (f_2 x_5))))))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_4 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x__1_5 : hol.term B => hol.and (hol.eq B v_4 x__1_5) (p_1 x__1_5)))))) (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 x_3)) (x_3 : hol.term B => thm_99 A B p_1 f_2 x_3).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= ((Set.member x) ((Set.image f) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x)))))))) ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= v) x_1)) (p x_1)))))))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (p (f x))))) (p x)))) ;)

(; dict ;)

def thm_101 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (p_1 (f_2 x_5))))))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_4 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x__1_5 : hol.term B => hol.and (hol.eq B v_4 x__1_5) (p_1 x__1_5))))))) (hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 x_3)))) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => f_2 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (x_3 : hol.term B => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (p_1 (f_2 x_5))))))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_4 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x__1_5 : hol.term B => hol.and (hol.eq B v_4 x__1_5) (p_1 x__1_5)))))) (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 x_3)) (thm_63 B) (thm_100 A B p_1 f_2).

(; Theorem: |- ((= ((= ((Set.image f) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x))))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p x)))))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (p (f x))))) (p x)))) ;)

(; dict ;)

def thm_102 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_1 (f_2 x_4)))))) (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq B v_3 x_4) (p_1 x_4))))) (hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 x_3)))) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => f_2 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_1 (f_2 x_4)))))) (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq B v_3 x_4) (p_1 x_4))))) (hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (p_1 (f_2 x_5))))))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_4 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq B v_4 x_5) (p_1 x_5))))))) (hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 x_3))) (thm_62 A B p_1 f_2) (thm_101 A B p_1 f_2).

(; Theorem: |- ((= \lambda p. ((= ((Set.image f) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x))))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p x)))))) \lambda p. (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (p (f x))))) (p x)))) ;)

(; dict ;)

def thm_103 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (hol.arr B hol.bool) hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4)))))) (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq B v_3 x_4) (p_2 x_4))))) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.ABS_THM (hol.arr B hol.bool) hol.bool (p_2 : hol.term (hol.arr B hol.bool) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4)))))) (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq B v_3 x_4) (p_2 x_4))))) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3))) (p_2 : hol.term (hol.arr B hol.bool) => thm_102 A B p_2 f_1).

(; Theorem: |- ((= (Data.Bool.! \lambda p. ((= ((Set.image f) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x))))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p x))))))) (Data.Bool.! \lambda p. (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (p (f x))))) (p x))))) ;)

(; dict ;)

def thm_104 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4)))))) (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq B v_3 x_4) (p_2 x_4)))))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr (hol.arr B hol.bool) hol.bool) hol.bool (hol.forall (hol.arr B hol.bool)) (hol.forall (hol.arr B hol.bool)) (p_2 : hol.term (hol.arr B hol.bool) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4)))))) (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq B v_3 x_4) (p_2 x_4))))) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3))) (thm_43 B) (thm_103 A B f_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.! \lambda p. ((= ((Set.image f) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x))))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p x)))))))) ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.! \lambda p. (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (p (f x))))) (p x)))))) ;)

(; dict ;)

def thm_105 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4)))))) (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq B v_3 x_4) (p_2 x_4))))))) (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4)))))) (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq B v_3 x_4) (p_2 x_4)))))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3)))) (thm_42 A B f_1) (thm_104 A B f_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.! \lambda p. (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (p (f x))))) (p x)))))) ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.! \lambda p. ((= ((Set.image f) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x))))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p x)))))))) ;)

(; dict ;)

def thm_106 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3))))) (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4)))))) (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq B v_3 x_4) (p_2 x_4)))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.SYM hol.bool (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4)))))) (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq B v_3 x_4) (p_2 x_4))))))) (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3))))) (thm_105 A B f_1).

(; Theorem: |- ((= Data.Bool.==>) Data.Bool.==>) ;)

(; dict ;)

def thm_107 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.imp hol.imp) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.imp.

(; Theorem: |- ((= (\lambda y. Data.Bool.T y)) Data.Bool.T) ;)

(; dict ;)

def thm_108 : B : hol.type -> y_1 : hol.term B -> hol.proof (hol.eq hol.bool ((y_2 : hol.term B => hol.true) y_1) hol.true) :=
  B : hol.type => y_1 : hol.term B => hol.BETA_CONV B hol.bool (y_2 : hol.term B => hol.true) y_1.

(; Theorem: |- ((= \lambda y. (\lambda y. Data.Bool.T y)) \lambda y. Data.Bool.T) ;)

(; dict ;)

def thm_109 : B : hol.type -> hol.proof (hol.eq (hol.arr B hol.bool) (y_1 : hol.term B => (y_2 : hol.term B => hol.true) y_1) (y_1 : hol.term B => hol.true)) :=
  B : hol.type => hol.ABS_THM B hol.bool (y_1 : hol.term B => (y_2 : hol.term B => hol.true) y_1) (y_1 : hol.term B => hol.true) (y_1 : hol.term B => thm_108 B y_1).

(; Theorem: |- ((= (f x)) (f x)) ;)

(; dict ;)

def thm_110 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq B (f_2 x_1) (f_2 x_1)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => hol.REFL B (f_2 x_1).

(; Theorem: |- ((= (\lambda y. (\lambda y. Data.Bool.T y) (f x))) (\lambda y. Data.Bool.T (f x))) ;)

(; dict ;)

def thm_111 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((y_3 : hol.term B => (y_4 : hol.term B => hol.true) y_3) (f_2 x_1)) ((y_3 : hol.term B => hol.true) (f_2 x_1))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => hol.APP_THM B hol.bool (y_3 : hol.term B => (y_4 : hol.term B => hol.true) y_3) (y_3 : hol.term B => hol.true) (f_2 x_1) (f_2 x_1) (thm_109 B) (thm_110 A B x_1 f_2).

(; Theorem: |- ((= (= (\lambda y. (\lambda y. Data.Bool.T y) (f x)))) (= (\lambda y. Data.Bool.T (f x)))) ;)

(; dict ;)

def thm_112 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((y_3 : hol.term B => (y_4 : hol.term B => hol.true) y_3) (f_2 x_1))) (hol.eq hol.bool ((y_3 : hol.term B => hol.true) (f_2 x_1)))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((y_3 : hol.term B => (y_4 : hol.term B => hol.true) y_3) (f_2 x_1)) ((y_3 : hol.term B => hol.true) (f_2 x_1)) thm_64 (thm_111 A B x_1 f_2).

(; Theorem: |- ((= (\lambda y. Data.Bool.T (f x))) Data.Bool.T) ;)

(; dict ;)

def thm_113 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((y_3 : hol.term B => hol.true) (f_2 x_1)) hol.true) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => hol.BETA_CONV B hol.bool (y_3 : hol.term B => hol.true) (f_2 x_1).

(; Theorem: |- ((= ((= (\lambda y. (\lambda y. Data.Bool.T y) (f x))) (\lambda y. Data.Bool.T (f x)))) ((= (\lambda y. Data.Bool.T (f x))) Data.Bool.T)) ;)

(; dict ;)

def thm_114 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((y_3 : hol.term B => (y_4 : hol.term B => hol.true) y_3) (f_2 x_1)) ((y_3 : hol.term B => hol.true) (f_2 x_1))) (hol.eq hol.bool ((y_3 : hol.term B => hol.true) (f_2 x_1)) hol.true)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((y_3 : hol.term B => (y_4 : hol.term B => hol.true) y_3) (f_2 x_1))) (hol.eq hol.bool ((y_3 : hol.term B => hol.true) (f_2 x_1))) ((y_3 : hol.term B => hol.true) (f_2 x_1)) hol.true (thm_112 A B x_1 f_2) (thm_113 A B x_1 f_2).

(; Theorem: |- ((= ((Data.Bool./\ ((= x) (f x))) (\lambda y. Data.Bool.T (f x)))) ((Data.Bool./\ ((= x) (f x))) Data.Bool.T)) ;)

(; dict ;)

def thm_115 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B x_3 (f_2 x_1)) ((y_4 : hol.term B => hol.true) (f_2 x_1))) (hol.and (hol.eq B x_3 (f_2 x_1)) hol.true)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq B x_3 (f_2 x_1))) (hol.and (hol.eq B x_3 (f_2 x_1))) ((y_4 : hol.term B => hol.true) (f_2 x_1)) hol.true (thm_72 A B x_1 f_2 x_3) (hol.EQ_MP (hol.eq hol.bool ((y_4 : hol.term B => (y_5 : hol.term B => hol.true) y_4) (f_2 x_1)) ((y_4 : hol.term B => hol.true) (f_2 x_1))) (hol.eq hol.bool ((y_4 : hol.term B => hol.true) (f_2 x_1)) hol.true) (thm_114 A B x_1 f_2) (thm_111 A B x_1 f_2)).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_116 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_117 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (thm_116 t_1) (thm_116 t_1).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_118 : hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.forall hol.bool) (hol.forall hol.bool)) :=
  hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.forall hol.bool).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_119 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_120 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) thm_119 thm_119.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))))) ;)

(; dict ;)

def thm_121 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) thm_118 thm_120.

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_122 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_123 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (thm_122 t_1) (thm_122 t_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_124 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_4 t_1.

(; Theorem: |- ((= (= ((Data.Bool./\ p) q))) (= ((Data.Bool./\ p) q))) ;)

(; dict ;)

def thm_125 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and p_2 q_1)) (hol.eq hol.bool (hol.and p_2 q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and p_2 q_1)).

(; Theorem: |- ((= (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_126 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ p) q)) (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q))) ((= ((Data.Bool./\ p) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)))) ;)

(; dict ;)

def thm_127 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.and p_2 q_1)) (hol.eq hol.bool (hol.and p_2 q_1)) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_125 q_1 p_2) (thm_126 q_1 p_2).

(; Theorem: |- ((= (= (Data.Bool./\ p))) (= (Data.Bool./\ p))) ;)

(; dict ;)

def thm_128 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1))) :=
  p_1 : hol.term hol.bool => hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)).

(; Theorem: |- ((= (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_129 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) :=
  p_1 : hol.term hol.bool => hol.BETA_CONV hol.bool (hol.arr hol.bool hol.bool) (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1.

(; Theorem: |- ((= ((= (Data.Bool./\ p)) (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p))) ((= (Data.Bool./\ p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)))) ;)

(; dict ;)

def thm_130 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3)))) :=
  p_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3)) (thm_128 p_1) (thm_129 p_1).

(; Theorem: |- ((= p) p) ;)

(; dict ;)

def thm_131 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool p_1 p_1) :=
  p_1 : hol.term hol.bool => hol.REFL hol.bool p_1.

(; Theorem: |- ((= (Data.Bool./\ p)) (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p)) ;)

(; dict ;)

def thm_132 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1 p_1 thm_5 (thm_131 p_1).

(; Theorem: |- ((= (Data.Bool./\ p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_133 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) :=
  p_1 : hol.term hol.bool => hol.EQ_MP (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) (thm_130 p_1) (thm_132 p_1).

(; Theorem: |- ((= q) q) ;)

(; dict ;)

def thm_134 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool q_1 q_1) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool q_1.

(; Theorem: |- ((= ((Data.Bool./\ p) q)) (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q)) ;)

(; dict ;)

def thm_135 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and p_2) (q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1 q_1 (thm_133 p_2) (thm_134 q_1).

(; Theorem: |- ((= ((Data.Bool./\ p) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_136 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) (thm_127 q_1 p_2) (thm_135 q_1 p_2).

(; Theorem: |- ((Data.Bool./\ p) q) ;)

(; dict ;)

def thm_137 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.and p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) ;)

(; dict ;)

def thm_138 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => hol.EQ_MP (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_136 q_1 p_2) (thm_137 q_1 p_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) q))) q) ;)

(; dict ;)

def thm_139 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.imp (hol.imp p_2 (hol.imp q_1 q_1)) q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_138 q_1 p_2 hyp_1 q_1.

(; Theorem: |- p ;)

(; dict ;)

def thm_140 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof p_1 :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_141 : q_1 : hol.term hol.bool -> hyp_1 : hol.proof q_1 -> hol.proof q_1 :=
  q_1 : hol.term hol.bool => hyp_1 : hol.proof q_1 => hyp_1.

(; Theorem: |- ((= p) q) ;)

(; dict ;)

def thm_142 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.eq hol.bool p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.PROP_EXT p_2 q_1 (hyp_3 : hol.proof q_1 => thm_140 p_2 hyp_1) (hyp_3 : hol.proof p_2 => thm_141 q_1 hyp_2).

(; Theorem: |- q ;)

(; dict ;)

def thm_143 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof q_2 -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => hol.EQ_MP p_1 q_2 (thm_142 q_2 p_1 hyp_1 hyp_2) (thm_140 p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> q) q) ;)

(; dict ;)

def thm_144 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.imp q_2 q_2) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => thm_143 p_1 q_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) q)) ;)

(; dict ;)

def thm_145 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp p_2 (hol.imp q_1 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => thm_144 p_2 q_1 hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_146 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_1 q_2) -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_139 q_2 p_1 hyp_1 (thm_145 q_2 p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ((Data.Bool./\ p) q)) ;)

(; dict ;)

def thm_147 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (hol.and p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.SYM hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_136 q_1 p_2).

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) x)) ;)

(; dict ;)

def thm_148 : x_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) -> hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) :=
  x_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) => hyp_1.

(; Theorem: |- ((Data.Bool.==> q) x) ;)

(; dict ;)

def thm_149 : p_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.imp p_1 (hol.imp q_3 x_2)) -> hol.proof (hol.imp q_3 x_2) :=
  p_1 : hol.term hol.bool => x_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.imp p_1 (hol.imp q_3 x_2)) => thm_148 x_2 q_3 p_1 hyp_2 (thm_140 p_1 hyp_1).

(; Theorem: |- x ;)

(; dict ;)

def thm_150 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hyp_3 : hol.proof (hol.imp p_2 (hol.imp q_1 x_3)) -> hol.proof x_3 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hyp_3 : hol.proof (hol.imp p_2 (hol.imp q_1 x_3)) => thm_149 p_2 x_3 q_1 hyp_1 hyp_3 (thm_141 q_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x) ;)

(; dict ;)

def thm_151 : x_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof p_3 -> hyp_2 : hol.proof q_2 -> hol.proof (hol.imp (hol.imp p_3 (hol.imp q_2 x_1)) x_1) :=
  x_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof p_3 => hyp_2 : hol.proof q_2 => hyp_3 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) => thm_150 q_2 p_3 x_1 hyp_1 hyp_2 hyp_3.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) ;)

(; dict ;)

def thm_152 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => x_3 : hol.term hol.bool => thm_151 x_3 q_1 p_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool./\ p) q) ;)

(; dict ;)

def thm_153 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.and p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.EQ_MP (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (hol.and p_2 q_1) (thm_147 q_1 p_2) (thm_152 q_1 p_2 hyp_1 hyp_2).

(; Theorem: |- ((= q) ((Data.Bool./\ p) q)) ;)

(; dict ;)

def thm_154 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.eq hol.bool q_2 (hol.and p_1 q_2)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hol.PROP_EXT q_2 (hol.and p_1 q_2) (hyp_2 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_2) (hyp_2 : hol.proof q_2 => thm_153 q_2 p_1 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_155 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_156 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (thm_123 t_1) (thm_124 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) => thm_155 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ t) Data.Bool.T)) t) ;)

(; dict ;)

def thm_157 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) :=
  t_1 : hol.term hol.bool => thm_6 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ;)

(; dict ;)

def thm_158 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ;)

(; dict ;)

def thm_159 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (thm_116 t_1) (thm_157 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) => thm_158 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ;)

(; dict ;)

def thm_160 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ;)

(; dict ;)

def thm_161 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (thm_160 t_1) (thm_160 t_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F) ;)

(; dict ;)

def thm_162 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) :=
  t_1 : hol.term hol.bool => thm_7 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_163 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_164 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (thm_161 t_1) (thm_162 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) => thm_163 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_165 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_166 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (thm_165 t_1) (thm_165 t_1).

(; Theorem: |- ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F) ;)

(; dict ;)

def thm_167 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) :=
  t_1 : hol.term hol.bool => thm_8 t_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ;)

(; dict ;)

def thm_168 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1) hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ;)

(; dict ;)

def thm_169 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.EQ_MP (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (thm_166 t_1) (thm_167 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) => thm_168 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((= ((Data.Bool./\ t) t)) t)) ;)

(; dict ;)

def thm_170 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((= ((Data.Bool./\ t) t)) t)) ;)

(; dict ;)

def thm_171 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1) (thm_170 t_1) (thm_170 t_1).

(; Theorem: |- ((= ((Data.Bool./\ t) t)) t) ;)

(; dict ;)

def thm_172 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_9 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)) ;)

(; dict ;)

def thm_173 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (thm_169 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1) (thm_171 t_1) (thm_172 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ;)

(; dict ;)

def thm_174 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (thm_164 t_1) (thm_173 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_175 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (thm_159 t_1) (thm_174 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ;)

(; dict ;)

def thm_176 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (thm_156 t_1) (thm_175 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_177 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => thm_176 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_178 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) -> hol.proof (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_179 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.and t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.and hol.false t_2) hol.false) (hol.and (hol.eq hol.bool (hol.and t_2 hol.false) hol.false) (hol.eq hol.bool (hol.and t_2 t_2) t_2)))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.and t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.and hol.false t_2) hol.false) (hol.and (hol.eq hol.bool (hol.and t_2 hol.false) hol.false) (hol.eq hol.bool (hol.and t_2 t_2) t_2)))))) thm_121 thm_177 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) => thm_178 t_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) p))) p) ;)

(; dict ;)

def thm_180 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.imp (hol.imp p_2 (hol.imp q_1 p_2)) p_2) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_138 q_1 p_2 hyp_1 p_2.

(; Theorem: |- ((= q) p) ;)

(; dict ;)

def thm_181 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof q_2 -> hol.proof (hol.eq hol.bool q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => hol.SYM hol.bool p_1 q_2 (thm_142 q_2 p_1 hyp_1 hyp_2).

(; Theorem: |- p ;)

(; dict ;)

def thm_182 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof p_2 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.EQ_MP q_1 p_2 (thm_181 p_2 q_1 hyp_1 hyp_2) (thm_141 q_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> q) p) ;)

(; dict ;)

def thm_183 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.imp q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => thm_182 q_2 p_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) p)) ;)

(; dict ;)

def thm_184 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp p_2 (hol.imp q_1 p_2)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => thm_183 p_2 q_1 hyp_1.

(; Theorem: |- p ;)

(; dict ;)

def thm_185 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof p_2 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_180 q_1 p_2 hyp_1 (thm_184 q_1 p_2).

(; Theorem: |- ((= ((Data.Bool./\ t) Data.Bool.T)) t) ;)

(; dict ;)

def thm_186 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) -> hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_185 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ t) Data.Bool.T)) t) ;)

(; dict ;)

def thm_187 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (thm_179 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) => thm_186 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ ((= x) (f x))) Data.Bool.T)) ((= x) (f x))) ;)

(; dict ;)

def thm_188 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B x_3 (f_2 x_1)) hol.true) (hol.eq B x_3 (f_2 x_1))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (thm_117 t_1) (thm_187 t_1)) (hol.eq B x_3 (f_2 x_1)).

(; Theorem: |- ((= ((Data.Bool./\ ((= x) (f x))) (\lambda y. Data.Bool.T (f x)))) ((= x) (f x))) ;)

(; dict ;)

def thm_189 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B x_3 (f_2 x_1)) ((y_4 : hol.term B => hol.true) (f_2 x_1))) (hol.eq B x_3 (f_2 x_1))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => hol.TRANS hol.bool (hol.and (hol.eq B x_3 (f_2 x_1)) ((y_4 : hol.term B => hol.true) (f_2 x_1))) (hol.and (hol.eq B x_3 (f_2 x_1)) hol.true) (hol.eq B x_3 (f_2 x_1)) (thm_115 A B x_1 f_2 x_3) (thm_188 A B x_1 f_2 x_3).

(; Theorem: |- ((= \lambda x. ((Data.Bool./\ ((= x) (f x))) (\lambda y. Data.Bool.T (f x)))) \lambda x. ((= x) (f x))) ;)

(; dict ;)

def thm_190 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_2 : hol.term B -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.and (hol.eq B x_2 (f_1 x_3)) ((y_4 : hol.term B => hol.true) (f_1 x_3))) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_2 : hol.term B => hol.ABS_THM A hol.bool (x_3 : hol.term A => hol.and (hol.eq B x_2 (f_1 x_3)) ((y_4 : hol.term B => hol.true) (f_1 x_3))) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3)) (x_3 : hol.term A => thm_189 A B x_3 f_1 x_2).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (\lambda y. Data.Bool.T (f x))))) (Data.Bool.? \lambda x. ((= x) (f x)))) ;)

(; dict ;)

def thm_191 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_2 : hol.term B -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq B x_2 (f_1 x_3)) ((y_4 : hol.term B => hol.true) (f_1 x_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_2 : hol.term B => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (x_3 : hol.term A => hol.and (hol.eq B x_2 (f_1 x_3)) ((y_4 : hol.term B => hol.true) (f_1 x_3))) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3)) (thm_71 A) (thm_190 B A f_1 x_2).

(; Theorem: |- ((= (= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (\lambda y. Data.Bool.T (f x)))))) (= (Data.Bool.? \lambda x. ((= x) (f x))))) ;)

(; dict ;)

def thm_192 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_2 : hol.term B -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq B x_2 (f_1 x_3)) ((y_4 : hol.term B => hol.true) (f_1 x_3))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_2 : hol.term B => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq B x_2 (f_1 x_3)) ((y_4 : hol.term B => hol.true) (f_1 x_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3))) thm_64 (thm_191 B A f_1 x_2).

(; Theorem: |- ((= x) x) ;)

(; dict ;)

def thm_193 : B : hol.type -> x_1 : hol.term B -> hol.proof (hol.eq B x_1 x_1) :=
  B : hol.type => x_1 : hol.term B => hol.REFL B x_1.

(; Theorem: |- ((= (\lambda y. (\lambda y. Data.Bool.T y) x)) (\lambda y. Data.Bool.T x)) ;)

(; dict ;)

def thm_194 : B : hol.type -> x_1 : hol.term B -> hol.proof (hol.eq hol.bool ((y_2 : hol.term B => (y_3 : hol.term B => hol.true) y_2) x_1) ((y_2 : hol.term B => hol.true) x_1)) :=
  B : hol.type => x_1 : hol.term B => hol.APP_THM B hol.bool (y_2 : hol.term B => (y_3 : hol.term B => hol.true) y_2) (y_2 : hol.term B => hol.true) x_1 x_1 (thm_109 B) (thm_193 B x_1).

(; Theorem: |- ((= (= (\lambda y. (\lambda y. Data.Bool.T y) x))) (= (\lambda y. Data.Bool.T x))) ;)

(; dict ;)

def thm_195 : B : hol.type -> x_1 : hol.term B -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((y_2 : hol.term B => (y_3 : hol.term B => hol.true) y_2) x_1)) (hol.eq hol.bool ((y_2 : hol.term B => hol.true) x_1))) :=
  B : hol.type => x_1 : hol.term B => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((y_2 : hol.term B => (y_3 : hol.term B => hol.true) y_2) x_1) ((y_2 : hol.term B => hol.true) x_1) thm_64 (thm_194 B x_1).

(; Theorem: |- ((= (\lambda y. Data.Bool.T x)) Data.Bool.T) ;)

(; dict ;)

def thm_196 : B : hol.type -> x_1 : hol.term B -> hol.proof (hol.eq hol.bool ((y_2 : hol.term B => hol.true) x_1) hol.true) :=
  B : hol.type => x_1 : hol.term B => hol.BETA_CONV B hol.bool (y_2 : hol.term B => hol.true) x_1.

(; Theorem: |- ((= ((= (\lambda y. (\lambda y. Data.Bool.T y) x)) (\lambda y. Data.Bool.T x))) ((= (\lambda y. Data.Bool.T x)) Data.Bool.T)) ;)

(; dict ;)

def thm_197 : B : hol.type -> x_1 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((y_2 : hol.term B => (y_3 : hol.term B => hol.true) y_2) x_1) ((y_2 : hol.term B => hol.true) x_1)) (hol.eq hol.bool ((y_2 : hol.term B => hol.true) x_1) hol.true)) :=
  B : hol.type => x_1 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((y_2 : hol.term B => (y_3 : hol.term B => hol.true) y_2) x_1)) (hol.eq hol.bool ((y_2 : hol.term B => hol.true) x_1)) ((y_2 : hol.term B => hol.true) x_1) hol.true (thm_195 B x_1) (thm_196 B x_1).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (\lambda y. Data.Bool.T (f x))))) (\lambda y. Data.Bool.T x))) ((= (Data.Bool.? \lambda x. ((= x) (f x)))) Data.Bool.T)) ;)

(; dict ;)

def thm_198 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq B x_2 (f_1 x_3)) ((y_4 : hol.term B => hol.true) (f_1 x_3)))) ((y_3 : hol.term B => hol.true) x_2)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3))) hol.true)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_2 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq B x_2 (f_1 x_3)) ((y_4 : hol.term B => hol.true) (f_1 x_3))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3)))) ((y_3 : hol.term B => hol.true) x_2) hol.true (thm_192 B A f_1 x_2) (hol.EQ_MP (hol.eq hol.bool ((y_3 : hol.term B => (y_4 : hol.term B => hol.true) y_3) x_2) ((y_3 : hol.term B => hol.true) x_2)) (hol.eq hol.bool ((y_3 : hol.term B => hol.true) x_2) hol.true) (thm_197 B x_2) (thm_194 B x_2)).

(; Theorem: |- ((= ((= ((= t) Data.Bool.T)) t)) ((= ((= t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_199 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1).

(; Theorem: |- ((= ((= ((= t) Data.Bool.T)) t)) ((= ((= t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_200 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (thm_199 t_1) (thm_199 t_1).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_201 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_202 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) thm_201 thm_201.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_203 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) thm_118 thm_202.

(; Theorem: |- ((= ((= ((= Data.Bool.T) t)) t)) ((= ((= Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_204 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1).

(; Theorem: |- ((= ((= ((= Data.Bool.T) t)) t)) ((= ((= Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_205 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (thm_204 t_1) (thm_204 t_1).

(; Theorem: |- ((= ((= Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_206 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_10 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_207 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_208 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (thm_205 t_1) (thm_206 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) => thm_207 t_1 hyp_1).

(; Theorem: |- ((= ((= t) Data.Bool.T)) t) ;)

(; dict ;)

def thm_209 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) :=
  t_1 : hol.term hol.bool => thm_11 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_210 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_211 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (thm_199 t_1) (thm_209 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) => thm_210 t_1 hyp_1).

(; Theorem: |- ((= ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_212 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)).

(; Theorem: |- ((= ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_213 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (thm_212 t_1) (thm_212 t_1).

(; Theorem: |- ((= ((= Data.Bool.F) t)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_214 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => thm_12 t_1.

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_215 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) hyp_1.

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_216 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (thm_213 t_1) (thm_214 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) => thm_215 t_1 hyp_1).

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_217 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)).

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_218 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (thm_217 t_1) (thm_217 t_1).

(; Theorem: |- ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_219 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => thm_13 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_220 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (thm_216 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (thm_218 t_1) (thm_219 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_221 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (thm_211 t_1) (thm_220 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_222 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (thm_208 t_1) (thm_221 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_223 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => thm_222 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_224 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_225 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_2) (hol.not t_2)) (hol.eq hol.bool (hol.eq hol.bool t_2 hol.false) (hol.not t_2)))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_2) (hol.not t_2)) (hol.eq hol.bool (hol.eq hol.bool t_2 hol.false) (hol.not t_2)))))) thm_203 thm_223 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) => thm_224 t_1 hyp_1).

(; Theorem: |- ((= ((= t) Data.Bool.T)) t) ;)

(; dict ;)

def thm_226 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_185 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) hyp_1.

(; Theorem: |- ((= ((= t) Data.Bool.T)) t) ;)

(; dict ;)

def thm_227 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (thm_225 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) => thm_226 t_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. ((= x) (f x)))) Data.Bool.T)) (Data.Bool.? \lambda x. ((= x) (f x)))) ;)

(; dict ;)

def thm_228 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3))) hol.true) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_2 : hol.term B => (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (thm_200 t_1) (thm_227 t_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3))).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (\lambda y. Data.Bool.T (f x))))) (\lambda y. Data.Bool.T x))) (Data.Bool.? \lambda x. ((= x) (f x)))) ;)

(; dict ;)

def thm_229 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq B x_2 (f_1 x_3)) ((y_4 : hol.term B => hol.true) (f_1 x_3)))) ((y_3 : hol.term B => hol.true) x_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_2 : hol.term B => hol.TRANS hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq B x_2 (f_1 x_3)) ((y_4 : hol.term B => hol.true) (f_1 x_3)))) ((y_3 : hol.term B => hol.true) x_2)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3))) hol.true) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3))) (thm_198 B A f_1 x_2) (thm_228 B A f_1 x_2).

(; Theorem: |- ((= \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (\lambda y. Data.Bool.T (f x))))) (\lambda y. Data.Bool.T x))) \lambda x. (Data.Bool.? \lambda x. ((= x) (f x)))) ;)

(; dict ;)

def thm_230 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (x_2 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq B x_2 (f_1 x_3)) ((y_4 : hol.term B => hol.true) (f_1 x_3)))) ((y_3 : hol.term B => hol.true) x_2)) (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.ABS_THM B hol.bool (x_2 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq B x_2 (f_1 x_3)) ((y_4 : hol.term B => hol.true) (f_1 x_3)))) ((y_3 : hol.term B => hol.true) x_2)) (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3))) (x_2 : hol.term B => thm_229 B A f_1 x_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (\lambda y. Data.Bool.T (f x))))) (\lambda y. Data.Bool.T x)))) (Data.Bool.! \lambda x. (Data.Bool.? \lambda x. ((= x) (f x))))) ;)

(; dict ;)

def thm_231 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (x_2 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq B x_2 (f_1 x_3)) ((y_4 : hol.term B => hol.true) (f_1 x_3)))) ((y_3 : hol.term B => hol.true) x_2))) (hol.forall B (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (x_2 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq B x_2 (f_1 x_3)) ((y_4 : hol.term B => hol.true) (f_1 x_3)))) ((y_3 : hol.term B => hol.true) x_2)) (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3))) (thm_63 B) (thm_230 A B f_1).

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (\lambda y. Data.Bool.T (f x))))) (\lambda y. Data.Bool.T x))))) (Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.? \lambda x. ((= x) (f x)))))) ;)

(; dict ;)

def thm_232 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.forall B (x_2 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq B x_2 (f_1 x_3)) ((y_4 : hol.term B => hol.true) (f_1 x_3)))) ((y_3 : hol.term B => hol.true) x_2)))) (hol.imp (hol.forall B (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.forall B (x_2 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq B x_2 (f_1 x_3)) ((y_4 : hol.term B => hol.true) (f_1 x_3)))) ((y_3 : hol.term B => hol.true) x_2))) (hol.forall B (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3)))) thm_107 (thm_231 A B f_1).

(; Theorem: |- ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) ;)

(; dict ;)

def thm_233 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (\lambda y. Data.Bool.T (f x))))) (\lambda y. Data.Bool.T x)))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.? \lambda x. ((= x) (f x))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) ;)

(; dict ;)

def thm_234 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.imp (hol.forall B (x_2 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq B x_2 (f_1 x_3)) ((y_4 : hol.term B => hol.true) (f_1 x_3)))) ((y_3 : hol.term B => hol.true) x_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (hol.imp (hol.forall B (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.forall B (x_2 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq B x_2 (f_1 x_3)) ((y_4 : hol.term B => hol.true) (f_1 x_3)))) ((y_3 : hol.term B => hol.true) x_2)))) (hol.imp (hol.forall B (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3))))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (thm_232 A B f_1) (thm_233 A B f_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.? \lambda x. ((= x) (f x))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) ((Data.Bool.==> (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (\lambda y. Data.Bool.T (f x))))) (\lambda y. Data.Bool.T x)))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) ;)

(; dict ;)

def thm_235 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.imp (hol.forall B (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (hol.imp (hol.forall B (x_2 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq B x_2 (f_1 x_3)) ((y_4 : hol.term B => hol.true) (f_1 x_3)))) ((y_3 : hol.term B => hol.true) x_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.SYM hol.bool (hol.imp (hol.forall B (x_2 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq B x_2 (f_1 x_3)) ((y_4 : hol.term B => hol.true) (f_1 x_3)))) ((y_3 : hol.term B => hol.true) x_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (hol.imp (hol.forall B (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (thm_234 A B f_1).

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.? \lambda x. ((= x) (f x)))))) (Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.? \lambda x. ((= x) (f x)))))) ;)

(; dict ;)

def thm_236 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.forall B (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3))))) (hol.imp (hol.forall B (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.REFL (hol.arr hol.bool hol.bool) (hol.imp (hol.forall B (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3))))).

(; Theorem: |- ((= ((= x) y)) ((= y) x)) ;)

(; dict ;)

def thm_237 : B : hol.type -> y_1 : hol.term B -> x_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq B x_2 y_1) (hol.eq B y_1 x_2)) :=
  B : hol.type => y_1 : hol.term B => x_2 : hol.term B => (A : hol.type => y_1 : hol.term A => x_2 : hol.term A => thm_50 A y_1 x_2) B y_1 x_2.

(; Theorem: |- ((= ((= (f x)) y)) ((= y) (f x))) ;)

(; dict ;)

def thm_238 : A : hol.type -> B : hol.type -> y_1 : hol.term B -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B (f_3 x_2) y_1) (hol.eq B y_1 (f_3 x_2))) :=
  A : hol.type => B : hol.type => y_1 : hol.term B => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => (B : hol.type => y_1 : hol.term B => x_2 : hol.term B => thm_237 B y_1 x_2) B y_1 (f_3 x_2).

(; Theorem: |- ((= \lambda x. ((= (f x)) y)) \lambda x. ((= y) (f x))) ;)

(; dict ;)

def thm_239 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.eq B (f_2 x_3) y_1) (x_3 : hol.term A => hol.eq B y_1 (f_2 x_3))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => hol.ABS_THM A hol.bool (x_3 : hol.term A => hol.eq B (f_2 x_3) y_1) (x_3 : hol.term A => hol.eq B y_1 (f_2 x_3)) (x_3 : hol.term A => thm_238 A B y_1 x_3 f_2).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((= (f x)) y))) (Data.Bool.? \lambda x. ((= y) (f x)))) ;)

(; dict ;)

def thm_240 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_2 x_3) y_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B y_1 (f_2 x_3)))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (x_3 : hol.term A => hol.eq B (f_2 x_3) y_1) (x_3 : hol.term A => hol.eq B y_1 (f_2 x_3)) (thm_71 A) (thm_239 B A y_1 f_2).

(; Theorem: |- ((= \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))) \lambda y. (Data.Bool.? \lambda x. ((= y) (f x)))) ;)

(; dict ;)

def thm_241 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)) (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B y_2 (f_1 x_3)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.ABS_THM B hol.bool (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)) (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B y_2 (f_1 x_3))) (y_2 : hol.term B => thm_240 B A y_2 f_1).

(; Theorem: |- ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x))))) ;)

(; dict ;)

def thm_242 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B y_2 (f_1 x_3))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)) (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B y_2 (f_1 x_3))) (thm_63 B) (thm_241 A B f_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.? \lambda x. ((= x) (f x))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.? \lambda x. ((= x) (f x))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x)))))) ;)

(; dict ;)

def thm_243 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.imp (hol.forall B (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (hol.imp (hol.forall B (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B y_2 (f_1 x_3)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.forall B (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3))))) (hol.imp (hol.forall B (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3))))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B y_2 (f_1 x_3)))) (thm_236 A B f_1) (thm_242 A B f_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.? \lambda x. ((= x) (f x))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x)))))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.? \lambda x. ((= x) (f x))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) ;)

(; dict ;)

def thm_244 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.imp (hol.forall B (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B y_2 (f_1 x_3))))) (hol.imp (hol.forall B (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.SYM hol.bool (hol.imp (hol.forall B (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (hol.imp (hol.forall B (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B y_2 (f_1 x_3))))) (thm_243 A B f_1).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.? \lambda x. ((= x) (f x)))) ;)

(; dict ;)

def thm_245 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3)))) -> hol.proof (hol.forall B (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3)))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.? \lambda x. ((= x) (f x))))) (Data.Bool.! \lambda x. (Data.Bool.? \lambda x. ((= x) (f x))))) ;)

(; dict ;)

def thm_246 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.imp (hol.forall B (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3)))) (hol.forall B (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3)))) => thm_245 A B f_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.? \lambda x. ((= x) (f x))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) ;)

(; dict ;)

def thm_247 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.imp (hol.forall B (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.EQ_MP (hol.imp (hol.forall B (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3)))) (hol.forall B (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3))))) (hol.imp (hol.forall B (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (thm_244 A B f_1) (thm_246 A B f_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (\lambda y. Data.Bool.T (f x))))) (\lambda y. Data.Bool.T x)))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) ;)

(; dict ;)

def thm_248 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.imp (hol.forall B (x_2 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq B x_2 (f_1 x_3)) ((y_4 : hol.term B => hol.true) (f_1 x_3)))) ((y_3 : hol.term B => hol.true) x_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.EQ_MP (hol.imp (hol.forall B (x_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B x_2 (f_1 x_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (hol.imp (hol.forall B (x_2 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq B x_2 (f_1 x_3)) ((y_4 : hol.term B => hol.true) (f_1 x_3)))) ((y_3 : hol.term B => hol.true) x_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (thm_235 A B f_1) (thm_247 A B f_1).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (p (f x))))) (p x)))) ;)

(; dict ;)

def thm_249 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3)))) -> hol.proof (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3)))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (\lambda y. Data.Bool.T (f x))))) (\lambda y. Data.Bool.T x))) ;)

(; dict ;)

def thm_250 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3)))) -> hol.proof (hol.forall B (x_2 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq B x_2 (f_1 x_3)) ((y_4 : hol.term B => hol.true) (f_1 x_3)))) ((y_3 : hol.term B => hol.true) x_2))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3)))) => thm_249 A B f_1 hyp_1 (y_2 : hol.term B => hol.true).

(; Theorem: |- (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))) ;)

(; dict ;)

def thm_251 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3)))) -> hol.proof (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3)))) => thm_248 A B f_1 (thm_250 A B f_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda p. (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (p (f x))))) (p x))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) ;)

(; dict ;)

def thm_252 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.imp (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3)))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3)))) => thm_251 A B f_1 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))) ;)

(; dict ;)

def thm_253 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) -> hol.proof (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) => hyp_1.

(; Theorem: |- ((= \lambda p. (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (p (f x))))) (p x)))) \lambda p. (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (p (f x))))) (p x)))) ;)

(; dict ;)

def thm_254 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (hol.arr B hol.bool) hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3))) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.REFL (hol.arr (hol.arr B hol.bool) hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3))).

(; Theorem: |- ((= \lambda p. (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (p (f x))))) (p x)))) \lambda p. (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (p (f x))))) (p x)))) ;)

(; dict ;)

def thm_255 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (hol.arr B hol.bool) hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3))) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.TRANS (hol.arr (hol.arr B hol.bool) hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3))) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3))) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3))) (thm_254 A B f_1) (thm_254 A B f_1).

(; Theorem: |- ((= (Data.Bool.! \lambda p. (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (p (f x))))) (p x))))) (Data.Bool.! \lambda p. (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (p (f x))))) (p x))))) ;)

(; dict ;)

def thm_256 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3)))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr (hol.arr B hol.bool) hol.bool) hol.bool (hol.forall (hol.arr B hol.bool)) (hol.forall (hol.arr B hol.bool)) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3))) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3))) (thm_43 B) (thm_255 A B f_1).

(; Theorem: |- ((= \lambda y. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) (p (f x))))) (p y))) \lambda y. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) (p (f x))))) (p y))) ;)

(; dict ;)

def thm_257 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (y_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 y_3)) (y_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 y_3))) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => f_2 : hol.term (hol.arr A B) => hol.REFL (hol.arr B hol.bool) (y_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 y_3)).

(; Theorem: |- ((= \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (p (f x))))) (p x))) \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (p (f x))))) (p x))) ;)

(; dict ;)

def thm_258 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 x_3)) (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 x_3))) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => f_2 : hol.term (hol.arr A B) => hol.REFL (hol.arr B hol.bool) (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 x_3)).

(; Theorem: |- ((= \lambda y. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) (p (f x))))) (p y))) \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (p (f x))))) (p x))) ;)

(; dict ;)

def thm_259 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (y_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 y_3)) (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 x_3))) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => f_2 : hol.term (hol.arr A B) => hol.TRANS (hol.arr B hol.bool) (y_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 y_3)) (y_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 y_3)) (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 x_3)) (thm_257 A B p_1 f_2) (thm_258 A B p_1 f_2).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) (p (f x))))) (p y)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (p (f x))))) (p x)))) ;)

(; dict ;)

def thm_260 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (y_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 y_3))) (hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 x_3)))) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => f_2 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (y_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 y_3)) (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 x_3)) (thm_63 B) (thm_259 A B p_1 f_2).

(; Theorem: |- ((= p) q) ;)

(; dict ;)

def thm_261 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) -> hol.proof (hol.eq hol.bool p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_262 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.eq hol.bool p_1 q_2) -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.eq hol.bool p_1 q_2) => hol.EQ_MP p_1 q_2 (thm_261 q_2 p_1 hyp_2) (thm_140 p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> p) q) ;)

(; dict ;)

def thm_263 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) -> hol.proof (hol.imp p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => hyp_2 : hol.proof p_2 => thm_262 p_2 q_1 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= p) q)) ((Data.Bool.==> p) q)) ;)

(; dict ;)

def thm_264 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 q_1) (hol.imp p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => thm_263 q_1 p_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ((Data.Bool.==> (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ;)

(; dict ;)

def thm_265 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_264 q_1 p_2) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1).

(; Theorem: |- ((= (= (Data.Bool.? P))) (= (Data.Bool.? P))) ;)

(; dict ;)

def thm_266 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)).

(; Theorem: |- ((= (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_267 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.BETA_CONV (hol.arr A hol.bool) hol.bool (p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1.

(; Theorem: |- ((= ((= (Data.Bool.? P)) (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P))) ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ;)

(; dict ;)

def thm_268 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (thm_266 A P_1) (thm_267 A P_1).

(; Theorem: |- ((= P) P) ;)

(; dict ;)

def thm_269 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) P_1 P_1) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr A hol.bool) P_1.

(; Theorem: |- ((= (Data.Bool.? P)) (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P)) ;)

(; dict ;)

def thm_270 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1 P_1 (thm_14 A) (thm_269 A P_1).

(; Theorem: |- ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_271 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) (thm_268 A P_1) (thm_270 A P_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_272 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => thm_265 A P_1 (thm_271 A P_1).

(; Theorem: |- (Data.Bool.? P) ;)

(; dict ;)

def thm_273 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)) ;)

(; dict ;)

def thm_274 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => thm_272 A P_1 (thm_273 A P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q) ;)

(; dict ;)

def thm_275 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) => thm_274 A P_2 hyp_1 Q_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q)) ;)

(; dict ;)

def thm_276 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => hyp_1.

(; Theorem: |- Q ;)

(; dict ;)

def thm_277 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) Q_2)) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof Q_2 :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) Q_2)) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => thm_275 A Q_2 P_1 hyp_2 (thm_276 A Q_2 P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? P)) Q) ;)

(; dict ;)

def thm_278 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) => thm_277 A P_2 Q_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ((Data.Bool.==> (Data.Bool.? P)) Q)) ;)

(; dict ;)

def thm_279 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => thm_278 A Q_1 P_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. ((= (f x)) y) x)) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) (p (f x))))) (p y))))) ((Data.Bool.==> (Data.Bool.? \lambda x. ((= (f x)) y))) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) (p (f x))))) (p y)))) ;)

(; dict ;)

def thm_280 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.imp (hol.forall A (x_4 : hol.term A => hol.imp ((x_5 : hol.term A => hol.eq B (f_3 x_5) y_2) x_4) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_2 (f_3 x_5)) (p_1 (f_3 x_5)))) (p_1 y_2)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.eq B (f_3 x_4) y_2)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_2 (f_3 x_4)) (p_1 (f_3 x_4)))) (p_1 y_2)))) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr B hol.bool) => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_279 A Q_1 P_2) A (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_2 (f_3 x_4)) (p_1 (f_3 x_4)))) (p_1 y_2)) (x_4 : hol.term A => hol.eq B (f_3 x_4) y_2).

(; Theorem: |- ((= (= (\lambda _11064. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11064) (f x))) (p (f x))))) (p _11064)) y))) (= (\lambda _11064. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11064) (f x))) (p (f x))))) (p _11064)) y))) ;)

(; dict ;)

def thm_281 : A : hol.type -> B : hol.type -> y_1 : hol.term B -> p_2 : hol.term (hol.arr B hol.bool) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11064_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B __11064_4 (f_3 x_5)) (p_2 (f_3 x_5)))) (p_2 __11064_4)) y_1)) (hol.eq hol.bool ((__11064_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B __11064_4 (f_3 x_5)) (p_2 (f_3 x_5)))) (p_2 __11064_4)) y_1))) :=
  A : hol.type => B : hol.type => y_1 : hol.term B => p_2 : hol.term (hol.arr B hol.bool) => f_3 : hol.term (hol.arr A B) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11064_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B __11064_4 (f_3 x_5)) (p_2 (f_3 x_5)))) (p_2 __11064_4)) y_1)).

(; Theorem: |- ((= (\lambda _11064. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11064) (f x))) (p (f x))))) (p _11064)) (f z))) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f z)) (f x))) (p (f x))))) (p (f z)))) ;)

(; dict ;)

def thm_282 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> p_2 : hol.term (hol.arr B hol.bool) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((__11064_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B __11064_4 (f_3 x_5)) (p_2 (f_3 x_5)))) (p_2 __11064_4)) (f_3 z_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_3 z_1) (f_3 x_4)) (p_2 (f_3 x_4)))) (p_2 (f_3 z_1)))) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => p_2 : hol.term (hol.arr B hol.bool) => f_3 : hol.term (hol.arr A B) => hol.BETA_CONV B hol.bool (__11064_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B __11064_4 (f_3 x_5)) (p_2 (f_3 x_5)))) (p_2 __11064_4)) (f_3 z_1).

(; Theorem: |- ((= ((= (\lambda _11064. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11064) (f x))) (p (f x))))) (p _11064)) y)) (\lambda _11064. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11064) (f x))) (p (f x))))) (p _11064)) (f z)))) ((= (\lambda _11064. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11064) (f x))) (p (f x))))) (p _11064)) y)) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f z)) (f x))) (p (f x))))) (p (f z))))) ;)

(; dict ;)

def thm_283 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> y_2 : hol.term B -> p_3 : hol.term (hol.arr B hol.bool) -> f_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11064_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B __11064_5 (f_4 x_6)) (p_3 (f_4 x_6)))) (p_3 __11064_5)) y_2) ((__11064_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B __11064_5 (f_4 x_6)) (p_3 (f_4 x_6)))) (p_3 __11064_5)) (f_4 z_1))) (hol.eq hol.bool ((__11064_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B __11064_5 (f_4 x_6)) (p_3 (f_4 x_6)))) (p_3 __11064_5)) y_2) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B (f_4 z_1) (f_4 x_5)) (p_3 (f_4 x_5)))) (p_3 (f_4 z_1))))) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => y_2 : hol.term B => p_3 : hol.term (hol.arr B hol.bool) => f_4 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11064_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B __11064_5 (f_4 x_6)) (p_3 (f_4 x_6)))) (p_3 __11064_5)) y_2)) (hol.eq hol.bool ((__11064_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B __11064_5 (f_4 x_6)) (p_3 (f_4 x_6)))) (p_3 __11064_5)) y_2)) ((__11064_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B __11064_5 (f_4 x_6)) (p_3 (f_4 x_6)))) (p_3 __11064_5)) (f_4 z_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B (f_4 z_1) (f_4 x_5)) (p_3 (f_4 x_5)))) (p_3 (f_4 z_1))) (thm_281 A B y_2 p_3 f_4) (thm_282 A B z_1 p_3 f_4).

(; Theorem: |- ((= (\lambda _11064. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11064) (f x))) (p (f x))))) (p _11064)) y)) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) (p (f x))))) (p y))) ;)

(; dict ;)

def thm_284 : A : hol.type -> B : hol.type -> y_1 : hol.term B -> p_2 : hol.term (hol.arr B hol.bool) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((__11064_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B __11064_4 (f_3 x_5)) (p_2 (f_3 x_5)))) (p_2 __11064_4)) y_1) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_1 (f_3 x_4)) (p_2 (f_3 x_4)))) (p_2 y_1))) :=
  A : hol.type => B : hol.type => y_1 : hol.term B => p_2 : hol.term (hol.arr B hol.bool) => f_3 : hol.term (hol.arr A B) => hol.BETA_CONV B hol.bool (__11064_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B __11064_4 (f_3 x_5)) (p_2 (f_3 x_5)))) (p_2 __11064_4)) y_1.

(; Theorem: |- ((= (= (\lambda _11064. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11064) (f x))) (p (f x))))) (p _11064)) y))) (= ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) (p (f x))))) (p y)))) ;)

(; dict ;)

def thm_285 : A : hol.type -> B : hol.type -> y_1 : hol.term B -> p_2 : hol.term (hol.arr B hol.bool) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11064_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B __11064_4 (f_3 x_5)) (p_2 (f_3 x_5)))) (p_2 __11064_4)) y_1)) (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_1 (f_3 x_4)) (p_2 (f_3 x_4)))) (p_2 y_1)))) :=
  A : hol.type => B : hol.type => y_1 : hol.term B => p_2 : hol.term (hol.arr B hol.bool) => f_3 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__11064_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B __11064_4 (f_3 x_5)) (p_2 (f_3 x_5)))) (p_2 __11064_4)) y_1) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_1 (f_3 x_4)) (p_2 (f_3 x_4)))) (p_2 y_1)) thm_64 (thm_284 A B y_1 p_2 f_3).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f z)) (f x))) (p (f x))))) (p (f z)))) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f z)) (f x))) (p (f x))))) (p (f z)))) ;)

(; dict ;)

def thm_286 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_4)) (p_1 (f_3 x_4)))) (p_1 (f_3 z_2))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_4)) (p_1 (f_3 x_4)))) (p_1 (f_3 z_2)))) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr B hol.bool) => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_4)) (p_1 (f_3 x_4)))) (p_1 (f_3 z_2))).

(; Theorem: |- ((= ((= (\lambda _11064. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11064) (f x))) (p (f x))))) (p _11064)) y)) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f z)) (f x))) (p (f x))))) (p (f z))))) ((= ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) (p (f x))))) (p y))) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f z)) (f x))) (p (f x))))) (p (f z))))) ;)

(; dict ;)

def thm_287 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> y_2 : hol.term B -> p_3 : hol.term (hol.arr B hol.bool) -> f_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11064_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B __11064_5 (f_4 x_6)) (p_3 (f_4 x_6)))) (p_3 __11064_5)) y_2) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B (f_4 z_1) (f_4 x_5)) (p_3 (f_4 x_5)))) (p_3 (f_4 z_1)))) (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_2 (f_4 x_5)) (p_3 (f_4 x_5)))) (p_3 y_2)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B (f_4 z_1) (f_4 x_5)) (p_3 (f_4 x_5)))) (p_3 (f_4 z_1))))) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => y_2 : hol.term B => p_3 : hol.term (hol.arr B hol.bool) => f_4 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11064_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B __11064_5 (f_4 x_6)) (p_3 (f_4 x_6)))) (p_3 __11064_5)) y_2)) (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_2 (f_4 x_5)) (p_3 (f_4 x_5)))) (p_3 y_2))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B (f_4 z_1) (f_4 x_5)) (p_3 (f_4 x_5)))) (p_3 (f_4 z_1))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B (f_4 z_1) (f_4 x_5)) (p_3 (f_4 x_5)))) (p_3 (f_4 z_1))) (thm_285 A B y_2 p_3 f_4) (thm_286 B A p_3 z_1 f_4).

(; Theorem: |- ((= ((= (\lambda _11064. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11064) (f x))) (p (f x))))) (p _11064)) y)) (\lambda _11064. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11064) (f x))) (p (f x))))) (p _11064)) (f z)))) ((= ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) (p (f x))))) (p y))) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f z)) (f x))) (p (f x))))) (p (f z))))) ;)

(; dict ;)

def thm_288 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> y_2 : hol.term B -> p_3 : hol.term (hol.arr B hol.bool) -> f_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11064_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B __11064_5 (f_4 x_6)) (p_3 (f_4 x_6)))) (p_3 __11064_5)) y_2) ((__11064_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B __11064_5 (f_4 x_6)) (p_3 (f_4 x_6)))) (p_3 __11064_5)) (f_4 z_1))) (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_2 (f_4 x_5)) (p_3 (f_4 x_5)))) (p_3 y_2)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B (f_4 z_1) (f_4 x_5)) (p_3 (f_4 x_5)))) (p_3 (f_4 z_1))))) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => y_2 : hol.term B => p_3 : hol.term (hol.arr B hol.bool) => f_4 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.eq hol.bool ((__11064_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B __11064_5 (f_4 x_6)) (p_3 (f_4 x_6)))) (p_3 __11064_5)) y_2) ((__11064_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B __11064_5 (f_4 x_6)) (p_3 (f_4 x_6)))) (p_3 __11064_5)) (f_4 z_1))) (hol.eq hol.bool ((__11064_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B __11064_5 (f_4 x_6)) (p_3 (f_4 x_6)))) (p_3 __11064_5)) y_2) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B (f_4 z_1) (f_4 x_5)) (p_3 (f_4 x_5)))) (p_3 (f_4 z_1)))) (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_2 (f_4 x_5)) (p_3 (f_4 x_5)))) (p_3 y_2)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B (f_4 z_1) (f_4 x_5)) (p_3 (f_4 x_5)))) (p_3 (f_4 z_1)))) (thm_283 A B z_1 y_2 p_3 f_4) (thm_287 A B z_1 y_2 p_3 f_4).

(; Theorem: |- ((= \lambda _11064. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11064) (f x))) (p (f x))))) (p _11064))) \lambda _11064. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11064) (f x))) (p (f x))))) (p _11064))) ;)

(; dict ;)

def thm_289 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (__11064_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B __11064_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 __11064_3)) (__11064_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B __11064_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 __11064_3))) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => f_2 : hol.term (hol.arr A B) => hol.REFL (hol.arr B hol.bool) (__11064_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B __11064_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 __11064_3)).

(; Theorem: |- ((= (f z)) y) ;)

(; dict ;)

def thm_290 : A : hol.type -> B : hol.type -> y_1 : hol.term B -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq B (f_3 z_2) y_1) -> hol.proof (hol.eq B (f_3 z_2) y_1) :=
  A : hol.type => B : hol.type => y_1 : hol.term B => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq B (f_3 z_2) y_1) => hyp_1.

(; Theorem: |- ((= y) (f z)) ;)

(; dict ;)

def thm_291 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hyp_1 : hol.proof (hol.eq B (f_2 z_1) y_3) -> hol.proof (hol.eq B y_3 (f_2 z_1)) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => hyp_1 : hol.proof (hol.eq B (f_2 z_1) y_3) => hol.SYM B (f_2 z_1) y_3 (thm_290 A B y_3 z_1 f_2 hyp_1).

(; Theorem: |- ((= (\lambda _11064. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11064) (f x))) (p (f x))))) (p _11064)) y)) (\lambda _11064. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11064) (f x))) (p (f x))))) (p _11064)) (f z))) ;)

(; dict ;)

def thm_292 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> y_2 : hol.term B -> p_3 : hol.term (hol.arr B hol.bool) -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq B (f_4 z_1) y_2) -> hol.proof (hol.eq hol.bool ((__11064_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B __11064_5 (f_4 x_6)) (p_3 (f_4 x_6)))) (p_3 __11064_5)) y_2) ((__11064_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B __11064_5 (f_4 x_6)) (p_3 (f_4 x_6)))) (p_3 __11064_5)) (f_4 z_1))) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => y_2 : hol.term B => p_3 : hol.term (hol.arr B hol.bool) => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq B (f_4 z_1) y_2) => hol.APP_THM B hol.bool (__11064_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B __11064_5 (f_4 x_6)) (p_3 (f_4 x_6)))) (p_3 __11064_5)) (__11064_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B __11064_5 (f_4 x_6)) (p_3 (f_4 x_6)))) (p_3 __11064_5)) y_2 (f_4 z_1) (thm_289 A B p_3 f_4) (thm_291 A B z_1 f_4 y_2 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) (p (f x))))) (p y))) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f z)) (f x))) (p (f x))))) (p (f z)))) ;)

(; dict ;)

def thm_293 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> p_2 : hol.term (hol.arr B hol.bool) -> f_3 : hol.term (hol.arr A B) -> y_4 : hol.term B -> hyp_1 : hol.proof (hol.eq B (f_3 z_1) y_4) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_4 (f_3 x_5)) (p_2 (f_3 x_5)))) (p_2 y_4)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B (f_3 z_1) (f_3 x_5)) (p_2 (f_3 x_5)))) (p_2 (f_3 z_1)))) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => p_2 : hol.term (hol.arr B hol.bool) => f_3 : hol.term (hol.arr A B) => y_4 : hol.term B => hyp_1 : hol.proof (hol.eq B (f_3 z_1) y_4) => hol.EQ_MP (hol.eq hol.bool ((__11064_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B __11064_5 (f_3 x_6)) (p_2 (f_3 x_6)))) (p_2 __11064_5)) y_4) ((__11064_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B __11064_5 (f_3 x_6)) (p_2 (f_3 x_6)))) (p_2 __11064_5)) (f_3 z_1))) (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_4 (f_3 x_5)) (p_2 (f_3 x_5)))) (p_2 y_4)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B (f_3 z_1) (f_3 x_5)) (p_2 (f_3 x_5)))) (p_2 (f_3 z_1)))) (thm_288 A B z_1 y_4 p_2 f_3) (thm_292 A B z_1 y_4 p_2 f_3 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f z)) (f x))) (p (f x))))) (p (f z)))) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) (p (f x))))) (p y))) ;)

(; dict ;)

def thm_294 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> p_2 : hol.term (hol.arr B hol.bool) -> z_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq B (f_4 z_3) y_1) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B (f_4 z_3) (f_4 x_5)) (p_2 (f_4 x_5)))) (p_2 (f_4 z_3))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_1 (f_4 x_5)) (p_2 (f_4 x_5)))) (p_2 y_1))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => p_2 : hol.term (hol.arr B hol.bool) => z_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq B (f_4 z_3) y_1) => hol.SYM hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_1 (f_4 x_5)) (p_2 (f_4 x_5)))) (p_2 y_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B (f_4 z_3) (f_4 x_5)) (p_2 (f_4 x_5)))) (p_2 (f_4 z_3))) (thm_293 B A z_3 p_2 f_4 y_1 hyp_1).

(; Theorem: |- (p (f z)) ;)

(; dict ;)

def thm_295 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> p_3 : hol.term (hol.arr B hol.bool) -> hyp_1 : hol.proof (p_3 (f_2 z_1)) -> hol.proof (p_3 (f_2 z_1)) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => f_2 : hol.term (hol.arr A B) => p_3 : hol.term (hol.arr B hol.bool) => hyp_1 : hol.proof (p_3 (f_2 z_1)) => hyp_1.

(; Theorem: |- ((= (\lambda x. ((Data.Bool./\ ((= (f z)) (f x))) (p (f x))) z)) ((Data.Bool./\ ((= (f z)) (f z))) (p (f z)))) ;)

(; dict ;)

def thm_296 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((x_4 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_4)) (p_1 (f_3 x_4))) z_2) (hol.and (hol.eq B (f_3 z_2) (f_3 z_2)) (p_1 (f_3 z_2)))) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr B hol.bool) => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hol.BETA_CONV A hol.bool (x_4 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_4)) (p_1 (f_3 x_4))) z_2.

(; Theorem: |- ((= ((Data.Bool./\ ((= (f z)) (f z))) (p (f z)))) (\lambda x. ((Data.Bool./\ ((= (f z)) (f x))) (p (f x))) z)) ;)

(; dict ;)

def thm_297 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B (f_3 z_2) (f_3 z_2)) (p_1 (f_3 z_2))) ((x_4 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_4)) (p_1 (f_3 x_4))) z_2)) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hol.SYM hol.bool ((x_4 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_4)) (p_1 (f_3 x_4))) z_2) (hol.and (hol.eq B (f_3 z_2) (f_3 z_2)) (p_1 (f_3 z_2))) (thm_296 B A p_1 z_2 f_3).

(; Theorem: |- ((= Data.Bool./\) Data.Bool./\) ;)

(; dict ;)

def thm_298 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and hol.and) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and.

(; Theorem: |- ((= ((= ((= x) x)) Data.Bool.T)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_299 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true).

(; Theorem: |- ((= ((= ((= x) x)) Data.Bool.T)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_300 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_299 A x_1) (thm_299 A x_1).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_301 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (hol.forall A) (hol.forall A)) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A hol.bool) hol.bool) (hol.forall A).

(; Theorem: |- ((= \lambda x. ((= ((= x) x)) Data.Bool.T)) \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_302 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => hol.REFL (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true).

(; Theorem: |- ((= \lambda x. ((= ((= x) x)) Data.Bool.T)) \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_303 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => hol.TRANS (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_302 A) (thm_302 A).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T))) (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T))) ;)

(; dict ;)

def thm_304 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true))) :=
  A : hol.type => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_301 A) (thm_303 A).

(; Theorem: |- ((= t) Data.Bool.T) ;)

(; dict ;)

def thm_305 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof (hol.eq hol.bool t_1 hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hyp_1.

(; Theorem: |- ((= Data.Bool.T) t) ;)

(; dict ;)

def thm_306 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof (hol.eq hol.bool hol.true t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hol.SYM hol.bool t_1 hol.true (thm_305 t_1 hyp_1).

(; Theorem: |- t ;)

(; dict ;)

def thm_307 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof t_1 :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hol.EQ_MP hol.true t_1 (thm_306 t_1 hyp_1) thm_15.

(; Theorem: |- t ;)

(; dict ;)

def thm_308 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof t_1 -> hol.proof t_1 :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof t_1 => hyp_1.

(; Theorem: |- ((= t) Data.Bool.T) ;)

(; dict ;)

def thm_309 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof t_1 -> hol.proof (hol.eq hol.bool t_1 hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof t_1 => hol.PROP_EXT t_1 hol.true (hyp_2 : hol.proof hol.true => thm_308 t_1 hyp_1) (hyp_2 : hol.proof t_1 => thm_15).

(; Theorem: |- ((= t) ((= t) Data.Bool.T)) ;)

(; dict ;)

def thm_310 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool t_1 (hol.eq hol.bool t_1 hol.true)) :=
  t_1 : hol.term hol.bool => hol.PROP_EXT t_1 (hol.eq hol.bool t_1 hol.true) (hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => thm_307 t_1 hyp_1) (hyp_1 : hol.proof t_1 => thm_309 t_1 hyp_1).

(; Theorem: |- ((= ((= x) x)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_311 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_1 x_1) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => (t_1 : hol.term hol.bool => thm_310 t_1) (hol.eq A x_1 x_1).

(; Theorem: |- ((= x) x) ;)

(; dict ;)

def thm_312 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq A x_1 x_1) :=
  A : hol.type => x_1 : hol.term A => thm_16 A x_1.

(; Theorem: |- ((= ((= x) x)) Data.Bool.T) ;)

(; dict ;)

def thm_313 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) :=
  A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq A x_1 x_1) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_311 A x_1) (thm_312 A x_1).

(; Theorem: |- (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_314 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => (A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_299 A x_1) (thm_313 A x_1)) A x_1.

(; Theorem: |- ((= ((= x) x)) Data.Bool.T) ;)

(; dict ;)

def thm_315 : B : hol.type -> x_1 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq B x_1 x_1) hol.true) :=
  B : hol.type => x_1 : hol.term B => (A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_300 A x_1) (hol.EQ_MP (hol.forall A (x_2 : hol.term A => hol.eq hol.bool (hol.eq A x_2 x_2) hol.true)) (hol.forall A (x_2 : hol.term A => hol.eq hol.bool (hol.eq A x_2 x_2) hol.true)) (thm_304 A) (thm_314 A) x_1)) B x_1.

(; Theorem: |- ((= ((= (f z)) (f z))) Data.Bool.T) ;)

(; dict ;)

def thm_316 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B (f_2 z_1) (f_2 z_1)) hol.true) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => f_2 : hol.term (hol.arr A B) => (B : hol.type => x_1 : hol.term B => thm_315 B x_1) B (f_2 z_1).

(; Theorem: |- ((= (Data.Bool./\ ((= (f z)) (f z)))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_317 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq B (f_2 z_1) (f_2 z_1))) (hol.and hol.true)) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => f_2 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.eq B (f_2 z_1) (f_2 z_1)) hol.true thm_298 (thm_316 A B z_1 f_2).

(; Theorem: |- ((= ((= (p (f z))) Data.Bool.T)) ((= (p (f z))) Data.Bool.T)) ;)

(; dict ;)

def thm_318 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> p_3 : hol.term (hol.arr B hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (p_3 (f_2 z_1)) hol.true) (hol.eq hol.bool (p_3 (f_2 z_1)) hol.true)) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => f_2 : hol.term (hol.arr A B) => p_3 : hol.term (hol.arr B hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (p_3 (f_2 z_1)) hol.true).

(; Theorem: |- ((= ((= (p (f z))) Data.Bool.T)) ((= (p (f z))) Data.Bool.T)) ;)

(; dict ;)

def thm_319 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> p_3 : hol.term (hol.arr B hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (p_3 (f_2 z_1)) hol.true) (hol.eq hol.bool (p_3 (f_2 z_1)) hol.true)) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => f_2 : hol.term (hol.arr A B) => p_3 : hol.term (hol.arr B hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (p_3 (f_2 z_1)) hol.true) (hol.eq hol.bool (p_3 (f_2 z_1)) hol.true) (hol.eq hol.bool (p_3 (f_2 z_1)) hol.true) (thm_318 A B z_1 f_2 p_3) (thm_318 A B z_1 f_2 p_3).

(; Theorem: |- ((= (p (f z))) ((= (p (f z))) Data.Bool.T)) ;)

(; dict ;)

def thm_320 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> p_3 : hol.term (hol.arr B hol.bool) -> hol.proof (hol.eq hol.bool (p_3 (f_2 z_1)) (hol.eq hol.bool (p_3 (f_2 z_1)) hol.true)) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => f_2 : hol.term (hol.arr A B) => p_3 : hol.term (hol.arr B hol.bool) => (t_1 : hol.term hol.bool => thm_310 t_1) (p_3 (f_2 z_1)).

(; Theorem: |- ((= (p (f z))) Data.Bool.T) ;)

(; dict ;)

def thm_321 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> p_3 : hol.term (hol.arr B hol.bool) -> hyp_1 : hol.proof (p_3 (f_2 z_1)) -> hol.proof (hol.eq hol.bool (p_3 (f_2 z_1)) hol.true) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => f_2 : hol.term (hol.arr A B) => p_3 : hol.term (hol.arr B hol.bool) => hyp_1 : hol.proof (p_3 (f_2 z_1)) => hol.EQ_MP (p_3 (f_2 z_1)) (hol.eq hol.bool (p_3 (f_2 z_1)) hol.true) (thm_320 A B z_1 f_2 p_3) (thm_295 A B z_1 f_2 p_3 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ ((= (f z)) (f z))) (p (f z)))) ((Data.Bool./\ Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_322 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (p_1 (f_3 z_2)) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B (f_3 z_2) (f_3 z_2)) (p_1 (f_3 z_2))) (hol.and hol.true hol.true)) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (p_1 (f_3 z_2)) => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq B (f_3 z_2) (f_3 z_2))) (hol.and hol.true) (p_1 (f_3 z_2)) hol.true (thm_317 A B z_2 f_3) (hol.EQ_MP (hol.eq hol.bool (p_1 (f_3 z_2)) hol.true) (hol.eq hol.bool (p_1 (f_3 z_2)) hol.true) (thm_319 A B z_2 f_3 p_1) (thm_321 A B z_2 f_3 p_1 hyp_1)).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_323 : hol.proof (hol.eq hol.bool (hol.and hol.true hol.true) hol.true) :=
  (t_1 : hol.term hol.bool => thm_124 t_1) hol.true.

(; Theorem: |- ((= ((Data.Bool./\ ((= (f z)) (f z))) (p (f z)))) Data.Bool.T) ;)

(; dict ;)

def thm_324 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (p_1 (f_3 z_2)) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B (f_3 z_2) (f_3 z_2)) (p_1 (f_3 z_2))) hol.true) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (p_1 (f_3 z_2)) => hol.TRANS hol.bool (hol.and (hol.eq B (f_3 z_2) (f_3 z_2)) (p_1 (f_3 z_2))) (hol.and hol.true hol.true) hol.true (thm_322 A B p_1 z_2 f_3 hyp_1) thm_323.

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool./\ ((= (f z)) (f z))) (p (f z)))) ;)

(; dict ;)

def thm_325 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (p_1 (f_3 z_2)) -> hol.proof (hol.eq hol.bool hol.true (hol.and (hol.eq B (f_3 z_2) (f_3 z_2)) (p_1 (f_3 z_2)))) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (p_1 (f_3 z_2)) => hol.SYM hol.bool (hol.and (hol.eq B (f_3 z_2) (f_3 z_2)) (p_1 (f_3 z_2))) hol.true (thm_324 A B p_1 z_2 f_3 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= (f z)) (f z))) (p (f z))) ;)

(; dict ;)

def thm_326 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (p_1 (f_3 z_2)) -> hol.proof (hol.and (hol.eq B (f_3 z_2) (f_3 z_2)) (p_1 (f_3 z_2))) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (p_1 (f_3 z_2)) => hol.EQ_MP hol.true (hol.and (hol.eq B (f_3 z_2) (f_3 z_2)) (p_1 (f_3 z_2))) (thm_325 A B p_1 z_2 f_3 hyp_1) thm_15.

(; Theorem: |- (\lambda x. ((Data.Bool./\ ((= (f z)) (f x))) (p (f x))) z) ;)

(; dict ;)

def thm_327 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (p_1 (f_3 z_2)) -> hol.proof ((x_4 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_4)) (p_1 (f_3 x_4))) z_2) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr B hol.bool) => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (p_1 (f_3 z_2)) => hol.EQ_MP (hol.and (hol.eq B (f_3 z_2) (f_3 z_2)) (p_1 (f_3 z_2))) ((x_4 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_4)) (p_1 (f_3 x_4))) z_2) (thm_297 A B p_1 z_2 f_3) (thm_326 A B p_1 z_2 f_3 hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) (Data.Bool.? P)) ;)

(; dict ;)

def thm_328 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (thm_271 A P_1).

(; Theorem: |- ((Data.Bool.==> (P x)) Q) ;)

(; dict ;)

def thm_329 : A : hol.type -> Q_1 : hol.term hol.bool -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_1)) -> hol.proof (hol.imp (P_3 x_2) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_1)) => thm_276 A Q_1 P_3 hyp_1 x_2.

(; Theorem: |- (P x) ;)

(; dict ;)

def thm_330 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (P_2 x_1) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => hyp_1.

(; Theorem: |- Q ;)

(; dict ;)

def thm_331 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> Q_3 : hol.term hol.bool -> hyp_1 : hol.proof (P_2 x_1) -> hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) -> hol.proof Q_3 :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => Q_3 : hol.term hol.bool => hyp_1 : hol.proof (P_2 x_1) => hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) => thm_329 A Q_3 x_1 P_2 hyp_2 (thm_330 A x_1 P_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q) ;)

(; dict ;)

def thm_332 : A : hol.type -> x_1 : hol.term A -> Q_2 : hol.term hol.bool -> P_3 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_3 x_1) -> hol.proof (hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_2)) Q_2) :=
  A : hol.type => x_1 : hol.term A => Q_2 : hol.term hol.bool => P_3 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_3 x_1) => hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_2)) => thm_331 A x_1 P_3 Q_2 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda Q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q)) ;)

(; dict ;)

def thm_333 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (hol.forall hol.bool (Q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) Q_3)) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => Q_3 : hol.term hol.bool => thm_332 A x_1 Q_3 P_2 hyp_1.

(; Theorem: |- (Data.Bool.? P) ;)

(; dict ;)

def thm_334 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => hol.EQ_MP (hol.forall hol.bool (Q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) Q_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) (thm_328 A P_2) (thm_333 A x_1 P_2 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f z)) (f x))) (p (f x)))) ;)

(; dict ;)

def thm_335 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof ((x_4 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_4)) (p_1 (f_3 x_4))) z_2) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_4)) (p_1 (f_3 x_4)))) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr B hol.bool) => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof ((x_4 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_4)) (p_1 (f_3 x_4))) z_2) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_334 A x_1 P_2 hyp_1) A z_2 (x_4 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_4)) (p_1 (f_3 x_4))) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f z)) (f x))) (p (f x)))) ;)

(; dict ;)

def thm_336 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (p_1 (f_3 z_2)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_4)) (p_1 (f_3 x_4)))) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr B hol.bool) => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (p_1 (f_3 z_2)) => hol.PROVE_HYP ((x_4 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_4)) (p_1 (f_3 x_4))) z_2) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_4)) (p_1 (f_3 x_4)))) (thm_327 B A p_1 z_2 f_3 hyp_1) (hyp_2 : hol.proof ((x_4 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_4)) (p_1 (f_3 x_4))) z_2) => thm_335 B A p_1 z_2 f_3 hyp_2).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f z)) (f x))) (p (f x)))) ;)

(; dict ;)

def thm_337 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (p_1 (f_3 z_2)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_4)) (p_1 (f_3 x_4)))) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr B hol.bool) => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (p_1 (f_3 z_2)) => hol.PROVE_HYP (p_1 (f_3 z_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_4)) (p_1 (f_3 x_4)))) (thm_295 A B z_2 f_3 p_1 hyp_1) (hyp_2 : hol.proof (p_1 (f_3 z_2)) => thm_336 B A p_1 z_2 f_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> (p (f z))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f z)) (f x))) (p (f x))))) ;)

(; dict ;)

def thm_338 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> p_3 : hol.term (hol.arr B hol.bool) -> hol.proof (hol.imp (p_3 (f_2 z_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_2 z_1) (f_2 x_4)) (p_3 (f_2 x_4))))) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => f_2 : hol.term (hol.arr A B) => p_3 : hol.term (hol.arr B hol.bool) => hyp_1 : hol.proof (p_3 (f_2 z_1)) => thm_337 B A p_3 z_1 f_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= (f z)) (f x))) (p (f x))) x)) (p (f z))))) ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f z)) (f x))) (p (f x))))) (p (f z)))) ;)

(; dict ;)

def thm_339 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.imp (hol.forall A (x_4 : hol.term A => hol.imp ((x_5 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_5)) (p_1 (f_3 x_5))) x_4) (p_1 (f_3 z_2)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_4)) (p_1 (f_3 x_4)))) (p_1 (f_3 z_2)))) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr B hol.bool) => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_279 A Q_1 P_2) A (p_1 (f_3 z_2)) (x_4 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_4)) (p_1 (f_3 x_4))).

(; Theorem: |- ((Data.Bool./\ ((= (f z)) (f x))) (p (f x))) ;)

(; dict ;)

def thm_340 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> x_2 : hol.term A -> z_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (hol.eq B (f_4 z_3) (f_4 x_2)) (p_1 (f_4 x_2))) -> hol.proof (hol.and (hol.eq B (f_4 z_3) (f_4 x_2)) (p_1 (f_4 x_2))) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => x_2 : hol.term A => z_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (hol.eq B (f_4 z_3) (f_4 x_2)) (p_1 (f_4 x_2))) => hyp_1.

(; Theorem: |- ((= (f z)) (f x)) ;)

(; dict ;)

def thm_341 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> x_2 : hol.term A -> z_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (hol.eq B (f_4 z_3) (f_4 x_2)) (p_1 (f_4 x_2))) -> hol.proof (hol.eq B (f_4 z_3) (f_4 x_2)) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => x_2 : hol.term A => z_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (hol.eq B (f_4 z_3) (f_4 x_2)) (p_1 (f_4 x_2))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_185 q_1 p_2 hyp_1) (p_1 (f_4 x_2)) (hol.eq B (f_4 z_3) (f_4 x_2)) hyp_1.

(; Theorem: |- ((= (f z)) (f x)) ;)

(; dict ;)

def thm_342 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> x_2 : hol.term A -> z_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (hol.eq B (f_4 z_3) (f_4 x_2)) (p_1 (f_4 x_2))) -> hol.proof (hol.eq B (f_4 z_3) (f_4 x_2)) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => x_2 : hol.term A => z_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (hol.eq B (f_4 z_3) (f_4 x_2)) (p_1 (f_4 x_2))) => hol.PROVE_HYP (hol.and (hol.eq B (f_4 z_3) (f_4 x_2)) (p_1 (f_4 x_2))) (hol.eq B (f_4 z_3) (f_4 x_2)) (thm_340 A B p_1 x_2 z_3 f_4 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq B (f_4 z_3) (f_4 x_2)) (p_1 (f_4 x_2))) => thm_341 A B p_1 x_2 z_3 f_4 hyp_2).

(; Theorem: |- (p (f x)) ;)

(; dict ;)

def thm_343 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> p_4 : hol.term (hol.arr B hol.bool) -> hyp_1 : hol.proof (hol.and (hol.eq B (f_3 z_1) (f_3 x_2)) (p_4 (f_3 x_2))) -> hol.proof (p_4 (f_3 x_2)) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => p_4 : hol.term (hol.arr B hol.bool) => hyp_1 : hol.proof (hol.and (hol.eq B (f_3 z_1) (f_3 x_2)) (p_4 (f_3 x_2))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_1) (hol.eq B (f_3 z_1) (f_3 x_2)) (p_4 (f_3 x_2)) hyp_1.

(; Theorem: |- (p (f x)) ;)

(; dict ;)

def thm_344 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> p_4 : hol.term (hol.arr B hol.bool) -> hyp_1 : hol.proof (hol.and (hol.eq B (f_3 z_1) (f_3 x_2)) (p_4 (f_3 x_2))) -> hol.proof (p_4 (f_3 x_2)) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => p_4 : hol.term (hol.arr B hol.bool) => hyp_1 : hol.proof (hol.and (hol.eq B (f_3 z_1) (f_3 x_2)) (p_4 (f_3 x_2))) => hol.PROVE_HYP (hol.and (hol.eq B (f_3 z_1) (f_3 x_2)) (p_4 (f_3 x_2))) (p_4 (f_3 x_2)) (thm_340 A B p_4 x_2 z_1 f_3 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq B (f_3 z_1) (f_3 x_2)) (p_4 (f_3 x_2))) => thm_343 A B z_1 x_2 f_3 p_4 hyp_2).

(; Theorem: |- ((= (f z)) (f x)) ;)

(; dict ;)

def thm_345 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq B (f_3 z_2) (f_3 x_1)) -> hol.proof (hol.eq B (f_3 z_2) (f_3 x_1)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq B (f_3 z_2) (f_3 x_1)) => hyp_1.

(; Theorem: |- (p (f x)) ;)

(; dict ;)

def thm_346 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> p_3 : hol.term (hol.arr B hol.bool) -> hyp_1 : hol.proof (p_3 (f_2 x_1)) -> hol.proof (p_3 (f_2 x_1)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => p_3 : hol.term (hol.arr B hol.bool) => hyp_1 : hol.proof (p_3 (f_2 x_1)) => hyp_1.

(; Theorem: |- ((= p) p) ;)

(; dict ;)

def thm_347 : B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> hol.proof (hol.eq (hol.arr B hol.bool) p_1 p_1) :=
  B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => hol.REFL (hol.arr B hol.bool) p_1.

(; Theorem: |- ((= (p (f z))) (p (f x))) ;)

(; dict ;)

def thm_348 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> p_4 : hol.term (hol.arr B hol.bool) -> hyp_1 : hol.proof (hol.eq B (f_3 z_2) (f_3 x_1)) -> hol.proof (hol.eq hol.bool (p_4 (f_3 z_2)) (p_4 (f_3 x_1))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => p_4 : hol.term (hol.arr B hol.bool) => hyp_1 : hol.proof (hol.eq B (f_3 z_2) (f_3 x_1)) => hol.APP_THM B hol.bool p_4 p_4 (f_3 z_2) (f_3 x_1) (thm_347 B p_4) (thm_345 A B x_1 z_2 f_3 hyp_1).

(; Theorem: |- ((= ((= (p (f x))) Data.Bool.T)) ((= (p (f x))) Data.Bool.T)) ;)

(; dict ;)

def thm_349 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> p_3 : hol.term (hol.arr B hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (p_3 (f_2 x_1)) hol.true) (hol.eq hol.bool (p_3 (f_2 x_1)) hol.true)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => p_3 : hol.term (hol.arr B hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (p_3 (f_2 x_1)) hol.true).

(; Theorem: |- ((= ((= (p (f x))) Data.Bool.T)) ((= (p (f x))) Data.Bool.T)) ;)

(; dict ;)

def thm_350 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> p_3 : hol.term (hol.arr B hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (p_3 (f_2 x_1)) hol.true) (hol.eq hol.bool (p_3 (f_2 x_1)) hol.true)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => p_3 : hol.term (hol.arr B hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (p_3 (f_2 x_1)) hol.true) (hol.eq hol.bool (p_3 (f_2 x_1)) hol.true) (hol.eq hol.bool (p_3 (f_2 x_1)) hol.true) (thm_349 A B x_1 f_2 p_3) (thm_349 A B x_1 f_2 p_3).

(; Theorem: |- ((= (p (f x))) ((= (p (f x))) Data.Bool.T)) ;)

(; dict ;)

def thm_351 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> p_3 : hol.term (hol.arr B hol.bool) -> hol.proof (hol.eq hol.bool (p_3 (f_2 x_1)) (hol.eq hol.bool (p_3 (f_2 x_1)) hol.true)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => p_3 : hol.term (hol.arr B hol.bool) => (t_1 : hol.term hol.bool => thm_310 t_1) (p_3 (f_2 x_1)).

(; Theorem: |- ((= (p (f x))) Data.Bool.T) ;)

(; dict ;)

def thm_352 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> p_3 : hol.term (hol.arr B hol.bool) -> hyp_1 : hol.proof (p_3 (f_2 x_1)) -> hol.proof (hol.eq hol.bool (p_3 (f_2 x_1)) hol.true) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => p_3 : hol.term (hol.arr B hol.bool) => hyp_1 : hol.proof (p_3 (f_2 x_1)) => hol.EQ_MP (p_3 (f_2 x_1)) (hol.eq hol.bool (p_3 (f_2 x_1)) hol.true) (thm_351 A B x_1 f_2 p_3) (thm_346 A B x_1 f_2 p_3 hyp_1).

(; Theorem: |- ((= (p (f z))) Data.Bool.T) ;)

(; dict ;)

def thm_353 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> p_4 : hol.term (hol.arr B hol.bool) -> hyp_1 : hol.proof (p_4 (f_3 x_1)) -> hyp_2 : hol.proof (hol.eq B (f_3 z_2) (f_3 x_1)) -> hol.proof (hol.eq hol.bool (p_4 (f_3 z_2)) hol.true) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => p_4 : hol.term (hol.arr B hol.bool) => hyp_1 : hol.proof (p_4 (f_3 x_1)) => hyp_2 : hol.proof (hol.eq B (f_3 z_2) (f_3 x_1)) => hol.TRANS hol.bool (p_4 (f_3 z_2)) (p_4 (f_3 x_1)) hol.true (thm_348 A B x_1 z_2 f_3 p_4 hyp_2) (hol.EQ_MP (hol.eq hol.bool (p_4 (f_3 x_1)) hol.true) (hol.eq hol.bool (p_4 (f_3 x_1)) hol.true) (thm_350 A B x_1 f_3 p_4) (thm_352 A B x_1 f_3 p_4 hyp_1)).

(; Theorem: |- ((= Data.Bool.T) (p (f z))) ;)

(; dict ;)

def thm_354 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> p_4 : hol.term (hol.arr B hol.bool) -> hyp_1 : hol.proof (p_4 (f_3 x_1)) -> hyp_2 : hol.proof (hol.eq B (f_3 z_2) (f_3 x_1)) -> hol.proof (hol.eq hol.bool hol.true (p_4 (f_3 z_2))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => p_4 : hol.term (hol.arr B hol.bool) => hyp_1 : hol.proof (p_4 (f_3 x_1)) => hyp_2 : hol.proof (hol.eq B (f_3 z_2) (f_3 x_1)) => hol.SYM hol.bool (p_4 (f_3 z_2)) hol.true (thm_353 A B x_1 z_2 f_3 p_4 hyp_1 hyp_2).

(; Theorem: |- (p (f z)) ;)

(; dict ;)

def thm_355 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> p_4 : hol.term (hol.arr B hol.bool) -> hyp_1 : hol.proof (p_4 (f_3 x_1)) -> hyp_2 : hol.proof (hol.eq B (f_3 z_2) (f_3 x_1)) -> hol.proof (p_4 (f_3 z_2)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => p_4 : hol.term (hol.arr B hol.bool) => hyp_1 : hol.proof (p_4 (f_3 x_1)) => hyp_2 : hol.proof (hol.eq B (f_3 z_2) (f_3 x_1)) => hol.EQ_MP hol.true (p_4 (f_3 z_2)) (thm_354 A B x_1 z_2 f_3 p_4 hyp_1 hyp_2) thm_15.

(; Theorem: |- (p (f z)) ;)

(; dict ;)

def thm_356 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> p_4 : hol.term (hol.arr B hol.bool) -> hyp_1 : hol.proof (p_4 (f_3 x_1)) -> hyp_2 : hol.proof (hol.eq B (f_3 z_2) (f_3 x_1)) -> hol.proof (p_4 (f_3 z_2)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => p_4 : hol.term (hol.arr B hol.bool) => hyp_1 : hol.proof (p_4 (f_3 x_1)) => hyp_2 : hol.proof (hol.eq B (f_3 z_2) (f_3 x_1)) => hol.PROVE_HYP (p_4 (f_3 x_1)) (p_4 (f_3 z_2)) (thm_346 A B x_1 f_3 p_4 hyp_1) (hyp_3 : hol.proof (p_4 (f_3 x_1)) => thm_355 A B x_1 z_2 f_3 p_4 hyp_3 hyp_2).

(; Theorem: |- (p (f z)) ;)

(; dict ;)

def thm_357 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> p_4 : hol.term (hol.arr B hol.bool) -> hyp_1 : hol.proof (p_4 (f_3 x_1)) -> hyp_2 : hol.proof (hol.eq B (f_3 z_2) (f_3 x_1)) -> hol.proof (p_4 (f_3 z_2)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => p_4 : hol.term (hol.arr B hol.bool) => hyp_1 : hol.proof (p_4 (f_3 x_1)) => hyp_2 : hol.proof (hol.eq B (f_3 z_2) (f_3 x_1)) => hol.PROVE_HYP (hol.eq B (f_3 z_2) (f_3 x_1)) (p_4 (f_3 z_2)) (thm_345 A B x_1 z_2 f_3 hyp_2) (hyp_3 : hol.proof (hol.eq B (f_3 z_2) (f_3 x_1)) => thm_356 A B x_1 z_2 f_3 p_4 hyp_1 hyp_3).

(; Theorem: |- (p (f z)) ;)

(; dict ;)

def thm_358 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> p_4 : hol.term (hol.arr B hol.bool) -> hyp_1 : hol.proof (hol.eq B (f_3 z_2) (f_3 x_1)) -> hyp_2 : hol.proof (hol.and (hol.eq B (f_3 z_2) (f_3 x_1)) (p_4 (f_3 x_1))) -> hol.proof (p_4 (f_3 z_2)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => p_4 : hol.term (hol.arr B hol.bool) => hyp_1 : hol.proof (hol.eq B (f_3 z_2) (f_3 x_1)) => hyp_2 : hol.proof (hol.and (hol.eq B (f_3 z_2) (f_3 x_1)) (p_4 (f_3 x_1))) => hol.PROVE_HYP (p_4 (f_3 x_1)) (p_4 (f_3 z_2)) (thm_344 A B z_2 x_1 f_3 p_4 hyp_2) (hyp_3 : hol.proof (p_4 (f_3 x_1)) => thm_357 A B x_1 z_2 f_3 p_4 hyp_3 hyp_1).

(; Theorem: |- (p (f z)) ;)

(; dict ;)

def thm_359 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> p_4 : hol.term (hol.arr B hol.bool) -> hyp_1 : hol.proof (hol.and (hol.eq B (f_3 z_2) (f_3 x_1)) (p_4 (f_3 x_1))) -> hol.proof (p_4 (f_3 z_2)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => p_4 : hol.term (hol.arr B hol.bool) => hyp_1 : hol.proof (hol.and (hol.eq B (f_3 z_2) (f_3 x_1)) (p_4 (f_3 x_1))) => hol.PROVE_HYP (hol.eq B (f_3 z_2) (f_3 x_1)) (p_4 (f_3 z_2)) (thm_342 A B p_4 x_1 z_2 f_3 hyp_1) (hyp_2 : hol.proof (hol.eq B (f_3 z_2) (f_3 x_1)) => thm_358 A B x_1 z_2 f_3 p_4 hyp_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= (f z)) (f x))) (p (f x)))) (p (f z))) ;)

(; dict ;)

def thm_360 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> x_2 : hol.term A -> z_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hol.proof (hol.imp (hol.and (hol.eq B (f_4 z_3) (f_4 x_2)) (p_1 (f_4 x_2))) (p_1 (f_4 z_3))) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => x_2 : hol.term A => z_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (hol.eq B (f_4 z_3) (f_4 x_2)) (p_1 (f_4 x_2))) => thm_359 A B x_2 z_3 f_4 p_1 hyp_1.

(; Theorem: |- ((= (\lambda x. ((Data.Bool./\ ((= (f z)) (f x))) (p (f x))) x)) ((Data.Bool./\ ((= (f z)) (f x))) (p (f x)))) ;)

(; dict ;)

def thm_361 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> p_2 : hol.term (hol.arr B hol.bool) -> z_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((x_5 : hol.term A => hol.and (hol.eq B (f_4 z_3) (f_4 x_5)) (p_2 (f_4 x_5))) x_1) (hol.and (hol.eq B (f_4 z_3) (f_4 x_1)) (p_2 (f_4 x_1)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => p_2 : hol.term (hol.arr B hol.bool) => z_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hol.BETA_CONV A hol.bool (x_5 : hol.term A => hol.and (hol.eq B (f_4 z_3) (f_4 x_5)) (p_2 (f_4 x_5))) x_1.

(; Theorem: |- (\lambda x. ((Data.Bool./\ ((= (f z)) (f x))) (p (f x))) x) ;)

(; dict ;)

def thm_362 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> p_2 : hol.term (hol.arr B hol.bool) -> z_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (hol.eq B (f_4 z_3) (f_4 x_5)) (p_2 (f_4 x_5))) x_1) -> hol.proof ((x_5 : hol.term A => hol.and (hol.eq B (f_4 z_3) (f_4 x_5)) (p_2 (f_4 x_5))) x_1) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => p_2 : hol.term (hol.arr B hol.bool) => z_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (hol.eq B (f_4 z_3) (f_4 x_5)) (p_2 (f_4 x_5))) x_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= (f z)) (f x))) (p (f x))) ;)

(; dict ;)

def thm_363 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> x_2 : hol.term A -> z_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (hol.eq B (f_4 z_3) (f_4 x_5)) (p_1 (f_4 x_5))) x_2) -> hol.proof (hol.and (hol.eq B (f_4 z_3) (f_4 x_2)) (p_1 (f_4 x_2))) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => x_2 : hol.term A => z_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (hol.eq B (f_4 z_3) (f_4 x_5)) (p_1 (f_4 x_5))) x_2) => hol.EQ_MP ((x_5 : hol.term A => hol.and (hol.eq B (f_4 z_3) (f_4 x_5)) (p_1 (f_4 x_5))) x_2) (hol.and (hol.eq B (f_4 z_3) (f_4 x_2)) (p_1 (f_4 x_2))) (thm_361 B A x_2 p_1 z_3 f_4) (thm_362 B A x_2 p_1 z_3 f_4 hyp_1).

(; Theorem: |- (p (f z)) ;)

(; dict ;)

def thm_364 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> p_4 : hol.term (hol.arr B hol.bool) -> hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_5)) (p_4 (f_3 x_5))) x_1) -> hol.proof (p_4 (f_3 z_2)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => p_4 : hol.term (hol.arr B hol.bool) => hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_5)) (p_4 (f_3 x_5))) x_1) => thm_360 A B p_4 x_1 z_2 f_3 (thm_363 A B p_4 x_1 z_2 f_3 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= (f z)) (f x))) (p (f x))) x)) (p (f z))) ;)

(; dict ;)

def thm_365 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> p_2 : hol.term (hol.arr B hol.bool) -> z_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hol.proof (hol.imp ((x_5 : hol.term A => hol.and (hol.eq B (f_4 z_3) (f_4 x_5)) (p_2 (f_4 x_5))) x_1) (p_2 (f_4 z_3))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => p_2 : hol.term (hol.arr B hol.bool) => z_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (hol.eq B (f_4 z_3) (f_4 x_5)) (p_2 (f_4 x_5))) x_1) => thm_364 A B x_1 z_3 f_4 p_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= (f z)) (f x))) (p (f x))) x)) (p (f z)))) ;)

(; dict ;)

def thm_366 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.forall A (x_4 : hol.term A => hol.imp ((x_5 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_5)) (p_1 (f_3 x_5))) x_4) (p_1 (f_3 z_2)))) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr B hol.bool) => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => x_4 : hol.term A => thm_365 B A x_4 p_1 z_2 f_3.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f z)) (f x))) (p (f x))))) (p (f z))) ;)

(; dict ;)

def thm_367 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_4)) (p_1 (f_3 x_4)))) (p_1 (f_3 z_2))) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr B hol.bool) => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => thm_339 B A p_1 z_2 f_3 (thm_366 B A p_1 z_2 f_3).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f z)) (f x))) (p (f x)))) ;)

(; dict ;)

def thm_368 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_4)) (p_1 (f_3 x_4)))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_4)) (p_1 (f_3 x_4)))) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr B hol.bool) => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_4)) (p_1 (f_3 x_4)))) => hyp_1.

(; Theorem: |- (p (f z)) ;)

(; dict ;)

def thm_369 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> p_3 : hol.term (hol.arr B hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_2 z_1) (f_2 x_4)) (p_3 (f_2 x_4)))) -> hol.proof (p_3 (f_2 z_1)) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => f_2 : hol.term (hol.arr A B) => p_3 : hol.term (hol.arr B hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_2 z_1) (f_2 x_4)) (p_3 (f_2 x_4)))) => thm_367 B A p_3 z_1 f_2 (thm_368 B A p_3 z_1 f_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f z)) (f x))) (p (f x))))) (p (f z))) ;)

(; dict ;)

def thm_370 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_4)) (p_1 (f_3 x_4)))) (p_1 (f_3 z_2))) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr B hol.bool) => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hol.PROP_EXT (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_4)) (p_1 (f_3 x_4)))) (p_1 (f_3 z_2)) (hyp_1 : hol.proof (p_1 (f_3 z_2)) => thm_338 A B z_2 f_3 p_1 (thm_295 A B z_2 f_3 p_1 hyp_1)) (hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_4)) (p_1 (f_3 x_4)))) => (hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_3 z_2) (f_3 x_4)) (p_1 (f_3 x_4)))) => thm_369 A B z_2 f_3 p_1 hyp_2) (thm_368 B A p_1 z_2 f_3 hyp_1)).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) (p (f x))))) (p y)) ;)

(; dict ;)

def thm_371 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> p_2 : hol.term (hol.arr B hol.bool) -> f_3 : hol.term (hol.arr A B) -> y_4 : hol.term B -> hyp_1 : hol.proof (hol.eq B (f_3 z_1) y_4) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_4 (f_3 x_5)) (p_2 (f_3 x_5)))) (p_2 y_4)) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => p_2 : hol.term (hol.arr B hol.bool) => f_3 : hol.term (hol.arr A B) => y_4 : hol.term B => hyp_1 : hol.proof (hol.eq B (f_3 z_1) y_4) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B (f_3 z_1) (f_3 x_5)) (p_2 (f_3 x_5)))) (p_2 (f_3 z_1))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_4 (f_3 x_5)) (p_2 (f_3 x_5)))) (p_2 y_4)) (thm_294 B A y_4 p_2 z_1 f_3 hyp_1) (thm_370 B A p_2 z_1 f_3).

(; Theorem: |- ((Data.Bool.==> ((= (f z)) y)) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) (p (f x))))) (p y))) ;)

(; dict ;)

def thm_372 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> y_2 : hol.term B -> z_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hol.proof (hol.imp (hol.eq B (f_4 z_3) y_2) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_2 (f_4 x_5)) (p_1 (f_4 x_5)))) (p_1 y_2))) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => y_2 : hol.term B => z_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq B (f_4 z_3) y_2) => thm_371 B A z_3 p_1 f_4 y_2 hyp_1.

(; Theorem: |- ((= (\lambda x. ((= (f x)) y) z)) ((= (f z)) y)) ;)

(; dict ;)

def thm_373 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((x_4 : hol.term A => hol.eq B (f_3 x_4) y_2) z_1) (hol.eq B (f_3 z_1) y_2)) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => hol.BETA_CONV A hol.bool (x_4 : hol.term A => hol.eq B (f_3 x_4) y_2) z_1.

(; Theorem: |- (\lambda x. ((= (f x)) y) z) ;)

(; dict ;)

def thm_374 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof ((x_4 : hol.term A => hol.eq B (f_3 x_4) y_2) z_1) -> hol.proof ((x_4 : hol.term A => hol.eq B (f_3 x_4) y_2) z_1) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof ((x_4 : hol.term A => hol.eq B (f_3 x_4) y_2) z_1) => hyp_1.

(; Theorem: |- ((= (f z)) y) ;)

(; dict ;)

def thm_375 : A : hol.type -> B : hol.type -> y_1 : hol.term B -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof ((x_4 : hol.term A => hol.eq B (f_3 x_4) y_1) z_2) -> hol.proof (hol.eq B (f_3 z_2) y_1) :=
  A : hol.type => B : hol.type => y_1 : hol.term B => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof ((x_4 : hol.term A => hol.eq B (f_3 x_4) y_1) z_2) => hol.EQ_MP ((x_4 : hol.term A => hol.eq B (f_3 x_4) y_1) z_2) (hol.eq B (f_3 z_2) y_1) (thm_373 B A z_2 y_1 f_3) (thm_374 B A z_2 y_1 f_3 hyp_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) (p (f x))))) (p y)) ;)

(; dict ;)

def thm_376 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> p_2 : hol.term (hol.arr B hol.bool) -> f_3 : hol.term (hol.arr A B) -> y_4 : hol.term B -> hyp_1 : hol.proof ((x_5 : hol.term A => hol.eq B (f_3 x_5) y_4) z_1) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_4 (f_3 x_5)) (p_2 (f_3 x_5)))) (p_2 y_4)) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => p_2 : hol.term (hol.arr B hol.bool) => f_3 : hol.term (hol.arr A B) => y_4 : hol.term B => hyp_1 : hol.proof ((x_5 : hol.term A => hol.eq B (f_3 x_5) y_4) z_1) => thm_372 A B p_2 y_4 z_1 f_3 (thm_375 A B y_4 z_1 f_3 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda x. ((= (f x)) y) z)) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) (p (f x))))) (p y))) ;)

(; dict ;)

def thm_377 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> z_2 : hol.term A -> y_3 : hol.term B -> f_4 : hol.term (hol.arr A B) -> hol.proof (hol.imp ((x_5 : hol.term A => hol.eq B (f_4 x_5) y_3) z_2) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_3 (f_4 x_5)) (p_1 (f_4 x_5)))) (p_1 y_3))) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr B hol.bool) => z_2 : hol.term A => y_3 : hol.term B => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof ((x_5 : hol.term A => hol.eq B (f_4 x_5) y_3) z_2) => thm_376 B A z_2 p_1 f_4 y_3 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda z. ((Data.Bool.==> (\lambda x. ((= (f x)) y) z)) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) (p (f x))))) (p y)))) ;)

(; dict ;)

def thm_378 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.forall A (z_4 : hol.term A => hol.imp ((x_5 : hol.term A => hol.eq B (f_3 x_5) y_2) z_4) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_2 (f_3 x_5)) (p_1 (f_3 x_5)))) (p_1 y_2)))) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr B hol.bool) => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => z_4 : hol.term A => thm_377 B A p_1 z_4 y_2 f_3.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x. ((= (f x)) y))) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) (p (f x))))) (p y))) ;)

(; dict ;)

def thm_379 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.eq B (f_3 x_4) y_2)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_2 (f_3 x_4)) (p_1 (f_3 x_4)))) (p_1 y_2))) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr B hol.bool) => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => thm_280 B A p_1 y_2 f_3 (thm_378 B A p_1 y_2 f_3).

(; Theorem: |- (Data.Bool.? \lambda x. ((= (f x)) y)) ;)

(; dict ;)

def thm_380 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_2 x_3) y_1)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_2 x_3) y_1)) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_2 x_3) y_1)) => hyp_1.

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) (p (f x))))) (p y)) ;)

(; dict ;)

def thm_381 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.eq B (f_2 x_4) y_3)) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 y_3)) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr B hol.bool) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.eq B (f_2 x_4) y_3)) => thm_379 B A p_1 y_3 f_2 (thm_380 B A y_3 f_2 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda x. ((= (f x)) y)) ;)

(; dict ;)

def thm_382 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.eq B (f_2 x_4) y_3))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_2 x_3) y_1)) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.eq B (f_2 x_4) y_3))) => thm_253 A B f_2 hyp_1 y_1.

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) (p (f x))))) (p y)) ;)

(; dict ;)

def thm_383 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.eq B (f_2 x_5) y_4))) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 y_3)) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr B hol.bool) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.eq B (f_2 x_5) y_4))) => (hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.eq B (f_2 x_4) y_3)) => thm_381 B A p_1 f_2 y_3 hyp_2) (thm_382 B A y_3 f_2 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda y. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) (p (f x))))) (p y))) ;)

(; dict ;)

def thm_384 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> f_2 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.eq B (f_2 x_4) y_3))) -> hol.proof (hol.forall B (y_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 y_3))) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => f_2 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.eq B (f_2 x_4) y_3))) => y_3 : hol.term B => thm_383 B A p_1 f_2 y_3 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (p (f x))))) (p x))) ;)

(; dict ;)

def thm_385 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr B hol.bool) -> f_2 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.eq B (f_2 x_4) y_3))) -> hol.proof (hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 x_3))) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr B hol.bool) => f_2 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.eq B (f_2 x_4) y_3))) => hol.EQ_MP (hol.forall B (y_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 y_3))) (hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (p_1 (f_2 x_4)))) (p_1 x_3))) (thm_260 A B p_1 f_2) (thm_384 A B p_1 f_2 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (p (f x))))) (p x)))) ;)

(; dict ;)

def thm_386 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) -> hol.proof (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) => p_2 : hol.term (hol.arr B hol.bool) => thm_385 A B p_2 f_1 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (p (f x))))) (p x)))) ;)

(; dict ;)

def thm_387 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) -> hol.proof (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) => hol.PROVE_HYP (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3)))) (thm_253 A B f_1 hyp_1) (hyp_2 : hol.proof (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) => hol.EQ_MP (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3)))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3)))) (thm_256 A B f_1) (thm_386 A B f_1 hyp_2)).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.! \lambda p. (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (p (f x))))) (p x))))) ;)

(; dict ;)

def thm_388 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.imp (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) => thm_387 A B f_1 hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.! \lambda p. (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (p (f x))))) (p x))))) ;)

(; dict ;)

def thm_389 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.PROP_EXT (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3)))) (hyp_1 : hol.proof (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3)))) => thm_252 A B f_1 (thm_249 A B f_1 hyp_1)) (hyp_1 : hol.proof (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) => thm_388 A B f_1 (thm_253 A B f_1 hyp_1)).

(; Theorem: |- ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.! \lambda p. ((= ((Set.image f) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x))))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p x))))))) ;)

(; dict ;)

def thm_390 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4)))))) (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq B v_3 x_4) (p_2 x_4))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.EQ_MP (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.forall B (x_3 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_1 x_4)) (p_2 (f_1 x_4)))) (p_2 x_3))))) (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4)))))) (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq B v_3 x_4) (p_2 x_4))))))) (thm_106 A B f_1) (thm_389 A B f_1).

(; Theorem: |- (Data.Bool.! \lambda f. ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.! \lambda p. ((= ((Set.image f) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x))))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p x)))))))) ;)

(; dict ;)

def thm_391 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4)))))) (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq B v_3 x_4) (p_2 x_4)))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => thm_390 A B f_1.

(; Theorem: |- (Data.Bool.! \lambda f. ((= (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.! \lambda p. ((= ((Set.image f) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p (f x))))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (p x)))))))) ;)

(; thm ;)

def thm_392 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4)))))) (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq B v_3 x_4) (p_2 x_4)))))))) :=
  B : hol.type => A : hol.type => hol.EQ_MP (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4)))))) (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq B v_3 x_4) (p_2 x_4)))))))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (hol.forall (hol.arr B hol.bool) (p_2 : hol.term (hol.arr B hol.bool) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_3 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A v_3 x_4) (p_2 (f_1 x_4)))))) (Set_2EfromPredicate (hol.arr (hol.arr B hol.bool) (Set_2Eset B)) (v_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq B v_3 x_4) (p_2 x_4)))))))) (thm_41 B A) (thm_391 B A).

(; Theorem: |- ((= \lambda f. (Data.Bool.! \lambda s. (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y))))))))) \lambda f. (Data.Bool.! \lambda s. (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y))))))))) ;)

(; dict ;)

def thm_393 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))))))) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5))))))))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))))))).

(; Theorem: |- ((= \lambda f. (Data.Bool.! \lambda s. (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y))))))))) \lambda f. (Data.Bool.! \lambda s. (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y))))))))) ;)

(; dict ;)

def thm_394 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))))))) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5))))))))) :=
  B : hol.type => A : hol.type => hol.TRANS (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))))))) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))))))) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))))))) (thm_393 B A) (thm_393 B A).

(; Theorem: |- ((= (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y)))))))))) (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y)))))))))) ;)

(; dict ;)

def thm_395 : B : hol.type -> A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5))))))))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))))))))) :=
  B : hol.type => A : hol.type => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B)) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))))))) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))))))) (thm_38 B A) (thm_394 B A).

(; Theorem: |- ((= \lambda s. (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y)))))))) \lambda s. (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y)))))))) ;)

(; dict ;)

def thm_396 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5))))))) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.REFL (hol.arr (Set_2Eset A) hol.bool) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5))))))).

(; Theorem: |- ((= \lambda s. (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y)))))))) \lambda s. (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y)))))))) ;)

(; dict ;)

def thm_397 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5))))))) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.TRANS (hol.arr (Set_2Eset A) hol.bool) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5))))))) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5))))))) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5))))))) (thm_396 B A f_1) (thm_396 B A f_1).

(; Theorem: |- ((= (Data.Bool.! \lambda s. (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y))))))))) (Data.Bool.! \lambda s. (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y))))))))) ;)

(; dict ;)

def thm_398 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))))))) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5))))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5))))))) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5))))))) (thm_46 A) (thm_397 B A f_1).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) ;)

(; dict ;)

def thm_399 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => hol.REFL hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) ;)

(; dict ;)

def thm_400 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => hol.TRANS hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (thm_399 A B f_1 s_2 t_3) (thm_399 A B f_1 s_2 t_3).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_401 : B : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (Set_2Eset B) hol.bool) hol.bool) (hol.forall (Set_2Eset B)) (hol.forall (Set_2Eset B))) :=
  B : hol.type => hol.REFL (hol.arr (hol.arr (Set_2Eset B) hol.bool) hol.bool) (hol.forall (Set_2Eset B)).

(; Theorem: |- ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))) ;)

(; dict ;)

def thm_402 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) => hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) ;)

(; dict ;)

def thm_403 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) -> hol.proof (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) => hol.SYM hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (thm_402 A B f_1 s_2 t_3 hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) ;)

(; dict ;)

def thm_404 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))))) -> hol.proof (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))))) => hyp_1.

(; Theorem: |- ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))) ;)

(; dict ;)

def thm_405 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))))) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))))) => hol.SYM hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (thm_404 A B f_1 s_2 t_3 hyp_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))))) ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) ;)

(; dict ;)

def thm_406 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => hol.PROP_EXT (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (hyp_1 : hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) => thm_403 A B f_1 s_2 t_3 hyp_1) (hyp_1 : hol.proof (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))))) => thm_405 A B f_1 s_2 t_3 hyp_1).

(; Theorem: |- ((= \lambda t. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))))) \lambda t. ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) ;)

(; dict ;)

def thm_407 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (Set_2Eset B) hol.bool) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))))) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.ABS_THM (Set_2Eset B) hol.bool (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))))) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (t_3 : hol.term (Set_2Eset B) => thm_406 A B f_1 s_2 t_3).

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))))) (Data.Bool.! \lambda t. ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))))) ;)

(; dict ;)

def thm_408 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))))) (hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr (Set_2Eset B) hol.bool) hol.bool (hol.forall (Set_2Eset B)) (hol.forall (Set_2Eset B)) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))))) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (thm_401 B) (thm_407 A B f_1 s_2).

(; Theorem: |- ((= \lambda s. (Data.Bool.! \lambda t. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))))) \lambda s. (Data.Bool.! \lambda t. ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))))) ;)

(; dict ;)

def thm_409 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))))) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.ABS_THM (Set_2Eset A) hol.bool (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))))) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))))) (s_2 : hol.term (Set_2Eset A) => thm_408 A B f_1 s_2).

(; Theorem: |- ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))))))) (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))))) ;)

(; dict ;)

def thm_410 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))))))) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))))) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))))) (thm_46 A) (thm_409 B A f_1).

(; Theorem: |- ((= \lambda f. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))))))) \lambda f. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))))) ;)

(; dict ;)

def thm_411 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))))))) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))))))) :=
  B : hol.type => A : hol.type => hol.ABS_THM (hol.arr A B) hol.bool (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))))))) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))))) (f_1 : hol.term (hol.arr A B) => thm_410 B A f_1).

(; Theorem: |- ((= (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))))))) (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))))))) ;)

(; dict ;)

def thm_412 : B : hol.type -> A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))))))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))))))) :=
  B : hol.type => A : hol.type => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B)) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))))))) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))))) (thm_38 B A) (thm_411 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))))) ;)

(; dict ;)

def thm_413 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))))))) :=
  B : hol.type => A : hol.type => hol.EQ_MP (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))))))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))))))) (thm_412 B A) (thm_17 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))))) ;)

(; dict ;)

def thm_414 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => thm_413 B A f_1.

(; Theorem: |- (Data.Bool.! \lambda t. ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))))) ;)

(; dict ;)

def thm_415 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => thm_414 B A f_1 s_2.

(; Theorem: |- ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))) ;)

(; dict ;)

def thm_416 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => thm_415 A B f_1 s_2 t_3.

(; Theorem: |- ((= (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))) ;)

(; dict ;)

def thm_417 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_4) s_1) (hol.eq B (f_2 (g_3 y_4)) y_4))))) (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (hol.eq B (f_2 x_4) y_3)))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => (A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => (A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.eq B (f_1 x_5) y_4)))))) (thm_400 A B f_1 s_2 t_3) (thm_416 A B f_1 s_2 t_3)) A B f_1 s_2 t_3) A B f_2 s_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))) (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) ;)

(; dict ;)

def thm_418 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (hol.eq B (f_2 x_4) y_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_4) s_1) (hol.eq B (f_2 (g_3 y_4)) y_4)))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => hol.SYM hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_4) s_1) (hol.eq B (f_2 (g_3 y_4)) y_4))))) (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (hol.eq B (f_2 x_4) y_3))))) (thm_417 A B s_1 f_2).

(; Theorem: |- ((= (Data.Bool.==> ((Set.member y) ((Set.image f) s)))) (Data.Bool.==> ((Set.member y) ((Set.image f) s)))) ;)

(; dict ;)

def thm_419 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => hol.REFL (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))).

(; Theorem: |- ((= ((= ((Data.Bool./\ t1) t2)) ((Data.Bool./\ t2) t1))) ((= ((Data.Bool./\ t1) t2)) ((Data.Bool./\ t2) t1))) ;)

(; dict ;)

def thm_420 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t1_2 t2_1) (hol.and t2_1 t1_2)) (hol.eq hol.bool (hol.and t1_2 t2_1) (hol.and t2_1 t1_2))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t1_2 t2_1) (hol.and t2_1 t1_2)).

(; Theorem: |- ((= ((= ((Data.Bool./\ t1) t2)) ((Data.Bool./\ t2) t1))) ((= ((Data.Bool./\ t1) t2)) ((Data.Bool./\ t2) t1))) ;)

(; dict ;)

def thm_421 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t1_2 t2_1) (hol.and t2_1 t1_2)) (hol.eq hol.bool (hol.and t1_2 t2_1) (hol.and t2_1 t1_2))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t1_2 t2_1) (hol.and t2_1 t1_2)) (hol.eq hol.bool (hol.and t1_2 t2_1) (hol.and t2_1 t1_2)) (hol.eq hol.bool (hol.and t1_2 t2_1) (hol.and t2_1 t1_2)) (thm_420 t2_1 t1_2) (thm_420 t2_1 t1_2).

(; Theorem: |- (Data.Bool.! \lambda t2. ((= ((Data.Bool./\ t1) t2)) ((Data.Bool./\ t2) t1))) ;)

(; dict ;)

def thm_422 : t1_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.eq hol.bool (hol.and t1_1 t2_2) (hol.and t2_2 t1_1))) :=
  t1_1 : hol.term hol.bool => thm_18 t1_1.

(; Theorem: |- ((= ((Data.Bool./\ t1) t2)) ((Data.Bool./\ t2) t1)) ;)

(; dict ;)

def thm_423 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t1_2 t2_1) (hol.and t2_1 t1_2)) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => thm_422 t1_2 t2_1.

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))) ((Data.Bool./\ ((= (f x)) y)) ((Set.member x) s))) ;)

(; dict ;)

def thm_424 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B (f_2 x_4) y_1)) (hol.and (hol.eq B (f_2 x_4) y_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => (t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and t1_2 t2_1) (hol.and t2_1 t1_2)) (hol.eq hol.bool (hol.and t1_2 t2_1) (hol.and t2_1 t1_2)) (thm_421 t2_1 t1_2) (thm_423 t2_1 t1_2)) (hol.eq B (f_2 x_4) y_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3).

(; Theorem: |- ((= \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))) \lambda x. ((Data.Bool./\ ((= (f x)) y)) ((Set.member x) s))) ;)

(; dict ;)

def thm_425 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B (f_2 x_4) y_1)) (x_4 : hol.term A => hol.and (hol.eq B (f_2 x_4) y_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.ABS_THM A hol.bool (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B (f_2 x_4) y_1)) (x_4 : hol.term A => hol.and (hol.eq B (f_2 x_4) y_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (x_4 : hol.term A => thm_424 B A y_1 f_2 s_3 x_4).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f x)) y)) ((Set.member x) s)))) ;)

(; dict ;)

def thm_426 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B (f_2 x_4) y_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_2 x_4) y_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.eq B (f_2 x_4) y_1)) (x_4 : hol.term A => hol.and (hol.eq B (f_2 x_4) y_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (thm_71 A) (thm_425 B A y_1 f_2 s_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))) ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f x)) y)) ((Set.member x) s))))) ;)

(; dict ;)

def thm_427 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (hol.eq B (f_2 x_4) y_3)))) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_2 x_4) y_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (hol.eq B (f_2 x_4) y_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_2 x_4) y_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) (thm_419 A B s_1 f_2 y_3) (thm_426 B A y_3 f_2 s_1).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))) \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f x)) y)) ((Set.member x) s))))) ;)

(; dict ;)

def thm_428 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (hol.eq B (f_2 x_4) y_3)))) (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_2 x_4) y_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => hol.ABS_THM B hol.bool (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (hol.eq B (f_2 x_4) y_3)))) (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_2 x_4) y_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (y_3 : hol.term B => thm_427 A B s_1 f_2 y_3).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f x)) y)) ((Set.member x) s)))))) ;)

(; dict ;)

def thm_429 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (hol.eq B (f_2 x_4) y_3))))) (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_2 x_4) y_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (hol.eq B (f_2 x_4) y_3)))) (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_2 x_4) y_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (thm_63 B) (thm_428 A B s_1 f_2).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f x)) y)) ((Set.member x) s)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))) ;)

(; dict ;)

def thm_430 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_2 x_4) y_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (hol.eq B (f_2 x_4) y_3)))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => hol.SYM hol.bool (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (hol.eq B (f_2 x_4) y_3))))) (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_2 x_4) y_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) (thm_429 A B s_1 f_2).

(; Theorem: |- ((= (Data.Bool./\ ((= (f x)) y))) (Data.Bool./\ ((= y) (f x)))) ;)

(; dict ;)

def thm_431 : A : hol.type -> B : hol.type -> y_1 : hol.term B -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq B (f_3 x_2) y_1)) (hol.and (hol.eq B y_1 (f_3 x_2)))) :=
  A : hol.type => B : hol.type => y_1 : hol.term B => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.eq B (f_3 x_2) y_1) (hol.eq B y_1 (f_3 x_2)) thm_298 (thm_238 A B y_1 x_2 f_3).

(; Theorem: |- ((= ((Set.member x) s)) ((Set.member x) s)) ;)

(; dict ;)

def thm_432 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.REFL hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1).

(; Theorem: |- ((= ((Data.Bool./\ ((= (f x)) y)) ((Set.member x) s))) ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_433 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term B -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B (f_4 x_3) y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) (hol.and (hol.eq B y_2 (f_4 x_3)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term B => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq B (f_4 x_3) y_2)) (hol.and (hol.eq B y_2 (f_4 x_3))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (thm_431 A B y_2 x_3 f_4) (thm_432 A s_1 x_3).

(; Theorem: |- ((= \lambda x. ((Data.Bool./\ ((= (f x)) y)) ((Set.member x) s))) \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_434 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_3 x_4) y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (x_4 : hol.term A => hol.and (hol.eq B y_2 (f_3 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => hol.ABS_THM A hol.bool (x_4 : hol.term A => hol.and (hol.eq B (f_3 x_4) y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (x_4 : hol.term A => hol.and (hol.eq B y_2 (f_3 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (x_4 : hol.term A => thm_433 A B s_1 y_2 x_4 f_3).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f x)) y)) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_435 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_3 x_4) y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_2 (f_3 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (x_4 : hol.term A => hol.and (hol.eq B (f_3 x_4) y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (x_4 : hol.term A => hol.and (hol.eq B y_2 (f_3 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (thm_71 A) (thm_434 B A s_1 y_2 f_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f x)) y)) ((Set.member x) s))))) ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_436 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_2 x_4) y_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_2 x_4) y_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) (thm_419 A B s_1 f_2 y_3) (thm_435 B A s_1 y_3 f_2).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f x)) y)) ((Set.member x) s))))) \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_437 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_2 x_4) y_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => hol.ABS_THM B hol.bool (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_2 x_4) y_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (y_3 : hol.term B => thm_436 A B s_1 f_2 y_3).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f x)) y)) ((Set.member x) s)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))))) ;)

(; dict ;)

def thm_438 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_2 x_4) y_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_2 x_4) y_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (thm_63 B) (thm_437 A B s_1 f_2).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f x)) y)) ((Set.member x) s)))))) ;)

(; dict ;)

def thm_439 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_2 x_4) y_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => hol.SYM hol.bool (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_2 x_4) y_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) (thm_438 A B s_1 f_2).

(; Theorem: |- ((= (Data.Bool.==> ((Set.member y) ((Set.image f) s)))) (Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_440 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) thm_107 (thm_69 A B s_1 f_2 y_3).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_441 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => hol.REFL hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))))) ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_442 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) (thm_440 A B s_1 f_2 y_3) (thm_441 B A s_1 f_2 y_3).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_443 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_444 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_443 t_1) (thm_443 t_1).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_445 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_446 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) thm_445 thm_445.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))))) ;)

(; dict ;)

def thm_447 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) thm_118 thm_446.

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_448 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_449 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (thm_448 t_1) (thm_448 t_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_450 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_19 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_451 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_452 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) (hol.EQ_MP (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (thm_449 t_1) (thm_450 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) => thm_451 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_453 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_454 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (thm_453 t_1) (thm_453 t_1).

(; Theorem: |- ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_455 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) :=
  t_1 : hol.term hol.bool => thm_20 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_456 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_457 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (thm_454 t_1) (thm_455 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) => thm_456 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_458 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_459 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (thm_458 t_1) (thm_458 t_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T) ;)

(; dict ;)

def thm_460 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) :=
  t_1 : hol.term hol.bool => thm_21 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_461 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_462 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (thm_459 t_1) (thm_460 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) => thm_461 t_1 hyp_1).

(; Theorem: |- ((= \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_463 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true).

(; Theorem: |- ((= \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_464 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) thm_463 thm_463.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T))) (Data.Bool.! \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T))) ;)

(; dict ;)

def thm_465 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) thm_118 thm_464.

(; Theorem: |- ((= ((Data.Bool.==> t) t)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_466 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_310 t_1) (hol.imp t_1 t_1).

(; Theorem: |- ((Data.Bool.==> t) t) ;)

(; dict ;)

def thm_467 : t_1 : hol.term hol.bool -> hol.proof (hol.imp t_1 t_1) :=
  t_1 : hol.term hol.bool => thm_22 t_1.

(; Theorem: |- ((= ((Data.Bool.==> t) t)) Data.Bool.T) ;)

(; dict ;)

def thm_468 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.imp t_1 t_1) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_466 t_1) (thm_467 t_1).

(; Theorem: |- ((= (= ((Data.Bool.==> t) t))) (= Data.Bool.T)) ;)

(; dict ;)

def thm_469 : t_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.imp t_1 t_1)) (hol.eq hol.bool hol.true)) :=
  t_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.imp t_1 t_1) hol.true thm_64 (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_443 t_1) (thm_468 t_1)).

(; Theorem: |- ((= Data.Bool.T) Data.Bool.T) ;)

(; dict ;)

def thm_470 : hol.proof (hol.eq hol.bool hol.true hol.true) :=
  hol.REFL hol.bool hol.true.

(; Theorem: |- ((= ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_471 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool hol.true hol.true)) :=
  t_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.imp t_1 t_1)) (hol.eq hol.bool hol.true) hol.true hol.true (thm_469 t_1) thm_470.

(; Theorem: |- ((= ((= Data.Bool.T) Data.Bool.T)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_472 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool hol.true hol.true) (thm_471 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_473 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool hol.true hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_472 t_1) thm_470.

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_474 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_475 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_443 t_1) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_2 t_2) hol.true)) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_2 t_2) hol.true)) thm_465 thm_473 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) => thm_474 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_476 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_477 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (thm_476 t_1) (thm_476 t_1).

(; Theorem: |- ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_478 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => thm_23 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_479 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (thm_475 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (thm_477 t_1) (thm_478 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_480 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (thm_462 t_1) (thm_479 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_481 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (thm_457 t_1) (thm_480 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_482 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (thm_452 t_1) (thm_481 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_483 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  t_1 : hol.term hol.bool => thm_482 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_484 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_485 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.imp t_2 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_2) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_2 t_2) hol.true) (hol.eq hol.bool (hol.imp t_2 hol.false) (hol.not t_2))))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.imp t_2 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_2) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_2 t_2) hol.true) (hol.eq hol.bool (hol.imp t_2 hol.false) (hol.not t_2))))))) thm_447 thm_483 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) => thm_484 t_1 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_486 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) -> hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_487 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (thm_485 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) => thm_486 t_1 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_488 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_489 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (thm_487 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) => thm_488 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> t) t)) Data.Bool.T) ;)

(; dict ;)

def thm_490 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) -> hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_185 q_1 p_2 hyp_1) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> t) t)) Data.Bool.T) ;)

(; dict ;)

def thm_491 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_489 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) => thm_490 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))))) Data.Bool.T) ;)

(; dict ;)

def thm_492 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) hol.true) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_444 t_1) (thm_491 t_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))))) Data.Bool.T) ;)

(; dict ;)

def thm_493 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) hol.true) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => hol.TRANS hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) hol.true (thm_442 A B s_1 f_2 y_3) (thm_492 B A s_1 f_2 y_3).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))))) \lambda y. Data.Bool.T) ;)

(; dict ;)

def thm_494 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (y_3 : hol.term B => hol.true)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => hol.ABS_THM B hol.bool (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (y_3 : hol.term B => hol.true) (y_3 : hol.term B => thm_493 A B s_1 f_2 y_3).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))))) (Data.Bool.! \lambda y. Data.Bool.T)) ;)

(; dict ;)

def thm_495 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) (hol.forall B (y_3 : hol.term B => hol.true))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (y_3 : hol.term B => hol.true) (thm_63 B) (thm_494 A B s_1 f_2).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. t)) t)) ((= (Data.Bool.! \lambda x. t)) t)) ;)

(; dict ;)

def thm_496 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda y. t)) t)) ((= (Data.Bool.! \lambda y. t)) t)) ;)

(; dict ;)

def thm_497 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (y_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (y_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (y_2 : hol.term A => t_1)) t_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. t)) t)) ((= (Data.Bool.! \lambda y. t)) t)) ;)

(; dict ;)

def thm_498 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (y_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (y_2 : hol.term A => t_1)) t_1) (thm_496 A t_1) (thm_497 A t_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. t)) t) ;)

(; dict ;)

def thm_499 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) :=
  A : hol.type => t_1 : hol.term hol.bool => thm_24 A t_1.

(; Theorem: |- ((= (Data.Bool.! \lambda y. t)) t) ;)

(; dict ;)

def thm_500 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall A (y_2 : hol.term A => t_1)) t_1) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (y_2 : hol.term A => t_1)) t_1) (thm_498 A t_1) (thm_499 A t_1).

(; Theorem: |- ((= (Data.Bool.! \lambda y. t)) t) ;)

(; dict ;)

def thm_501 : B : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => t_1)) t_1) :=
  B : hol.type => t_1 : hol.term hol.bool => (A : hol.type => t_1 : hol.term hol.bool => thm_500 A t_1) B t_1.

(; Theorem: |- ((= (Data.Bool.! \lambda y. Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_502 : B : hol.type -> hol.proof (hol.eq hol.bool (hol.forall B (y_1 : hol.term B => hol.true)) hol.true) :=
  B : hol.type => (B : hol.type => t_1 : hol.term hol.bool => thm_501 B t_1) B hol.true.

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))))) Data.Bool.T) ;)

(; dict ;)

def thm_503 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) hol.true) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) (hol.forall B (y_3 : hol.term B => hol.true)) hol.true (thm_495 A B s_1 f_2) (thm_502 B).

(; Theorem: |- ((= Data.Bool.T) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))))) ;)

(; dict ;)

def thm_504 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool hol.true (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => hol.SYM hol.bool (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) hol.true (thm_503 A B s_1 f_2).

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_505 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => hol.EQ_MP hol.true (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) (thm_504 A B s_1 f_2) thm_15.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f x)) y)) ((Set.member x) s))))) ;)

(; dict ;)

def thm_506 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_2 x_4) y_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => hol.EQ_MP (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_2 x_4) y_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) (thm_439 A B s_1 f_2) (thm_505 A B s_1 f_2).

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y))))) ;)

(; dict ;)

def thm_507 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (hol.eq B (f_2 x_4) y_3))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => hol.EQ_MP (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B (f_2 x_4) y_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (hol.eq B (f_2 x_4) y_3))))) (thm_430 A B s_1 f_2) (thm_506 A B s_1 f_2).

(; Theorem: |- (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))) ;)

(; dict ;)

def thm_508 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_4) s_1) (hol.eq B (f_2 (g_3 y_4)) y_4))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => hol.EQ_MP (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (hol.eq B (f_2 x_4) y_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_4) s_1) (hol.eq B (f_2 (g_3 y_4)) y_4))))) (thm_418 A B s_1 f_2) (thm_507 A B s_1 f_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) x)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y)))))))))) ((Data.Bool.==> (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y))))))))) ;)

(; dict ;)

def thm_509 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.imp (hol.forall (hol.arr B A) (x_3 : hol.term (hol.arr B A) => hol.imp ((g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_1) (hol.eq B (f_2 (g_4 y_5)) y_5)))) x_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 s_1) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_4)) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 t_4) (hol.eq B (f_2 x_5) (f_2 y_6)))) (hol.eq A x_5 y_6))))))))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_4) s_1) (hol.eq B (f_2 (g_3 y_4)) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5))))))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_279 A Q_1 P_2) (hol.arr B A) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5))))))) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_4) s_1) (hol.eq B (f_2 (g_3 y_4)) y_4)))).

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) ;)

(; dict ;)

def thm_510 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_4) s_2) (hol.eq B (f_3 (g_1 y_4)) y_4)))) -> hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_4) s_2) (hol.eq B (f_3 (g_1 y_4)) y_4)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_4) s_2) (hol.eq B (f_3 (g_1 y_4)) y_4)))) => hyp_1.

(; Theorem: |- ((= (\lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y)))))) ((Set.image g) ((Set.image f) s)))) ((Data.Bool./\ ((Set.subset ((Set.image g) ((Set.image f) s))) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) ((Set.image g) ((Set.image f) s))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y))))) ((= x) y))))))) ;)

(; dict ;)

def thm_511 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 s_3) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_4)) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 t_4) (hol.eq B (f_2 x_5) (f_2 y_6)))) (hol.eq A x_5 y_6)))))) (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3)) s_3) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3)))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.BETA_CONV (Set_2Eset A) hol.bool (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 s_3) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_4)) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 t_4) (hol.eq B (f_2 x_5) (f_2 y_6)))) (hol.eq A x_5 y_6)))))) (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3)).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.subset ((Set.image g) ((Set.image f) s))) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) ((Set.image g) ((Set.image f) s))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y))))) ((= x) y))))))) (\lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y)))))) ((Set.image g) ((Set.image f) s)))) ;)

(; dict ;)

def thm_512 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) s_1) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)))))) ((t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 s_1) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_4)) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 t_4) (hol.eq B (f_2 x_5) (f_2 y_6)))) (hol.eq A x_5 y_6)))))) (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hol.SYM hol.bool ((t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 s_1) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_4)) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 t_4) (hol.eq B (f_2 x_5) (f_2 y_6)))) (hol.eq A x_5 y_6)))))) (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) s_1) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)))))) (thm_511 B A g_3 f_2 s_1).

(; Theorem: |- ((= ((= ((Set.subset s) t)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) t))))) ((= ((Set.subset s) t)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_513 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1))))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))).

(; Theorem: |- ((= ((= ((Set.subset s) t)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) t))))) ((= ((Set.subset s) t)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_514 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1))))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (thm_513 A t_1 s_2) (thm_513 A t_1 s_2).

(; Theorem: |- (Data.Bool.! \lambda t. ((= ((Set.subset s) t)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_515 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => thm_25 A s_1.

(; Theorem: |- ((= ((Set.subset s) t)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) t)))) ;)

(; dict ;)

def thm_516 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => thm_515 A s_2 t_1.

(; Theorem: |- ((= ((Set.subset ((Set.image g) ((Set.image f) s))) s)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_517 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) s_1) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => (A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => (A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (thm_514 A t_1 s_2) (thm_516 A t_1 s_2)) A t_1 s_2) A s_1 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Set.member x) s)))) ((Set.subset ((Set.image g) ((Set.image f) s))) s)) ;)

(; dict ;)

def thm_518 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) s_1)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hol.SYM hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) s_1) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) (thm_517 B A s_1 f_2 g_3).

(; Theorem: |- ((= \lambda z. ((Data.Bool.==> ((Set.member z) ((Set.image g) ((Set.image f) s)))) ((Set.member z) s))) \lambda z. ((Data.Bool.==> ((Set.member z) ((Set.image g) ((Set.image f) s)))) ((Set.member z) s))) ;)

(; dict ;)

def thm_519 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq (hol.arr A hol.bool) (z_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_1)) (z_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hol.REFL (hol.arr A hol.bool) (z_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_1)).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Set.member x) s))) \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Set.member x) s))) ;)

(; dict ;)

def thm_520 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hol.REFL (hol.arr A hol.bool) (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)).

(; Theorem: |- ((= \lambda z. ((Data.Bool.==> ((Set.member z) ((Set.image g) ((Set.image f) s)))) ((Set.member z) s))) \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Set.member x) s))) ;)

(; dict ;)

def thm_521 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq (hol.arr A hol.bool) (z_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_1)) (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hol.TRANS (hol.arr A hol.bool) (z_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_1)) (z_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_1)) (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (thm_519 B A s_1 f_2 g_3) (thm_520 B A s_1 f_2 g_3).

(; Theorem: |- ((= (Data.Bool.! \lambda z. ((Data.Bool.==> ((Set.member z) ((Set.image g) ((Set.image f) s)))) ((Set.member z) s)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_522 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.forall A (z_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_1))) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (z_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_1)) (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) (thm_301 A) (thm_521 B A s_1 f_2 g_3).

(; Theorem: |- ((= ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_523 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr B A) -> y_3 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_4 : hol.term B => hol.and (hol.eq A y_3 (f_2 x_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr B A) => y_3 : hol.term A => (A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => thm_69 A B s_1 f_2 y_3) B A s_1 f_2 y_3.

(; Theorem: |- ((= ((Set.member z) ((Set.image g) ((Set.image f) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (g x))) ((Set.member x) ((Set.image f) s))))) ;)

(; dict ;)

def thm_524 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> z_4 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A z_4 (g_3 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => z_4 : hol.term A => (B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr B A) => y_3 : hol.term A => thm_523 B A s_1 f_2 y_3) B A (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) g_3 z_4.

(; Theorem: |- ((= (Data.Bool.==> ((Set.member z) ((Set.image g) ((Set.image f) s))))) (Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (g x))) ((Set.member x) ((Set.image f) s)))))) ;)

(; dict ;)

def thm_525 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> z_4 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A z_4 (g_3 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => z_4 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A z_4 (g_3 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) thm_107 (thm_524 B A s_1 f_2 g_3 z_4).

(; Theorem: |- ((= ((Set.member z) s)) ((Set.member z) s)) ;)

(; dict ;)

def thm_526 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => hol.REFL hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member z) ((Set.image g) ((Set.image f) s)))) ((Set.member z) s))) ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (g x))) ((Set.member x) ((Set.image f) s))))) ((Set.member z) s))) ;)

(; dict ;)

def thm_527 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> z_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A z_4 (g_3 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => z_4 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A z_4 (g_3 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_1) (thm_525 B A s_1 f_2 g_3 z_4) (thm_526 A s_1 z_4).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (g x))) ((Set.member x) ((Set.image f) s))))) ((Set.member z) s))) ((Data.Bool.==> ((Set.member z) ((Set.image g) ((Set.image f) s)))) ((Set.member z) s))) ;)

(; dict ;)

def thm_528 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> z_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A z_4 (g_3 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_1))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => z_4 : hol.term A => hol.SYM hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A z_4 (g_3 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_1)) (thm_527 B A s_1 f_2 g_3 z_4).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= z) (g x))) ((Set.member x) ((Set.image f) s))) x)) ((Set.member z) s)))) ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (g x))) ((Set.member x) ((Set.image f) s))))) ((Set.member z) s))) ;)

(; dict ;)

def thm_529 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> z_4 : hol.term A -> hol.proof (hol.imp (hol.forall B (x_5 : hol.term B => hol.imp ((x_6 : hol.term B => hol.and (hol.eq A z_4 (g_3 x_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) x_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A z_4 (g_3 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_1))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => z_4 : hol.term A => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_279 A Q_1 P_2) B (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_1) (x_5 : hol.term B => hol.and (hol.eq A z_4 (g_3 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))).

(; Theorem: |- ((Data.Bool./\ ((= z) (g x))) ((Set.member x) ((Set.image f) s))) ;)

(; dict ;)

def thm_530 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> z_5 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq A z_5 (g_4 x_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) -> hol.proof (hol.and (hol.eq A z_5 (g_4 x_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => g_4 : hol.term (hol.arr B A) => z_5 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq A z_5 (g_4 x_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) => hyp_1.

(; Theorem: |- ((= z) (g x)) ;)

(; dict ;)

def thm_531 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> z_5 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq A z_5 (g_4 x_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) -> hol.proof (hol.eq A z_5 (g_4 x_3)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => g_4 : hol.term (hol.arr B A) => z_5 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq A z_5 (g_4 x_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_185 q_1 p_2 hyp_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.eq A z_5 (g_4 x_3)) hyp_1.

(; Theorem: |- ((= z) (g x)) ;)

(; dict ;)

def thm_532 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> z_5 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq A z_5 (g_4 x_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) -> hol.proof (hol.eq A z_5 (g_4 x_3)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => g_4 : hol.term (hol.arr B A) => z_5 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq A z_5 (g_4 x_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) => hol.PROVE_HYP (hol.and (hol.eq A z_5 (g_4 x_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq A z_5 (g_4 x_3)) (thm_530 B A s_1 f_2 x_3 g_4 z_5 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq A z_5 (g_4 x_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) => thm_531 B A s_1 f_2 x_3 g_4 z_5 hyp_2).

(; Theorem: |- ((Set.member x) ((Set.image f) s)) ;)

(; dict ;)

def thm_533 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> z_2 : hol.term A -> s_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq A z_2 (g_1 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3))) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3)) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => z_2 : hol.term A => s_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq A z_2 (g_1 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_1) (hol.eq A z_2 (g_1 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3)) hyp_1.

(; Theorem: |- ((Set.member x) ((Set.image f) s)) ;)

(; dict ;)

def thm_534 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> z_2 : hol.term A -> s_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq A z_2 (g_1 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3))) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3)) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => z_2 : hol.term A => s_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq A z_2 (g_1 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3))) => hol.PROVE_HYP (hol.and (hol.eq A z_2 (g_1 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3)) (thm_530 B A s_3 f_4 x_5 g_1 z_2 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq A z_2 (g_1 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3))) => thm_533 A B g_1 z_2 s_3 f_4 x_5 hyp_2).

(; Theorem: |- ((= z) (g x)) ;)

(; dict ;)

def thm_535 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> z_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A z_3 (g_2 x_1)) -> hol.proof (hol.eq A z_3 (g_2 x_1)) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => g_2 : hol.term (hol.arr B A) => z_3 : hol.term A => hyp_1 : hol.proof (hol.eq A z_3 (g_2 x_1)) => hyp_1.

(; Theorem: |- ((Set.member x) ((Set.image f) s)) ;)

(; dict ;)

def thm_536 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) => hyp_1.

(; Theorem: |- ((= (= (\lambda _11084. ((Set.member _11084) s) z))) (= (\lambda _11084. ((Set.member _11084) s) z))) ;)

(; dict ;)

def thm_537 : A : hol.type -> z_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11084_3 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_3 s_2) z_1)) (hol.eq hol.bool ((__11084_3 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_3 s_2) z_1))) :=
  A : hol.type => z_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11084_3 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_3 s_2) z_1)).

(; Theorem: |- ((= (\lambda _11084. ((Set.member _11084) s) (g x))) ((Set.member (g x)) s)) ;)

(; dict ;)

def thm_538 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((__11084_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_4 s_3) (g_2 x_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 x_1) s_3)) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => hol.BETA_CONV A hol.bool (__11084_4 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_4 s_3) (g_2 x_1).

(; Theorem: |- ((= ((= (\lambda _11084. ((Set.member _11084) s) z)) (\lambda _11084. ((Set.member _11084) s) (g x)))) ((= (\lambda _11084. ((Set.member _11084) s) z)) ((Set.member (g x)) s))) ;)

(; dict ;)

def thm_539 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> z_3 : hol.term A -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11084_5 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_5 s_4) z_3) ((__11084_5 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_5 s_4) (g_2 x_1))) (hol.eq hol.bool ((__11084_5 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_5 s_4) z_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 x_1) s_4))) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => g_2 : hol.term (hol.arr B A) => z_3 : hol.term A => s_4 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11084_5 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_5 s_4) z_3)) (hol.eq hol.bool ((__11084_5 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_5 s_4) z_3)) ((__11084_5 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_5 s_4) (g_2 x_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 x_1) s_4) (thm_537 A z_3 s_4) (thm_538 B A x_1 g_2 s_4).

(; Theorem: |- ((= (\lambda _11084. ((Set.member _11084) s) z)) ((Set.member z) s)) ;)

(; dict ;)

def thm_540 : A : hol.type -> z_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((__11084_3 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_3 s_2) z_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 s_2)) :=
  A : hol.type => z_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => hol.BETA_CONV A hol.bool (__11084_3 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_3 s_2) z_1.

(; Theorem: |- ((= (= (\lambda _11084. ((Set.member _11084) s) z))) (= ((Set.member z) s))) ;)

(; dict ;)

def thm_541 : A : hol.type -> z_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11084_3 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_3 s_2) z_1)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 s_2))) :=
  A : hol.type => z_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__11084_3 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_3 s_2) z_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 s_2) thm_64 (thm_540 A z_1 s_2).

(; Theorem: |- ((= ((Set.member (g x)) s)) ((Set.member (g x)) s)) ;)

(; dict ;)

def thm_542 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term B -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 x_2) s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 x_2) s_1)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term B => g_3 : hol.term (hol.arr B A) => hol.REFL hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 x_2) s_1).

(; Theorem: |- ((= ((= (\lambda _11084. ((Set.member _11084) s) z)) ((Set.member (g x)) s))) ((= ((Set.member z) s)) ((Set.member (g x)) s))) ;)

(; dict ;)

def thm_543 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> z_3 : hol.term A -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11084_5 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_5 s_4) z_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 x_1) s_4)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 x_1) s_4))) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => g_2 : hol.term (hol.arr B A) => z_3 : hol.term A => s_4 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11084_5 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_5 s_4) z_3)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 s_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 x_1) s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 x_1) s_4) (thm_541 A z_3 s_4) (thm_542 B A s_4 x_1 g_2).

(; Theorem: |- ((= ((= (\lambda _11084. ((Set.member _11084) s) z)) (\lambda _11084. ((Set.member _11084) s) (g x)))) ((= ((Set.member z) s)) ((Set.member (g x)) s))) ;)

(; dict ;)

def thm_544 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> z_3 : hol.term A -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11084_5 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_5 s_4) z_3) ((__11084_5 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_5 s_4) (g_2 x_1))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 x_1) s_4))) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => g_2 : hol.term (hol.arr B A) => z_3 : hol.term A => s_4 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.eq hol.bool ((__11084_5 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_5 s_4) z_3) ((__11084_5 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_5 s_4) (g_2 x_1))) (hol.eq hol.bool ((__11084_5 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_5 s_4) z_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 x_1) s_4)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 x_1) s_4)) (thm_539 B A x_1 g_2 z_3 s_4) (thm_543 B A x_1 g_2 z_3 s_4).

(; Theorem: |- ((= \lambda _11084. ((Set.member _11084) s)) \lambda _11084. ((Set.member _11084) s)) ;)

(; dict ;)

def thm_545 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (__11084_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_2 s_1) (__11084_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_2 s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.REFL (hol.arr A hol.bool) (__11084_2 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_2 s_1).

(; Theorem: |- ((= (\lambda _11084. ((Set.member _11084) s) z)) (\lambda _11084. ((Set.member _11084) s) (g x))) ;)

(; dict ;)

def thm_546 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> z_3 : hol.term A -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq A z_3 (g_2 x_1)) -> hol.proof (hol.eq hol.bool ((__11084_5 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_5 s_4) z_3) ((__11084_5 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_5 s_4) (g_2 x_1))) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => g_2 : hol.term (hol.arr B A) => z_3 : hol.term A => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq A z_3 (g_2 x_1)) => hol.APP_THM A hol.bool (__11084_5 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_5 s_4) (__11084_5 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_5 s_4) z_3 (g_2 x_1) (thm_545 A s_4) (thm_535 B A x_1 g_2 z_3 hyp_1).

(; Theorem: |- ((= ((Set.member z) s)) ((Set.member (g x)) s)) ;)

(; dict ;)

def thm_547 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> z_4 : hol.term A -> hyp_1 : hol.proof (hol.eq A z_4 (g_2 x_1)) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 x_1) s_3)) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => z_4 : hol.term A => hyp_1 : hol.proof (hol.eq A z_4 (g_2 x_1)) => hol.EQ_MP (hol.eq hol.bool ((__11084_5 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_5 s_3) z_4) ((__11084_5 : hol.term A => Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) __11084_5 s_3) (g_2 x_1))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 x_1) s_3)) (thm_544 B A x_1 g_2 z_4 s_3) (thm_546 B A x_1 g_2 z_4 s_3 hyp_1).

(; Theorem: |- ((= ((Set.member (g x)) s)) ((Set.member z) s)) ;)

(; dict ;)

def thm_548 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.eq A z_1 (g_4 x_3)) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 s_2)) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term B => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.eq A z_1 (g_4 x_3)) => hol.SYM hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) (thm_547 B A x_3 g_4 s_2 z_1 hyp_1).

(; Theorem: |- ((= ((= ((Set.member x) ((Set.image f) s))) Data.Bool.T)) ((= ((Set.member x) ((Set.image f) s))) Data.Bool.T)) ;)

(; dict ;)

def thm_549 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) hol.true)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) hol.true).

(; Theorem: |- ((= ((= ((Set.member x) ((Set.image f) s))) Data.Bool.T)) ((= ((Set.member x) ((Set.image f) s))) Data.Bool.T)) ;)

(; dict ;)

def thm_550 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) hol.true)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) hol.true) (thm_549 A B s_1 f_2 x_3) (thm_549 A B s_1 f_2 x_3).

(; Theorem: |- ((= ((Set.member x) ((Set.image f) s))) ((= ((Set.member x) ((Set.image f) s))) Data.Bool.T)) ;)

(; dict ;)

def thm_551 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) hol.true)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => (t_1 : hol.term hol.bool => thm_310 t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)).

(; Theorem: |- ((= ((Set.member x) ((Set.image f) s))) Data.Bool.T) ;)

(; dict ;)

def thm_552 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) hol.true) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) => hol.EQ_MP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) hol.true) (thm_551 A B s_1 f_2 x_3) (thm_536 A B s_1 f_2 x_3 hyp_1).

(; Theorem: |- ((= (Data.Bool.==> ((Set.member x) ((Set.image f) s)))) (Data.Bool.==> Data.Bool.T)) ;)

(; dict ;)

def thm_553 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.imp hol.true)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) hol.true thm_107 (hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) hol.true) (thm_550 A B s_1 f_2 x_3) (thm_552 A B s_1 f_2 x_3 hyp_1)).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member (g x)) s)) ((= (f (g x))) x))) ((Data.Bool./\ ((Set.member (g x)) s)) ((= (f (g x))) x))) ;)

(; dict ;)

def thm_554 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) (hol.eq B (f_1 (g_4 x_3)) x_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) (hol.eq B (f_1 (g_4 x_3)) x_3))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term B => g_4 : hol.term (hol.arr B A) => hol.REFL hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) (hol.eq B (f_1 (g_4 x_3)) x_3)).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g x)) s)) ((= (f (g x))) x)))) ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ ((Set.member (g x)) s)) ((= (f (g x))) x)))) ;)

(; dict ;)

def thm_555 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 x_4) s_2) (hol.eq B (f_3 (g_1 x_4)) x_4))) (hol.imp hol.true (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 x_4) s_2) (hol.eq B (f_3 (g_1 x_4)) x_4)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.imp hol.true) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 x_4) s_2) (hol.eq B (f_3 (g_1 x_4)) x_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 x_4) s_2) (hol.eq B (f_3 (g_1 x_4)) x_4)) (thm_553 A B s_2 f_3 x_4 hyp_1) (thm_554 B A f_3 s_2 x_4 g_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ ((Set.member (g x)) s)) ((= (f (g x))) x)))) ((Data.Bool./\ ((Set.member (g x)) s)) ((= (f (g x))) x))) ;)

(; dict ;)

def thm_556 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.imp hol.true (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) (hol.eq B (f_1 (g_4 x_3)) x_3))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) (hol.eq B (f_1 (g_4 x_3)) x_3))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term B => g_4 : hol.term (hol.arr B A) => (t_1 : hol.term hol.bool => thm_450 t_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) (hol.eq B (f_1 (g_4 x_3)) x_3)).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g x)) s)) ((= (f (g x))) x)))) ((Data.Bool./\ ((Set.member (g x)) s)) ((= (f (g x))) x))) ;)

(; dict ;)

def thm_557 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 x_4) s_2) (hol.eq B (f_3 (g_1 x_4)) x_4))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 x_4) s_2) (hol.eq B (f_3 (g_1 x_4)) x_4))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) => hol.TRANS hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 x_4) s_2) (hol.eq B (f_3 (g_1 x_4)) x_4))) (hol.imp hol.true (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 x_4) s_2) (hol.eq B (f_3 (g_1 x_4)) x_4))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 x_4) s_2) (hol.eq B (f_3 (g_1 x_4)) x_4)) (thm_555 A B g_1 s_2 f_3 x_4 hyp_1) (thm_556 B A f_3 s_2 x_4 g_1).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool.==> ((Set.member x) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g x)) s)) ((= (f (g x))) x))))) (Data.Bool.==> ((Data.Bool./\ ((Set.member (g x)) s)) ((= (f (g x))) x)))) ;)

(; dict ;)

def thm_558 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 x_4) s_2) (hol.eq B (f_3 (g_1 x_4)) x_4)))) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 x_4) s_2) (hol.eq B (f_3 (g_1 x_4)) x_4)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 x_4) s_2) (hol.eq B (f_3 (g_1 x_4)) x_4))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 x_4) s_2) (hol.eq B (f_3 (g_1 x_4)) x_4)) thm_107 (thm_557 A B g_1 s_2 f_3 x_4 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> ((Set.member x) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g x)) s)) ((= (f (g x))) x)))) ((Set.member (g x)) s))) ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g x)) s)) ((= (f (g x))) x))) ((Set.member (g x)) s))) ;)

(; dict ;)

def thm_559 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 x_4) s_2) (hol.eq B (f_3 (g_1 x_4)) x_4))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 x_4) s_2)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 x_4) s_2) (hol.eq B (f_3 (g_1 x_4)) x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 x_4) s_2))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 x_4) s_2) (hol.eq B (f_3 (g_1 x_4)) x_4)))) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 x_4) s_2) (hol.eq B (f_3 (g_1 x_4)) x_4))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 x_4) s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 x_4) s_2) (thm_558 A B g_1 s_2 f_3 x_4 hyp_1) (thm_542 B A s_2 x_4 g_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g x)) s)) ((= (f (g x))) x))) ((Set.member (g x)) s))) ((Data.Bool.==> ((Data.Bool.==> ((Set.member x) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g x)) s)) ((= (f (g x))) x)))) ((Set.member (g x)) s))) ;)

(; dict ;)

def thm_560 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) (hol.eq B (f_1 (g_4 x_3)) x_3)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2)) (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) (hol.eq B (f_1 (g_4 x_3)) x_3))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term B => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)) => hol.SYM hol.bool (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) (hol.eq B (f_1 (g_4 x_3)) x_3))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) (hol.eq B (f_1 (g_4 x_3)) x_3)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2)) (thm_559 A B g_4 s_2 f_1 x_3 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((Set.member (g x)) s)) ((= (f (g x))) x)) ;)

(; dict ;)

def thm_561 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) (hol.eq B (f_1 (g_4 x_3)) x_3)) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) (hol.eq B (f_1 (g_4 x_3)) x_3)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term B => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) (hol.eq B (f_1 (g_4 x_3)) x_3)) => hyp_1.

(; Theorem: |- ((Set.member (g x)) s) ;)

(; dict ;)

def thm_562 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) (hol.eq B (f_1 (g_4 x_3)) x_3)) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term B => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) (hol.eq B (f_1 (g_4 x_3)) x_3)) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_185 q_1 p_2 hyp_1) (hol.eq B (f_1 (g_4 x_3)) x_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) hyp_1.

(; Theorem: |- ((Set.member (g x)) s) ;)

(; dict ;)

def thm_563 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) (hol.eq B (f_1 (g_4 x_3)) x_3)) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term B => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) (hol.eq B (f_1 (g_4 x_3)) x_3)) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) (hol.eq B (f_1 (g_4 x_3)) x_3)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) (thm_561 B A f_1 s_2 x_3 g_4 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) (hol.eq B (f_1 (g_4 x_3)) x_3)) => thm_562 B A f_1 s_2 x_3 g_4 hyp_2).

(; Theorem: |- ((Set.member (g x)) s) ;)

(; dict ;)

def thm_564 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term B -> g_3 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 x_2) s_1) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 x_2) s_1) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term B => g_3 : hol.term (hol.arr B A) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 x_2) s_1) => hyp_1.

(; Theorem: |- ((Set.member (g x)) s) ;)

(; dict ;)

def thm_565 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) (hol.eq B (f_1 (g_4 x_3)) x_3)) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term B => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) (hol.eq B (f_1 (g_4 x_3)) x_3)) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) (thm_563 B A f_1 s_2 x_3 g_4 hyp_1) (hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) => thm_564 B A s_2 x_3 g_4 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g x)) s)) ((= (f (g x))) x))) ((Set.member (g x)) s)) ;)

(; dict ;)

def thm_566 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) (hol.eq B (f_1 (g_4 x_3)) x_3)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term B => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) (hol.eq B (f_1 (g_4 x_3)) x_3)) => thm_565 B A f_1 s_2 x_3 g_4 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Set.member x) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g x)) s)) ((= (f (g x))) x)))) ((Set.member (g x)) s)) ;)

(; dict ;)

def thm_567 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) -> hol.proof (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 x_4) s_2) (hol.eq B (f_3 (g_1 x_4)) x_4))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 x_4) s_2)) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) => hol.EQ_MP (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 x_4) s_2) (hol.eq B (f_3 (g_1 x_4)) x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 x_4) s_2)) (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 x_4) s_2) (hol.eq B (f_3 (g_1 x_4)) x_4))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 x_4) s_2)) (thm_560 B A f_3 s_2 x_4 g_1 hyp_1) (thm_566 B A f_3 s_2 x_4 g_1).

(; Theorem: |- ((Data.Bool.==> ((Set.member x) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g x)) s)) ((= (f (g x))) x))) ;)

(; dict ;)

def thm_568 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_2) (hol.eq B (f_3 (g_1 y_5)) y_5)))) -> hol.proof (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 x_4) s_2) (hol.eq B (f_3 (g_1 x_4)) x_4))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_2) (hol.eq B (f_3 (g_1 y_5)) y_5)))) => thm_510 A B g_1 s_2 f_3 hyp_1 x_4.

(; Theorem: |- ((Set.member (g x)) s) ;)

(; dict ;)

def thm_569 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 x_3) s_2) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term B => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_1 (g_4 y_5)) y_5)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)) => thm_567 A B g_4 s_2 f_1 x_3 hyp_2 (thm_568 A B g_4 s_2 f_1 x_3 hyp_1).

(; Theorem: |- ((Set.member z) s) ;)

(; dict ;)

def thm_570 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> z_5 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_4) (hol.eq B (f_3 (g_2 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.eq A z_5 (g_2 x_1)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4)) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => z_5 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_4) (hol.eq B (f_3 (g_2 y_6)) y_6)))) => hyp_2 : hol.proof (hol.eq A z_5 (g_2 x_1)) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4)) => hol.EQ_MP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 x_1) s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (thm_548 B A z_5 s_4 x_1 g_2 hyp_2) (thm_569 B A f_3 s_4 x_1 g_2 hyp_1 hyp_3).

(; Theorem: |- ((Set.member z) s) ;)

(; dict ;)

def thm_571 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> z_5 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_4) (hol.eq B (f_3 (g_2 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.eq A z_5 (g_2 x_1)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4)) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => z_5 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_4) (hol.eq B (f_3 (g_2 y_6)) y_6)))) => hyp_2 : hol.proof (hol.eq A z_5 (g_2 x_1)) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4)) => hol.PROVE_HYP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (thm_536 A B s_4 f_3 x_1 hyp_3) (hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4)) => thm_570 B A x_1 g_2 f_3 s_4 z_5 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((Set.member z) s) ;)

(; dict ;)

def thm_572 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> z_5 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_4) (hol.eq B (f_3 (g_2 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.eq A z_5 (g_2 x_1)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4)) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => z_5 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_4) (hol.eq B (f_3 (g_2 y_6)) y_6)))) => hyp_2 : hol.proof (hol.eq A z_5 (g_2 x_1)) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4)) => hol.PROVE_HYP (hol.eq A z_5 (g_2 x_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (thm_535 B A x_1 g_2 z_5 hyp_2) (hyp_4 : hol.proof (hol.eq A z_5 (g_2 x_1)) => thm_571 B A x_1 g_2 f_3 s_4 z_5 hyp_1 hyp_4 hyp_3).

(; Theorem: |- ((Set.member z) s) ;)

(; dict ;)

def thm_573 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> z_5 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_4) (hol.eq B (f_3 (g_2 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.eq A z_5 (g_2 x_1)) -> hyp_3 : hol.proof (hol.and (hol.eq A z_5 (g_2 x_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4))) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => z_5 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_4) (hol.eq B (f_3 (g_2 y_6)) y_6)))) => hyp_2 : hol.proof (hol.eq A z_5 (g_2 x_1)) => hyp_3 : hol.proof (hol.and (hol.eq A z_5 (g_2 x_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4))) => hol.PROVE_HYP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (thm_534 A B g_2 z_5 s_4 f_3 x_1 hyp_3) (hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4)) => thm_572 B A x_1 g_2 f_3 s_4 z_5 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((Set.member z) s) ;)

(; dict ;)

def thm_574 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> z_5 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_4) (hol.eq B (f_3 (g_2 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.and (hol.eq A z_5 (g_2 x_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4))) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => z_5 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_4) (hol.eq B (f_3 (g_2 y_6)) y_6)))) => hyp_2 : hol.proof (hol.and (hol.eq A z_5 (g_2 x_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4))) => hol.PROVE_HYP (hol.eq A z_5 (g_2 x_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) (thm_532 B A s_4 f_3 x_1 g_2 z_5 hyp_2) (hyp_3 : hol.proof (hol.eq A z_5 (g_2 x_1)) => thm_573 B A x_1 g_2 f_3 s_4 z_5 hyp_1 hyp_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= z) (g x))) ((Set.member x) ((Set.image f) s)))) ((Set.member z) s)) ;)

(; dict ;)

def thm_575 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> z_5 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_1) (hol.eq B (f_2 (g_4 y_6)) y_6)))) -> hol.proof (hol.imp (hol.and (hol.eq A z_5 (g_4 x_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_1)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => g_4 : hol.term (hol.arr B A) => z_5 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_1) (hol.eq B (f_2 (g_4 y_6)) y_6)))) => hyp_2 : hol.proof (hol.and (hol.eq A z_5 (g_4 x_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) => thm_574 B A x_3 g_4 f_2 s_1 z_5 hyp_1 hyp_2.

(; Theorem: |- ((= (\lambda x. ((Data.Bool./\ ((= z) (g x))) ((Set.member x) ((Set.image f) s))) x)) ((Data.Bool./\ ((= z) (g x))) ((Set.member x) ((Set.image f) s)))) ;)

(; dict ;)

def thm_576 : A : hol.type -> B : hol.type -> x_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> z_5 : hol.term A -> hol.proof (hol.eq hol.bool ((x_6 : hol.term B => hol.and (hol.eq A z_5 (g_4 x_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) x_1) (hol.and (hol.eq A z_5 (g_4 x_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)))) :=
  A : hol.type => B : hol.type => x_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => z_5 : hol.term A => hol.BETA_CONV B hol.bool (x_6 : hol.term B => hol.and (hol.eq A z_5 (g_4 x_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) x_1.

(; Theorem: |- (\lambda x. ((Data.Bool./\ ((= z) (g x))) ((Set.member x) ((Set.image f) s))) x) ;)

(; dict ;)

def thm_577 : A : hol.type -> B : hol.type -> x_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> z_5 : hol.term A -> hyp_1 : hol.proof ((x_6 : hol.term B => hol.and (hol.eq A z_5 (g_4 x_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) x_1) -> hol.proof ((x_6 : hol.term B => hol.and (hol.eq A z_5 (g_4 x_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) x_1) :=
  A : hol.type => B : hol.type => x_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => z_5 : hol.term A => hyp_1 : hol.proof ((x_6 : hol.term B => hol.and (hol.eq A z_5 (g_4 x_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) x_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= z) (g x))) ((Set.member x) ((Set.image f) s))) ;)

(; dict ;)

def thm_578 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> z_5 : hol.term A -> hyp_1 : hol.proof ((x_6 : hol.term B => hol.and (hol.eq A z_5 (g_4 x_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) x_3) -> hol.proof (hol.and (hol.eq A z_5 (g_4 x_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => g_4 : hol.term (hol.arr B A) => z_5 : hol.term A => hyp_1 : hol.proof ((x_6 : hol.term B => hol.and (hol.eq A z_5 (g_4 x_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) x_3) => hol.EQ_MP ((x_6 : hol.term B => hol.and (hol.eq A z_5 (g_4 x_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) x_3) (hol.and (hol.eq A z_5 (g_4 x_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (thm_576 A B x_3 s_1 f_2 g_4 z_5) (thm_577 A B x_3 s_1 f_2 g_4 z_5 hyp_1).

(; Theorem: |- ((Set.member z) s) ;)

(; dict ;)

def thm_579 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> z_5 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_4) (hol.eq B (f_3 (g_2 y_6)) y_6)))) -> hyp_2 : hol.proof ((x_6 : hol.term B => hol.and (hol.eq A z_5 (g_2 x_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4))) x_1) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_4) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => z_5 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_4) (hol.eq B (f_3 (g_2 y_6)) y_6)))) => hyp_2 : hol.proof ((x_6 : hol.term B => hol.and (hol.eq A z_5 (g_2 x_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4))) x_1) => thm_575 B A s_4 f_3 x_1 g_2 z_5 hyp_1 (thm_578 B A s_4 f_3 x_1 g_2 z_5 hyp_2).

(; Theorem: |- ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= z) (g x))) ((Set.member x) ((Set.image f) s))) x)) ((Set.member z) s)) ;)

(; dict ;)

def thm_580 : A : hol.type -> B : hol.type -> x_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> z_5 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_2) (hol.eq B (f_3 (g_4 y_6)) y_6)))) -> hol.proof (hol.imp ((x_6 : hol.term B => hol.and (hol.eq A z_5 (g_4 x_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) x_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_2)) :=
  A : hol.type => B : hol.type => x_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => z_5 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_2) (hol.eq B (f_3 (g_4 y_6)) y_6)))) => hyp_2 : hol.proof ((x_6 : hol.term B => hol.and (hol.eq A z_5 (g_4 x_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) x_1) => thm_579 B A x_1 g_4 f_3 s_2 z_5 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= z) (g x))) ((Set.member x) ((Set.image f) s))) x)) ((Set.member z) s))) ;)

(; dict ;)

def thm_581 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> z_4 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_2 (g_3 y_5)) y_5)))) -> hol.proof (hol.forall B (x_5 : hol.term B => hol.imp ((x_6 : hol.term B => hol.and (hol.eq A z_4 (g_3 x_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) x_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_1))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => z_4 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_2 (g_3 y_5)) y_5)))) => x_5 : hol.term B => thm_580 A B x_5 s_1 f_2 g_3 z_4 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (g x))) ((Set.member x) ((Set.image f) s))))) ((Set.member z) s)) ;)

(; dict ;)

def thm_582 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> z_4 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_2 (g_3 y_5)) y_5)))) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A z_4 (g_3 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_1)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => z_4 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_2 (g_3 y_5)) y_5)))) => thm_529 A B s_1 f_2 g_3 z_4 (thm_581 A B s_1 f_2 g_3 z_4 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (g x))) ((Set.member x) ((Set.image f) s)))) ;)

(; dict ;)

def thm_583 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> z_4 : hol.term A -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A z_4 (g_3 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A z_4 (g_3 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => z_4 : hol.term A => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A z_4 (g_3 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) => hyp_1.

(; Theorem: |- ((Set.member z) s) ;)

(; dict ;)

def thm_584 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> z_4 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_3) (hol.eq B (f_2 (g_1 y_5)) y_5)))) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A z_4 (g_1 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3)))) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => z_4 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_3) (hol.eq B (f_2 (g_1 y_5)) y_5)))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A z_4 (g_1 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3)))) => thm_582 A B s_3 f_2 g_1 z_4 hyp_1 (thm_583 A B s_3 f_2 g_1 z_4 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Set.member z) ((Set.image g) ((Set.image f) s)))) ((Set.member z) s)) ;)

(; dict ;)

def thm_585 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> z_4 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_2 (g_3 y_5)) y_5)))) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_1)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => z_4 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_2 (g_3 y_5)) y_5)))) => hol.EQ_MP (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A z_4 (g_3 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_1)) (thm_528 A B s_1 f_2 g_3 z_4) (hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A z_4 (g_3 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) => thm_584 B A g_3 f_2 s_1 z_4 hyp_1 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda z. ((Data.Bool.==> ((Set.member z) ((Set.image g) ((Set.image f) s)))) ((Set.member z) s))) ;)

(; dict ;)

def thm_586 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_4) s_1) (hol.eq B (f_2 (g_3 y_4)) y_4)))) -> hol.proof (hol.forall A (z_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_4) s_1) (hol.eq B (f_2 (g_3 y_4)) y_4)))) => z_4 : hol.term A => thm_585 B A s_1 f_2 g_3 z_4 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Set.member x) s))) ;)

(; dict ;)

def thm_587 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_4) s_1) (hol.eq B (f_2 (g_3 y_4)) y_4)))) -> hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_4) s_1) (hol.eq B (f_2 (g_3 y_4)) y_4)))) => hol.EQ_MP (hol.forall A (z_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_1))) (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) (thm_522 B A s_1 f_2 g_3) (thm_586 B A s_1 f_2 g_3 hyp_1).

(; Theorem: |- ((Set.subset ((Set.image g) ((Set.image f) s))) s) ;)

(; dict ;)

def thm_588 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_4) s_1) (hol.eq B (f_2 (g_3 y_4)) y_4)))) -> hol.proof (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) s_1) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_4) s_1) (hol.eq B (f_2 (g_3 y_4)) y_4)))) => hol.EQ_MP (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) s_1) (thm_518 B A s_1 f_2 g_3) (thm_587 B A s_1 f_2 g_3 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) ((Set.image g) ((Set.image f) s))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y))))) ((= x) y)))))) ((Data.Bool./\ ((Set.subset ((Set.image g) ((Set.image f) s))) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) ((Set.image g) ((Set.image f) s))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y))))) ((= x) y))))))) ;)

(; dict ;)

def thm_589 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) s_2) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_4) (f_3 y_5)))) (hol.eq A x_4 y_5))))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_4) (f_3 y_5)))) (hol.eq A x_4 y_5))))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) s_2) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_4) (f_3 y_5)))) (hol.eq A x_4 y_5))))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) ((Set.image g) ((Set.image f) s))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y))))) ((= x) y)))))) ((Data.Bool./\ ((Set.subset ((Set.image g) ((Set.image f) s))) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) ((Set.image g) ((Set.image f) s))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y))))) ((= x) y))))))) ;)

(; dict ;)

def thm_590 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_4) s_2) (hol.eq B (f_3 (g_1 y_4)) y_4)))) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_4) (f_3 y_5)))) (hol.eq A x_4 y_5))))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_4) (f_3 y_5)))) (hol.eq A x_4 y_5))))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_4) s_2) (hol.eq B (f_3 (g_1 y_4)) y_4)))) => hol.PROVE_HYP (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) s_2) (hol.eq hol.bool (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_4) (f_3 y_5)))) (hol.eq A x_4 y_5))))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_4) (f_3 y_5)))) (hol.eq A x_4 y_5))))))) (thm_588 B A s_2 f_3 g_1 hyp_1) (hyp_2 : hol.proof (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) s_2) => thm_589 A B g_1 s_2 f_3 hyp_2).

(; Theorem: |- ((= ((= ((Set.image f) s)) ((Set.image f) ((Set.image g) ((Set.image f) s))))) (Data.Bool.! \lambda x. ((= ((Set.member x) ((Set.image f) s))) ((Set.member x) ((Set.image f) ((Set.image g) ((Set.image f) s))))))) ;)

(; dict ;)

def thm_591 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => (B : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset B) => thm_61 B t_1 s_2) B (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2).

(; Theorem: |- ((= ((Set.member x) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_592 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => (A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => thm_69 A B s_1 f_2 y_3) A B s_1 f_2 x_3.

(; Theorem: |- ((= (= ((Set.member x) ((Set.image f) s)))) (= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_593 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) thm_64 (thm_592 A B s_1 f_2 x_3).

(; Theorem: |- ((= ((Set.member x) ((Set.image f) ((Set.image g) ((Set.image f) s))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) ((Set.image g) ((Set.image f) s)))))) ;)

(; dict ;)

def thm_594 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_2 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_2 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => (A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => thm_69 A B s_1 f_2 y_3) A B (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_2 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) f_3 x_4.

(; Theorem: |- ((= ((Set.member x) ((Set.image g) ((Set.image f) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) ((Set.member x) ((Set.image f) s))))) ;)

(; dict ;)

def thm_595 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A x_4 (g_3 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => x_4 : hol.term A => (B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr B A) => y_3 : hol.term A => thm_523 B A s_1 f_2 y_3) B A (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) g_3 x_4.

(; Theorem: |- ((= Data.Bool.?) Data.Bool.?) ;)

(; dict ;)

def thm_596 : B : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr B hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool))) :=
  B : hol.type => hol.REFL (hol.arr (hol.arr B hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool)).

(; Theorem: |- ((= (Data.Bool./\ ((= x) (g x)))) (Data.Bool./\ ((= x) (g x)))) ;)

(; dict ;)

def thm_597 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> x_3 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq A x_3 (g_2 x_1))) (hol.and (hol.eq A x_3 (g_2 x_1)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => g_2 : hol.term (hol.arr B A) => x_3 : hol.term A => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (hol.eq A x_3 (g_2 x_1))).

(; Theorem: |- ((= ((Data.Bool./\ ((= x) (g x))) ((Set.member x) ((Set.image f) s)))) ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_598 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> x_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (hol.eq A x_5 (g_4 x_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (hol.eq A x_5 (g_4 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => g_4 : hol.term (hol.arr B A) => x_5 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq A x_5 (g_4 x_3))) (hol.and (hol.eq A x_5 (g_4 x_3))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (thm_597 B A x_3 g_4 x_5) (thm_592 A B s_1 f_2 x_3).

(; Theorem: |- ((= \lambda x. ((Data.Bool./\ ((= x) (g x))) ((Set.member x) ((Set.image f) s)))) \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_599 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> x_4 : hol.term A -> hol.proof (hol.eq (hol.arr B hol.bool) (x_5 : hol.term B => hol.and (hol.eq A x_4 (g_3 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (x_5 : hol.term B => hol.and (hol.eq A x_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => x_4 : hol.term A => hol.ABS_THM B hol.bool (x_5 : hol.term B => hol.and (hol.eq A x_4 (g_3 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (x_5 : hol.term B => hol.and (hol.eq A x_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) (x_5 : hol.term B => thm_598 B A s_1 f_2 x_5 g_3 x_4).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) ((Set.member x) ((Set.image f) s))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))) ;)

(; dict ;)

def thm_600 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A x_4 (g_3 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A x_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => x_4 : hol.term A => hol.APP_THM (hol.arr B hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool)) (x_5 : hol.term B => hol.and (hol.eq A x_4 (g_3 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (x_5 : hol.term B => hol.and (hol.eq A x_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) (thm_596 B) (thm_599 A B s_1 f_2 g_3 x_4).

(; Theorem: |- ((= ((Set.member x) ((Set.image g) ((Set.image f) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))) ;)

(; dict ;)

def thm_601 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A x_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => x_4 : hol.term A => hol.TRANS hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A x_4 (g_3 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A x_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) (thm_595 B A s_1 f_2 g_3 x_4) (thm_600 A B s_1 f_2 g_3 x_4).

(; Theorem: |- ((= ((Data.Bool./\ ((= x) (f x))) ((Set.member x) ((Set.image g) ((Set.image f) s))))) ((Data.Bool./\ ((= x) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))) ;)

(; dict ;)

def thm_602 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B x_5 (f_4 x_3)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_2 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)))) (hol.and (hol.eq B x_5 (f_4 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_3 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1))))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq B x_5 (f_4 x_3))) (hol.and (hol.eq B x_5 (f_4 x_3))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_2 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_3 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1))))) (thm_72 A B x_3 f_4 x_5) (thm_601 B A s_1 f_4 g_2 x_3).

(; Theorem: |- ((= \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) ((Set.image g) ((Set.image f) s))))) \lambda x. ((Data.Bool./\ ((= x) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))) ;)

(; dict ;)

def thm_603 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hol.proof (hol.eq (hol.arr A hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_2 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)))) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1))))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => hol.ABS_THM A hol.bool (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_2 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)))) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))))) (x_5 : hol.term A => thm_602 A B s_1 g_2 x_5 f_3 x_4).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) ((Set.image g) ((Set.image f) s)))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))))) ;)

(; dict ;)

def thm_604 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_2 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_2 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)))) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))))) (thm_71 A) (thm_603 B A s_1 g_2 f_3 x_4).

(; Theorem: |- ((= ((Set.member x) ((Set.image f) ((Set.image g) ((Set.image f) s))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))))) ;)

(; dict ;)

def thm_605 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_2 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => hol.TRANS hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_2 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_2 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1))))))) (thm_594 A B s_1 g_2 f_3 x_4) (thm_604 B A s_1 g_2 f_3 x_4).

(; Theorem: |- ((= ((= ((Set.member x) ((Set.image f) s))) ((Set.member x) ((Set.image f) ((Set.image g) ((Set.image f) s)))))) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))))) ;)

(; dict ;)

def thm_606 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))))))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))))))) (thm_593 A B s_2 f_3 x_4) (thm_605 A B s_2 g_1 f_3 x_4).

(; Theorem: |- ((= \lambda x. ((= ((Set.member x) ((Set.image f) s))) ((Set.member x) ((Set.image f) ((Set.image g) ((Set.image f) s)))))) \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))))) ;)

(; dict ;)

def thm_607 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (x_4 : hol.term B => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))))) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))))))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.ABS_THM B hol.bool (x_4 : hol.term B => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))))) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))))))) (x_4 : hol.term B => thm_606 A B g_1 s_2 f_3 x_4).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= ((Set.member x) ((Set.image f) s))) ((Set.member x) ((Set.image f) ((Set.image g) ((Set.image f) s))))))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))))))) ;)

(; dict ;)

def thm_608 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)))))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))))))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (x_4 : hol.term B => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))))) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))))))) (thm_63 B) (thm_607 A B g_1 s_2 f_3).

(; Theorem: |- ((= ((= ((Set.image f) s)) ((Set.image f) ((Set.image g) ((Set.image f) s))))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))))))) ;)

(; dict ;)

def thm_609 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))))))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)))))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))))))))) (thm_591 A B g_1 s_2 f_3) (thm_608 A B g_1 s_2 f_3).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))))))) ((= ((Set.image f) s)) ((Set.image f) ((Set.image g) ((Set.image f) s))))) ;)

(; dict ;)

def thm_610 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))))))))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.SYM hol.bool (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))))))))) (thm_609 A B g_1 s_2 f_3).

(; Theorem: |- ((= \lambda z. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))))) \lambda z. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))))) ;)

(; dict ;)

def thm_611 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (z_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))))))) (z_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))))))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.REFL (hol.arr B hol.bool) (z_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))))))).

(; Theorem: |- ((= \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))))) \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))))) ;)

(; dict ;)

def thm_612 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))))))) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))))))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.REFL (hol.arr B hol.bool) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))))))).

(; Theorem: |- ((= \lambda z. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))))) \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))))) ;)

(; dict ;)

def thm_613 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (z_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))))))) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))))))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.TRANS (hol.arr B hol.bool) (z_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))))))) (z_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))))))) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))))))) (thm_611 A B g_1 s_2 f_3) (thm_612 A B g_1 s_2 f_3).

(; Theorem: |- ((= (Data.Bool.! \lambda z. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))))))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))))))) ;)

(; dict ;)

def thm_614 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (z_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))))))))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))))))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (z_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))))))) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))))))) (thm_63 B) (thm_613 A B g_1 s_2 f_3).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))) x)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)))))) ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_615 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> z_4 : hol.term B -> hol.proof (hol.imp (hol.forall A (x_5 : hol.term A => hol.imp ((x_6 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_2 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_3 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_1)))))) x_5) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => z_4 : hol.term B => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_279 A Q_1 P_2) A (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1))) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))))).

(; Theorem: |- ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))) ;)

(; dict ;)

def thm_616 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> z_5 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq B z_5 (f_4 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_3 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))))) -> hol.proof (hol.and (hol.eq B z_5 (f_4 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_3 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => z_5 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq B z_5 (f_4 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_3 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))))) => hyp_1.

(; Theorem: |- ((= z) (f x)) ;)

(; dict ;)

def thm_617 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> z_5 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq B z_5 (f_4 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_3 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))))) -> hol.proof (hol.eq B z_5 (f_4 x_3)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => z_5 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq B z_5 (f_4 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_3 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_185 q_1 p_2 hyp_1) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_3 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1))))) (hol.eq B z_5 (f_4 x_3)) hyp_1.

(; Theorem: |- ((= z) (f x)) ;)

(; dict ;)

def thm_618 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> z_5 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq B z_5 (f_4 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_3 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))))) -> hol.proof (hol.eq B z_5 (f_4 x_3)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => z_5 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq B z_5 (f_4 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_3 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))))) => hol.PROVE_HYP (hol.and (hol.eq B z_5 (f_4 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_3 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))))) (hol.eq B z_5 (f_4 x_3)) (thm_616 A B s_1 g_2 x_3 f_4 z_5 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq B z_5 (f_4 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_3 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))))) => thm_617 A B s_1 g_2 x_3 f_4 z_5 hyp_2).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_619 : A : hol.type -> B : hol.type -> z_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq B z_1 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))))) :=
  A : hol.type => B : hol.type => z_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq B z_1 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_1) (hol.eq B z_1 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))))) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_620 : A : hol.type -> B : hol.type -> z_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq B z_1 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))))) :=
  A : hol.type => B : hol.type => z_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq B z_1 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))))) => hol.PROVE_HYP (hol.and (hol.eq B z_1 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))))) (thm_616 A B s_2 g_4 x_5 f_3 z_1 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq B z_1 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))))) => thm_619 A B z_1 s_2 f_3 g_4 x_5 hyp_2).

(; Theorem: |- ((= z) (f x)) ;)

(; dict ;)

def thm_621 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> z_3 : hol.term B -> hyp_1 : hol.proof (hol.eq B z_3 (f_2 x_1)) -> hol.proof (hol.eq B z_3 (f_2 x_1)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => z_3 : hol.term B => hyp_1 : hol.proof (hol.eq B z_3 (f_2 x_1)) => hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) x)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)))))) ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_622 : A : hol.type -> B : hol.type -> z_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> x_5 : hol.term A -> hol.proof (hol.imp (hol.forall B (x_6 : hol.term B => hol.imp ((x_7 : hol.term B => hol.and (hol.eq A x_5 (g_4 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_3 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)))) x_6) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B z_1 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_1 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))))) :=
  A : hol.type => B : hol.type => z_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => x_5 : hol.term A => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_279 A Q_1 P_2) B (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_1 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))).

(; Theorem: |- ((Data.Bool./\ ((= x) (g x'))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_623 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> x_27_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq A x_5 (g_4 x_27_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) -> hol.proof (hol.and (hol.eq A x_5 (g_4 x_27_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => x_27_3 : hol.term B => g_4 : hol.term (hol.arr B A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq A x_5 (g_4 x_27_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) => hyp_1.

(; Theorem: |- ((= x) (g x')) ;)

(; dict ;)

def thm_624 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> x_27_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq A x_5 (g_4 x_27_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) -> hol.proof (hol.eq A x_5 (g_4 x_27_3)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => x_27_3 : hol.term B => g_4 : hol.term (hol.arr B A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq A x_5 (g_4 x_27_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_185 q_1 p_2 hyp_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq A x_5 (g_4 x_27_3)) hyp_1.

(; Theorem: |- ((= x) (g x')) ;)

(; dict ;)

def thm_625 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> x_27_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq A x_5 (g_4 x_27_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) -> hol.proof (hol.eq A x_5 (g_4 x_27_3)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => x_27_3 : hol.term B => g_4 : hol.term (hol.arr B A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq A x_5 (g_4 x_27_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) => hol.PROVE_HYP (hol.and (hol.eq A x_5 (g_4 x_27_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) (hol.eq A x_5 (g_4 x_27_3)) (thm_623 B A s_1 f_2 x_27_3 g_4 x_5 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq A x_5 (g_4 x_27_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) => thm_624 B A s_1 f_2 x_27_3 g_4 x_5 hyp_2).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_626 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> x_2 : hol.term A -> s_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> x_27_5 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq A x_2 (g_1 x_27_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => x_2 : hol.term A => s_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => x_27_5 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq A x_2 (g_1 x_27_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_1) (hol.eq A x_2 (g_1 x_27_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_627 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> x_2 : hol.term A -> s_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> x_27_5 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq A x_2 (g_1 x_27_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => x_2 : hol.term A => s_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => x_27_5 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq A x_2 (g_1 x_27_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)))) => hol.PROVE_HYP (hol.and (hol.eq A x_2 (g_1 x_27_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (thm_623 B A s_3 f_4 x_27_5 g_1 x_2 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq A x_2 (g_1 x_27_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)))) => thm_626 B A g_1 x_2 s_3 f_4 x_27_5 hyp_2).

(; Theorem: |- ((= x) (g x')) ;)

(; dict ;)

def thm_628 : B : hol.type -> A : hol.type -> x_27_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_3 (g_2 x_27_1)) -> hol.proof (hol.eq A x_3 (g_2 x_27_1)) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term B => g_2 : hol.term (hol.arr B A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_3 (g_2 x_27_1)) => hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= x') (f x))) ((Set.member x) s)) x)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)))))) ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_629 : B : hol.type -> A : hol.type -> z_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> x_27_4 : hol.term B -> hol.proof (hol.imp (hol.forall A (x_5 : hol.term A => hol.imp ((x_6 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) x_5) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_1 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_1 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))))) :=
  B : hol.type => A : hol.type => z_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => x_27_4 : hol.term B => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_279 A Q_1 P_2) A (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_1 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (x_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)).

(; Theorem: |- ((Data.Bool./\ ((= x') (f x''))) ((Set.member x'') s)) ;)

(; dict ;)

def thm_630 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> x_27_4 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq B x_27_4 (f_3 x_27_27_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1)) -> hol.proof (hol.and (hol.eq B x_27_4 (f_3 x_27_27_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => x_27_4 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq B x_27_4 (f_3 x_27_27_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1)) => hyp_1.

(; Theorem: |- ((= x') (f x'')) ;)

(; dict ;)

def thm_631 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> x_27_4 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq B x_27_4 (f_3 x_27_27_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1)) -> hol.proof (hol.eq B x_27_4 (f_3 x_27_27_2)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => x_27_4 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq B x_27_4 (f_3 x_27_27_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1)) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_185 q_1 p_2 hyp_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) (hol.eq B x_27_4 (f_3 x_27_27_2)) hyp_1.

(; Theorem: |- ((= x') (f x'')) ;)

(; dict ;)

def thm_632 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> x_27_4 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq B x_27_4 (f_3 x_27_27_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1)) -> hol.proof (hol.eq B x_27_4 (f_3 x_27_27_2)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => x_27_4 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq B x_27_4 (f_3 x_27_27_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1)) => hol.PROVE_HYP (hol.and (hol.eq B x_27_4 (f_3 x_27_27_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1)) (hol.eq B x_27_4 (f_3 x_27_27_2)) (thm_630 A B s_1 x_27_27_2 f_3 x_27_4 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq B x_27_4 (f_3 x_27_27_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1)) => thm_631 A B s_1 x_27_27_2 f_3 x_27_4 hyp_2).

(; Theorem: |- ((Set.member x'') s) ;)

(; dict ;)

def thm_633 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_27_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> x_27_27_4 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq B x_27_2 (f_1 x_27_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_4 s_3)) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_4 s_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_27_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => x_27_27_4 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq B x_27_2 (f_1 x_27_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_4 s_3)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_1) (hol.eq B x_27_2 (f_1 x_27_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_4 s_3) hyp_1.

(; Theorem: |- ((Set.member x'') s) ;)

(; dict ;)

def thm_634 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_27_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> x_27_27_4 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq B x_27_2 (f_1 x_27_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_4 s_3)) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_4 s_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_27_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => x_27_27_4 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq B x_27_2 (f_1 x_27_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_4 s_3)) => hol.PROVE_HYP (hol.and (hol.eq B x_27_2 (f_1 x_27_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_4 s_3)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_4 s_3) (thm_630 A B s_3 x_27_27_4 f_1 x_27_2 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq B x_27_2 (f_1 x_27_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_4 s_3)) => thm_633 B A f_1 x_27_2 s_3 x_27_27_4 hyp_2).

(; Theorem: |- ((= x') (f x'')) ;)

(; dict ;)

def thm_635 : A : hol.type -> B : hol.type -> x_27_27_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_27_3 : hol.term B -> hyp_1 : hol.proof (hol.eq B x_27_3 (f_2 x_27_27_1)) -> hol.proof (hol.eq B x_27_3 (f_2 x_27_27_1)) :=
  A : hol.type => B : hol.type => x_27_27_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_27_3 : hol.term B => hyp_1 : hol.proof (hol.eq B x_27_3 (f_2 x_27_27_1)) => hyp_1.

(; Theorem: |- ((Set.member x'') s) ;)

(; dict ;)

def thm_636 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) => hyp_1.

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_637 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> z_3 : hol.term B -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B z_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B z_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => z_3 : hol.term B => hol.REFL hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B z_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_638 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> z_3 : hol.term B -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B z_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B z_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => z_3 : hol.term B => hol.SYM hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B z_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B z_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) (thm_637 B A s_1 f_2 z_3).

(; Theorem: |- ((= (= (\lambda _11110. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11110) (f x))) ((Set.member x) s))) z))) (= (\lambda _11110. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11110) (f x))) ((Set.member x) s))) z))) ;)

(; dict ;)

def thm_639 : A : hol.type -> B : hol.type -> z_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11110_4 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B __11110_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) z_1)) (hol.eq hol.bool ((__11110_4 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B __11110_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) z_1))) :=
  A : hol.type => B : hol.type => z_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11110_4 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B __11110_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) z_1)).

(; Theorem: |- ((= (\lambda _11110. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11110) (f x))) ((Set.member x) s))) (f (g (f x''))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f (g (f x'')))) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_640 : A : hol.type -> B : hol.type -> x_27_27_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((__11110_5 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B __11110_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (f_4 (g_2 (f_4 x_27_27_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B (f_4 (g_2 (f_4 x_27_27_1))) (f_4 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)))) :=
  A : hol.type => B : hol.type => x_27_27_1 : hol.term A => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => hol.BETA_CONV B hol.bool (__11110_5 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B __11110_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (f_4 (g_2 (f_4 x_27_27_1))).

(; Theorem: |- ((= ((= (\lambda _11110. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11110) (f x))) ((Set.member x) s))) z)) (\lambda _11110. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11110) (f x))) ((Set.member x) s))) (f (g (f x'')))))) ((= (\lambda _11110. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11110) (f x))) ((Set.member x) s))) z)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f (g (f x'')))) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_641 : A : hol.type -> B : hol.type -> x_27_27_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> z_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> f_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11110_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11110_6 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) z_3) ((__11110_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11110_6 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) (f_5 (g_2 (f_5 x_27_27_1))))) (hol.eq hol.bool ((__11110_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11110_6 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) z_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B (f_5 (g_2 (f_5 x_27_27_1))) (f_5 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))))) :=
  A : hol.type => B : hol.type => x_27_27_1 : hol.term A => g_2 : hol.term (hol.arr B A) => z_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => f_5 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11110_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11110_6 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) z_3)) (hol.eq hol.bool ((__11110_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11110_6 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) z_3)) ((__11110_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11110_6 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) (f_5 (g_2 (f_5 x_27_27_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B (f_5 (g_2 (f_5 x_27_27_1))) (f_5 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (thm_639 A B z_3 s_4 f_5) (thm_640 A B x_27_27_1 g_2 s_4 f_5).

(; Theorem: |- ((= (\lambda _11110. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11110) (f x))) ((Set.member x) s))) z)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_642 : A : hol.type -> B : hol.type -> z_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((__11110_4 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B __11110_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) z_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B z_1 (f_3 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2)))) :=
  A : hol.type => B : hol.type => z_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.BETA_CONV B hol.bool (__11110_4 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B __11110_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) z_1.

(; Theorem: |- ((= (= (\lambda _11110. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11110) (f x))) ((Set.member x) s))) z))) (= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_643 : A : hol.type -> B : hol.type -> z_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11110_4 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B __11110_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) z_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B z_1 (f_3 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2))))) :=
  A : hol.type => B : hol.type => z_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__11110_4 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B __11110_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) z_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B z_1 (f_3 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2))) thm_64 (thm_642 A B z_1 s_2 f_3).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f (g (f x'')))) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f (g (f x'')))) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_644 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => hol.REFL hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1))).

(; Theorem: |- ((= ((= (\lambda _11110. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11110) (f x))) ((Set.member x) s))) z)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f (g (f x'')))) (f x))) ((Set.member x) s))))) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f (g (f x'')))) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_645 : A : hol.type -> B : hol.type -> x_27_27_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> z_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> f_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11110_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11110_6 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) z_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B (f_5 (g_2 (f_5 x_27_27_1))) (f_5 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_3 (f_5 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B (f_5 (g_2 (f_5 x_27_27_1))) (f_5 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))))) :=
  A : hol.type => B : hol.type => x_27_27_1 : hol.term A => g_2 : hol.term (hol.arr B A) => z_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => f_5 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11110_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11110_6 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) z_3)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_3 (f_5 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B (f_5 (g_2 (f_5 x_27_27_1))) (f_5 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B (f_5 (g_2 (f_5 x_27_27_1))) (f_5 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (thm_643 A B z_3 s_4 f_5) (thm_644 B A s_4 x_27_27_1 g_2 f_5).

(; Theorem: |- ((= ((= (\lambda _11110. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11110) (f x))) ((Set.member x) s))) z)) (\lambda _11110. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11110) (f x))) ((Set.member x) s))) (f (g (f x'')))))) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f (g (f x'')))) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_646 : A : hol.type -> B : hol.type -> x_27_27_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> z_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> f_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11110_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11110_6 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) z_3) ((__11110_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11110_6 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) (f_5 (g_2 (f_5 x_27_27_1))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_3 (f_5 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B (f_5 (g_2 (f_5 x_27_27_1))) (f_5 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))))) :=
  A : hol.type => B : hol.type => x_27_27_1 : hol.term A => g_2 : hol.term (hol.arr B A) => z_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => f_5 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.eq hol.bool ((__11110_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11110_6 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) z_3) ((__11110_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11110_6 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) (f_5 (g_2 (f_5 x_27_27_1))))) (hol.eq hol.bool ((__11110_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11110_6 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) z_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B (f_5 (g_2 (f_5 x_27_27_1))) (f_5 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_3 (f_5 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B (f_5 (g_2 (f_5 x_27_27_1))) (f_5 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)))) (thm_641 A B x_27_27_1 g_2 z_3 s_4 f_5) (thm_645 A B x_27_27_1 g_2 z_3 s_4 f_5).

(; Theorem: |- ((= \lambda _11110. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11110) (f x))) ((Set.member x) s)))) \lambda _11110. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11110) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_647 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (__11110_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B __11110_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) (__11110_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B __11110_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => hol.REFL (hol.arr B hol.bool) (__11110_3 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B __11110_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))).

(; Theorem: |- ((= (= (\lambda _11106. ((= z) (f _11106)) x))) (= (\lambda _11106. ((= z) (f _11106)) x))) ;)

(; dict ;)

def thm_648 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> z_3 : hol.term B -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11106_4 : hol.term A => hol.eq B z_3 (f_2 __11106_4)) x_1)) (hol.eq hol.bool ((__11106_4 : hol.term A => hol.eq B z_3 (f_2 __11106_4)) x_1))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => z_3 : hol.term B => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11106_4 : hol.term A => hol.eq B z_3 (f_2 __11106_4)) x_1)).

(; Theorem: |- ((= (\lambda _11106. ((= z) (f _11106)) (g (f x'')))) ((= z) (f (g (f x''))))) ;)

(; dict ;)

def thm_649 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> z_4 : hol.term B -> hol.proof (hol.eq hol.bool ((__11106_5 : hol.term A => hol.eq B z_4 (f_3 __11106_5)) (g_2 (f_3 x_27_27_1))) (hol.eq B z_4 (f_3 (g_2 (f_3 x_27_27_1))))) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => z_4 : hol.term B => hol.BETA_CONV A hol.bool (__11106_5 : hol.term A => hol.eq B z_4 (f_3 __11106_5)) (g_2 (f_3 x_27_27_1)).

(; Theorem: |- ((= ((= (\lambda _11106. ((= z) (f _11106)) x)) (\lambda _11106. ((= z) (f _11106)) (g (f x''))))) ((= (\lambda _11106. ((= z) (f _11106)) x)) ((= z) (f (g (f x'')))))) ;)

(; dict ;)

def thm_650 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> z_5 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11106_6 : hol.term A => hol.eq B z_5 (f_4 __11106_6)) x_3) ((__11106_6 : hol.term A => hol.eq B z_5 (f_4 __11106_6)) (g_2 (f_4 x_27_27_1)))) (hol.eq hol.bool ((__11106_6 : hol.term A => hol.eq B z_5 (f_4 __11106_6)) x_3) (hol.eq B z_5 (f_4 (g_2 (f_4 x_27_27_1)))))) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => g_2 : hol.term (hol.arr B A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => z_5 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11106_6 : hol.term A => hol.eq B z_5 (f_4 __11106_6)) x_3)) (hol.eq hol.bool ((__11106_6 : hol.term A => hol.eq B z_5 (f_4 __11106_6)) x_3)) ((__11106_6 : hol.term A => hol.eq B z_5 (f_4 __11106_6)) (g_2 (f_4 x_27_27_1))) (hol.eq B z_5 (f_4 (g_2 (f_4 x_27_27_1)))) (thm_648 B A x_3 f_4 z_5) (thm_649 B A x_27_27_1 g_2 f_4 z_5).

(; Theorem: |- ((= (\lambda _11106. ((= z) (f _11106)) x)) ((= z) (f x))) ;)

(; dict ;)

def thm_651 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> z_3 : hol.term B -> hol.proof (hol.eq hol.bool ((__11106_4 : hol.term A => hol.eq B z_3 (f_2 __11106_4)) x_1) (hol.eq B z_3 (f_2 x_1))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => z_3 : hol.term B => hol.BETA_CONV A hol.bool (__11106_4 : hol.term A => hol.eq B z_3 (f_2 __11106_4)) x_1.

(; Theorem: |- ((= (= (\lambda _11106. ((= z) (f _11106)) x))) (= ((= z) (f x)))) ;)

(; dict ;)

def thm_652 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> z_3 : hol.term B -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11106_4 : hol.term A => hol.eq B z_3 (f_2 __11106_4)) x_1)) (hol.eq hol.bool (hol.eq B z_3 (f_2 x_1)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => z_3 : hol.term B => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__11106_4 : hol.term A => hol.eq B z_3 (f_2 __11106_4)) x_1) (hol.eq B z_3 (f_2 x_1)) thm_64 (thm_651 B A x_1 f_2 z_3).

(; Theorem: |- ((= ((= z) (f (g (f x''))))) ((= z) (f (g (f x''))))) ;)

(; dict ;)

def thm_653 : A : hol.type -> B : hol.type -> x_27_27_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> z_4 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq B z_4 (f_3 (g_2 (f_3 x_27_27_1)))) (hol.eq B z_4 (f_3 (g_2 (f_3 x_27_27_1))))) :=
  A : hol.type => B : hol.type => x_27_27_1 : hol.term A => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => z_4 : hol.term B => hol.REFL hol.bool (hol.eq B z_4 (f_3 (g_2 (f_3 x_27_27_1)))).

(; Theorem: |- ((= ((= (\lambda _11106. ((= z) (f _11106)) x)) ((= z) (f (g (f x'')))))) ((= ((= z) (f x))) ((= z) (f (g (f x'')))))) ;)

(; dict ;)

def thm_654 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> z_5 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11106_6 : hol.term A => hol.eq B z_5 (f_4 __11106_6)) x_3) (hol.eq B z_5 (f_4 (g_2 (f_4 x_27_27_1))))) (hol.eq hol.bool (hol.eq B z_5 (f_4 x_3)) (hol.eq B z_5 (f_4 (g_2 (f_4 x_27_27_1)))))) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => g_2 : hol.term (hol.arr B A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => z_5 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11106_6 : hol.term A => hol.eq B z_5 (f_4 __11106_6)) x_3)) (hol.eq hol.bool (hol.eq B z_5 (f_4 x_3))) (hol.eq B z_5 (f_4 (g_2 (f_4 x_27_27_1)))) (hol.eq B z_5 (f_4 (g_2 (f_4 x_27_27_1)))) (thm_652 B A x_3 f_4 z_5) (thm_653 A B x_27_27_1 g_2 f_4 z_5).

(; Theorem: |- ((= ((= (\lambda _11106. ((= z) (f _11106)) x)) (\lambda _11106. ((= z) (f _11106)) (g (f x''))))) ((= ((= z) (f x))) ((= z) (f (g (f x'')))))) ;)

(; dict ;)

def thm_655 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> z_5 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11106_6 : hol.term A => hol.eq B z_5 (f_4 __11106_6)) x_3) ((__11106_6 : hol.term A => hol.eq B z_5 (f_4 __11106_6)) (g_2 (f_4 x_27_27_1)))) (hol.eq hol.bool (hol.eq B z_5 (f_4 x_3)) (hol.eq B z_5 (f_4 (g_2 (f_4 x_27_27_1)))))) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => g_2 : hol.term (hol.arr B A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => z_5 : hol.term B => hol.TRANS hol.bool (hol.eq hol.bool ((__11106_6 : hol.term A => hol.eq B z_5 (f_4 __11106_6)) x_3) ((__11106_6 : hol.term A => hol.eq B z_5 (f_4 __11106_6)) (g_2 (f_4 x_27_27_1)))) (hol.eq hol.bool ((__11106_6 : hol.term A => hol.eq B z_5 (f_4 __11106_6)) x_3) (hol.eq B z_5 (f_4 (g_2 (f_4 x_27_27_1))))) (hol.eq hol.bool (hol.eq B z_5 (f_4 x_3)) (hol.eq B z_5 (f_4 (g_2 (f_4 x_27_27_1))))) (thm_650 B A x_27_27_1 g_2 x_3 f_4 z_5) (thm_654 B A x_27_27_1 g_2 x_3 f_4 z_5).

(; Theorem: |- ((= \lambda _11106. ((= z) (f _11106))) \lambda _11106. ((= z) (f _11106))) ;)

(; dict ;)

def thm_656 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> z_2 : hol.term B -> hol.proof (hol.eq (hol.arr A hol.bool) (__11106_3 : hol.term A => hol.eq B z_2 (f_1 __11106_3)) (__11106_3 : hol.term A => hol.eq B z_2 (f_1 __11106_3))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => z_2 : hol.term B => hol.REFL (hol.arr A hol.bool) (__11106_3 : hol.term A => hol.eq B z_2 (f_1 __11106_3)).

(; Theorem: |- ((= (= (\lambda _11098. ((= x) (g _11098)) x'))) (= (\lambda _11098. ((= x) (g _11098)) x'))) ;)

(; dict ;)

def thm_657 : A : hol.type -> B : hol.type -> x_27_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> x_3 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11098_4 : hol.term B => hol.eq A x_3 (g_2 __11098_4)) x_27_1)) (hol.eq hol.bool ((__11098_4 : hol.term B => hol.eq A x_3 (g_2 __11098_4)) x_27_1))) :=
  A : hol.type => B : hol.type => x_27_1 : hol.term B => g_2 : hol.term (hol.arr B A) => x_3 : hol.term A => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11098_4 : hol.term B => hol.eq A x_3 (g_2 __11098_4)) x_27_1)).

(; Theorem: |- ((= (\lambda _11098. ((= x) (g _11098)) (f x''))) ((= x) (g (f x'')))) ;)

(; dict ;)

def thm_658 : A : hol.type -> B : hol.type -> x_27_27_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool ((__11098_5 : hol.term B => hol.eq A x_4 (g_3 __11098_5)) (f_2 x_27_27_1)) (hol.eq A x_4 (g_3 (f_2 x_27_27_1)))) :=
  A : hol.type => B : hol.type => x_27_27_1 : hol.term A => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => x_4 : hol.term A => hol.BETA_CONV B hol.bool (__11098_5 : hol.term B => hol.eq A x_4 (g_3 __11098_5)) (f_2 x_27_27_1).

(; Theorem: |- ((= ((= (\lambda _11098. ((= x) (g _11098)) x')) (\lambda _11098. ((= x) (g _11098)) (f x'')))) ((= (\lambda _11098. ((= x) (g _11098)) x')) ((= x) (g (f x''))))) ;)

(; dict ;)

def thm_659 : A : hol.type -> B : hol.type -> x_27_27_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_27_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> x_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11098_6 : hol.term B => hol.eq A x_5 (g_4 __11098_6)) x_27_3) ((__11098_6 : hol.term B => hol.eq A x_5 (g_4 __11098_6)) (f_2 x_27_27_1))) (hol.eq hol.bool ((__11098_6 : hol.term B => hol.eq A x_5 (g_4 __11098_6)) x_27_3) (hol.eq A x_5 (g_4 (f_2 x_27_27_1))))) :=
  A : hol.type => B : hol.type => x_27_27_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_27_3 : hol.term B => g_4 : hol.term (hol.arr B A) => x_5 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11098_6 : hol.term B => hol.eq A x_5 (g_4 __11098_6)) x_27_3)) (hol.eq hol.bool ((__11098_6 : hol.term B => hol.eq A x_5 (g_4 __11098_6)) x_27_3)) ((__11098_6 : hol.term B => hol.eq A x_5 (g_4 __11098_6)) (f_2 x_27_27_1)) (hol.eq A x_5 (g_4 (f_2 x_27_27_1))) (thm_657 A B x_27_3 g_4 x_5) (thm_658 A B x_27_27_1 f_2 g_4 x_5).

(; Theorem: |- ((= (\lambda _11098. ((= x) (g _11098)) x')) ((= x) (g x'))) ;)

(; dict ;)

def thm_660 : A : hol.type -> B : hol.type -> x_27_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool ((__11098_4 : hol.term B => hol.eq A x_3 (g_2 __11098_4)) x_27_1) (hol.eq A x_3 (g_2 x_27_1))) :=
  A : hol.type => B : hol.type => x_27_1 : hol.term B => g_2 : hol.term (hol.arr B A) => x_3 : hol.term A => hol.BETA_CONV B hol.bool (__11098_4 : hol.term B => hol.eq A x_3 (g_2 __11098_4)) x_27_1.

(; Theorem: |- ((= (= (\lambda _11098. ((= x) (g _11098)) x'))) (= ((= x) (g x')))) ;)

(; dict ;)

def thm_661 : A : hol.type -> B : hol.type -> x_27_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> x_3 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11098_4 : hol.term B => hol.eq A x_3 (g_2 __11098_4)) x_27_1)) (hol.eq hol.bool (hol.eq A x_3 (g_2 x_27_1)))) :=
  A : hol.type => B : hol.type => x_27_1 : hol.term B => g_2 : hol.term (hol.arr B A) => x_3 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__11098_4 : hol.term B => hol.eq A x_3 (g_2 __11098_4)) x_27_1) (hol.eq A x_3 (g_2 x_27_1)) thm_64 (thm_660 A B x_27_1 g_2 x_3).

(; Theorem: |- ((= ((= x) (g (f x'')))) ((= x) (g (f x'')))) ;)

(; dict ;)

def thm_662 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_4 (g_3 (f_2 x_27_27_1))) (hol.eq A x_4 (g_3 (f_2 x_27_27_1)))) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => x_4 : hol.term A => hol.REFL hol.bool (hol.eq A x_4 (g_3 (f_2 x_27_27_1))).

(; Theorem: |- ((= ((= (\lambda _11098. ((= x) (g _11098)) x')) ((= x) (g (f x''))))) ((= ((= x) (g x'))) ((= x) (g (f x''))))) ;)

(; dict ;)

def thm_663 : A : hol.type -> B : hol.type -> x_27_27_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_27_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> x_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11098_6 : hol.term B => hol.eq A x_5 (g_4 __11098_6)) x_27_3) (hol.eq A x_5 (g_4 (f_2 x_27_27_1)))) (hol.eq hol.bool (hol.eq A x_5 (g_4 x_27_3)) (hol.eq A x_5 (g_4 (f_2 x_27_27_1))))) :=
  A : hol.type => B : hol.type => x_27_27_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_27_3 : hol.term B => g_4 : hol.term (hol.arr B A) => x_5 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11098_6 : hol.term B => hol.eq A x_5 (g_4 __11098_6)) x_27_3)) (hol.eq hol.bool (hol.eq A x_5 (g_4 x_27_3))) (hol.eq A x_5 (g_4 (f_2 x_27_27_1))) (hol.eq A x_5 (g_4 (f_2 x_27_27_1))) (thm_661 A B x_27_3 g_4 x_5) (thm_662 B A x_27_27_1 f_2 g_4 x_5).

(; Theorem: |- ((= ((= (\lambda _11098. ((= x) (g _11098)) x')) (\lambda _11098. ((= x) (g _11098)) (f x'')))) ((= ((= x) (g x'))) ((= x) (g (f x''))))) ;)

(; dict ;)

def thm_664 : A : hol.type -> B : hol.type -> x_27_27_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_27_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> x_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11098_6 : hol.term B => hol.eq A x_5 (g_4 __11098_6)) x_27_3) ((__11098_6 : hol.term B => hol.eq A x_5 (g_4 __11098_6)) (f_2 x_27_27_1))) (hol.eq hol.bool (hol.eq A x_5 (g_4 x_27_3)) (hol.eq A x_5 (g_4 (f_2 x_27_27_1))))) :=
  A : hol.type => B : hol.type => x_27_27_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_27_3 : hol.term B => g_4 : hol.term (hol.arr B A) => x_5 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool ((__11098_6 : hol.term B => hol.eq A x_5 (g_4 __11098_6)) x_27_3) ((__11098_6 : hol.term B => hol.eq A x_5 (g_4 __11098_6)) (f_2 x_27_27_1))) (hol.eq hol.bool ((__11098_6 : hol.term B => hol.eq A x_5 (g_4 __11098_6)) x_27_3) (hol.eq A x_5 (g_4 (f_2 x_27_27_1)))) (hol.eq hol.bool (hol.eq A x_5 (g_4 x_27_3)) (hol.eq A x_5 (g_4 (f_2 x_27_27_1)))) (thm_659 A B x_27_27_1 f_2 x_27_3 g_4 x_5) (thm_663 A B x_27_27_1 f_2 x_27_3 g_4 x_5).

(; Theorem: |- ((= \lambda _11098. ((= x) (g _11098))) \lambda _11098. ((= x) (g _11098))) ;)

(; dict ;)

def thm_665 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> x_2 : hol.term A -> hol.proof (hol.eq (hol.arr B hol.bool) (__11098_3 : hol.term B => hol.eq A x_2 (g_1 __11098_3)) (__11098_3 : hol.term B => hol.eq A x_2 (g_1 __11098_3))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => x_2 : hol.term A => hol.REFL (hol.arr B hol.bool) (__11098_3 : hol.term B => hol.eq A x_2 (g_1 __11098_3)).

(; Theorem: |- ((= (\lambda _11098. ((= x) (g _11098)) x')) (\lambda _11098. ((= x) (g _11098)) (f x''))) ;)

(; dict ;)

def thm_666 : A : hol.type -> B : hol.type -> x_27_27_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_27_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.eq B x_27_3 (f_2 x_27_27_1)) -> hol.proof (hol.eq hol.bool ((__11098_6 : hol.term B => hol.eq A x_5 (g_4 __11098_6)) x_27_3) ((__11098_6 : hol.term B => hol.eq A x_5 (g_4 __11098_6)) (f_2 x_27_27_1))) :=
  A : hol.type => B : hol.type => x_27_27_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_27_3 : hol.term B => g_4 : hol.term (hol.arr B A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.eq B x_27_3 (f_2 x_27_27_1)) => hol.APP_THM B hol.bool (__11098_6 : hol.term B => hol.eq A x_5 (g_4 __11098_6)) (__11098_6 : hol.term B => hol.eq A x_5 (g_4 __11098_6)) x_27_3 (f_2 x_27_27_1) (thm_665 A B g_4 x_5) (thm_635 A B x_27_27_1 f_2 x_27_3 hyp_1).

(; Theorem: |- ((= ((= x) (g x'))) ((= x) (g (f x'')))) ;)

(; dict ;)

def thm_667 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_27_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.eq B x_27_3 (f_2 x_27_27_1)) -> hol.proof (hol.eq hol.bool (hol.eq A x_5 (g_4 x_27_3)) (hol.eq A x_5 (g_4 (f_2 x_27_27_1)))) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_27_3 : hol.term B => g_4 : hol.term (hol.arr B A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.eq B x_27_3 (f_2 x_27_27_1)) => hol.EQ_MP (hol.eq hol.bool ((__11098_6 : hol.term B => hol.eq A x_5 (g_4 __11098_6)) x_27_3) ((__11098_6 : hol.term B => hol.eq A x_5 (g_4 __11098_6)) (f_2 x_27_27_1))) (hol.eq hol.bool (hol.eq A x_5 (g_4 x_27_3)) (hol.eq A x_5 (g_4 (f_2 x_27_27_1)))) (thm_664 A B x_27_27_1 f_2 x_27_3 g_4 x_5) (thm_666 A B x_27_27_1 f_2 x_27_3 g_4 x_5 hyp_1).

(; Theorem: |- ((= x) (g (f x''))) ;)

(; dict ;)

def thm_668 : B : hol.type -> A : hol.type -> x_27_1 : hol.term B -> x_27_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_5 (g_4 x_27_1)) -> hyp_2 : hol.proof (hol.eq B x_27_1 (f_3 x_27_27_2)) -> hol.proof (hol.eq A x_5 (g_4 (f_3 x_27_27_2))) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term B => x_27_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.eq A x_5 (g_4 x_27_1)) => hyp_2 : hol.proof (hol.eq B x_27_1 (f_3 x_27_27_2)) => hol.EQ_MP (hol.eq A x_5 (g_4 x_27_1)) (hol.eq A x_5 (g_4 (f_3 x_27_27_2))) (thm_667 B A x_27_27_2 f_3 x_27_1 g_4 x_5 hyp_2) (thm_628 B A x_27_1 g_4 x_5 hyp_1).

(; Theorem: |- ((= (\lambda _11106. ((= z) (f _11106)) x)) (\lambda _11106. ((= z) (f _11106)) (g (f x'')))) ;)

(; dict ;)

def thm_669 : B : hol.type -> A : hol.type -> x_27_1 : hol.term B -> x_27_27_2 : hol.term A -> g_3 : hol.term (hol.arr B A) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> z_6 : hol.term B -> hyp_1 : hol.proof (hol.eq A x_4 (g_3 x_27_1)) -> hyp_2 : hol.proof (hol.eq B x_27_1 (f_5 x_27_27_2)) -> hol.proof (hol.eq hol.bool ((__11106_7 : hol.term A => hol.eq B z_6 (f_5 __11106_7)) x_4) ((__11106_7 : hol.term A => hol.eq B z_6 (f_5 __11106_7)) (g_3 (f_5 x_27_27_2)))) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term B => x_27_27_2 : hol.term A => g_3 : hol.term (hol.arr B A) => x_4 : hol.term A => f_5 : hol.term (hol.arr A B) => z_6 : hol.term B => hyp_1 : hol.proof (hol.eq A x_4 (g_3 x_27_1)) => hyp_2 : hol.proof (hol.eq B x_27_1 (f_5 x_27_27_2)) => hol.APP_THM A hol.bool (__11106_7 : hol.term A => hol.eq B z_6 (f_5 __11106_7)) (__11106_7 : hol.term A => hol.eq B z_6 (f_5 __11106_7)) x_4 (g_3 (f_5 x_27_27_2)) (thm_656 B A f_5 z_6) (thm_668 B A x_27_1 x_27_27_2 f_5 g_3 x_4 hyp_1 hyp_2).

(; Theorem: |- ((= ((= z) (f x))) ((= z) (f (g (f x''))))) ;)

(; dict ;)

def thm_670 : A : hol.type -> B : hol.type -> x_27_1 : hol.term B -> x_27_27_2 : hol.term A -> g_3 : hol.term (hol.arr B A) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> z_6 : hol.term B -> hyp_1 : hol.proof (hol.eq A x_4 (g_3 x_27_1)) -> hyp_2 : hol.proof (hol.eq B x_27_1 (f_5 x_27_27_2)) -> hol.proof (hol.eq hol.bool (hol.eq B z_6 (f_5 x_4)) (hol.eq B z_6 (f_5 (g_3 (f_5 x_27_27_2))))) :=
  A : hol.type => B : hol.type => x_27_1 : hol.term B => x_27_27_2 : hol.term A => g_3 : hol.term (hol.arr B A) => x_4 : hol.term A => f_5 : hol.term (hol.arr A B) => z_6 : hol.term B => hyp_1 : hol.proof (hol.eq A x_4 (g_3 x_27_1)) => hyp_2 : hol.proof (hol.eq B x_27_1 (f_5 x_27_27_2)) => hol.EQ_MP (hol.eq hol.bool ((__11106_7 : hol.term A => hol.eq B z_6 (f_5 __11106_7)) x_4) ((__11106_7 : hol.term A => hol.eq B z_6 (f_5 __11106_7)) (g_3 (f_5 x_27_27_2)))) (hol.eq hol.bool (hol.eq B z_6 (f_5 x_4)) (hol.eq B z_6 (f_5 (g_3 (f_5 x_27_27_2))))) (thm_655 B A x_27_27_2 g_3 x_4 f_5 z_6) (thm_669 B A x_27_1 x_27_27_2 g_3 x_4 f_5 z_6 hyp_1 hyp_2).

(; Theorem: |- ((= z) (f (g (f x'')))) ;)

(; dict ;)

def thm_671 : A : hol.type -> B : hol.type -> x_27_1 : hol.term B -> x_2 : hol.term A -> x_27_27_3 : hol.term A -> g_4 : hol.term (hol.arr B A) -> f_5 : hol.term (hol.arr A B) -> z_6 : hol.term B -> hyp_1 : hol.proof (hol.eq A x_2 (g_4 x_27_1)) -> hyp_2 : hol.proof (hol.eq B x_27_1 (f_5 x_27_27_3)) -> hyp_3 : hol.proof (hol.eq B z_6 (f_5 x_2)) -> hol.proof (hol.eq B z_6 (f_5 (g_4 (f_5 x_27_27_3)))) :=
  A : hol.type => B : hol.type => x_27_1 : hol.term B => x_2 : hol.term A => x_27_27_3 : hol.term A => g_4 : hol.term (hol.arr B A) => f_5 : hol.term (hol.arr A B) => z_6 : hol.term B => hyp_1 : hol.proof (hol.eq A x_2 (g_4 x_27_1)) => hyp_2 : hol.proof (hol.eq B x_27_1 (f_5 x_27_27_3)) => hyp_3 : hol.proof (hol.eq B z_6 (f_5 x_2)) => hol.EQ_MP (hol.eq B z_6 (f_5 x_2)) (hol.eq B z_6 (f_5 (g_4 (f_5 x_27_27_3)))) (thm_670 A B x_27_1 x_27_27_3 g_4 x_2 f_5 z_6 hyp_1 hyp_2) (thm_621 A B x_2 f_5 z_6 hyp_3).

(; Theorem: |- ((= (\lambda _11110. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11110) (f x))) ((Set.member x) s))) z)) (\lambda _11110. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11110) (f x))) ((Set.member x) s))) (f (g (f x''))))) ;)

(; dict ;)

def thm_672 : A : hol.type -> B : hol.type -> x_27_1 : hol.term B -> x_2 : hol.term A -> x_27_27_3 : hol.term A -> g_4 : hol.term (hol.arr B A) -> z_5 : hol.term B -> s_6 : hol.term (Set_2Eset A) -> f_7 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq A x_2 (g_4 x_27_1)) -> hyp_2 : hol.proof (hol.eq B x_27_1 (f_7 x_27_27_3)) -> hyp_3 : hol.proof (hol.eq B z_5 (f_7 x_2)) -> hol.proof (hol.eq hol.bool ((__11110_8 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_9 : hol.term A => hol.and (hol.eq B __11110_8 (f_7 x_9)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6))) z_5) ((__11110_8 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_9 : hol.term A => hol.and (hol.eq B __11110_8 (f_7 x_9)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6))) (f_7 (g_4 (f_7 x_27_27_3))))) :=
  A : hol.type => B : hol.type => x_27_1 : hol.term B => x_2 : hol.term A => x_27_27_3 : hol.term A => g_4 : hol.term (hol.arr B A) => z_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => f_7 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq A x_2 (g_4 x_27_1)) => hyp_2 : hol.proof (hol.eq B x_27_1 (f_7 x_27_27_3)) => hyp_3 : hol.proof (hol.eq B z_5 (f_7 x_2)) => hol.APP_THM B hol.bool (__11110_8 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_9 : hol.term A => hol.and (hol.eq B __11110_8 (f_7 x_9)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6))) (__11110_8 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_9 : hol.term A => hol.and (hol.eq B __11110_8 (f_7 x_9)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6))) z_5 (f_7 (g_4 (f_7 x_27_27_3))) (thm_647 A B s_6 f_7) (thm_671 A B x_27_1 x_2 x_27_27_3 g_4 f_7 z_5 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f (g (f x'')))) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_673 : B : hol.type -> A : hol.type -> x_27_1 : hol.term B -> x_2 : hol.term A -> x_27_27_3 : hol.term A -> g_4 : hol.term (hol.arr B A) -> s_5 : hol.term (Set_2Eset A) -> f_6 : hol.term (hol.arr A B) -> z_7 : hol.term B -> hyp_1 : hol.proof (hol.eq A x_2 (g_4 x_27_1)) -> hyp_2 : hol.proof (hol.eq B x_27_1 (f_6 x_27_27_3)) -> hyp_3 : hol.proof (hol.eq B z_7 (f_6 x_2)) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_7 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B (f_6 (g_4 (f_6 x_27_27_3))) (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)))) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term B => x_2 : hol.term A => x_27_27_3 : hol.term A => g_4 : hol.term (hol.arr B A) => s_5 : hol.term (Set_2Eset A) => f_6 : hol.term (hol.arr A B) => z_7 : hol.term B => hyp_1 : hol.proof (hol.eq A x_2 (g_4 x_27_1)) => hyp_2 : hol.proof (hol.eq B x_27_1 (f_6 x_27_27_3)) => hyp_3 : hol.proof (hol.eq B z_7 (f_6 x_2)) => hol.EQ_MP (hol.eq hol.bool ((__11110_8 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_9 : hol.term A => hol.and (hol.eq B __11110_8 (f_6 x_9)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_5))) z_7) ((__11110_8 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_9 : hol.term A => hol.and (hol.eq B __11110_8 (f_6 x_9)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_5))) (f_6 (g_4 (f_6 x_27_27_3))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_7 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B (f_6 (g_4 (f_6 x_27_27_3))) (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)))) (thm_646 A B x_27_27_3 g_4 z_7 s_5 f_6) (thm_672 A B x_27_1 x_2 x_27_27_3 g_4 z_7 s_5 f_6 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f (g (f x'')))) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_674 : B : hol.type -> A : hol.type -> x_27_1 : hol.term B -> x_2 : hol.term A -> z_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> x_27_27_5 : hol.term A -> g_6 : hol.term (hol.arr B A) -> f_7 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq A x_2 (g_6 x_27_1)) -> hyp_2 : hol.proof (hol.eq B x_27_1 (f_7 x_27_27_5)) -> hyp_3 : hol.proof (hol.eq B z_3 (f_7 x_2)) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B (f_7 (g_6 (f_7 x_27_27_5))) (f_7 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_3 (f_7 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)))) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term B => x_2 : hol.term A => z_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => x_27_27_5 : hol.term A => g_6 : hol.term (hol.arr B A) => f_7 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq A x_2 (g_6 x_27_1)) => hyp_2 : hol.proof (hol.eq B x_27_1 (f_7 x_27_27_5)) => hyp_3 : hol.proof (hol.eq B z_3 (f_7 x_2)) => hol.SYM hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_3 (f_7 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B (f_7 (g_6 (f_7 x_27_27_5))) (f_7 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4))) (thm_673 B A x_27_1 x_2 x_27_27_5 g_6 s_4 f_7 z_3 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= (\lambda x. ((Data.Bool./\ ((= (f (g (f x'')))) (f x))) ((Set.member x) s)) (g (f x'')))) ((Data.Bool./\ ((= (f (g (f x'')))) (f (g (f x''))))) ((Set.member (g (f x''))) s))) ;)

(; dict ;)

def thm_675 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((x_5 : hol.term A => hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) (g_3 (f_4 x_27_27_2))) (hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 (g_3 (f_4 x_27_27_2)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_27_27_2)) s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => hol.BETA_CONV A hol.bool (x_5 : hol.term A => hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) (g_3 (f_4 x_27_27_2)).

(; Theorem: |- ((= ((Data.Bool./\ ((= (f (g (f x'')))) (f (g (f x''))))) ((Set.member (g (f x''))) s))) (\lambda x. ((Data.Bool./\ ((= (f (g (f x'')))) (f x))) ((Set.member x) s)) (g (f x'')))) ;)

(; dict ;)

def thm_676 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 (g_3 (f_4 x_27_27_2)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_27_27_2)) s_1)) ((x_5 : hol.term A => hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) (g_3 (f_4 x_27_27_2)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => hol.SYM hol.bool ((x_5 : hol.term A => hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) (g_3 (f_4 x_27_27_2))) (hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 (g_3 (f_4 x_27_27_2)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_27_27_2)) s_1)) (thm_675 B A s_1 x_27_27_2 g_3 f_4).

(; Theorem: |- ((= ((= (f (g (f x'')))) (f (g (f x''))))) Data.Bool.T) ;)

(; dict ;)

def thm_677 : A : hol.type -> B : hol.type -> x_27_27_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B (f_3 (g_2 (f_3 x_27_27_1))) (f_3 (g_2 (f_3 x_27_27_1)))) hol.true) :=
  A : hol.type => B : hol.type => x_27_27_1 : hol.term A => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => (B : hol.type => x_1 : hol.term B => thm_315 B x_1) B (f_3 (g_2 (f_3 x_27_27_1))).

(; Theorem: |- ((= (Data.Bool./\ ((= (f (g (f x'')))) (f (g (f x'')))))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_678 : A : hol.type -> B : hol.type -> x_27_27_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq B (f_3 (g_2 (f_3 x_27_27_1))) (f_3 (g_2 (f_3 x_27_27_1))))) (hol.and hol.true)) :=
  A : hol.type => B : hol.type => x_27_27_1 : hol.term A => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.eq B (f_3 (g_2 (f_3 x_27_27_1))) (f_3 (g_2 (f_3 x_27_27_1)))) hol.true thm_298 (thm_677 A B x_27_27_1 g_2 f_3).

(; Theorem: |- ((= ((Set.member (g (f x''))) s)) ((Set.member (g (f x''))) s)) ;)

(; dict ;)

def thm_679 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hol.REFL hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1).

(; Theorem: |- ((= ((Data.Bool./\ ((= (f (g (f x'')))) (f (g (f x''))))) ((Set.member (g (f x''))) s))) ((Data.Bool./\ Data.Bool.T) ((Set.member (g (f x''))) s))) ;)

(; dict ;)

def thm_680 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 (g_3 (f_4 x_27_27_2)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_27_27_2)) s_1)) (hol.and hol.true (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_27_27_2)) s_1))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 (g_3 (f_4 x_27_27_2))))) (hol.and hol.true) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_27_27_2)) s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_27_27_2)) s_1) (thm_678 A B x_27_27_2 g_3 f_4) (thm_679 B A s_1 x_27_27_2 f_4 g_3).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) ((Set.member (g (f x''))) s))) ((Set.member (g (f x''))) s)) ;)

(; dict ;)

def thm_681 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.and hol.true (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => (t_1 : hol.term hol.bool => thm_124 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1).

(; Theorem: |- ((= ((Data.Bool./\ ((= (f (g (f x'')))) (f (g (f x''))))) ((Set.member (g (f x''))) s))) ((Set.member (g (f x''))) s)) ;)

(; dict ;)

def thm_682 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 (g_3 (f_4 x_27_27_2)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_27_27_2)) s_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_27_27_2)) s_1)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 (g_3 (f_4 x_27_27_2)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_27_27_2)) s_1)) (hol.and hol.true (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_27_27_2)) s_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_27_27_2)) s_1) (thm_680 A B s_1 x_27_27_2 g_3 f_4) (thm_681 B A s_1 x_27_27_2 f_4 g_3).

(; Theorem: |- ((= ((Set.member (g (f x''))) s)) ((Data.Bool./\ ((= (f (g (f x'')))) (f (g (f x''))))) ((Set.member (g (f x''))) s))) ;)

(; dict ;)

def thm_683 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (hol.and (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 (g_4 (f_3 x_27_27_2)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hol.SYM hol.bool (hol.and (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 (g_4 (f_3 x_27_27_2)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (thm_682 A B s_1 x_27_27_2 g_4 f_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z))) ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z))) ;)

(; dict ;)

def thm_684 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1)) (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1))) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1)).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z))) ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z))) ;)

(; dict ;)

def thm_685 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1)) (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1))) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hol.TRANS hol.bool (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1)) (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1)) (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1)) (thm_684 z_1 y_2 x_3) (thm_684 z_1 y_2 x_3).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z))))) ;)

(; dict ;)

def thm_686 : hyp_1 : hol.proof (hol.forall hol.bool (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3))))) -> hol.proof (hol.forall hol.bool (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3))))) :=
  hyp_1 : hol.proof (hol.forall hol.bool (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3))))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z)))) ;)

(; dict ;)

def thm_687 : x_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.forall hol.bool (x_2 : hol.term hol.bool => hol.forall hol.bool (y_3 : hol.term hol.bool => hol.forall hol.bool (z_4 : hol.term hol.bool => hol.imp (hol.and x_2 (hol.imp y_3 z_4)) (hol.imp (hol.imp x_2 y_3) z_4))))) -> hol.proof (hol.forall hol.bool (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3)))) :=
  x_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.forall hol.bool (x_2 : hol.term hol.bool => hol.forall hol.bool (y_3 : hol.term hol.bool => hol.forall hol.bool (z_4 : hol.term hol.bool => hol.imp (hol.and x_2 (hol.imp y_3 z_4)) (hol.imp (hol.imp x_2 y_3) z_4))))) => thm_686 hyp_1 x_1.

(; Theorem: |- (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z))) ;)

(; dict ;)

def thm_688 : y_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.forall hol.bool (y_4 : hol.term hol.bool => hol.forall hol.bool (z_5 : hol.term hol.bool => hol.imp (hol.and x_3 (hol.imp y_4 z_5)) (hol.imp (hol.imp x_3 y_4) z_5))))) -> hol.proof (hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_2 (hol.imp y_1 z_3)) (hol.imp (hol.imp x_2 y_1) z_3))) :=
  y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.forall hol.bool (y_4 : hol.term hol.bool => hol.forall hol.bool (z_5 : hol.term hol.bool => hol.imp (hol.and x_3 (hol.imp y_4 z_5)) (hol.imp (hol.imp x_3 y_4) z_5))))) => thm_687 x_2 hyp_1 y_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z)) ;)

(; dict ;)

def thm_689 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.forall hol.bool (x_4 : hol.term hol.bool => hol.forall hol.bool (y_5 : hol.term hol.bool => hol.forall hol.bool (z_6 : hol.term hol.bool => hol.imp (hol.and x_4 (hol.imp y_5 z_6)) (hol.imp (hol.imp x_4 y_5) z_6))))) -> hol.proof (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1)) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.forall hol.bool (x_4 : hol.term hol.bool => hol.forall hol.bool (y_5 : hol.term hol.bool => hol.forall hol.bool (z_6 : hol.term hol.bool => hol.imp (hol.and x_4 (hol.imp y_5 z_6)) (hol.imp (hol.imp x_4 y_5) z_6))))) => thm_688 y_2 x_3 hyp_1 z_1.

(; Theorem: |- ((Data.Bool./\ x) ((Data.Bool.==> y) z)) ;)

(; dict ;)

def thm_690 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and x_3 (hol.imp y_2 z_1)) -> hol.proof (hol.and x_3 (hol.imp y_2 z_1)) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.and x_3 (hol.imp y_2 z_1)) => hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> x) y)) z) ;)

(; dict ;)

def thm_691 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.forall hol.bool (x_4 : hol.term hol.bool => hol.forall hol.bool (y_5 : hol.term hol.bool => hol.forall hol.bool (z_6 : hol.term hol.bool => hol.imp (hol.and x_4 (hol.imp y_5 z_6)) (hol.imp (hol.imp x_4 y_5) z_6))))) -> hyp_2 : hol.proof (hol.and x_3 (hol.imp y_2 z_1)) -> hol.proof (hol.imp (hol.imp x_3 y_2) z_1) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.forall hol.bool (x_4 : hol.term hol.bool => hol.forall hol.bool (y_5 : hol.term hol.bool => hol.forall hol.bool (z_6 : hol.term hol.bool => hol.imp (hol.and x_4 (hol.imp y_5 z_6)) (hol.imp (hol.imp x_4 y_5) z_6))))) => hyp_2 : hol.proof (hol.and x_3 (hol.imp y_2 z_1)) => thm_689 z_1 y_2 x_3 hyp_1 (thm_690 z_1 y_2 x_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z)))))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z)) ;)

(; dict ;)

def thm_692 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and x_3 (hol.imp y_2 z_1)) -> hol.proof (hol.imp (hol.forall hol.bool (x_4 : hol.term hol.bool => hol.forall hol.bool (y_5 : hol.term hol.bool => hol.forall hol.bool (z_6 : hol.term hol.bool => hol.imp (hol.and x_4 (hol.imp y_5 z_6)) (hol.imp (hol.imp x_4 y_5) z_6))))) (hol.imp (hol.imp x_3 y_2) z_1)) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.and x_3 (hol.imp y_2 z_1)) => hyp_2 : hol.proof (hol.forall hol.bool (x_4 : hol.term hol.bool => hol.forall hol.bool (y_5 : hol.term hol.bool => hol.forall hol.bool (z_6 : hol.term hol.bool => hol.imp (hol.and x_4 (hol.imp y_5 z_6)) (hol.imp (hol.imp x_4 y_5) z_6))))) => thm_691 z_1 y_2 x_3 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z)))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z)))))) ;)

(; dict ;)

def thm_693 : hol.proof (hol.imp (hol.forall hol.bool (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3))))) (hol.forall hol.bool (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3)))))) :=
  hyp_1 : hol.proof (hol.forall hol.bool (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3))))) => x_1 : hol.term hol.bool => y_2 : hol.term hol.bool => z_3 : hol.term hol.bool => hyp_2 : hol.proof (hol.and x_1 (hol.imp y_2 z_3)) => thm_692 z_3 y_2 x_1 hyp_2 (thm_686 hyp_1).

(; Theorem: |- ((= \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z))))) \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z))))) ;)

(; dict ;)

def thm_694 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3)))) (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3)))).

(; Theorem: |- ((= \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z))))) \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z))))) ;)

(; dict ;)

def thm_695 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3)))) (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3)))) (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3)))) (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3)))) thm_694 thm_694.

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z)))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z)))))) ;)

(; dict ;)

def thm_696 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3))))) (hol.forall hol.bool (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3)))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3)))) (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3)))) thm_118 thm_695.

(; Theorem: |- ((= \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z)))) \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z)))) ;)

(; dict ;)

def thm_697 : x_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3))) (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3)))) :=
  x_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3))).

(; Theorem: |- ((= \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z)))) \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z)))) ;)

(; dict ;)

def thm_698 : x_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3))) (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3)))) :=
  x_1 : hol.term hol.bool => hol.TRANS (hol.arr hol.bool hol.bool) (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3))) (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3))) (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3))) (thm_697 x_1) (thm_697 x_1).

(; Theorem: |- ((= (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z))))) (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z))))) ;)

(; dict ;)

def thm_699 : x_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3)))) (hol.forall hol.bool (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3))))) :=
  x_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3))) (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3))) thm_118 (thm_698 x_1).

(; Theorem: |- ((= \lambda z. ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z))) \lambda z. ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z))) ;)

(; dict ;)

def thm_700 : y_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (z_3 : hol.term hol.bool => hol.imp (hol.and x_2 (hol.imp y_1 z_3)) (hol.imp (hol.imp x_2 y_1) z_3)) (z_3 : hol.term hol.bool => hol.imp (hol.and x_2 (hol.imp y_1 z_3)) (hol.imp (hol.imp x_2 y_1) z_3))) :=
  y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (z_3 : hol.term hol.bool => hol.imp (hol.and x_2 (hol.imp y_1 z_3)) (hol.imp (hol.imp x_2 y_1) z_3)).

(; Theorem: |- ((= \lambda z. ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z))) \lambda z. ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z))) ;)

(; dict ;)

def thm_701 : y_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (z_3 : hol.term hol.bool => hol.imp (hol.and x_2 (hol.imp y_1 z_3)) (hol.imp (hol.imp x_2 y_1) z_3)) (z_3 : hol.term hol.bool => hol.imp (hol.and x_2 (hol.imp y_1 z_3)) (hol.imp (hol.imp x_2 y_1) z_3))) :=
  y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.TRANS (hol.arr hol.bool hol.bool) (z_3 : hol.term hol.bool => hol.imp (hol.and x_2 (hol.imp y_1 z_3)) (hol.imp (hol.imp x_2 y_1) z_3)) (z_3 : hol.term hol.bool => hol.imp (hol.and x_2 (hol.imp y_1 z_3)) (hol.imp (hol.imp x_2 y_1) z_3)) (z_3 : hol.term hol.bool => hol.imp (hol.and x_2 (hol.imp y_1 z_3)) (hol.imp (hol.imp x_2 y_1) z_3)) (thm_700 y_1 x_2) (thm_700 y_1 x_2).

(; Theorem: |- ((= (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z)))) (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z)))) ;)

(; dict ;)

def thm_702 : y_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_2 (hol.imp y_1 z_3)) (hol.imp (hol.imp x_2 y_1) z_3))) (hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_2 (hol.imp y_1 z_3)) (hol.imp (hol.imp x_2 y_1) z_3)))) :=
  y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (z_3 : hol.term hol.bool => hol.imp (hol.and x_2 (hol.imp y_1 z_3)) (hol.imp (hol.imp x_2 y_1) z_3)) (z_3 : hol.term hol.bool => hol.imp (hol.and x_2 (hol.imp y_1 z_3)) (hol.imp (hol.imp x_2 y_1) z_3)) thm_118 (thm_701 y_1 x_2).

(; Theorem: |- ((= (= (\lambda _11076. ((Data.Bool.==> ((Data.Bool./\ _11076) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> _11076) y)) z)) x))) (= (\lambda _11076. ((Data.Bool.==> ((Data.Bool./\ _11076) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> _11076) y)) z)) x))) ;)

(; dict ;)

def thm_703 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> y_3 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11076_4 : hol.term hol.bool => hol.imp (hol.and __11076_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11076_4 y_3) z_2)) x_1)) (hol.eq hol.bool ((__11076_4 : hol.term hol.bool => hol.imp (hol.and __11076_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11076_4 y_3) z_2)) x_1))) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => y_3 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11076_4 : hol.term hol.bool => hol.imp (hol.and __11076_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11076_4 y_3) z_2)) x_1)).

(; Theorem: |- ((= (\lambda _11076. ((Data.Bool.==> ((Data.Bool./\ _11076) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> _11076) y)) z)) Data.Bool.F)) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) y)) z))) ;)

(; dict ;)

def thm_704 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__11076_3 : hol.term hol.bool => hol.imp (hol.and __11076_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp __11076_3 y_2) z_1)) hol.false) (hol.imp (hol.and hol.false (hol.imp y_2 z_1)) (hol.imp (hol.imp hol.false y_2) z_1))) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__11076_3 : hol.term hol.bool => hol.imp (hol.and __11076_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp __11076_3 y_2) z_1)) hol.false.

(; Theorem: |- ((= ((= (\lambda _11076. ((Data.Bool.==> ((Data.Bool./\ _11076) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> _11076) y)) z)) x)) (\lambda _11076. ((Data.Bool.==> ((Data.Bool./\ _11076) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> _11076) y)) z)) Data.Bool.F))) ((= (\lambda _11076. ((Data.Bool.==> ((Data.Bool./\ _11076) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> _11076) y)) z)) x)) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) y)) z)))) ;)

(; dict ;)

def thm_705 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> y_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11076_4 : hol.term hol.bool => hol.imp (hol.and __11076_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11076_4 y_3) z_2)) x_1) ((__11076_4 : hol.term hol.bool => hol.imp (hol.and __11076_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11076_4 y_3) z_2)) hol.false)) (hol.eq hol.bool ((__11076_4 : hol.term hol.bool => hol.imp (hol.and __11076_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11076_4 y_3) z_2)) x_1) (hol.imp (hol.and hol.false (hol.imp y_3 z_2)) (hol.imp (hol.imp hol.false y_3) z_2)))) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => y_3 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11076_4 : hol.term hol.bool => hol.imp (hol.and __11076_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11076_4 y_3) z_2)) x_1)) (hol.eq hol.bool ((__11076_4 : hol.term hol.bool => hol.imp (hol.and __11076_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11076_4 y_3) z_2)) x_1)) ((__11076_4 : hol.term hol.bool => hol.imp (hol.and __11076_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11076_4 y_3) z_2)) hol.false) (hol.imp (hol.and hol.false (hol.imp y_3 z_2)) (hol.imp (hol.imp hol.false y_3) z_2)) (thm_703 x_1 z_2 y_3) (thm_704 z_2 y_3).

(; Theorem: |- ((= (\lambda _11076. ((Data.Bool.==> ((Data.Bool./\ _11076) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> _11076) y)) z)) x)) ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z))) ;)

(; dict ;)

def thm_706 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> y_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__11076_4 : hol.term hol.bool => hol.imp (hol.and __11076_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11076_4 y_3) z_2)) x_1) (hol.imp (hol.and x_1 (hol.imp y_3 z_2)) (hol.imp (hol.imp x_1 y_3) z_2))) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => y_3 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__11076_4 : hol.term hol.bool => hol.imp (hol.and __11076_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11076_4 y_3) z_2)) x_1.

(; Theorem: |- ((= (= (\lambda _11076. ((Data.Bool.==> ((Data.Bool./\ _11076) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> _11076) y)) z)) x))) (= ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z)))) ;)

(; dict ;)

def thm_707 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> y_3 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11076_4 : hol.term hol.bool => hol.imp (hol.and __11076_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11076_4 y_3) z_2)) x_1)) (hol.eq hol.bool (hol.imp (hol.and x_1 (hol.imp y_3 z_2)) (hol.imp (hol.imp x_1 y_3) z_2)))) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => y_3 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__11076_4 : hol.term hol.bool => hol.imp (hol.and __11076_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11076_4 y_3) z_2)) x_1) (hol.imp (hol.and x_1 (hol.imp y_3 z_2)) (hol.imp (hol.imp x_1 y_3) z_2)) thm_64 (thm_706 x_1 z_2 y_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) y)) z))) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) y)) z))) ;)

(; dict ;)

def thm_708 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and hol.false (hol.imp y_2 z_1)) (hol.imp (hol.imp hol.false y_2) z_1)) (hol.imp (hol.and hol.false (hol.imp y_2 z_1)) (hol.imp (hol.imp hol.false y_2) z_1))) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.and hol.false (hol.imp y_2 z_1)) (hol.imp (hol.imp hol.false y_2) z_1)).

(; Theorem: |- ((= ((= (\lambda _11076. ((Data.Bool.==> ((Data.Bool./\ _11076) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> _11076) y)) z)) x)) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) y)) z)))) ((= ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z))) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) y)) z)))) ;)

(; dict ;)

def thm_709 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> y_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11076_4 : hol.term hol.bool => hol.imp (hol.and __11076_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11076_4 y_3) z_2)) x_1) (hol.imp (hol.and hol.false (hol.imp y_3 z_2)) (hol.imp (hol.imp hol.false y_3) z_2))) (hol.eq hol.bool (hol.imp (hol.and x_1 (hol.imp y_3 z_2)) (hol.imp (hol.imp x_1 y_3) z_2)) (hol.imp (hol.and hol.false (hol.imp y_3 z_2)) (hol.imp (hol.imp hol.false y_3) z_2)))) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => y_3 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11076_4 : hol.term hol.bool => hol.imp (hol.and __11076_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11076_4 y_3) z_2)) x_1)) (hol.eq hol.bool (hol.imp (hol.and x_1 (hol.imp y_3 z_2)) (hol.imp (hol.imp x_1 y_3) z_2))) (hol.imp (hol.and hol.false (hol.imp y_3 z_2)) (hol.imp (hol.imp hol.false y_3) z_2)) (hol.imp (hol.and hol.false (hol.imp y_3 z_2)) (hol.imp (hol.imp hol.false y_3) z_2)) (thm_707 x_1 z_2 y_3) (thm_708 z_2 y_3).

(; Theorem: |- ((= ((= (\lambda _11076. ((Data.Bool.==> ((Data.Bool./\ _11076) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> _11076) y)) z)) x)) (\lambda _11076. ((Data.Bool.==> ((Data.Bool./\ _11076) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> _11076) y)) z)) Data.Bool.F))) ((= ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z))) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) y)) z)))) ;)

(; dict ;)

def thm_710 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> y_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11076_4 : hol.term hol.bool => hol.imp (hol.and __11076_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11076_4 y_3) z_2)) x_1) ((__11076_4 : hol.term hol.bool => hol.imp (hol.and __11076_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11076_4 y_3) z_2)) hol.false)) (hol.eq hol.bool (hol.imp (hol.and x_1 (hol.imp y_3 z_2)) (hol.imp (hol.imp x_1 y_3) z_2)) (hol.imp (hol.and hol.false (hol.imp y_3 z_2)) (hol.imp (hol.imp hol.false y_3) z_2)))) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => y_3 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__11076_4 : hol.term hol.bool => hol.imp (hol.and __11076_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11076_4 y_3) z_2)) x_1) ((__11076_4 : hol.term hol.bool => hol.imp (hol.and __11076_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11076_4 y_3) z_2)) hol.false)) (hol.eq hol.bool ((__11076_4 : hol.term hol.bool => hol.imp (hol.and __11076_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11076_4 y_3) z_2)) x_1) (hol.imp (hol.and hol.false (hol.imp y_3 z_2)) (hol.imp (hol.imp hol.false y_3) z_2))) (hol.eq hol.bool (hol.imp (hol.and x_1 (hol.imp y_3 z_2)) (hol.imp (hol.imp x_1 y_3) z_2)) (hol.imp (hol.and hol.false (hol.imp y_3 z_2)) (hol.imp (hol.imp hol.false y_3) z_2))) (thm_705 x_1 z_2 y_3) (thm_709 x_1 z_2 y_3).

(; Theorem: |- ((= \lambda _11076. ((Data.Bool.==> ((Data.Bool./\ _11076) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> _11076) y)) z))) \lambda _11076. ((Data.Bool.==> ((Data.Bool./\ _11076) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> _11076) y)) z))) ;)

(; dict ;)

def thm_711 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__11076_3 : hol.term hol.bool => hol.imp (hol.and __11076_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp __11076_3 y_2) z_1)) (__11076_3 : hol.term hol.bool => hol.imp (hol.and __11076_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp __11076_3 y_2) z_1))) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__11076_3 : hol.term hol.bool => hol.imp (hol.and __11076_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp __11076_3 y_2) z_1)).

(; Theorem: |- ((= x) Data.Bool.F) ;)

(; dict ;)

def thm_712 : x_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.false) -> hol.proof (hol.eq hol.bool x_1 hol.false) :=
  x_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.false) => hyp_1.

(; Theorem: |- ((= (\lambda _11076. ((Data.Bool.==> ((Data.Bool./\ _11076) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> _11076) y)) z)) x)) (\lambda _11076. ((Data.Bool.==> ((Data.Bool./\ _11076) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> _11076) y)) z)) Data.Bool.F)) ;)

(; dict ;)

def thm_713 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> y_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.false) -> hol.proof (hol.eq hol.bool ((__11076_4 : hol.term hol.bool => hol.imp (hol.and __11076_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11076_4 y_3) z_2)) x_1) ((__11076_4 : hol.term hol.bool => hol.imp (hol.and __11076_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11076_4 y_3) z_2)) hol.false)) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => y_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.false) => hol.APP_THM hol.bool hol.bool (__11076_4 : hol.term hol.bool => hol.imp (hol.and __11076_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11076_4 y_3) z_2)) (__11076_4 : hol.term hol.bool => hol.imp (hol.and __11076_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11076_4 y_3) z_2)) x_1 hol.false (thm_711 z_2 y_3) (thm_712 x_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z))) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) y)) z))) ;)

(; dict ;)

def thm_714 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_3 hol.false) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1)) (hol.imp (hol.and hol.false (hol.imp y_2 z_1)) (hol.imp (hol.imp hol.false y_2) z_1))) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_3 hol.false) => hol.EQ_MP (hol.eq hol.bool ((__11076_4 : hol.term hol.bool => hol.imp (hol.and __11076_4 (hol.imp y_2 z_1)) (hol.imp (hol.imp __11076_4 y_2) z_1)) x_3) ((__11076_4 : hol.term hol.bool => hol.imp (hol.and __11076_4 (hol.imp y_2 z_1)) (hol.imp (hol.imp __11076_4 y_2) z_1)) hol.false)) (hol.eq hol.bool (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1)) (hol.imp (hol.and hol.false (hol.imp y_2 z_1)) (hol.imp (hol.imp hol.false y_2) z_1))) (thm_710 x_3 z_1 y_2) (thm_713 x_3 z_1 y_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) y)) z))) ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z))) ;)

(; dict ;)

def thm_715 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> y_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and hol.false (hol.imp y_3 z_2)) (hol.imp (hol.imp hol.false y_3) z_2)) (hol.imp (hol.and x_1 (hol.imp y_3 z_2)) (hol.imp (hol.imp x_1 y_3) z_2))) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => y_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.false) => hol.SYM hol.bool (hol.imp (hol.and x_1 (hol.imp y_3 z_2)) (hol.imp (hol.imp x_1 y_3) z_2)) (hol.imp (hol.and hol.false (hol.imp y_3 z_2)) (hol.imp (hol.imp hol.false y_3) z_2)) (thm_714 z_2 y_3 x_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> y) z))) Data.Bool.F) ;)

(; dict ;)

def thm_716 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.false (hol.imp y_2 z_1)) hol.false) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_162 t_1) (hol.imp y_2 z_1).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> y) z)))) (Data.Bool.==> Data.Bool.F)) ;)

(; dict ;)

def thm_717 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and hol.false (hol.imp y_2 z_1))) (hol.imp hol.false)) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.and hol.false (hol.imp y_2 z_1)) hol.false thm_107 (thm_716 z_1 y_2).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) y)) Data.Bool.T) ;)

(; dict ;)

def thm_718 : y_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.false y_1) hol.true) :=
  y_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_460 t_1) y_1.

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool.==> Data.Bool.F) y))) (Data.Bool.==> Data.Bool.T)) ;)

(; dict ;)

def thm_719 : y_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.imp hol.false y_1)) (hol.imp hol.true)) :=
  y_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.imp hol.false y_1) hol.true thm_107 (thm_718 y_1).

(; Theorem: |- ((= z) z) ;)

(; dict ;)

def thm_720 : z_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool z_1 z_1) :=
  z_1 : hol.term hol.bool => hol.REFL hol.bool z_1.

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) y)) z)) ((Data.Bool.==> Data.Bool.T) z)) ;)

(; dict ;)

def thm_721 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp hol.false y_2) z_1) (hol.imp hol.true z_1)) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.imp (hol.imp hol.false y_2)) (hol.imp hol.true) z_1 z_1 (thm_719 y_2) (thm_720 z_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) z)) z) ;)

(; dict ;)

def thm_722 : z_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.true z_1) z_1) :=
  z_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_450 t_1) z_1.

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) y)) z)) z) ;)

(; dict ;)

def thm_723 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp hol.false y_2) z_1) z_1) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.imp (hol.imp hol.false y_2) z_1) (hol.imp hol.true z_1) z_1 (thm_721 z_1 y_2) (thm_722 z_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) y)) z))) ((Data.Bool.==> Data.Bool.F) z)) ;)

(; dict ;)

def thm_724 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and hol.false (hol.imp y_2 z_1)) (hol.imp (hol.imp hol.false y_2) z_1)) (hol.imp hol.false z_1)) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and hol.false (hol.imp y_2 z_1))) (hol.imp hol.false) (hol.imp (hol.imp hol.false y_2) z_1) z_1 (thm_717 z_1 y_2) (thm_723 z_1 y_2).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) z)) Data.Bool.T) ;)

(; dict ;)

def thm_725 : z_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.false z_1) hol.true) :=
  z_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_460 t_1) z_1.

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) y)) z))) Data.Bool.T) ;)

(; dict ;)

def thm_726 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and hol.false (hol.imp y_2 z_1)) (hol.imp (hol.imp hol.false y_2) z_1)) hol.true) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.imp (hol.and hol.false (hol.imp y_2 z_1)) (hol.imp (hol.imp hol.false y_2) z_1)) (hol.imp hol.false z_1) hol.true (thm_724 z_1 y_2) (thm_725 z_1).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) y)) z))) ;)

(; dict ;)

def thm_727 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.imp (hol.and hol.false (hol.imp y_2 z_1)) (hol.imp (hol.imp hol.false y_2) z_1))) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.SYM hol.bool (hol.imp (hol.and hol.false (hol.imp y_2 z_1)) (hol.imp (hol.imp hol.false y_2) z_1)) hol.true (thm_726 z_1 y_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) y)) z)) ;)

(; dict ;)

def thm_728 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.and hol.false (hol.imp y_2 z_1)) (hol.imp (hol.imp hol.false y_2) z_1)) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.EQ_MP hol.true (hol.imp (hol.and hol.false (hol.imp y_2 z_1)) (hol.imp (hol.imp hol.false y_2) z_1)) (thm_727 z_1 y_2) thm_15.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z)) ;)

(; dict ;)

def thm_729 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_3 hol.false) -> hol.proof (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1)) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_3 hol.false) => hol.EQ_MP (hol.imp (hol.and hol.false (hol.imp y_2 z_1)) (hol.imp (hol.imp hol.false y_2) z_1)) (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1)) (thm_715 x_3 z_1 y_2 hyp_1) (thm_728 z_1 y_2).

(; Theorem: |- ((Data.Bool.==> ((= x) Data.Bool.F)) ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z))) ;)

(; dict ;)

def thm_730 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool x_3 hol.false) (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1))) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_3 hol.false) => thm_729 z_1 y_2 x_3 hyp_1.

(; Theorem: |- ((= (= (\lambda _11074. ((Data.Bool.==> ((Data.Bool./\ _11074) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> _11074) y)) z)) x))) (= (\lambda _11074. ((Data.Bool.==> ((Data.Bool./\ _11074) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> _11074) y)) z)) x))) ;)

(; dict ;)

def thm_731 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> y_3 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11074_4 : hol.term hol.bool => hol.imp (hol.and __11074_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11074_4 y_3) z_2)) x_1)) (hol.eq hol.bool ((__11074_4 : hol.term hol.bool => hol.imp (hol.and __11074_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11074_4 y_3) z_2)) x_1))) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => y_3 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11074_4 : hol.term hol.bool => hol.imp (hol.and __11074_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11074_4 y_3) z_2)) x_1)).

(; Theorem: |- ((= (\lambda _11074. ((Data.Bool.==> ((Data.Bool./\ _11074) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> _11074) y)) z)) Data.Bool.T)) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) y)) z))) ;)

(; dict ;)

def thm_732 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__11074_3 : hol.term hol.bool => hol.imp (hol.and __11074_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp __11074_3 y_2) z_1)) hol.true) (hol.imp (hol.and hol.true (hol.imp y_2 z_1)) (hol.imp (hol.imp hol.true y_2) z_1))) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__11074_3 : hol.term hol.bool => hol.imp (hol.and __11074_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp __11074_3 y_2) z_1)) hol.true.

(; Theorem: |- ((= ((= (\lambda _11074. ((Data.Bool.==> ((Data.Bool./\ _11074) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> _11074) y)) z)) x)) (\lambda _11074. ((Data.Bool.==> ((Data.Bool./\ _11074) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> _11074) y)) z)) Data.Bool.T))) ((= (\lambda _11074. ((Data.Bool.==> ((Data.Bool./\ _11074) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> _11074) y)) z)) x)) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) y)) z)))) ;)

(; dict ;)

def thm_733 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> y_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11074_4 : hol.term hol.bool => hol.imp (hol.and __11074_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11074_4 y_3) z_2)) x_1) ((__11074_4 : hol.term hol.bool => hol.imp (hol.and __11074_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11074_4 y_3) z_2)) hol.true)) (hol.eq hol.bool ((__11074_4 : hol.term hol.bool => hol.imp (hol.and __11074_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11074_4 y_3) z_2)) x_1) (hol.imp (hol.and hol.true (hol.imp y_3 z_2)) (hol.imp (hol.imp hol.true y_3) z_2)))) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => y_3 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11074_4 : hol.term hol.bool => hol.imp (hol.and __11074_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11074_4 y_3) z_2)) x_1)) (hol.eq hol.bool ((__11074_4 : hol.term hol.bool => hol.imp (hol.and __11074_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11074_4 y_3) z_2)) x_1)) ((__11074_4 : hol.term hol.bool => hol.imp (hol.and __11074_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11074_4 y_3) z_2)) hol.true) (hol.imp (hol.and hol.true (hol.imp y_3 z_2)) (hol.imp (hol.imp hol.true y_3) z_2)) (thm_731 x_1 z_2 y_3) (thm_732 z_2 y_3).

(; Theorem: |- ((= (\lambda _11074. ((Data.Bool.==> ((Data.Bool./\ _11074) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> _11074) y)) z)) x)) ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z))) ;)

(; dict ;)

def thm_734 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> y_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__11074_4 : hol.term hol.bool => hol.imp (hol.and __11074_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11074_4 y_3) z_2)) x_1) (hol.imp (hol.and x_1 (hol.imp y_3 z_2)) (hol.imp (hol.imp x_1 y_3) z_2))) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => y_3 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__11074_4 : hol.term hol.bool => hol.imp (hol.and __11074_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11074_4 y_3) z_2)) x_1.

(; Theorem: |- ((= (= (\lambda _11074. ((Data.Bool.==> ((Data.Bool./\ _11074) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> _11074) y)) z)) x))) (= ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z)))) ;)

(; dict ;)

def thm_735 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> y_3 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11074_4 : hol.term hol.bool => hol.imp (hol.and __11074_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11074_4 y_3) z_2)) x_1)) (hol.eq hol.bool (hol.imp (hol.and x_1 (hol.imp y_3 z_2)) (hol.imp (hol.imp x_1 y_3) z_2)))) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => y_3 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__11074_4 : hol.term hol.bool => hol.imp (hol.and __11074_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11074_4 y_3) z_2)) x_1) (hol.imp (hol.and x_1 (hol.imp y_3 z_2)) (hol.imp (hol.imp x_1 y_3) z_2)) thm_64 (thm_734 x_1 z_2 y_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) y)) z))) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) y)) z))) ;)

(; dict ;)

def thm_736 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and hol.true (hol.imp y_2 z_1)) (hol.imp (hol.imp hol.true y_2) z_1)) (hol.imp (hol.and hol.true (hol.imp y_2 z_1)) (hol.imp (hol.imp hol.true y_2) z_1))) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.and hol.true (hol.imp y_2 z_1)) (hol.imp (hol.imp hol.true y_2) z_1)).

(; Theorem: |- ((= ((= (\lambda _11074. ((Data.Bool.==> ((Data.Bool./\ _11074) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> _11074) y)) z)) x)) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) y)) z)))) ((= ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z))) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) y)) z)))) ;)

(; dict ;)

def thm_737 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> y_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11074_4 : hol.term hol.bool => hol.imp (hol.and __11074_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11074_4 y_3) z_2)) x_1) (hol.imp (hol.and hol.true (hol.imp y_3 z_2)) (hol.imp (hol.imp hol.true y_3) z_2))) (hol.eq hol.bool (hol.imp (hol.and x_1 (hol.imp y_3 z_2)) (hol.imp (hol.imp x_1 y_3) z_2)) (hol.imp (hol.and hol.true (hol.imp y_3 z_2)) (hol.imp (hol.imp hol.true y_3) z_2)))) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => y_3 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11074_4 : hol.term hol.bool => hol.imp (hol.and __11074_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11074_4 y_3) z_2)) x_1)) (hol.eq hol.bool (hol.imp (hol.and x_1 (hol.imp y_3 z_2)) (hol.imp (hol.imp x_1 y_3) z_2))) (hol.imp (hol.and hol.true (hol.imp y_3 z_2)) (hol.imp (hol.imp hol.true y_3) z_2)) (hol.imp (hol.and hol.true (hol.imp y_3 z_2)) (hol.imp (hol.imp hol.true y_3) z_2)) (thm_735 x_1 z_2 y_3) (thm_736 z_2 y_3).

(; Theorem: |- ((= ((= (\lambda _11074. ((Data.Bool.==> ((Data.Bool./\ _11074) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> _11074) y)) z)) x)) (\lambda _11074. ((Data.Bool.==> ((Data.Bool./\ _11074) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> _11074) y)) z)) Data.Bool.T))) ((= ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z))) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) y)) z)))) ;)

(; dict ;)

def thm_738 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> y_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11074_4 : hol.term hol.bool => hol.imp (hol.and __11074_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11074_4 y_3) z_2)) x_1) ((__11074_4 : hol.term hol.bool => hol.imp (hol.and __11074_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11074_4 y_3) z_2)) hol.true)) (hol.eq hol.bool (hol.imp (hol.and x_1 (hol.imp y_3 z_2)) (hol.imp (hol.imp x_1 y_3) z_2)) (hol.imp (hol.and hol.true (hol.imp y_3 z_2)) (hol.imp (hol.imp hol.true y_3) z_2)))) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => y_3 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__11074_4 : hol.term hol.bool => hol.imp (hol.and __11074_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11074_4 y_3) z_2)) x_1) ((__11074_4 : hol.term hol.bool => hol.imp (hol.and __11074_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11074_4 y_3) z_2)) hol.true)) (hol.eq hol.bool ((__11074_4 : hol.term hol.bool => hol.imp (hol.and __11074_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11074_4 y_3) z_2)) x_1) (hol.imp (hol.and hol.true (hol.imp y_3 z_2)) (hol.imp (hol.imp hol.true y_3) z_2))) (hol.eq hol.bool (hol.imp (hol.and x_1 (hol.imp y_3 z_2)) (hol.imp (hol.imp x_1 y_3) z_2)) (hol.imp (hol.and hol.true (hol.imp y_3 z_2)) (hol.imp (hol.imp hol.true y_3) z_2))) (thm_733 x_1 z_2 y_3) (thm_737 x_1 z_2 y_3).

(; Theorem: |- ((= \lambda _11074. ((Data.Bool.==> ((Data.Bool./\ _11074) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> _11074) y)) z))) \lambda _11074. ((Data.Bool.==> ((Data.Bool./\ _11074) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> _11074) y)) z))) ;)

(; dict ;)

def thm_739 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__11074_3 : hol.term hol.bool => hol.imp (hol.and __11074_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp __11074_3 y_2) z_1)) (__11074_3 : hol.term hol.bool => hol.imp (hol.and __11074_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp __11074_3 y_2) z_1))) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__11074_3 : hol.term hol.bool => hol.imp (hol.and __11074_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp __11074_3 y_2) z_1)).

(; Theorem: |- ((= x) Data.Bool.T) ;)

(; dict ;)

def thm_740 : x_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.true) -> hol.proof (hol.eq hol.bool x_1 hol.true) :=
  x_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.true) => hyp_1.

(; Theorem: |- ((= (\lambda _11074. ((Data.Bool.==> ((Data.Bool./\ _11074) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> _11074) y)) z)) x)) (\lambda _11074. ((Data.Bool.==> ((Data.Bool./\ _11074) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> _11074) y)) z)) Data.Bool.T)) ;)

(; dict ;)

def thm_741 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> y_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.true) -> hol.proof (hol.eq hol.bool ((__11074_4 : hol.term hol.bool => hol.imp (hol.and __11074_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11074_4 y_3) z_2)) x_1) ((__11074_4 : hol.term hol.bool => hol.imp (hol.and __11074_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11074_4 y_3) z_2)) hol.true)) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => y_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.true) => hol.APP_THM hol.bool hol.bool (__11074_4 : hol.term hol.bool => hol.imp (hol.and __11074_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11074_4 y_3) z_2)) (__11074_4 : hol.term hol.bool => hol.imp (hol.and __11074_4 (hol.imp y_3 z_2)) (hol.imp (hol.imp __11074_4 y_3) z_2)) x_1 hol.true (thm_739 z_2 y_3) (thm_740 x_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z))) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) y)) z))) ;)

(; dict ;)

def thm_742 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_3 hol.true) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1)) (hol.imp (hol.and hol.true (hol.imp y_2 z_1)) (hol.imp (hol.imp hol.true y_2) z_1))) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_3 hol.true) => hol.EQ_MP (hol.eq hol.bool ((__11074_4 : hol.term hol.bool => hol.imp (hol.and __11074_4 (hol.imp y_2 z_1)) (hol.imp (hol.imp __11074_4 y_2) z_1)) x_3) ((__11074_4 : hol.term hol.bool => hol.imp (hol.and __11074_4 (hol.imp y_2 z_1)) (hol.imp (hol.imp __11074_4 y_2) z_1)) hol.true)) (hol.eq hol.bool (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1)) (hol.imp (hol.and hol.true (hol.imp y_2 z_1)) (hol.imp (hol.imp hol.true y_2) z_1))) (thm_738 x_3 z_1 y_2) (thm_741 x_3 z_1 y_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) y)) z))) ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z))) ;)

(; dict ;)

def thm_743 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> y_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and hol.true (hol.imp y_3 z_2)) (hol.imp (hol.imp hol.true y_3) z_2)) (hol.imp (hol.and x_1 (hol.imp y_3 z_2)) (hol.imp (hol.imp x_1 y_3) z_2))) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => y_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.true) => hol.SYM hol.bool (hol.imp (hol.and x_1 (hol.imp y_3 z_2)) (hol.imp (hol.imp x_1 y_3) z_2)) (hol.imp (hol.and hol.true (hol.imp y_3 z_2)) (hol.imp (hol.imp hol.true y_3) z_2)) (thm_742 z_2 y_3 x_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> y) z))) ((Data.Bool.==> y) z)) ;)

(; dict ;)

def thm_744 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.true (hol.imp y_2 z_1)) (hol.imp y_2 z_1)) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_124 t_1) (hol.imp y_2 z_1).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> y) z)))) (Data.Bool.==> ((Data.Bool.==> y) z))) ;)

(; dict ;)

def thm_745 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and hol.true (hol.imp y_2 z_1))) (hol.imp (hol.imp y_2 z_1))) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.and hol.true (hol.imp y_2 z_1)) (hol.imp y_2 z_1) thm_107 (thm_744 z_1 y_2).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) y)) y) ;)

(; dict ;)

def thm_746 : y_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.true y_1) y_1) :=
  y_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_450 t_1) y_1.

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool.==> Data.Bool.T) y))) (Data.Bool.==> y)) ;)

(; dict ;)

def thm_747 : y_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.imp hol.true y_1)) (hol.imp y_1)) :=
  y_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.imp hol.true y_1) y_1 thm_107 (thm_746 y_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) y)) z)) ((Data.Bool.==> y) z)) ;)

(; dict ;)

def thm_748 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp hol.true y_2) z_1) (hol.imp y_2 z_1)) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.imp (hol.imp hol.true y_2)) (hol.imp y_2) z_1 z_1 (thm_747 y_2) (thm_720 z_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) y)) z))) ((Data.Bool.==> ((Data.Bool.==> y) z)) ((Data.Bool.==> y) z))) ;)

(; dict ;)

def thm_749 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and hol.true (hol.imp y_2 z_1)) (hol.imp (hol.imp hol.true y_2) z_1)) (hol.imp (hol.imp y_2 z_1) (hol.imp y_2 z_1))) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and hol.true (hol.imp y_2 z_1))) (hol.imp (hol.imp y_2 z_1)) (hol.imp (hol.imp hol.true y_2) z_1) (hol.imp y_2 z_1) (thm_745 z_1 y_2) (thm_748 z_1 y_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> y) z)) ((Data.Bool.==> y) z))) Data.Bool.T) ;)

(; dict ;)

def thm_750 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp y_2 z_1) (hol.imp y_2 z_1)) hol.true) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_468 t_1) (hol.imp y_2 z_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) y)) z))) Data.Bool.T) ;)

(; dict ;)

def thm_751 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and hol.true (hol.imp y_2 z_1)) (hol.imp (hol.imp hol.true y_2) z_1)) hol.true) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.imp (hol.and hol.true (hol.imp y_2 z_1)) (hol.imp (hol.imp hol.true y_2) z_1)) (hol.imp (hol.imp y_2 z_1) (hol.imp y_2 z_1)) hol.true (thm_749 z_1 y_2) (thm_750 z_1 y_2).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) y)) z))) ;)

(; dict ;)

def thm_752 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.imp (hol.and hol.true (hol.imp y_2 z_1)) (hol.imp (hol.imp hol.true y_2) z_1))) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.SYM hol.bool (hol.imp (hol.and hol.true (hol.imp y_2 z_1)) (hol.imp (hol.imp hol.true y_2) z_1)) hol.true (thm_751 z_1 y_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) y)) z)) ;)

(; dict ;)

def thm_753 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.and hol.true (hol.imp y_2 z_1)) (hol.imp (hol.imp hol.true y_2) z_1)) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.EQ_MP hol.true (hol.imp (hol.and hol.true (hol.imp y_2 z_1)) (hol.imp (hol.imp hol.true y_2) z_1)) (thm_752 z_1 y_2) thm_15.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z)) ;)

(; dict ;)

def thm_754 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_3 hol.true) -> hol.proof (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1)) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_3 hol.true) => hol.EQ_MP (hol.imp (hol.and hol.true (hol.imp y_2 z_1)) (hol.imp (hol.imp hol.true y_2) z_1)) (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1)) (thm_743 x_3 z_1 y_2 hyp_1) (thm_753 z_1 y_2).

(; Theorem: |- ((Data.Bool.==> ((= x) Data.Bool.T)) ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z))) ;)

(; dict ;)

def thm_755 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool x_3 hol.true) (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1))) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_3 hol.true) => thm_754 z_1 y_2 x_3 hyp_1.

(; Theorem: |- ((Data.Bool.\/ ((= x) Data.Bool.T)) ((= x) Data.Bool.F)) ;)

(; dict ;)

def thm_756 : x_1 : hol.term hol.bool -> hol.proof (hol.or (hol.eq hol.bool x_1 hol.true) (hol.eq hol.bool x_1 hol.false)) :=
  x_1 : hol.term hol.bool => thm_26 x_1.

(; Theorem: |- ((= (= ((Data.Bool.\/ P) Q))) (= ((Data.Bool.\/ P) Q))) ;)

(; dict ;)

def thm_757 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or P_2 Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or P_2 Q_1)).

(; Theorem: |- ((= (\lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) Q)) (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r)))) ;)

(; dict ;)

def thm_758 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3)))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1.

(; Theorem: |- ((= ((= ((Data.Bool.\/ P) Q)) (\lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) Q))) ((= ((Data.Bool.\/ P) Q)) (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r))))) ;)

(; dict ;)

def thm_759 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or P_2 Q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or P_2 Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1)) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) (thm_757 Q_1 P_2) (thm_758 Q_1 P_2).

(; Theorem: |- ((= (= (Data.Bool.\/ P))) (= (Data.Bool.\/ P))) ;)

(; dict ;)

def thm_760 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1))) :=
  P_1 : hol.term hol.bool => hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)).

(; Theorem: |- ((= (\lambda p. \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> p) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) P)) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r)))) ;)

(; dict ;)

def thm_761 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))) :=
  P_1 : hol.term hol.bool => hol.BETA_CONV hol.bool (hol.arr hol.bool hol.bool) (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1.

(; Theorem: |- ((= ((= (Data.Bool.\/ P)) (\lambda p. \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> p) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) P))) ((= (Data.Bool.\/ P)) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))))) ;)

(; dict ;)

def thm_762 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3))))) :=
  P_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3))) (thm_760 P_1) (thm_761 P_1).

(; Theorem: |- ((= P) P) ;)

(; dict ;)

def thm_763 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool P_1 P_1) :=
  P_1 : hol.term hol.bool => hol.REFL hol.bool P_1.

(; Theorem: |- ((= (Data.Bool.\/ P)) (\lambda p. \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> p) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) P)) ;)

(; dict ;)

def thm_764 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1)) :=
  P_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1 P_1 thm_27 (thm_763 P_1).

(; Theorem: |- ((= (Data.Bool.\/ P)) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r)))) ;)

(; dict ;)

def thm_765 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))) :=
  P_1 : hol.term hol.bool => hol.EQ_MP (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))) (thm_762 P_1) (thm_764 P_1).

(; Theorem: |- ((= Q) Q) ;)

(; dict ;)

def thm_766 : Q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool Q_1 Q_1) :=
  Q_1 : hol.term hol.bool => hol.REFL hol.bool Q_1.

(; Theorem: |- ((= ((Data.Bool.\/ P) Q)) (\lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) Q)) ;)

(; dict ;)

def thm_767 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or P_2 Q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1)) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.or P_2) (q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1 Q_1 (thm_765 P_2) (thm_766 Q_1).

(; Theorem: |- ((= ((Data.Bool.\/ P) Q)) (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r)))) ;)

(; dict ;)

def thm_768 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3)))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or P_2 Q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3)))) (thm_759 Q_1 P_2) (thm_767 Q_1 P_2).

(; Theorem: |- ((Data.Bool.\/ P) Q) ;)

(; dict ;)

def thm_769 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.or P_2 Q_1) -> hol.proof (hol.or P_2 Q_1) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.or P_2 Q_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r))) ;)

(; dict ;)

def thm_770 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.or P_2 Q_1) -> hol.proof (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.or P_2 Q_1) => hol.EQ_MP (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) (thm_768 Q_1 P_2) (thm_769 Q_1 P_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> P) R)) ((Data.Bool.==> ((Data.Bool.==> Q) R)) R)) ;)

(; dict ;)

def thm_771 : Q_1 : hol.term hol.bool -> R_2 : hol.term hol.bool -> P_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.or P_3 Q_1) -> hol.proof (hol.imp (hol.imp P_3 R_2) (hol.imp (hol.imp Q_1 R_2) R_2)) :=
  Q_1 : hol.term hol.bool => R_2 : hol.term hol.bool => P_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.or P_3 Q_1) => thm_770 Q_1 P_3 hyp_1 R_2.

(; Theorem: |- ((Data.Bool.==> P) R) ;)

(; dict ;)

def thm_772 : R_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp P_2 R_1) -> hol.proof (hol.imp P_2 R_1) :=
  R_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_1) => hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> Q) R)) R) ;)

(; dict ;)

def thm_773 : P_1 : hol.term hol.bool -> R_2 : hol.term hol.bool -> Q_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp P_1 R_2) -> hyp_2 : hol.proof (hol.or P_1 Q_3) -> hol.proof (hol.imp (hol.imp Q_3 R_2) R_2) :=
  P_1 : hol.term hol.bool => R_2 : hol.term hol.bool => Q_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_1 R_2) => hyp_2 : hol.proof (hol.or P_1 Q_3) => thm_771 Q_3 R_2 P_1 hyp_2 (thm_772 R_2 P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> Q) R) ;)

(; dict ;)

def thm_774 : R_1 : hol.term hol.bool -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp Q_2 R_1) -> hol.proof (hol.imp Q_2 R_1) :=
  R_1 : hol.term hol.bool => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp Q_2 R_1) => hyp_1.

(; Theorem: |- R ;)

(; dict ;)

def thm_775 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> R_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp P_2 R_3) -> hyp_2 : hol.proof (hol.imp Q_1 R_3) -> hyp_3 : hol.proof (hol.or P_2 Q_1) -> hol.proof R_3 :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_773 P_2 R_3 Q_1 hyp_1 hyp_3 (thm_774 R_3 Q_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z)) ;)

(; dict ;)

def thm_776 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool x_3 hol.false) (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool x_3 hol.true) (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1))) -> hyp_3 : hol.proof (hol.or (hol.eq hol.bool x_3 hol.true) (hol.eq hol.bool x_3 hol.false)) -> hol.proof (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1)) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool x_3 hol.false) (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool x_3 hol.true) (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1))) => hyp_3 : hol.proof (hol.or (hol.eq hol.bool x_3 hol.true) (hol.eq hol.bool x_3 hol.false)) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_775 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.eq hol.bool x_3 hol.false) (hol.eq hol.bool x_3 hol.true) (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1)) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z)) ;)

(; dict ;)

def thm_777 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool x_3 hol.false) (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool x_3 hol.true) (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1))) -> hol.proof (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1)) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool x_3 hol.false) (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool x_3 hol.true) (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1))) => hol.PROVE_HYP (hol.or (hol.eq hol.bool x_3 hol.true) (hol.eq hol.bool x_3 hol.false)) (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1)) (thm_756 x_3) (hyp_3 : hol.proof (hol.or (hol.eq hol.bool x_3 hol.true) (hol.eq hol.bool x_3 hol.false)) => thm_776 z_1 y_2 x_3 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z)) ;)

(; dict ;)

def thm_778 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool x_3 hol.false) (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1))) -> hol.proof (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1)) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool x_3 hol.false) (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1))) => hol.PROVE_HYP (hol.imp (hol.eq hol.bool x_3 hol.true) (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1))) (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1)) (thm_755 z_1 y_2 x_3) (hyp_2 : hol.proof (hol.imp (hol.eq hol.bool x_3 hol.true) (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1))) => thm_777 z_1 y_2 x_3 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z)) ;)

(; dict ;)

def thm_779 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hol.proof (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1)) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hol.PROVE_HYP (hol.imp (hol.eq hol.bool x_3 hol.false) (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1))) (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1)) (thm_730 z_1 y_2 x_3) (hyp_1 : hol.proof (hol.imp (hol.eq hol.bool x_3 hol.false) (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1))) => thm_778 z_1 y_2 x_3 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z))) ;)

(; dict ;)

def thm_780 : y_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_2 (hol.imp y_1 z_3)) (hol.imp (hol.imp x_2 y_1) z_3))) :=
  y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => z_3 : hol.term hol.bool => hol.EQ_MP (hol.imp (hol.and x_2 (hol.imp y_1 z_3)) (hol.imp (hol.imp x_2 y_1) z_3)) (hol.imp (hol.and x_2 (hol.imp y_1 z_3)) (hol.imp (hol.imp x_2 y_1) z_3)) (thm_684 z_3 y_1 x_2) (hol.EQ_MP (hol.imp (hol.and x_2 (hol.imp y_1 z_3)) (hol.imp (hol.imp x_2 y_1) z_3)) (hol.imp (hol.and x_2 (hol.imp y_1 z_3)) (hol.imp (hol.imp x_2 y_1) z_3)) (thm_684 z_3 y_1 x_2) (thm_779 z_3 y_1 x_2)).

(; Theorem: |- (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z)))) ;)

(; dict ;)

def thm_781 : x_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3)))) :=
  x_1 : hol.term hol.bool => y_2 : hol.term hol.bool => hol.EQ_MP (hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3))) (hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3))) (thm_702 y_2 x_1) (thm_780 y_2 x_1).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ x) ((Data.Bool.==> y) z))) ((Data.Bool.==> ((Data.Bool.==> x) y)) z))))) ;)

(; dict ;)

def thm_782 : hol.proof (hol.forall hol.bool (x_1 : hol.term hol.bool => hol.forall hol.bool (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3))))) :=
  x_1 : hol.term hol.bool => hol.EQ_MP (hol.forall hol.bool (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3)))) (hol.forall hol.bool (y_2 : hol.term hol.bool => hol.forall hol.bool (z_3 : hol.term hol.bool => hol.imp (hol.and x_1 (hol.imp y_2 z_3)) (hol.imp (hol.imp x_1 y_2) z_3)))) (thm_699 x_1) (thm_781 x_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Set.member (f x'')) ((Set.image f) s))) ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g (f x''))) s)) ((= (f (g (f x'')))) (f x'')))) ((Set.member (g (f x''))) s)))) ((Data.Bool.==> ((Data.Bool.==> ((Set.member (f x'')) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g (f x''))) s)) ((= (f (g (f x'')))) (f x''))))) ((Set.member (g (f x''))) s))) ;)

(; dict ;)

def thm_783 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> x_27_27_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hol.proof (hol.imp (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_27_27_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_27_27_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_27_27_3))) (f_4 x_27_27_3))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_27_27_3)) s_2))) (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_27_27_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_27_27_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_27_27_3))) (f_4 x_27_27_3)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_27_27_3)) s_2))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => x_27_27_3 : hol.term A => f_4 : hol.term (hol.arr A B) => (z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hol.EQ_MP (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1)) (hol.imp (hol.and x_3 (hol.imp y_2 z_1)) (hol.imp (hol.imp x_3 y_2) z_1)) (thm_685 z_1 y_2 x_3) (thm_693 (hol.EQ_MP (hol.forall hol.bool (x_4 : hol.term hol.bool => hol.forall hol.bool (y_5 : hol.term hol.bool => hol.forall hol.bool (z_6 : hol.term hol.bool => hol.imp (hol.and x_4 (hol.imp y_5 z_6)) (hol.imp (hol.imp x_4 y_5) z_6))))) (hol.forall hol.bool (x_4 : hol.term hol.bool => hol.forall hol.bool (y_5 : hol.term hol.bool => hol.forall hol.bool (z_6 : hol.term hol.bool => hol.imp (hol.and x_4 (hol.imp y_5 z_6)) (hol.imp (hol.imp x_4 y_5) z_6))))) thm_696 thm_782) x_3 y_2 z_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_27_27_3)) s_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_27_27_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_27_27_3))) (f_4 x_27_27_3))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_27_27_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) ((Set.image f) s)))) ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) ((Set.image f) s)))) ;)

(; dict ;)

def thm_784 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hol.REFL hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) ((Set.image f) s)))) ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) ((Set.image f) s)))) ;)

(; dict ;)

def thm_785 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hol.TRANS hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))) (thm_784 B A f_1 s_2 x_3) (thm_784 B A f_1 s_2 x_3).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) ((Set.image f) s)))))) ;)

(; dict ;)

def thm_786 : B : hol.type -> A : hol.type -> hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)))))) -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)))))) :=
  B : hol.type => A : hol.type => hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)))))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) ((Set.image f) s))))) ;)

(; dict ;)

def thm_787 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3)))))) -> hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3)))))) => thm_786 B A hyp_1 f_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) ((Set.image f) s)))) ;)

(; dict ;)

def thm_788 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4)))))) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4)))))) => thm_787 B A f_1 hyp_1 s_2.

(; Theorem: |- ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) ((Set.image f) s))) ;)

(; dict ;)

def thm_789 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_5)))))) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_5)))))) => thm_788 B A f_1 s_2 hyp_1 x_3.

(; Theorem: |- ((Set.member x) s) ;)

(; dict ;)

def thm_790 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hyp_1.

(; Theorem: |- ((Set.member (f x)) ((Set.image f) s)) ;)

(; dict ;)

def thm_791 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_5)))))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_5)))))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => thm_789 B A f_3 s_1 x_2 hyp_1 (thm_790 A s_1 x_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) ((Set.image f) s))))))) ((Set.member (f x)) ((Set.image f) s))) ;)

(; dict ;)

def thm_792 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (hol.imp (hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_5)))))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hyp_2 : hol.proof (hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_5)))))) => thm_791 A B s_1 x_2 f_3 hyp_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) ((Set.image f) s)))) ;)

(; dict ;)

def thm_793 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4)))))) -> hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_2 : hol.term A => hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_4)))))) => s_3 : hol.term (Set_2Eset A) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3) => thm_792 B A s_3 x_2 f_1 hyp_2 (thm_786 B A hyp_1).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) ((Set.image f) s))))) ;)

(; dict ;)

def thm_794 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3)))))) -> hol.proof (hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3)))))) => f_2 : hol.term (hol.arr A B) => thm_793 B A f_2 x_1 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) ((Set.image f) s)))))) ;)

(; dict ;)

def thm_795 : B : hol.type -> A : hol.type -> hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)))))) -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3)))))) :=
  B : hol.type => A : hol.type => hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)))))) => x_1 : hol.term A => thm_794 B A x_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) ((Set.image f) s))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) ((Set.image f) s))))))) ;)

(; dict ;)

def thm_796 : B : hol.type -> A : hol.type -> hol.proof (hol.imp (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)))))) (hol.forall A (x_1 : hol.term A => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3))))))) :=
  B : hol.type => A : hol.type => hyp_1 : hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)))))) => thm_795 B A hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) ((Set.image f) s)))))) ;)

(; dict ;)

def thm_797 : B : hol.type -> A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3)))))) :=
  B : hol.type => A : hol.type => thm_796 B A (thm_28 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) ((Set.image f) s))))) ;)

(; dict ;)

def thm_798 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> hol.proof (hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => thm_797 B A x_1.

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) ((Set.image f) s)))) ;)

(; dict ;)

def thm_799 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_2 : hol.term A -> hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_2 : hol.term A => thm_798 B A x_2 f_1.

(; Theorem: |- ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) ((Set.image f) s))) ;)

(; dict ;)

def thm_800 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => thm_799 B A f_1 x_3 s_2.

(; Theorem: |- ((Data.Bool.==> ((Set.member x'') s)) ((Set.member (f x'')) ((Set.image f) s))) ;)

(; dict ;)

def thm_801 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_27_27_3 : hol.term A -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_3 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_27_27_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_27_27_3 : hol.term A => (B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => (B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hol.EQ_MP (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))) (thm_785 B A f_1 s_2 x_3) (thm_800 B A f_1 s_2 x_3)) B A f_1 s_2 x_3) B A f_1 s_2 x_27_27_3.

(; Theorem: |- ((Set.member (f x'')) ((Set.image f) s)) ;)

(; dict ;)

def thm_802 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_27_27_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) => thm_801 B A f_3 s_1 x_27_27_2 (thm_636 A s_1 x_27_27_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g (f x''))) s)) ((= (f (g (f x'')))) (f x'')))) ((Set.member (g (f x''))) s))) ((Data.Bool./\ ((Set.member (f x'')) ((Set.image f) s))) ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g (f x''))) s)) ((= (f (g (f x'')))) (f x'')))) ((Set.member (g (f x''))) s)))) ;)

(; dict ;)

def thm_803 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_27_27_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1)) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_27_27_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_27_27_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_27_27_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1)) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g (f x''))) s)) ((= (f (g (f x'')))) (f x'')))) ((Set.member (g (f x''))) s))) ((Data.Bool./\ ((Set.member (f x'')) ((Set.image f) s))) ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g (f x''))) s)) ((= (f (g (f x'')))) (f x'')))) ((Set.member (g (f x''))) s)))) ;)

(; dict ;)

def thm_804 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1)) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_27_27_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) => hol.PROVE_HYP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_27_27_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.eq hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1)) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_27_27_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1)))) (thm_802 A B s_1 x_27_27_2 f_3 hyp_1) (hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_27_27_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) => thm_803 B A s_1 x_27_27_2 f_3 g_4 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((Set.member (g (f x''))) s)) ((= (f (g (f x'')))) (f x''))) ;)

(; dict ;)

def thm_805 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) => hyp_1.

(; Theorem: |- ((Set.member (g (f x''))) s) ;)

(; dict ;)

def thm_806 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_185 q_1 p_2 hyp_1) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) hyp_1.

(; Theorem: |- ((Set.member (g (f x''))) s) ;)

(; dict ;)

def thm_807 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (thm_805 B A s_1 x_27_27_2 f_3 g_4 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) => thm_806 B A s_1 x_27_27_2 f_3 g_4 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g (f x''))) s)) ((= (f (g (f x'')))) (f x'')))) ((Set.member (g (f x''))) s)) ;)

(; dict ;)

def thm_808 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) => thm_807 B A s_1 x_27_27_2 f_3 g_4 hyp_1.

(; Theorem: |- ((Data.Bool./\ ((Set.member (f x'')) ((Set.image f) s))) ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g (f x''))) s)) ((= (f (g (f x'')))) (f x'')))) ((Set.member (g (f x''))) s))) ;)

(; dict ;)

def thm_809 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> x_27_27_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_3 s_2) -> hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_27_27_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_27_27_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_27_27_3))) (f_4 x_27_27_3))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_27_27_3)) s_2))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => x_27_27_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_3 s_2) => hol.EQ_MP (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_27_27_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_27_27_3))) (f_4 x_27_27_3))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_27_27_3)) s_2)) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_27_27_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_27_27_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_27_27_3))) (f_4 x_27_27_3))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_27_27_3)) s_2))) (thm_804 B A s_2 x_27_27_3 f_4 g_1 hyp_1) (thm_808 B A s_2 x_27_27_3 f_4 g_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Set.member (f x'')) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g (f x''))) s)) ((= (f (g (f x'')))) (f x''))))) ((Set.member (g (f x''))) s)) ;)

(; dict ;)

def thm_810 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> x_27_27_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_3 s_2) -> hol.proof (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_27_27_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_27_27_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_27_27_3))) (f_4 x_27_27_3)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_27_27_3)) s_2)) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => x_27_27_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_3 s_2) => thm_783 A B g_1 s_2 x_27_27_3 f_4 (thm_809 A B g_1 s_2 x_27_27_3 f_4 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Set.member (f x'')) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g (f x''))) s)) ((= (f (g (f x'')))) (f x'')))) ;)

(; dict ;)

def thm_811 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> x_27_27_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_2) (hol.eq B (f_4 (g_1 y_5)) y_5)))) -> hol.proof (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_27_27_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_27_27_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_27_27_3))) (f_4 x_27_27_3)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => x_27_27_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_2) (hol.eq B (f_4 (g_1 y_5)) y_5)))) => thm_510 A B g_1 s_2 f_4 hyp_1 (f_4 x_27_27_3).

(; Theorem: |- ((Set.member (g (f x''))) s) ;)

(; dict ;)

def thm_812 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_1) (hol.eq B (f_3 (g_4 y_5)) y_5)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_1) (hol.eq B (f_3 (g_4 y_5)) y_5)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) => thm_810 A B g_4 s_1 x_27_27_2 f_3 hyp_2 (thm_811 A B g_4 s_1 x_27_27_2 f_3 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= (f (g (f x'')))) (f (g (f x''))))) ((Set.member (g (f x''))) s)) ;)

(; dict ;)

def thm_813 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_4 (g_3 y_5)) y_5)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) -> hol.proof (hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 (g_3 (f_4 x_27_27_2)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_27_27_2)) s_1)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_4 (g_3 y_5)) y_5)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) => hol.EQ_MP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_27_27_2)) s_1) (hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 (g_3 (f_4 x_27_27_2)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_27_27_2)) s_1)) (thm_683 B A s_1 x_27_27_2 f_4 g_3) (thm_812 B A s_1 x_27_27_2 f_4 g_3 hyp_1 hyp_2).

(; Theorem: |- (\lambda x. ((Data.Bool./\ ((= (f (g (f x'')))) (f x))) ((Set.member x) s)) (g (f x''))) ;)

(; dict ;)

def thm_814 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_4 (g_3 y_5)) y_5)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) -> hol.proof ((x_5 : hol.term A => hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) (g_3 (f_4 x_27_27_2))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_4 (g_3 y_5)) y_5)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) => hol.EQ_MP (hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 (g_3 (f_4 x_27_27_2)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_27_27_2)) s_1)) ((x_5 : hol.term A => hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) (g_3 (f_4 x_27_27_2))) (thm_676 A B s_1 x_27_27_2 g_3 f_4) (thm_813 A B s_1 x_27_27_2 g_3 f_4 hyp_1 hyp_2).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f (g (f x'')))) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_815 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) (g_3 (f_4 x_27_27_2))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) (g_3 (f_4 x_27_27_2))) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_334 A x_1 P_2 hyp_1) A (g_3 (f_4 x_27_27_2)) (x_5 : hol.term A => hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f (g (f x'')))) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_816 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_4 (g_3 y_5)) y_5)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_4 (g_3 y_5)) y_5)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) => hol.PROVE_HYP ((x_5 : hol.term A => hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) (g_3 (f_4 x_27_27_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1))) (thm_814 B A s_1 x_27_27_2 g_3 f_4 hyp_1 hyp_2) (hyp_3 : hol.proof ((x_5 : hol.term A => hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) (g_3 (f_4 x_27_27_2))) => thm_815 B A s_1 x_27_27_2 g_3 f_4 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f (g (f x'')))) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_817 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_4 (g_3 y_5)) y_5)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_4 (g_3 y_5)) y_5)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1))) (thm_636 A s_1 x_27_27_2 hyp_2) (hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) => thm_816 B A s_1 x_27_27_2 g_3 f_4 hyp_1 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (f (g (f x'')))) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_818 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_4 (g_3 y_5)) y_5)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_4 (g_3 y_5)) y_5)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) => hol.PROVE_HYP (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_4 (g_3 y_5)) y_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1))) (thm_510 A B g_3 s_1 f_4 hyp_1) (hyp_3 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_4 (g_3 y_5)) y_5)))) => thm_817 B A s_1 x_27_27_2 g_3 f_4 hyp_3 hyp_2).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_819 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> x_27_2 : hol.term B -> x_3 : hol.term A -> g_4 : hol.term (hol.arr B A) -> s_5 : hol.term (Set_2Eset A) -> f_6 : hol.term (hol.arr A B) -> z_7 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_8 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_8 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_6 s_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_8) s_5) (hol.eq B (f_6 (g_4 y_8)) y_8)))) -> hyp_2 : hol.proof (hol.eq A x_3 (g_4 x_27_2)) -> hyp_3 : hol.proof (hol.eq B x_27_2 (f_6 x_27_27_1)) -> hyp_4 : hol.proof (hol.eq B z_7 (f_6 x_3)) -> hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_5) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_7 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => x_27_2 : hol.term B => x_3 : hol.term A => g_4 : hol.term (hol.arr B A) => s_5 : hol.term (Set_2Eset A) => f_6 : hol.term (hol.arr A B) => z_7 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_8 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_8 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_6 s_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_8) s_5) (hol.eq B (f_6 (g_4 y_8)) y_8)))) => hyp_2 : hol.proof (hol.eq A x_3 (g_4 x_27_2)) => hyp_3 : hol.proof (hol.eq B x_27_2 (f_6 x_27_27_1)) => hyp_4 : hol.proof (hol.eq B z_7 (f_6 x_3)) => hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_5) => hol.EQ_MP (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B (f_6 (g_4 (f_6 x_27_27_1))) (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_7 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (thm_674 B A x_27_2 x_3 z_7 s_5 x_27_27_1 g_4 f_6 hyp_2 hyp_3 hyp_4) (thm_818 B A s_5 x_27_27_1 g_4 f_6 hyp_1 hyp_5).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_820 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> x_27_2 : hol.term B -> x_3 : hol.term A -> g_4 : hol.term (hol.arr B A) -> s_5 : hol.term (Set_2Eset A) -> f_6 : hol.term (hol.arr A B) -> z_7 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_8 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_8 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_6 s_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_8) s_5) (hol.eq B (f_6 (g_4 y_8)) y_8)))) -> hyp_2 : hol.proof (hol.eq A x_3 (g_4 x_27_2)) -> hyp_3 : hol.proof (hol.eq B x_27_2 (f_6 x_27_27_1)) -> hyp_4 : hol.proof (hol.eq B z_7 (f_6 x_3)) -> hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_5) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_7 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => x_27_2 : hol.term B => x_3 : hol.term A => g_4 : hol.term (hol.arr B A) => s_5 : hol.term (Set_2Eset A) => f_6 : hol.term (hol.arr A B) => z_7 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_8 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_8 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_6 s_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_8) s_5) (hol.eq B (f_6 (g_4 y_8)) y_8)))) => hyp_2 : hol.proof (hol.eq A x_3 (g_4 x_27_2)) => hyp_3 : hol.proof (hol.eq B x_27_2 (f_6 x_27_27_1)) => hyp_4 : hol.proof (hol.eq B z_7 (f_6 x_3)) => hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_5) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_5) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_7 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (thm_636 A s_5 x_27_27_1 hyp_5) (hyp_6 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_5) => thm_819 B A x_27_27_1 x_27_2 x_3 g_4 s_5 f_6 z_7 hyp_1 hyp_2 hyp_3 hyp_4 hyp_6).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_821 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> x_27_2 : hol.term B -> x_3 : hol.term A -> g_4 : hol.term (hol.arr B A) -> s_5 : hol.term (Set_2Eset A) -> f_6 : hol.term (hol.arr A B) -> z_7 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_8 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_8 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_6 s_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_8) s_5) (hol.eq B (f_6 (g_4 y_8)) y_8)))) -> hyp_2 : hol.proof (hol.eq A x_3 (g_4 x_27_2)) -> hyp_3 : hol.proof (hol.eq B x_27_2 (f_6 x_27_27_1)) -> hyp_4 : hol.proof (hol.eq B z_7 (f_6 x_3)) -> hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_5) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_7 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => x_27_2 : hol.term B => x_3 : hol.term A => g_4 : hol.term (hol.arr B A) => s_5 : hol.term (Set_2Eset A) => f_6 : hol.term (hol.arr A B) => z_7 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_8 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_8 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_6 s_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_8) s_5) (hol.eq B (f_6 (g_4 y_8)) y_8)))) => hyp_2 : hol.proof (hol.eq A x_3 (g_4 x_27_2)) => hyp_3 : hol.proof (hol.eq B x_27_2 (f_6 x_27_27_1)) => hyp_4 : hol.proof (hol.eq B z_7 (f_6 x_3)) => hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_5) => hol.PROVE_HYP (hol.forall B (y_8 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_8 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_6 s_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_8) s_5) (hol.eq B (f_6 (g_4 y_8)) y_8)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_7 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (thm_510 A B g_4 s_5 f_6 hyp_1) (hyp_6 : hol.proof (hol.forall B (y_8 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_8 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_6 s_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_8) s_5) (hol.eq B (f_6 (g_4 y_8)) y_8)))) => thm_820 B A x_27_27_1 x_27_2 x_3 g_4 s_5 f_6 z_7 hyp_6 hyp_2 hyp_3 hyp_4 hyp_5).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_822 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> x_27_2 : hol.term B -> x_3 : hol.term A -> g_4 : hol.term (hol.arr B A) -> s_5 : hol.term (Set_2Eset A) -> f_6 : hol.term (hol.arr A B) -> z_7 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_8 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_8 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_6 s_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_8) s_5) (hol.eq B (f_6 (g_4 y_8)) y_8)))) -> hyp_2 : hol.proof (hol.eq A x_3 (g_4 x_27_2)) -> hyp_3 : hol.proof (hol.eq B x_27_2 (f_6 x_27_27_1)) -> hyp_4 : hol.proof (hol.eq B z_7 (f_6 x_3)) -> hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_5) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_7 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => x_27_2 : hol.term B => x_3 : hol.term A => g_4 : hol.term (hol.arr B A) => s_5 : hol.term (Set_2Eset A) => f_6 : hol.term (hol.arr A B) => z_7 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_8 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_8 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_6 s_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_8) s_5) (hol.eq B (f_6 (g_4 y_8)) y_8)))) => hyp_2 : hol.proof (hol.eq A x_3 (g_4 x_27_2)) => hyp_3 : hol.proof (hol.eq B x_27_2 (f_6 x_27_27_1)) => hyp_4 : hol.proof (hol.eq B z_7 (f_6 x_3)) => hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_5) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_5) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_7 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (thm_636 A s_5 x_27_27_1 hyp_5) (hyp_6 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_5) => hol.EQ_MP (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_7 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_7 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (thm_637 B A s_5 f_6 z_7) (thm_821 B A x_27_27_1 x_27_2 x_3 g_4 s_5 f_6 z_7 hyp_1 hyp_2 hyp_3 hyp_4 hyp_6)).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_823 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> x_27_2 : hol.term B -> x_3 : hol.term A -> g_4 : hol.term (hol.arr B A) -> s_5 : hol.term (Set_2Eset A) -> f_6 : hol.term (hol.arr A B) -> z_7 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_8 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_8 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_6 s_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_8) s_5) (hol.eq B (f_6 (g_4 y_8)) y_8)))) -> hyp_2 : hol.proof (hol.eq A x_3 (g_4 x_27_2)) -> hyp_3 : hol.proof (hol.eq B x_27_2 (f_6 x_27_27_1)) -> hyp_4 : hol.proof (hol.eq B z_7 (f_6 x_3)) -> hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_5) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_7 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => x_27_2 : hol.term B => x_3 : hol.term A => g_4 : hol.term (hol.arr B A) => s_5 : hol.term (Set_2Eset A) => f_6 : hol.term (hol.arr A B) => z_7 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_8 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_8 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_6 s_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_8) s_5) (hol.eq B (f_6 (g_4 y_8)) y_8)))) => hyp_2 : hol.proof (hol.eq A x_3 (g_4 x_27_2)) => hyp_3 : hol.proof (hol.eq B x_27_2 (f_6 x_27_27_1)) => hyp_4 : hol.proof (hol.eq B z_7 (f_6 x_3)) => hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_5) => hol.PROVE_HYP (hol.eq B z_7 (f_6 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_7 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (thm_621 A B x_3 f_6 z_7 hyp_4) (hyp_6 : hol.proof (hol.eq B z_7 (f_6 x_3)) => thm_822 B A x_27_27_1 x_27_2 x_3 g_4 s_5 f_6 z_7 hyp_1 hyp_2 hyp_3 hyp_6 hyp_5).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_824 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> x_27_2 : hol.term B -> x_3 : hol.term A -> g_4 : hol.term (hol.arr B A) -> s_5 : hol.term (Set_2Eset A) -> f_6 : hol.term (hol.arr A B) -> z_7 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_8 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_8 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_6 s_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_8) s_5) (hol.eq B (f_6 (g_4 y_8)) y_8)))) -> hyp_2 : hol.proof (hol.eq A x_3 (g_4 x_27_2)) -> hyp_3 : hol.proof (hol.eq B x_27_2 (f_6 x_27_27_1)) -> hyp_4 : hol.proof (hol.eq B z_7 (f_6 x_3)) -> hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_5) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_7 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => x_27_2 : hol.term B => x_3 : hol.term A => g_4 : hol.term (hol.arr B A) => s_5 : hol.term (Set_2Eset A) => f_6 : hol.term (hol.arr A B) => z_7 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_8 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_8 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_6 s_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_8) s_5) (hol.eq B (f_6 (g_4 y_8)) y_8)))) => hyp_2 : hol.proof (hol.eq A x_3 (g_4 x_27_2)) => hyp_3 : hol.proof (hol.eq B x_27_2 (f_6 x_27_27_1)) => hyp_4 : hol.proof (hol.eq B z_7 (f_6 x_3)) => hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_5) => hol.PROVE_HYP (hol.forall B (y_8 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_8 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_6 s_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_8) s_5) (hol.eq B (f_6 (g_4 y_8)) y_8)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_7 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (thm_510 A B g_4 s_5 f_6 hyp_1) (hyp_6 : hol.proof (hol.forall B (y_8 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_8 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_6 s_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_8) s_5) (hol.eq B (f_6 (g_4 y_8)) y_8)))) => thm_823 B A x_27_27_1 x_27_2 x_3 g_4 s_5 f_6 z_7 hyp_6 hyp_2 hyp_3 hyp_4 hyp_5).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_825 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> x_27_2 : hol.term B -> x_3 : hol.term A -> g_4 : hol.term (hol.arr B A) -> s_5 : hol.term (Set_2Eset A) -> f_6 : hol.term (hol.arr A B) -> z_7 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_8 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_8 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_6 s_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_8) s_5) (hol.eq B (f_6 (g_4 y_8)) y_8)))) -> hyp_2 : hol.proof (hol.eq A x_3 (g_4 x_27_2)) -> hyp_3 : hol.proof (hol.eq B x_27_2 (f_6 x_27_27_1)) -> hyp_4 : hol.proof (hol.eq B z_7 (f_6 x_3)) -> hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_5) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_7 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => x_27_2 : hol.term B => x_3 : hol.term A => g_4 : hol.term (hol.arr B A) => s_5 : hol.term (Set_2Eset A) => f_6 : hol.term (hol.arr A B) => z_7 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_8 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_8 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_6 s_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_8) s_5) (hol.eq B (f_6 (g_4 y_8)) y_8)))) => hyp_2 : hol.proof (hol.eq A x_3 (g_4 x_27_2)) => hyp_3 : hol.proof (hol.eq B x_27_2 (f_6 x_27_27_1)) => hyp_4 : hol.proof (hol.eq B z_7 (f_6 x_3)) => hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_5) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_5) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_7 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (thm_636 A s_5 x_27_27_1 hyp_5) (hyp_6 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_5) => hol.EQ_MP (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_7 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_7 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (thm_638 B A s_5 f_6 z_7) (thm_824 B A x_27_27_1 x_27_2 x_3 g_4 s_5 f_6 z_7 hyp_1 hyp_2 hyp_3 hyp_4 hyp_6)).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_826 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> x_27_2 : hol.term B -> x_3 : hol.term A -> g_4 : hol.term (hol.arr B A) -> s_5 : hol.term (Set_2Eset A) -> f_6 : hol.term (hol.arr A B) -> z_7 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_8 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_8 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_6 s_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_8) s_5) (hol.eq B (f_6 (g_4 y_8)) y_8)))) -> hyp_2 : hol.proof (hol.eq A x_3 (g_4 x_27_2)) -> hyp_3 : hol.proof (hol.eq B x_27_2 (f_6 x_27_27_1)) -> hyp_4 : hol.proof (hol.eq B z_7 (f_6 x_3)) -> hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_5) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_7 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => x_27_2 : hol.term B => x_3 : hol.term A => g_4 : hol.term (hol.arr B A) => s_5 : hol.term (Set_2Eset A) => f_6 : hol.term (hol.arr A B) => z_7 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_8 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_8 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_6 s_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_8) s_5) (hol.eq B (f_6 (g_4 y_8)) y_8)))) => hyp_2 : hol.proof (hol.eq A x_3 (g_4 x_27_2)) => hyp_3 : hol.proof (hol.eq B x_27_2 (f_6 x_27_27_1)) => hyp_4 : hol.proof (hol.eq B z_7 (f_6 x_3)) => hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_5) => hol.PROVE_HYP (hol.eq B x_27_2 (f_6 x_27_27_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_7 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (thm_635 A B x_27_27_1 f_6 x_27_2 hyp_3) (hyp_6 : hol.proof (hol.eq B x_27_2 (f_6 x_27_27_1)) => thm_825 B A x_27_27_1 x_27_2 x_3 g_4 s_5 f_6 z_7 hyp_1 hyp_2 hyp_6 hyp_4 hyp_5).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_827 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> x_27_2 : hol.term B -> x_3 : hol.term A -> g_4 : hol.term (hol.arr B A) -> s_5 : hol.term (Set_2Eset A) -> f_6 : hol.term (hol.arr A B) -> z_7 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_8 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_8 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_6 s_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_8) s_5) (hol.eq B (f_6 (g_4 y_8)) y_8)))) -> hyp_2 : hol.proof (hol.eq A x_3 (g_4 x_27_2)) -> hyp_3 : hol.proof (hol.eq B x_27_2 (f_6 x_27_27_1)) -> hyp_4 : hol.proof (hol.eq B z_7 (f_6 x_3)) -> hyp_5 : hol.proof (hol.and (hol.eq B x_27_2 (f_6 x_27_27_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_5)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_7 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => x_27_2 : hol.term B => x_3 : hol.term A => g_4 : hol.term (hol.arr B A) => s_5 : hol.term (Set_2Eset A) => f_6 : hol.term (hol.arr A B) => z_7 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_8 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_8 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_6 s_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_8) s_5) (hol.eq B (f_6 (g_4 y_8)) y_8)))) => hyp_2 : hol.proof (hol.eq A x_3 (g_4 x_27_2)) => hyp_3 : hol.proof (hol.eq B x_27_2 (f_6 x_27_27_1)) => hyp_4 : hol.proof (hol.eq B z_7 (f_6 x_3)) => hyp_5 : hol.proof (hol.and (hol.eq B x_27_2 (f_6 x_27_27_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_5)) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_5) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_7 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (thm_634 B A f_6 x_27_2 s_5 x_27_27_1 hyp_5) (hyp_6 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_5) => thm_826 B A x_27_27_1 x_27_2 x_3 g_4 s_5 f_6 z_7 hyp_1 hyp_2 hyp_3 hyp_4 hyp_6).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_828 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> x_27_2 : hol.term B -> x_3 : hol.term A -> g_4 : hol.term (hol.arr B A) -> s_5 : hol.term (Set_2Eset A) -> f_6 : hol.term (hol.arr A B) -> z_7 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_8 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_8 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_6 s_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_8) s_5) (hol.eq B (f_6 (g_4 y_8)) y_8)))) -> hyp_2 : hol.proof (hol.eq A x_3 (g_4 x_27_2)) -> hyp_3 : hol.proof (hol.eq B z_7 (f_6 x_3)) -> hyp_4 : hol.proof (hol.and (hol.eq B x_27_2 (f_6 x_27_27_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_5)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_7 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => x_27_2 : hol.term B => x_3 : hol.term A => g_4 : hol.term (hol.arr B A) => s_5 : hol.term (Set_2Eset A) => f_6 : hol.term (hol.arr A B) => z_7 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_8 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_8 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_6 s_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_8) s_5) (hol.eq B (f_6 (g_4 y_8)) y_8)))) => hyp_2 : hol.proof (hol.eq A x_3 (g_4 x_27_2)) => hyp_3 : hol.proof (hol.eq B z_7 (f_6 x_3)) => hyp_4 : hol.proof (hol.and (hol.eq B x_27_2 (f_6 x_27_27_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_5)) => hol.PROVE_HYP (hol.eq B x_27_2 (f_6 x_27_27_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_7 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (thm_632 A B s_5 x_27_27_1 f_6 x_27_2 hyp_4) (hyp_5 : hol.proof (hol.eq B x_27_2 (f_6 x_27_27_1)) => thm_827 B A x_27_27_1 x_27_2 x_3 g_4 s_5 f_6 z_7 hyp_1 hyp_2 hyp_5 hyp_3 hyp_4).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= x') (f x''))) ((Set.member x'') s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_829 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> z_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> x_27_27_5 : hol.term A -> f_6 : hol.term (hol.arr A B) -> x_27_7 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_8 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_8 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_6 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_8) s_4) (hol.eq B (f_6 (g_2 y_8)) y_8)))) -> hyp_2 : hol.proof (hol.eq A x_1 (g_2 x_27_7)) -> hyp_3 : hol.proof (hol.eq B z_3 (f_6 x_1)) -> hol.proof (hol.imp (hol.and (hol.eq B x_27_7 (f_6 x_27_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_5 s_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_3 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr B A) => z_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => x_27_27_5 : hol.term A => f_6 : hol.term (hol.arr A B) => x_27_7 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_8 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_8 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_6 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_8) s_4) (hol.eq B (f_6 (g_2 y_8)) y_8)))) => hyp_2 : hol.proof (hol.eq A x_1 (g_2 x_27_7)) => hyp_3 : hol.proof (hol.eq B z_3 (f_6 x_1)) => hyp_4 : hol.proof (hol.and (hol.eq B x_27_7 (f_6 x_27_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_5 s_4)) => thm_828 B A x_27_27_5 x_27_7 x_1 g_2 s_4 f_6 z_3 hyp_1 hyp_2 hyp_3 hyp_4.

(; Theorem: |- ((= (\lambda x. ((Data.Bool./\ ((= x') (f x))) ((Set.member x) s)) x'')) ((Data.Bool./\ ((= x') (f x''))) ((Set.member x'') s))) ;)

(; dict ;)

def thm_830 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> x_27_4 : hol.term B -> hol.proof (hol.eq hol.bool ((x_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)) x_27_27_1) (hol.and (hol.eq B x_27_4 (f_3 x_27_27_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_2))) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => x_27_4 : hol.term B => hol.BETA_CONV A hol.bool (x_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)) x_27_27_1.

(; Theorem: |- (\lambda x. ((Data.Bool./\ ((= x') (f x))) ((Set.member x) s)) x'') ;)

(; dict ;)

def thm_831 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> x_27_4 : hol.term B -> hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)) x_27_27_1) -> hol.proof ((x_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)) x_27_27_1) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => x_27_4 : hol.term B => hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)) x_27_27_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= x') (f x''))) ((Set.member x'') s)) ;)

(; dict ;)

def thm_832 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> x_27_4 : hol.term B -> hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) x_27_27_2) -> hol.proof (hol.and (hol.eq B x_27_4 (f_3 x_27_27_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => x_27_4 : hol.term B => hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) x_27_27_2) => hol.EQ_MP ((x_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) x_27_27_2) (hol.and (hol.eq B x_27_4 (f_3 x_27_27_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1)) (thm_830 B A x_27_27_2 s_1 f_3 x_27_4) (thm_831 B A x_27_27_2 s_1 f_3 x_27_4 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_833 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> x_27_27_2 : hol.term A -> x_27_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> s_5 : hol.term (Set_2Eset A) -> f_6 : hol.term (hol.arr A B) -> z_7 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_8 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_8 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_6 s_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_8) s_5) (hol.eq B (f_6 (g_4 y_8)) y_8)))) -> hyp_2 : hol.proof ((x_8 : hol.term A => hol.and (hol.eq B x_27_3 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)) x_27_27_2) -> hyp_3 : hol.proof (hol.eq A x_1 (g_4 x_27_3)) -> hyp_4 : hol.proof (hol.eq B z_7 (f_6 x_1)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_7 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => x_27_27_2 : hol.term A => x_27_3 : hol.term B => g_4 : hol.term (hol.arr B A) => s_5 : hol.term (Set_2Eset A) => f_6 : hol.term (hol.arr A B) => z_7 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_8 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_8 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_6 s_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_8) s_5) (hol.eq B (f_6 (g_4 y_8)) y_8)))) => hyp_2 : hol.proof ((x_8 : hol.term A => hol.and (hol.eq B x_27_3 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)) x_27_27_2) => hyp_3 : hol.proof (hol.eq A x_1 (g_4 x_27_3)) => hyp_4 : hol.proof (hol.eq B z_7 (f_6 x_1)) => thm_829 A B x_1 g_4 z_7 s_5 x_27_27_2 f_6 x_27_3 hyp_1 hyp_3 hyp_4 (thm_832 A B s_5 x_27_27_2 f_6 x_27_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= x') (f x))) ((Set.member x) s)) x'')) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_834 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> z_3 : hol.term B -> x_27_27_4 : hol.term A -> s_5 : hol.term (Set_2Eset A) -> f_6 : hol.term (hol.arr A B) -> x_27_7 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_8 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_8 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_6 s_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_8) s_5) (hol.eq B (f_6 (g_2 y_8)) y_8)))) -> hyp_2 : hol.proof (hol.eq A x_1 (g_2 x_27_7)) -> hyp_3 : hol.proof (hol.eq B z_3 (f_6 x_1)) -> hol.proof (hol.imp ((x_8 : hol.term A => hol.and (hol.eq B x_27_7 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)) x_27_27_4) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_3 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr B A) => z_3 : hol.term B => x_27_27_4 : hol.term A => s_5 : hol.term (Set_2Eset A) => f_6 : hol.term (hol.arr A B) => x_27_7 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_8 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_8 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_6 s_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_8) s_5) (hol.eq B (f_6 (g_2 y_8)) y_8)))) => hyp_2 : hol.proof (hol.eq A x_1 (g_2 x_27_7)) => hyp_3 : hol.proof (hol.eq B z_3 (f_6 x_1)) => hyp_4 : hol.proof ((x_8 : hol.term A => hol.and (hol.eq B x_27_7 (f_6 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)) x_27_27_4) => thm_833 B A x_1 x_27_27_4 x_27_7 g_2 s_5 f_6 z_3 hyp_1 hyp_4 hyp_2 hyp_3.

(; Theorem: |- (Data.Bool.! \lambda x''. ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= x') (f x))) ((Set.member x) s)) x'')) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_835 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> z_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> f_5 : hol.term (hol.arr A B) -> x_27_6 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_7) s_4) (hol.eq B (f_5 (g_2 y_7)) y_7)))) -> hyp_2 : hol.proof (hol.eq A x_1 (g_2 x_27_6)) -> hyp_3 : hol.proof (hol.eq B z_3 (f_5 x_1)) -> hol.proof (hol.forall A (x_27_27_7 : hol.term A => hol.imp ((x_8 : hol.term A => hol.and (hol.eq B x_27_6 (f_5 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) x_27_27_7) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B z_3 (f_5 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr B A) => z_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => f_5 : hol.term (hol.arr A B) => x_27_6 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_7) s_4) (hol.eq B (f_5 (g_2 y_7)) y_7)))) => hyp_2 : hol.proof (hol.eq A x_1 (g_2 x_27_6)) => hyp_3 : hol.proof (hol.eq B z_3 (f_5 x_1)) => x_27_27_7 : hol.term A => thm_834 B A x_1 g_2 z_3 x_27_27_7 s_4 f_5 x_27_6 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_836 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> z_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> f_5 : hol.term (hol.arr A B) -> x_27_6 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_7) s_4) (hol.eq B (f_5 (g_2 y_7)) y_7)))) -> hyp_2 : hol.proof (hol.eq A x_1 (g_2 x_27_6)) -> hyp_3 : hol.proof (hol.eq B z_3 (f_5 x_1)) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_27_6 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B z_3 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr B A) => z_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => f_5 : hol.term (hol.arr A B) => x_27_6 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_7) s_4) (hol.eq B (f_5 (g_2 y_7)) y_7)))) => hyp_2 : hol.proof (hol.eq A x_1 (g_2 x_27_6)) => hyp_3 : hol.proof (hol.eq B z_3 (f_5 x_1)) => thm_629 B A z_3 s_4 f_5 x_27_6 (thm_835 B A x_1 g_2 z_3 s_4 f_5 x_27_6 hyp_1 hyp_2 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_837 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> x_27_3 : hol.term B -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => x_27_3 : hol.term B => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) => hyp_1.

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_838 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> x_27_2 : hol.term B -> g_3 : hol.term (hol.arr B A) -> s_4 : hol.term (Set_2Eset A) -> f_5 : hol.term (hol.arr A B) -> z_6 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_7) s_4) (hol.eq B (f_5 (g_3 y_7)) y_7)))) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_27_2 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) -> hyp_3 : hol.proof (hol.eq A x_1 (g_3 x_27_2)) -> hyp_4 : hol.proof (hol.eq B z_6 (f_5 x_1)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B z_6 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => x_27_2 : hol.term B => g_3 : hol.term (hol.arr B A) => s_4 : hol.term (Set_2Eset A) => f_5 : hol.term (hol.arr A B) => z_6 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_7) s_4) (hol.eq B (f_5 (g_3 y_7)) y_7)))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_27_2 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) => hyp_3 : hol.proof (hol.eq A x_1 (g_3 x_27_2)) => hyp_4 : hol.proof (hol.eq B z_6 (f_5 x_1)) => thm_836 B A x_1 g_3 z_6 s_4 f_5 x_27_2 hyp_1 hyp_3 hyp_4 (thm_837 B A s_4 f_5 x_27_2 hyp_2).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_839 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> x_27_2 : hol.term B -> g_3 : hol.term (hol.arr B A) -> s_4 : hol.term (Set_2Eset A) -> f_5 : hol.term (hol.arr A B) -> z_6 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_7) s_4) (hol.eq B (f_5 (g_3 y_7)) y_7)))) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_27_2 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) -> hyp_3 : hol.proof (hol.eq A x_1 (g_3 x_27_2)) -> hyp_4 : hol.proof (hol.eq B z_6 (f_5 x_1)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B z_6 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => x_27_2 : hol.term B => g_3 : hol.term (hol.arr B A) => s_4 : hol.term (Set_2Eset A) => f_5 : hol.term (hol.arr A B) => z_6 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_7) s_4) (hol.eq B (f_5 (g_3 y_7)) y_7)))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_27_2 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) => hyp_3 : hol.proof (hol.eq A x_1 (g_3 x_27_2)) => hyp_4 : hol.proof (hol.eq B z_6 (f_5 x_1)) => hol.PROVE_HYP (hol.eq A x_1 (g_3 x_27_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B z_6 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) (thm_628 B A x_27_2 g_3 x_1 hyp_3) (hyp_5 : hol.proof (hol.eq A x_1 (g_3 x_27_2)) => thm_838 B A x_1 x_27_2 g_3 s_4 f_5 z_6 hyp_1 hyp_2 hyp_5 hyp_4).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_840 : B : hol.type -> A : hol.type -> x_27_1 : hol.term B -> x_2 : hol.term A -> g_3 : hol.term (hol.arr B A) -> s_4 : hol.term (Set_2Eset A) -> f_5 : hol.term (hol.arr A B) -> z_6 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_7) s_4) (hol.eq B (f_5 (g_3 y_7)) y_7)))) -> hyp_2 : hol.proof (hol.eq A x_2 (g_3 x_27_1)) -> hyp_3 : hol.proof (hol.eq B z_6 (f_5 x_2)) -> hyp_4 : hol.proof (hol.and (hol.eq A x_2 (g_3 x_27_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_27_1 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B z_6 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term B => x_2 : hol.term A => g_3 : hol.term (hol.arr B A) => s_4 : hol.term (Set_2Eset A) => f_5 : hol.term (hol.arr A B) => z_6 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_7) s_4) (hol.eq B (f_5 (g_3 y_7)) y_7)))) => hyp_2 : hol.proof (hol.eq A x_2 (g_3 x_27_1)) => hyp_3 : hol.proof (hol.eq B z_6 (f_5 x_2)) => hyp_4 : hol.proof (hol.and (hol.eq A x_2 (g_3 x_27_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_27_1 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)))) => hol.PROVE_HYP (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_27_1 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B z_6 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) (thm_627 B A g_3 x_2 s_4 f_5 x_27_1 hyp_4) (hyp_5 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_27_1 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) => thm_839 B A x_2 x_27_1 g_3 s_4 f_5 z_6 hyp_1 hyp_5 hyp_2 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_841 : B : hol.type -> A : hol.type -> x_27_1 : hol.term B -> x_2 : hol.term A -> g_3 : hol.term (hol.arr B A) -> s_4 : hol.term (Set_2Eset A) -> f_5 : hol.term (hol.arr A B) -> z_6 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_7) s_4) (hol.eq B (f_5 (g_3 y_7)) y_7)))) -> hyp_2 : hol.proof (hol.eq B z_6 (f_5 x_2)) -> hyp_3 : hol.proof (hol.and (hol.eq A x_2 (g_3 x_27_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_27_1 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B z_6 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term B => x_2 : hol.term A => g_3 : hol.term (hol.arr B A) => s_4 : hol.term (Set_2Eset A) => f_5 : hol.term (hol.arr A B) => z_6 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_7) s_4) (hol.eq B (f_5 (g_3 y_7)) y_7)))) => hyp_2 : hol.proof (hol.eq B z_6 (f_5 x_2)) => hyp_3 : hol.proof (hol.and (hol.eq A x_2 (g_3 x_27_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_27_1 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)))) => hol.PROVE_HYP (hol.eq A x_2 (g_3 x_27_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B z_6 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) (thm_625 B A s_4 f_5 x_27_1 g_3 x_2 hyp_3) (hyp_4 : hol.proof (hol.eq A x_2 (g_3 x_27_1)) => thm_840 B A x_27_1 x_2 g_3 s_4 f_5 z_6 hyp_1 hyp_4 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= x) (g x'))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (f x))) ((Set.member x) s))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_842 : B : hol.type -> A : hol.type -> z_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> x_27_4 : hol.term B -> g_5 : hol.term (hol.arr B A) -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_7) s_2) (hol.eq B (f_3 (g_5 y_7)) y_7)))) -> hyp_2 : hol.proof (hol.eq B z_1 (f_3 x_6)) -> hol.proof (hol.imp (hol.and (hol.eq A x_6 (g_5 x_27_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B z_1 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))) :=
  B : hol.type => A : hol.type => z_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => x_27_4 : hol.term B => g_5 : hol.term (hol.arr B A) => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_7) s_2) (hol.eq B (f_3 (g_5 y_7)) y_7)))) => hyp_2 : hol.proof (hol.eq B z_1 (f_3 x_6)) => hyp_3 : hol.proof (hol.and (hol.eq A x_6 (g_5 x_27_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))) => thm_841 B A x_27_4 x_6 g_5 s_2 f_3 z_1 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((= (\lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) x')) ((Data.Bool./\ ((= x) (g x'))) (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= x') (f x_1))) ((Set.member x_1) s))))) ;)

(; dict ;)

def thm_843 : A : hol.type -> B : hol.type -> x_27_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> x_5 : hol.term A -> hol.proof (hol.eq hol.bool ((x_6 : hol.term B => hol.and (hol.eq A x_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))) x_27_1) (hol.and (hol.eq A x_5 (g_4 x_27_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_6 : hol.term A => hol.and (hol.eq B x_27_1 (f_3 x__1_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 s_2))))) :=
  A : hol.type => B : hol.type => x_27_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => x_5 : hol.term A => hol.BETA_CONV B hol.bool (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))) x_27_1.

(; Theorem: |- (\lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) x') ;)

(; dict ;)

def thm_844 : A : hol.type -> B : hol.type -> x_27_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> x_5 : hol.term A -> hyp_1 : hol.proof ((x_6 : hol.term B => hol.and (hol.eq A x_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))) x_27_1) -> hol.proof ((x_6 : hol.term B => hol.and (hol.eq A x_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))) x_27_1) :=
  A : hol.type => B : hol.type => x_27_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => x_5 : hol.term A => hyp_1 : hol.proof ((x_6 : hol.term B => hol.and (hol.eq A x_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))) x_27_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= x) (g x'))) (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= x') (f x_1))) ((Set.member x_1) s)))) ;)

(; dict ;)

def thm_845 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> x_27_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> x_5 : hol.term A -> hyp_1 : hol.proof ((x_6 : hol.term B => hol.and (hol.eq A x_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_2 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))) x_27_3) -> hol.proof (hol.and (hol.eq A x_5 (g_4 x_27_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_6 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x__1_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => x_27_3 : hol.term B => g_4 : hol.term (hol.arr B A) => x_5 : hol.term A => hyp_1 : hol.proof ((x_6 : hol.term B => hol.and (hol.eq A x_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_2 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))) x_27_3) => hol.EQ_MP ((x_6 : hol.term B => hol.and (hol.eq A x_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_2 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))) x_27_3) (hol.and (hol.eq A x_5 (g_4 x_27_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_6 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x__1_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 s_1)))) (thm_843 A B x_27_3 s_1 f_2 g_4 x_5) (thm_844 A B x_27_3 s_1 f_2 g_4 x_5 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_846 : B : hol.type -> A : hol.type -> x_27_1 : hol.term B -> x_2 : hol.term A -> g_3 : hol.term (hol.arr B A) -> s_4 : hol.term (Set_2Eset A) -> f_5 : hol.term (hol.arr A B) -> z_6 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_7) s_4) (hol.eq B (f_5 (g_3 y_7)) y_7)))) -> hyp_2 : hol.proof ((x_7 : hol.term B => hol.and (hol.eq A x_2 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_5 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)))) x_27_1) -> hyp_3 : hol.proof (hol.eq B z_6 (f_5 x_2)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B z_6 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term B => x_2 : hol.term A => g_3 : hol.term (hol.arr B A) => s_4 : hol.term (Set_2Eset A) => f_5 : hol.term (hol.arr A B) => z_6 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_7) s_4) (hol.eq B (f_5 (g_3 y_7)) y_7)))) => hyp_2 : hol.proof ((x_7 : hol.term B => hol.and (hol.eq A x_2 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_5 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)))) x_27_1) => hyp_3 : hol.proof (hol.eq B z_6 (f_5 x_2)) => thm_842 B A z_6 s_4 f_5 x_27_1 g_3 x_2 hyp_1 hyp_3 (thm_845 B A s_4 f_5 x_27_1 g_3 x_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) x')) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_847 : A : hol.type -> B : hol.type -> z_1 : hol.term B -> x_27_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> g_5 : hol.term (hol.arr B A) -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_7) s_3) (hol.eq B (f_4 (g_5 y_7)) y_7)))) -> hyp_2 : hol.proof (hol.eq B z_1 (f_4 x_6)) -> hol.proof (hol.imp ((x_7 : hol.term B => hol.and (hol.eq A x_6 (g_5 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)))) x_27_2) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B z_1 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)))) :=
  A : hol.type => B : hol.type => z_1 : hol.term B => x_27_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => g_5 : hol.term (hol.arr B A) => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_7) s_3) (hol.eq B (f_4 (g_5 y_7)) y_7)))) => hyp_2 : hol.proof (hol.eq B z_1 (f_4 x_6)) => hyp_3 : hol.proof ((x_7 : hol.term B => hol.and (hol.eq A x_6 (g_5 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)))) x_27_2) => thm_846 B A x_27_2 x_6 g_5 s_3 f_4 z_1 hyp_1 hyp_3 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda x'. ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) x')) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_848 : A : hol.type -> B : hol.type -> z_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_2) (hol.eq B (f_3 (g_4 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.eq B z_1 (f_3 x_5)) -> hol.proof (hol.forall B (x_27_6 : hol.term B => hol.imp ((x_7 : hol.term B => hol.and (hol.eq A x_5 (g_4 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_3 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)))) x_27_6) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B z_1 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))))) :=
  A : hol.type => B : hol.type => z_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_2) (hol.eq B (f_3 (g_4 y_6)) y_6)))) => hyp_2 : hol.proof (hol.eq B z_1 (f_3 x_5)) => x_27_6 : hol.term B => thm_847 A B z_1 x_27_6 s_2 f_3 g_4 x_5 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_849 : A : hol.type -> B : hol.type -> z_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_2) (hol.eq B (f_3 (g_4 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.eq B z_1 (f_3 x_5)) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_1 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)))) :=
  A : hol.type => B : hol.type => z_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_2) (hol.eq B (f_3 (g_4 y_6)) y_6)))) => hyp_2 : hol.proof (hol.eq B z_1 (f_3 x_5)) => thm_622 A B z_1 s_2 f_3 g_4 x_5 (thm_848 A B z_1 s_2 f_3 g_4 x_5 hyp_1 hyp_2).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_850 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> x_4 : hol.term A -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A x_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A x_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => x_4 : hol.term A => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A x_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) => hyp_1.

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_851 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> z_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_3) (hol.eq B (f_4 (g_2 y_6)) y_6)))) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_1 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))))) -> hyp_3 : hol.proof (hol.eq B z_5 (f_4 x_1)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => z_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_3) (hol.eq B (f_4 (g_2 y_6)) y_6)))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_1 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))))) => hyp_3 : hol.proof (hol.eq B z_5 (f_4 x_1)) => thm_849 A B z_5 s_3 f_4 g_2 x_1 hyp_1 hyp_3 (thm_850 A B s_3 f_4 g_2 x_1 hyp_2).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_852 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> z_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_3) (hol.eq B (f_4 (g_2 y_6)) y_6)))) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_1 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))))) -> hyp_3 : hol.proof (hol.eq B z_5 (f_4 x_1)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => z_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_3) (hol.eq B (f_4 (g_2 y_6)) y_6)))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_1 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))))) => hyp_3 : hol.proof (hol.eq B z_5 (f_4 x_1)) => hol.PROVE_HYP (hol.eq B z_5 (f_4 x_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (thm_621 A B x_1 f_4 z_5 hyp_3) (hyp_4 : hol.proof (hol.eq B z_5 (f_4 x_1)) => thm_851 B A x_1 g_2 s_3 f_4 z_5 hyp_1 hyp_2 hyp_4).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_853 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> z_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_3) (hol.eq B (f_4 (g_2 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.eq B z_5 (f_4 x_1)) -> hyp_3 : hol.proof (hol.and (hol.eq B z_5 (f_4 x_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_1 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => z_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_3) (hol.eq B (f_4 (g_2 y_6)) y_6)))) => hyp_2 : hol.proof (hol.eq B z_5 (f_4 x_1)) => hyp_3 : hol.proof (hol.and (hol.eq B z_5 (f_4 x_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_1 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)))))) => hol.PROVE_HYP (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_1 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (thm_620 A B z_5 s_3 f_4 g_2 x_1 hyp_3) (hyp_4 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_1 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))))) => thm_852 B A x_1 g_2 s_3 f_4 z_5 hyp_1 hyp_4 hyp_2).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_854 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> z_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_3) (hol.eq B (f_4 (g_2 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.and (hol.eq B z_5 (f_4 x_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_1 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => z_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_3) (hol.eq B (f_4 (g_2 y_6)) y_6)))) => hyp_2 : hol.proof (hol.and (hol.eq B z_5 (f_4 x_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_1 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)))))) => hol.PROVE_HYP (hol.eq B z_5 (f_4 x_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (thm_618 A B s_3 g_2 x_1 f_4 z_5 hyp_2) (hyp_3 : hol.proof (hol.eq B z_5 (f_4 x_1)) => thm_853 B A x_1 g_2 s_3 f_4 z_5 hyp_1 hyp_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_855 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> z_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_1) (hol.eq B (f_4 (g_2 y_6)) y_6)))) -> hol.proof (hol.imp (hol.and (hol.eq B z_5 (f_4 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_3 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => z_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_1) (hol.eq B (f_4 (g_2 y_6)) y_6)))) => hyp_2 : hol.proof (hol.and (hol.eq B z_5 (f_4 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_3 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))))) => thm_854 B A x_3 g_2 s_1 f_4 z_5 hyp_1 hyp_2.

(; Theorem: |- ((= (\lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))) x)) ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= x) (f x_1))) ((Set.member x_1) s))))))) ;)

(; dict ;)

def thm_856 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> z_5 : hol.term B -> hol.proof (hol.eq hol.bool ((x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)))))) x_1) (hol.and (hol.eq B z_5 (f_4 x_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_1 (g_3 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x__1_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_7 s_2))))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => z_5 : hol.term B => hol.BETA_CONV A hol.bool (x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)))))) x_1.

(; Theorem: |- (\lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))) x) ;)

(; dict ;)

def thm_857 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> z_5 : hol.term B -> hyp_1 : hol.proof ((x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)))))) x_1) -> hol.proof ((x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)))))) x_1) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => z_5 : hol.term B => hyp_1 : hol.proof ((x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)))))) x_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= x) (f x_1))) ((Set.member x_1) s)))))) ;)

(; dict ;)

def thm_858 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> z_5 : hol.term B -> hyp_1 : hol.proof ((x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_2 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_1)))))) x_3) -> hol.proof (hol.and (hol.eq B z_5 (f_4 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_3 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x__1_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_7 s_1)))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => z_5 : hol.term B => hyp_1 : hol.proof ((x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_2 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_1)))))) x_3) => hol.EQ_MP ((x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_2 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_1)))))) x_3) (hol.and (hol.eq B z_5 (f_4 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_3 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x__1_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_7 s_1)))))) (thm_856 B A x_3 s_1 g_2 f_4 z_5) (thm_857 B A x_3 s_1 g_2 f_4 z_5 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_859 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> z_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_3) (hol.eq B (f_4 (g_2 y_6)) y_6)))) -> hyp_2 : hol.proof ((x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_2 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)))))) x_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => z_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_3) (hol.eq B (f_4 (g_2 y_6)) y_6)))) => hyp_2 : hol.proof ((x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_2 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)))))) x_1) => thm_855 A B s_3 g_2 x_1 f_4 z_5 hyp_1 (thm_858 A B s_3 g_2 x_1 f_4 z_5 hyp_2).

(; Theorem: |- ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))) x)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_860 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> z_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_6) s_2) (hol.eq B (f_4 (g_3 y_6)) y_6)))) -> hol.proof (hol.imp ((x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)))))) x_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => z_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_6) s_2) (hol.eq B (f_4 (g_3 y_6)) y_6)))) => hyp_2 : hol.proof ((x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)))))) x_1) => thm_859 B A x_1 g_3 s_2 f_4 z_5 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))) x)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_861 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> z_4 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1) (hol.eq B (f_3 (g_2 y_5)) y_5)))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.imp ((x_6 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_2 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_3 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_1)))))) x_5) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => z_4 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1) (hol.eq B (f_3 (g_2 y_5)) y_5)))) => x_5 : hol.term A => thm_860 B A x_5 s_1 g_2 f_3 z_4 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_862 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> z_4 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1) (hol.eq B (f_3 (g_2 y_5)) y_5)))) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => z_4 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1) (hol.eq B (f_3 (g_2 y_5)) y_5)))) => thm_615 B A s_1 g_2 f_3 z_4 (thm_861 B A s_1 g_2 f_3 z_4 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))) ;)

(; dict ;)

def thm_863 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> z_4 : hol.term B -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1))))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1))))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => z_4 : hol.term B => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1))))))) => hyp_1.

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_864 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> z_4 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_2) (hol.eq B (f_3 (g_1 y_5)) y_5)))) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => z_4 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_2) (hol.eq B (f_3 (g_1 y_5)) y_5)))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))))))) => thm_862 B A s_2 g_1 f_3 z_4 hyp_1 (thm_863 B A s_2 g_1 f_3 z_4 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)) x)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))))))) ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))))) ;)

(; dict ;)

def thm_865 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> z_4 : hol.term B -> hol.proof (hol.imp (hol.forall A (x_5 : hol.term A => hol.imp ((x_6 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) x_5) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_1 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_3 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2))))))))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => z_4 : hol.term B => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_279 A Q_1 P_2) A (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))))))) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)).

(; Theorem: |- ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)) ;)

(; dict ;)

def thm_866 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> z_4 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq B z_4 (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) -> hol.proof (hol.and (hol.eq B z_4 (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => z_4 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq B z_4 (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) => hyp_1.

(; Theorem: |- ((= z) (f x)) ;)

(; dict ;)

def thm_867 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> z_4 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq B z_4 (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) -> hol.proof (hol.eq B z_4 (f_3 x_2)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => z_4 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq B z_4 (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_185 q_1 p_2 hyp_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq B z_4 (f_3 x_2)) hyp_1.

(; Theorem: |- ((= z) (f x)) ;)

(; dict ;)

def thm_868 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> z_4 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq B z_4 (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) -> hol.proof (hol.eq B z_4 (f_3 x_2)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => z_4 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq B z_4 (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) => hol.PROVE_HYP (hol.and (hol.eq B z_4 (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.eq B z_4 (f_3 x_2)) (thm_866 A B s_1 x_2 f_3 z_4 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq B z_4 (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) => thm_867 A B s_1 x_2 f_3 z_4 hyp_2).

(; Theorem: |- ((Set.member x) s) ;)

(; dict ;)

def thm_869 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> z_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq B z_2 (f_1 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => z_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq B z_2 (f_1 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_1) (hol.eq B z_2 (f_1 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) hyp_1.

(; Theorem: |- ((Set.member x) s) ;)

(; dict ;)

def thm_870 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> z_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq B z_2 (f_1 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => z_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq B z_2 (f_1 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) => hol.PROVE_HYP (hol.and (hol.eq B z_2 (f_1 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (thm_866 A B s_3 x_4 f_1 z_2 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq B z_2 (f_1 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) => thm_869 B A f_1 z_2 s_3 x_4 hyp_2).

(; Theorem: |- ((= (= (\lambda _11086. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11086) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))) z))) (= (\lambda _11086. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11086) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))) z))) ;)

(; dict ;)

def thm_871 : A : hol.type -> B : hol.type -> z_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11086_5 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B __11086_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2))))))) z_1)) (hol.eq hol.bool ((__11086_5 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B __11086_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2))))))) z_1))) :=
  A : hol.type => B : hol.type => z_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11086_5 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B __11086_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2))))))) z_1)).

(; Theorem: |- ((= (\lambda _11086. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11086) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))) (f x))) (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= (f x)) (f x_1))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x_1) (g x))) (Data.Bool.? \lambda x_2. ((Data.Bool./\ ((= x) (f x_2))) ((Set.member x_2) s)))))))) ;)

(; dict ;)

def thm_872 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((__11086_5 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B __11086_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2))))))) (f_4 x_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_5 : hol.term A => hol.and (hol.eq B (f_4 x_1) (f_4 x__1_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x__1_5 (g_3 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__2_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x__2_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__2_7 s_2)))))))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => hol.BETA_CONV B hol.bool (__11086_5 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B __11086_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2))))))) (f_4 x_1).

(; Theorem: |- ((= ((= (\lambda _11086. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11086) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))) z)) (\lambda _11086. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11086) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))) (f x)))) ((= (\lambda _11086. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11086) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))) z)) (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= (f x)) (f x_1))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x_1) (g x))) (Data.Bool.? \lambda x_2. ((Data.Bool./\ ((= x) (f x_2))) ((Set.member x_2) s))))))))) ;)

(; dict ;)

def thm_873 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> z_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> g_4 : hol.term (hol.arr B A) -> f_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11086_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11086_6 (f_5 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_8 : hol.term B => hol.and (hol.eq A x_7 (g_4 x_8)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_9 : hol.term A => hol.and (hol.eq B x_8 (f_5 x_9)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3))))))) z_2) ((__11086_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11086_6 (f_5 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_8 : hol.term B => hol.and (hol.eq A x_7 (g_4 x_8)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_9 : hol.term A => hol.and (hol.eq B x_8 (f_5 x_9)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3))))))) (f_5 x_1))) (hol.eq hol.bool ((__11086_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11086_6 (f_5 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_8 : hol.term B => hol.and (hol.eq A x_7 (g_4 x_8)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_9 : hol.term A => hol.and (hol.eq B x_8 (f_5 x_9)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3))))))) z_2) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_6 : hol.term A => hol.and (hol.eq B (f_5 x_1) (f_5 x__1_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x__1_6 (g_4 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__2_8 : hol.term A => hol.and (hol.eq B x_7 (f_5 x__2_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__2_8 s_3))))))))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => z_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => g_4 : hol.term (hol.arr B A) => f_5 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11086_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11086_6 (f_5 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_8 : hol.term B => hol.and (hol.eq A x_7 (g_4 x_8)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_9 : hol.term A => hol.and (hol.eq B x_8 (f_5 x_9)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3))))))) z_2)) (hol.eq hol.bool ((__11086_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11086_6 (f_5 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_8 : hol.term B => hol.and (hol.eq A x_7 (g_4 x_8)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_9 : hol.term A => hol.and (hol.eq B x_8 (f_5 x_9)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3))))))) z_2)) ((__11086_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11086_6 (f_5 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_8 : hol.term B => hol.and (hol.eq A x_7 (g_4 x_8)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_9 : hol.term A => hol.and (hol.eq B x_8 (f_5 x_9)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3))))))) (f_5 x_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_6 : hol.term A => hol.and (hol.eq B (f_5 x_1) (f_5 x__1_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x__1_6 (g_4 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__2_8 : hol.term A => hol.and (hol.eq B x_7 (f_5 x__2_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__2_8 s_3))))))) (thm_871 A B z_2 s_3 g_4 f_5) (thm_872 A B x_1 s_3 g_4 f_5).

(; Theorem: |- ((= (\lambda _11086. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11086) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))) z)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= x) (f x_1))) ((Set.member x_1) s)))))))) ;)

(; dict ;)

def thm_874 : A : hol.type -> B : hol.type -> z_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((__11086_5 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B __11086_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2))))))) z_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_1 (f_4 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_3 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x__1_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_7 s_2)))))))) :=
  A : hol.type => B : hol.type => z_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => hol.BETA_CONV B hol.bool (__11086_5 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B __11086_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2))))))) z_1.

(; Theorem: |- ((= (= (\lambda _11086. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11086) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))) z))) (= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= x) (f x_1))) ((Set.member x_1) s))))))))) ;)

(; dict ;)

def thm_875 : A : hol.type -> B : hol.type -> z_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11086_5 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B __11086_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2))))))) z_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_1 (f_4 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_3 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x__1_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_7 s_2))))))))) :=
  A : hol.type => B : hol.type => z_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__11086_5 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B __11086_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2))))))) z_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_1 (f_4 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_3 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x__1_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_7 s_2))))))) thm_64 (thm_874 A B z_1 s_2 g_3 f_4).

(; Theorem: |- ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))))) (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))))) ;)

(; dict ;)

def thm_876 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_27_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_27_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hol.REFL hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_27_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1))))))).

(; Theorem: |- ((= ((= (\lambda _11086. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11086) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))) z)) (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))))) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= x) (f x_1))) ((Set.member x_1) s)))))))) (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))))) ;)

(; dict ;)

def thm_877 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> z_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> g_4 : hol.term (hol.arr B A) -> f_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11086_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11086_6 (f_5 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_8 : hol.term B => hol.and (hol.eq A x_7 (g_4 x_8)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_9 : hol.term A => hol.and (hol.eq B x_8 (f_5 x_9)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3))))))) z_2) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_1) (f_5 x_27_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_27_6 (g_4 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_5 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_2 (f_5 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_4 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_8 : hol.term A => hol.and (hol.eq B x_7 (f_5 x__1_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_8 s_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_1) (f_5 x_27_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_27_6 (g_4 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_5 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3))))))))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => z_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => g_4 : hol.term (hol.arr B A) => f_5 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11086_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11086_6 (f_5 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_8 : hol.term B => hol.and (hol.eq A x_7 (g_4 x_8)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_9 : hol.term A => hol.and (hol.eq B x_8 (f_5 x_9)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3))))))) z_2)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_2 (f_5 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_4 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_8 : hol.term A => hol.and (hol.eq B x_7 (f_5 x__1_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_8 s_3)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_1) (f_5 x_27_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_27_6 (g_4 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_5 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_1) (f_5 x_27_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_27_6 (g_4 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_5 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3))))))) (thm_875 A B z_2 s_3 g_4 f_5) (thm_876 B A s_3 g_4 x_1 f_5).

(; Theorem: |- ((= ((= (\lambda _11086. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11086) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))) z)) (\lambda _11086. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11086) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))) (f x)))) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= x) (f x_1))) ((Set.member x_1) s)))))))) (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))))) ;)

(; dict ;)

def thm_878 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> z_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> g_4 : hol.term (hol.arr B A) -> f_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11086_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11086_6 (f_5 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_8 : hol.term B => hol.and (hol.eq A x_7 (g_4 x_8)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_9 : hol.term A => hol.and (hol.eq B x_8 (f_5 x_9)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3))))))) z_2) ((__11086_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11086_6 (f_5 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_8 : hol.term B => hol.and (hol.eq A x_7 (g_4 x_8)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_9 : hol.term A => hol.and (hol.eq B x_8 (f_5 x_9)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3))))))) (f_5 x_1))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_2 (f_5 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_4 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_8 : hol.term A => hol.and (hol.eq B x_7 (f_5 x__1_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_8 s_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_1) (f_5 x_27_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_27_6 (g_4 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_5 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3))))))))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => z_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => g_4 : hol.term (hol.arr B A) => f_5 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.eq hol.bool ((__11086_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11086_6 (f_5 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_8 : hol.term B => hol.and (hol.eq A x_7 (g_4 x_8)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_9 : hol.term A => hol.and (hol.eq B x_8 (f_5 x_9)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3))))))) z_2) ((__11086_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11086_6 (f_5 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_8 : hol.term B => hol.and (hol.eq A x_7 (g_4 x_8)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_9 : hol.term A => hol.and (hol.eq B x_8 (f_5 x_9)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3))))))) (f_5 x_1))) (hol.eq hol.bool ((__11086_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11086_6 (f_5 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_8 : hol.term B => hol.and (hol.eq A x_7 (g_4 x_8)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_9 : hol.term A => hol.and (hol.eq B x_8 (f_5 x_9)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3))))))) z_2) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_6 : hol.term A => hol.and (hol.eq B (f_5 x_1) (f_5 x__1_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x__1_6 (g_4 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__2_8 : hol.term A => hol.and (hol.eq B x_7 (f_5 x__2_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__2_8 s_3)))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_2 (f_5 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_4 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_8 : hol.term A => hol.and (hol.eq B x_7 (f_5 x__1_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_8 s_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_1) (f_5 x_27_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_27_6 (g_4 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_5 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)))))))) (thm_873 A B x_1 z_2 s_3 g_4 f_5) (thm_877 A B x_1 z_2 s_3 g_4 f_5).

(; Theorem: |- ((= \lambda _11086. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11086) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))))) \lambda _11086. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11086) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))))) ;)

(; dict ;)

def thm_879 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (__11086_4 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B __11086_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1))))))) (__11086_4 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B __11086_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => hol.REFL (hol.arr B hol.bool) (__11086_4 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B __11086_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1))))))).

(; Theorem: |- ((= (\lambda _11086. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11086) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))) z)) (\lambda _11086. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= _11086) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))) (f x))) ;)

(; dict ;)

def thm_880 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> z_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> g_4 : hol.term (hol.arr B A) -> f_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq B z_2 (f_5 x_1)) -> hol.proof (hol.eq hol.bool ((__11086_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11086_6 (f_5 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_8 : hol.term B => hol.and (hol.eq A x_7 (g_4 x_8)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_9 : hol.term A => hol.and (hol.eq B x_8 (f_5 x_9)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3))))))) z_2) ((__11086_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11086_6 (f_5 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_8 : hol.term B => hol.and (hol.eq A x_7 (g_4 x_8)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_9 : hol.term A => hol.and (hol.eq B x_8 (f_5 x_9)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3))))))) (f_5 x_1))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => z_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => g_4 : hol.term (hol.arr B A) => f_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq B z_2 (f_5 x_1)) => hol.APP_THM B hol.bool (__11086_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11086_6 (f_5 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_8 : hol.term B => hol.and (hol.eq A x_7 (g_4 x_8)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_9 : hol.term A => hol.and (hol.eq B x_8 (f_5 x_9)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3))))))) (__11086_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11086_6 (f_5 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_8 : hol.term B => hol.and (hol.eq A x_7 (g_4 x_8)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_9 : hol.term A => hol.and (hol.eq B x_8 (f_5 x_9)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3))))))) z_2 (f_5 x_1) (thm_879 A B s_3 g_4 f_5) (thm_621 A B x_1 f_5 z_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= x) (f x_1))) ((Set.member x_1) s)))))))) (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))))) ;)

(; dict ;)

def thm_881 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> z_5 : hol.term B -> hyp_1 : hol.proof (hol.eq B z_5 (f_4 x_1)) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x__1_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_8 s_2))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_4 x_1) (f_4 x_27_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_27_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)))))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => z_5 : hol.term B => hyp_1 : hol.proof (hol.eq B z_5 (f_4 x_1)) => hol.EQ_MP (hol.eq hol.bool ((__11086_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11086_6 (f_4 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_8 : hol.term B => hol.and (hol.eq A x_7 (g_3 x_8)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_9 : hol.term A => hol.and (hol.eq B x_8 (f_4 x_9)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2))))))) z_5) ((__11086_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B __11086_6 (f_4 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_8 : hol.term B => hol.and (hol.eq A x_7 (g_3 x_8)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_9 : hol.term A => hol.and (hol.eq B x_8 (f_4 x_9)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2))))))) (f_4 x_1))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x__1_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_8 s_2))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_4 x_1) (f_4 x_27_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_27_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)))))))) (thm_878 A B x_1 z_5 s_2 g_3 f_4) (thm_880 A B x_1 z_5 s_2 g_3 f_4 hyp_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= x) (f x_1))) ((Set.member x_1) s)))))))) ;)

(; dict ;)

def thm_882 : B : hol.type -> A : hol.type -> z_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq B z_1 (f_5 x_4)) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_4) (f_5 x_27_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_27_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_5 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_1 (f_5 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_8 : hol.term A => hol.and (hol.eq B x_7 (f_5 x__1_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_8 s_2)))))))) :=
  B : hol.type => A : hol.type => z_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => x_4 : hol.term A => f_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq B z_1 (f_5 x_4)) => hol.SYM hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_1 (f_5 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_8 : hol.term A => hol.and (hol.eq B x_7 (f_5 x__1_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_8 s_2))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_4) (f_5 x_27_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_27_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_5 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2))))))) (thm_881 B A x_4 s_2 g_3 f_5 z_1 hyp_1).

(; Theorem: |- ((= (\lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))) (g (f x)))) ((Data.Bool./\ ((= (f x)) (f (g (f x))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (g (f x))) (g x))) (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= x) (f x_1))) ((Set.member x_1) s))))))) ;)

(; dict ;)

def thm_883 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_27_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))))) (g_2 (f_4 x_3))) (hol.and (hol.eq B (f_4 x_3) (f_4 (g_2 (f_4 x_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A (g_2 (f_4 x_3)) (g_2 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x__1_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 s_1))))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hol.BETA_CONV A hol.bool (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_27_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))))) (g_2 (f_4 x_3)).

(; Theorem: |- ((= ((Data.Bool./\ ((= (f x)) (f (g (f x))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (g (f x))) (g x))) (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= x) (f x_1))) ((Set.member x_1) s))))))) (\lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))) (g (f x)))) ;)

(; dict ;)

def thm_884 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B (f_4 x_3) (f_4 (g_2 (f_4 x_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A (g_2 (f_4 x_3)) (g_2 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x__1_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 s_1)))))) ((x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_27_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))))) (g_2 (f_4 x_3)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hol.SYM hol.bool ((x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_27_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))))) (g_2 (f_4 x_3))) (hol.and (hol.eq B (f_4 x_3) (f_4 (g_2 (f_4 x_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A (g_2 (f_4 x_3)) (g_2 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x__1_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 s_1)))))) (thm_883 B A s_1 g_2 x_3 f_4).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Set.member (f x)) ((Set.image f) s))) ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g (f x))) s)) ((= (f (g (f x)))) (f x)))) ((= (f x)) (f (g (f x))))))) ((Data.Bool.==> ((Data.Bool.==> ((Set.member (f x)) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g (f x))) s)) ((= (f (g (f x)))) (f x))))) ((= (f x)) (f (g (f x)))))) ;)

(; dict ;)

def thm_885 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hol.proof (hol.imp (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_3))) (f_4 x_3))) (hol.eq B (f_4 x_3) (f_4 (g_1 (f_4 x_3)))))) (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_3))) (f_4 x_3)))) (hol.eq B (f_4 x_3) (f_4 (g_1 (f_4 x_3)))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => (z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => x_3 : hol.term hol.bool => thm_779 z_1 y_2 x_3) (hol.eq B (f_4 x_3) (f_4 (g_1 (f_4 x_3)))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_3))) (f_4 x_3))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)).

(; Theorem: |- ((Set.member (f x)) ((Set.image f) s)) ;)

(; dict ;)

def thm_886 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => thm_800 B A f_3 s_1 x_2 (thm_790 A s_1 x_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g (f x))) s)) ((= (f (g (f x)))) (f x)))) ((= (f x)) (f (g (f x)))))) ((Data.Bool./\ ((Set.member (f x)) ((Set.image f) s))) ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g (f x))) s)) ((= (f (g (f x)))) (f x)))) ((= (f x)) (f (g (f x))))))) ;)

(; dict ;)

def thm_887 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_2))) (f_3 x_2))) (hol.eq B (f_3 x_2) (f_3 (g_4 (f_3 x_2))))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_2))) (f_3 x_2))) (hol.eq B (f_3 x_2) (f_3 (g_4 (f_3 x_2))))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_2))) (f_3 x_2))) (hol.eq B (f_3 x_2) (f_3 (g_4 (f_3 x_2))))) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g (f x))) s)) ((= (f (g (f x)))) (f x)))) ((= (f x)) (f (g (f x)))))) ((Data.Bool./\ ((Set.member (f x)) ((Set.image f) s))) ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g (f x))) s)) ((= (f (g (f x)))) (f x)))) ((= (f x)) (f (g (f x))))))) ;)

(; dict ;)

def thm_888 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_2))) (f_3 x_2))) (hol.eq B (f_3 x_2) (f_3 (g_4 (f_3 x_2))))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_2))) (f_3 x_2))) (hol.eq B (f_3 x_2) (f_3 (g_4 (f_3 x_2))))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hol.PROVE_HYP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.eq hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_2))) (f_3 x_2))) (hol.eq B (f_3 x_2) (f_3 (g_4 (f_3 x_2))))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_2))) (f_3 x_2))) (hol.eq B (f_3 x_2) (f_3 (g_4 (f_3 x_2))))))) (thm_886 A B s_1 x_2 f_3 hyp_1) (hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) => thm_887 B A s_1 x_2 f_3 g_4 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((Set.member (g (f x))) s)) ((= (f (g (f x)))) (f x))) ;)

(; dict ;)

def thm_889 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_2))) (f_3 x_2))) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_2))) (f_3 x_2))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_2))) (f_3 x_2))) => hyp_1.

(; Theorem: |- ((= (f (g (f x)))) (f x)) ;)

(; dict ;)

def thm_890 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_2)) s_1) (hol.eq B (f_4 (g_3 (f_4 x_2))) (f_4 x_2))) -> hol.proof (hol.eq B (f_4 (g_3 (f_4 x_2))) (f_4 x_2)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_2)) s_1) (hol.eq B (f_4 (g_3 (f_4 x_2))) (f_4 x_2))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_2)) s_1) (hol.eq B (f_4 (g_3 (f_4 x_2))) (f_4 x_2)) hyp_1.

(; Theorem: |- ((= (f (g (f x)))) (f x)) ;)

(; dict ;)

def thm_891 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_2)) s_1) (hol.eq B (f_4 (g_3 (f_4 x_2))) (f_4 x_2))) -> hol.proof (hol.eq B (f_4 (g_3 (f_4 x_2))) (f_4 x_2)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_2)) s_1) (hol.eq B (f_4 (g_3 (f_4 x_2))) (f_4 x_2))) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_2)) s_1) (hol.eq B (f_4 (g_3 (f_4 x_2))) (f_4 x_2))) (hol.eq B (f_4 (g_3 (f_4 x_2))) (f_4 x_2)) (thm_889 B A s_1 x_2 f_4 g_3 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_2)) s_1) (hol.eq B (f_4 (g_3 (f_4 x_2))) (f_4 x_2))) => thm_890 A B s_1 x_2 g_3 f_4 hyp_2).

(; Theorem: |- ((= (f x)) (f (g (f x)))) ;)

(; dict ;)

def thm_892 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 (f_4 x_3)) s_1) (hol.eq B (f_4 (g_2 (f_4 x_3))) (f_4 x_3))) -> hol.proof (hol.eq B (f_4 x_3) (f_4 (g_2 (f_4 x_3)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 (f_4 x_3)) s_1) (hol.eq B (f_4 (g_2 (f_4 x_3))) (f_4 x_3))) => hol.SYM B (f_4 (g_2 (f_4 x_3))) (f_4 x_3) (thm_891 A B s_1 x_3 g_2 f_4 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g (f x))) s)) ((= (f (g (f x)))) (f x)))) ((= (f x)) (f (g (f x))))) ;)

(; dict ;)

def thm_893 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_2))) (f_3 x_2))) (hol.eq B (f_3 x_2) (f_3 (g_4 (f_3 x_2))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_2))) (f_3 x_2))) => thm_892 A B s_1 g_4 x_2 f_3 hyp_1.

(; Theorem: |- ((Data.Bool./\ ((Set.member (f x)) ((Set.image f) s))) ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g (f x))) s)) ((= (f (g (f x)))) (f x)))) ((= (f x)) (f (g (f x)))))) ;)

(; dict ;)

def thm_894 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) -> hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_3))) (f_4 x_3))) (hol.eq B (f_4 x_3) (f_4 (g_1 (f_4 x_3)))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) => hol.EQ_MP (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_3))) (f_4 x_3))) (hol.eq B (f_4 x_3) (f_4 (g_1 (f_4 x_3))))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_3))) (f_4 x_3))) (hol.eq B (f_4 x_3) (f_4 (g_1 (f_4 x_3)))))) (thm_888 B A s_2 x_3 f_4 g_1 hyp_1) (thm_893 B A s_2 x_3 f_4 g_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Set.member (f x)) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g (f x))) s)) ((= (f (g (f x)))) (f x))))) ((= (f x)) (f (g (f x))))) ;)

(; dict ;)

def thm_895 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) -> hol.proof (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_3))) (f_4 x_3)))) (hol.eq B (f_4 x_3) (f_4 (g_1 (f_4 x_3))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) => thm_885 A B g_1 s_2 x_3 f_4 (thm_894 A B g_1 s_2 x_3 f_4 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Set.member (f x)) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g (f x))) s)) ((= (f (g (f x)))) (f x)))) ;)

(; dict ;)

def thm_896 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_2) (hol.eq B (f_4 (g_1 y_5)) y_5)))) -> hol.proof (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_3))) (f_4 x_3)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_2) (hol.eq B (f_4 (g_1 y_5)) y_5)))) => thm_510 A B g_1 s_2 f_4 hyp_1 (f_4 x_3).

(; Theorem: |- ((= (f x)) (f (g (f x)))) ;)

(; dict ;)

def thm_897 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1) (hol.eq B (f_4 (g_2 y_5)) y_5)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) -> hol.proof (hol.eq B (f_4 x_3) (f_4 (g_2 (f_4 x_3)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1) (hol.eq B (f_4 (g_2 y_5)) y_5)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) => thm_895 A B g_2 s_1 x_3 f_4 hyp_2 (thm_896 A B g_2 s_1 x_3 f_4 hyp_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (g (f x))) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))) ((Data.Bool./\ ((= (f x)) (f (g (f x))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (g (f x))) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))) ;)

(; dict ;)

def thm_898 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 (g_4 (f_3 x_2)))) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) (hol.and (hol.eq B (f_3 x_2) (f_3 (g_4 (f_3 x_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 (g_4 (f_3 x_2)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (hol.eq B (f_3 x_2) (f_3 (g_4 (f_3 x_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) hyp_1.

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (g (f x))) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))) ((Data.Bool./\ ((= (f x)) (f (g (f x))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (g (f x))) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))) ;)

(; dict ;)

def thm_899 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_1) (hol.eq B (f_3 (g_4 y_5)) y_5)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) (hol.and (hol.eq B (f_3 x_2) (f_3 (g_4 (f_3 x_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_1) (hol.eq B (f_3 (g_4 y_5)) y_5)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hol.PROVE_HYP (hol.eq B (f_3 x_2) (f_3 (g_4 (f_3 x_2)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) (hol.and (hol.eq B (f_3 x_2) (f_3 (g_4 (f_3 x_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))))) (thm_897 A B s_1 g_4 x_2 f_3 hyp_1 hyp_2) (hyp_3 : hol.proof (hol.eq B (f_3 x_2) (f_3 (g_4 (f_3 x_2)))) => thm_898 A B s_1 x_2 f_3 g_4 hyp_3).

(; Theorem: |- ((= (\lambda x. ((Data.Bool./\ ((= (g (f x))) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (f x))) ((Data.Bool./\ ((= (g (f x))) (g (f x)))) (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= (f x)) (f x_1))) ((Set.member x_1) s))))) ;)

(; dict ;)

def thm_900 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool ((x_5 : hol.term B => hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) (f_3 x_2)) (hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 (f_3 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_5 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x__1_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s_1))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hol.BETA_CONV B hol.bool (x_5 : hol.term B => hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) (f_3 x_2).

(; Theorem: |- ((= ((Data.Bool./\ ((= (g (f x))) (g (f x)))) (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= (f x)) (f x_1))) ((Set.member x_1) s))))) (\lambda x. ((Data.Bool./\ ((= (g (f x))) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (f x))) ;)

(; dict ;)

def thm_901 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 (f_3 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_5 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x__1_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s_1)))) ((x_5 : hol.term B => hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) (f_3 x_2))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hol.SYM hol.bool ((x_5 : hol.term B => hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) (f_3 x_2)) (hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 (f_3 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_5 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x__1_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s_1)))) (thm_900 A B s_1 x_2 f_3 g_4).

(; Theorem: |- ((= ((= (g (f x))) (g (f x)))) Data.Bool.T) ;)

(; dict ;)

def thm_902 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.eq A (g_3 (f_2 x_1)) (g_3 (f_2 x_1))) hol.true) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => (A : hol.type => x_1 : hol.term A => thm_313 A x_1) A (g_3 (f_2 x_1)).

(; Theorem: |- ((= (Data.Bool./\ ((= (g (f x))) (g (f x))))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_903 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq A (g_3 (f_2 x_1)) (g_3 (f_2 x_1)))) (hol.and hol.true)) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.eq A (g_3 (f_2 x_1)) (g_3 (f_2 x_1))) hol.true thm_298 (thm_902 B A x_1 f_2 g_3).

(; Theorem: |- ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) ;)

(; dict ;)

def thm_904 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hol.REFL hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1))).

(; Theorem: |- ((= ((Data.Bool./\ ((= (g (f x))) (g (f x)))) (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s))))) ((Data.Bool./\ Data.Bool.T) (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s))))) ;)

(; dict ;)

def thm_905 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 (f_3 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1)))) (hol.and hol.true (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 (f_3 x_2)))) (hol.and hol.true) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1))) (thm_903 B A x_2 f_3 g_4) (thm_904 B A s_1 x_2 f_3).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s))))) (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) ;)

(; dict ;)

def thm_906 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and hol.true (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => (t_1 : hol.term hol.bool => thm_124 t_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1))).

(; Theorem: |- ((= ((Data.Bool./\ ((= (g (f x))) (g (f x)))) (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s))))) (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) ;)

(; dict ;)

def thm_907 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 (f_3 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hol.TRANS hol.bool (hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 (f_3 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1)))) (hol.and hol.true (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1))) (thm_905 B A s_1 x_2 f_3 g_4) (thm_906 B A s_1 x_2 f_3).

(; Theorem: |- ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) ((Data.Bool./\ ((= (g (f x))) (g (f x)))) (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s))))) ;)

(; dict ;)

def thm_908 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_2))) (hol.and (hol.eq A (g_1 (f_4 x_3)) (g_1 (f_4 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_2))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hol.SYM hol.bool (hol.and (hol.eq A (g_1 (f_4 x_3)) (g_1 (f_4 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_2))) (thm_907 B A s_2 x_3 f_4 g_1).

(; Theorem: |- ((= (\lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)) x)) ((Data.Bool./\ ((= (f x)) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_909 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1)) x_2) (hol.and (hol.eq B (f_3 x_2) (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hol.BETA_CONV A hol.bool (x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1)) x_2.

(; Theorem: |- ((= ((Data.Bool./\ ((= (f x)) (f x))) ((Set.member x) s))) (\lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)) x)) ;)

(; dict ;)

def thm_910 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B (f_3 x_2) (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) ((x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1)) x_2)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hol.SYM hol.bool ((x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1)) x_2) (hol.and (hol.eq B (f_3 x_2) (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (thm_909 B A s_1 x_2 f_3).

(; Theorem: |- ((= ((= (f x)) (f x))) Data.Bool.T) ;)

(; dict ;)

def thm_911 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B (f_2 x_1) (f_2 x_1)) hol.true) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => (B : hol.type => x_1 : hol.term B => thm_315 B x_1) B (f_2 x_1).

(; Theorem: |- ((= (Data.Bool./\ ((= (f x)) (f x)))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_912 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq B (f_2 x_1) (f_2 x_1))) (hol.and hol.true)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.eq B (f_2 x_1) (f_2 x_1)) hol.true thm_298 (thm_911 A B x_1 f_2).

(; Theorem: |- ((= ((= ((Set.member x) s)) Data.Bool.T)) ((= ((Set.member x) s)) Data.Bool.T)) ;)

(; dict ;)

def thm_913 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true).

(; Theorem: |- ((= ((= ((Set.member x) s)) Data.Bool.T)) ((= ((Set.member x) s)) Data.Bool.T)) ;)

(; dict ;)

def thm_914 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (thm_913 A s_1 x_2) (thm_913 A s_1 x_2).

(; Theorem: |- ((= ((Set.member x) s)) ((= ((Set.member x) s)) Data.Bool.T)) ;)

(; dict ;)

def thm_915 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => (t_1 : hol.term hol.bool => thm_310 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1).

(; Theorem: |- ((= ((Set.member x) s)) Data.Bool.T) ;)

(; dict ;)

def thm_916 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hol.EQ_MP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (thm_915 A s_1 x_2) (thm_790 A s_1 x_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ ((= (f x)) (f x))) ((Set.member x) s))) ((Data.Bool./\ Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_917 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B (f_3 x_2) (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.and hol.true hol.true)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq B (f_3 x_2) (f_3 x_2))) (hol.and hol.true) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true (thm_912 A B x_2 f_3) (hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (thm_914 A s_1 x_2) (thm_916 A s_1 x_2 hyp_1)).

(; Theorem: |- ((= ((Data.Bool./\ ((= (f x)) (f x))) ((Set.member x) s))) Data.Bool.T) ;)

(; dict ;)

def thm_918 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B (f_3 x_2) (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) hol.true) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hol.TRANS hol.bool (hol.and (hol.eq B (f_3 x_2) (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.and hol.true hol.true) hol.true (thm_917 A B s_1 x_2 f_3 hyp_1) thm_323.

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool./\ ((= (f x)) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_919 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (hol.eq hol.bool hol.true (hol.and (hol.eq B (f_3 x_2) (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hol.SYM hol.bool (hol.and (hol.eq B (f_3 x_2) (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) hol.true (thm_918 A B s_1 x_2 f_3 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= (f x)) (f x))) ((Set.member x) s)) ;)

(; dict ;)

def thm_920 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (hol.and (hol.eq B (f_3 x_2) (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hol.EQ_MP hol.true (hol.and (hol.eq B (f_3 x_2) (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (thm_919 A B s_1 x_2 f_3 hyp_1) thm_15.

(; Theorem: |- (\lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)) x) ;)

(; dict ;)

def thm_921 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof ((x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1)) x_2) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hol.EQ_MP (hol.and (hol.eq B (f_3 x_2) (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) ((x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1)) x_2) (thm_910 A B s_1 x_2 f_3) (thm_920 A B s_1 x_2 f_3 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s))) ;)

(; dict ;)

def thm_922 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof ((x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1)) x_2) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof ((x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1)) x_2) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_334 A x_1 P_2 hyp_1) A x_2 (x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1)) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s))) ;)

(; dict ;)

def thm_923 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hol.PROVE_HYP ((x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1)) x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1))) (thm_921 B A s_1 x_2 f_3 hyp_1) (hyp_2 : hol.proof ((x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1)) x_2) => thm_922 B A s_1 x_2 f_3 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((= (g (f x))) (g (f x)))) (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) ;)

(; dict ;)

def thm_924 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 (f_3 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hol.EQ_MP (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1))) (hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 (f_3 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1)))) (thm_908 B A g_4 s_1 x_2 f_3) (thm_923 B A s_1 x_2 f_3 hyp_1).

(; Theorem: |- (\lambda x. ((Data.Bool./\ ((= (g (f x))) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (f x)) ;)

(; dict ;)

def thm_925 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof ((x_5 : hol.term B => hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) (f_3 x_2)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hol.EQ_MP (hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 (f_3 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1)))) ((x_5 : hol.term B => hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) (f_3 x_2)) (thm_901 B A s_1 x_2 f_3 g_4) (thm_924 B A s_1 x_2 f_3 g_4 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (g (f x))) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_926 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof ((x_5 : hol.term B => hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) (f_3 x_2)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof ((x_5 : hol.term B => hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) (f_3 x_2)) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_334 A x_1 P_2 hyp_1) B (f_3 x_2) (x_5 : hol.term B => hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (g (f x))) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_927 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hol.PROVE_HYP ((x_5 : hol.term B => hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) (f_3 x_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) (thm_925 A B s_1 x_2 f_3 g_4 hyp_1) (hyp_2 : hol.proof ((x_5 : hol.term B => hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) (f_3 x_2)) => thm_926 A B s_1 x_2 f_3 g_4 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((= (f x)) (f (g (f x))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= (g (f x))) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))) ;)

(; dict ;)

def thm_928 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1) (hol.eq B (f_4 (g_2 y_5)) y_5)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) -> hol.proof (hol.and (hol.eq B (f_4 x_3) (f_4 (g_2 (f_4 x_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A (g_2 (f_4 x_3)) (g_2 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1) (hol.eq B (f_4 (g_2 y_5)) y_5)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) => hol.EQ_MP (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A (g_2 (f_4 x_3)) (g_2 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) (hol.and (hol.eq B (f_4 x_3) (f_4 (g_2 (f_4 x_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A (g_2 (f_4 x_3)) (g_2 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))))) (thm_899 A B s_1 x_3 f_4 g_2 hyp_1 hyp_2) (thm_927 A B s_1 x_3 f_4 g_2 hyp_2).

(; Theorem: |- (\lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))) (g (f x))) ;)

(; dict ;)

def thm_929 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1) (hol.eq B (f_4 (g_2 y_5)) y_5)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) -> hol.proof ((x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_27_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))))) (g_2 (f_4 x_3))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1) (hol.eq B (f_4 (g_2 y_5)) y_5)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) => hol.EQ_MP (hol.and (hol.eq B (f_4 x_3) (f_4 (g_2 (f_4 x_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A (g_2 (f_4 x_3)) (g_2 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))))) ((x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_27_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))))) (g_2 (f_4 x_3))) (thm_884 A B s_1 g_2 x_3 f_4) (thm_928 A B s_1 g_2 x_3 f_4 hyp_1 hyp_2).

(; Theorem: |- (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))) ;)

(; dict ;)

def thm_930 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof ((x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_27_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))))) (g_2 (f_4 x_3))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_27_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1))))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof ((x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_27_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))))) (g_2 (f_4 x_3))) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_334 A x_1 P_2 hyp_1) A (g_2 (f_4 x_3)) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_27_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))))) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))) ;)

(; dict ;)

def thm_931 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1) (hol.eq B (f_4 (g_2 y_5)) y_5)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_27_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1))))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1) (hol.eq B (f_4 (g_2 y_5)) y_5)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) => hol.PROVE_HYP ((x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_27_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))))) (g_2 (f_4 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_27_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1))))))) (thm_929 B A s_1 g_2 x_3 f_4 hyp_1 hyp_2) (hyp_3 : hol.proof ((x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_27_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))))) (g_2 (f_4 x_3))) => thm_930 B A s_1 g_2 x_3 f_4 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))) ;)

(; dict ;)

def thm_932 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1) (hol.eq B (f_4 (g_2 y_5)) y_5)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_27_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1))))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1) (hol.eq B (f_4 (g_2 y_5)) y_5)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_27_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1))))))) (thm_790 A s_1 x_3 hyp_2) (hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) => thm_931 B A s_1 g_2 x_3 f_4 hyp_1 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))) ;)

(; dict ;)

def thm_933 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1) (hol.eq B (f_4 (g_2 y_5)) y_5)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_27_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1))))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1) (hol.eq B (f_4 (g_2 y_5)) y_5)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) => hol.PROVE_HYP (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1) (hol.eq B (f_4 (g_2 y_5)) y_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_27_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1))))))) (thm_510 A B g_2 s_1 f_4 hyp_1) (hyp_3 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1) (hol.eq B (f_4 (g_2 y_5)) y_5)))) => thm_932 B A s_1 g_2 x_3 f_4 hyp_3 hyp_2).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= x) (f x_1))) ((Set.member x_1) s))))))) ;)

(; dict ;)

def thm_934 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> z_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_6) s_2) (hol.eq B (f_4 (g_3 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.eq B z_5 (f_4 x_1)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x__1_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_8 s_2))))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => z_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_6) s_2) (hol.eq B (f_4 (g_3 y_6)) y_6)))) => hyp_2 : hol.proof (hol.eq B z_5 (f_4 x_1)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) => hol.EQ_MP (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_4 x_1) (f_4 x_27_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_27_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x__1_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_8 s_2))))))) (thm_882 B A z_5 s_2 g_3 x_1 f_4 hyp_2) (thm_933 B A s_2 g_3 x_1 f_4 hyp_1 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= x) (f x_1))) ((Set.member x_1) s))))))) ;)

(; dict ;)

def thm_935 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> z_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_6) s_2) (hol.eq B (f_4 (g_3 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.eq B z_5 (f_4 x_1)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x__1_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_8 s_2))))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => z_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_6) s_2) (hol.eq B (f_4 (g_3 y_6)) y_6)))) => hyp_2 : hol.proof (hol.eq B z_5 (f_4 x_1)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x__1_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_8 s_2))))))) (thm_790 A s_2 x_1 hyp_3) (hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) => thm_934 B A x_1 s_2 g_3 f_4 z_5 hyp_1 hyp_2 hyp_4).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= x) (f x_1))) ((Set.member x_1) s))))))) ;)

(; dict ;)

def thm_936 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> z_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_6) s_2) (hol.eq B (f_4 (g_3 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.eq B z_5 (f_4 x_1)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x__1_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_8 s_2))))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => z_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_6) s_2) (hol.eq B (f_4 (g_3 y_6)) y_6)))) => hyp_2 : hol.proof (hol.eq B z_5 (f_4 x_1)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) => hol.PROVE_HYP (hol.eq B z_5 (f_4 x_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x__1_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_8 s_2))))))) (thm_621 A B x_1 f_4 z_5 hyp_2) (hyp_4 : hol.proof (hol.eq B z_5 (f_4 x_1)) => thm_935 B A x_1 s_2 g_3 f_4 z_5 hyp_1 hyp_4 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= x) (f x_1))) ((Set.member x_1) s))))))) ;)

(; dict ;)

def thm_937 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> z_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_6) s_2) (hol.eq B (f_4 (g_3 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.eq B z_5 (f_4 x_1)) -> hyp_3 : hol.proof (hol.and (hol.eq B z_5 (f_4 x_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x__1_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_8 s_2))))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => z_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_6) s_2) (hol.eq B (f_4 (g_3 y_6)) y_6)))) => hyp_2 : hol.proof (hol.eq B z_5 (f_4 x_1)) => hyp_3 : hol.proof (hol.and (hol.eq B z_5 (f_4 x_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x__1_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_8 s_2))))))) (thm_870 B A f_4 z_5 s_2 x_1 hyp_3) (hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) => thm_936 B A x_1 s_2 g_3 f_4 z_5 hyp_1 hyp_2 hyp_4).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= x) (f x_1))) ((Set.member x_1) s))))))) ;)

(; dict ;)

def thm_938 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> z_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_6) s_2) (hol.eq B (f_4 (g_3 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.and (hol.eq B z_5 (f_4 x_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x__1_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_8 s_2))))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => z_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_6) s_2) (hol.eq B (f_4 (g_3 y_6)) y_6)))) => hyp_2 : hol.proof (hol.and (hol.eq B z_5 (f_4 x_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) => hol.PROVE_HYP (hol.eq B z_5 (f_4 x_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x__1_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_8 s_2))))))) (thm_868 A B s_2 x_1 f_4 z_5 hyp_2) (hyp_3 : hol.proof (hol.eq B z_5 (f_4 x_1)) => thm_937 B A x_1 s_2 g_3 f_4 z_5 hyp_1 hyp_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= x) (f x_1))) ((Set.member x_1) s)))))))) ;)

(; dict ;)

def thm_939 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> z_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_6) s_2) (hol.eq B (f_4 (g_1 y_6)) y_6)))) -> hol.proof (hol.imp (hol.and (hol.eq B z_5 (f_4 x_3)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_1 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x__1_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_8 s_2)))))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => z_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_6) s_2) (hol.eq B (f_4 (g_1 y_6)) y_6)))) => hyp_2 : hol.proof (hol.and (hol.eq B z_5 (f_4 x_3)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) => thm_938 B A x_3 s_2 g_1 f_4 z_5 hyp_1 hyp_2.

(; Theorem: |- ((= (\lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)) x)) ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_940 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> z_4 : hol.term B -> hol.proof (hol.eq hol.bool ((x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)) x_1) (hol.and (hol.eq B z_4 (f_3 x_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => z_4 : hol.term B => hol.BETA_CONV A hol.bool (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)) x_1.

(; Theorem: |- (\lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)) x) ;)

(; dict ;)

def thm_941 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> z_4 : hol.term B -> hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)) x_1) -> hol.proof ((x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)) x_1) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => z_4 : hol.term B => hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)) x_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)) ;)

(; dict ;)

def thm_942 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> z_4 : hol.term B -> hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) x_2) -> hol.proof (hol.and (hol.eq B z_4 (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => z_4 : hol.term B => hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) x_2) => hol.EQ_MP ((x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) x_2) (hol.and (hol.eq B z_4 (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (thm_940 B A x_2 s_1 f_3 z_4) (thm_941 B A x_2 s_1 f_3 z_4 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= x) (f x_1))) ((Set.member x_1) s))))))) ;)

(; dict ;)

def thm_943 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> z_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_6) s_2) (hol.eq B (f_4 (g_3 y_6)) y_6)))) -> hyp_2 : hol.proof ((x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) x_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_3 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x__1_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_8 s_2))))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => z_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_6) s_2) (hol.eq B (f_4 (g_3 y_6)) y_6)))) => hyp_2 : hol.proof ((x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) x_1) => thm_939 A B g_3 s_2 x_1 f_4 z_5 hyp_1 (thm_942 A B s_2 x_1 f_4 z_5 hyp_2).

(; Theorem: |- ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)) x)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= x) (f x_1))) ((Set.member x_1) s)))))))) ;)

(; dict ;)

def thm_944 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> x_2 : hol.term A -> s_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> z_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_6) s_3) (hol.eq B (f_4 (g_1 y_6)) y_6)))) -> hol.proof (hol.imp ((x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_1 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_8 : hol.term A => hol.and (hol.eq B x_7 (f_4 x__1_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_8 s_3)))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => x_2 : hol.term A => s_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => z_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_6) s_3) (hol.eq B (f_4 (g_1 y_6)) y_6)))) => hyp_2 : hol.proof ((x_6 : hol.term A => hol.and (hol.eq B z_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) x_2) => thm_943 B A x_2 s_3 g_1 f_4 z_5 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)) x)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= x) (f x_1))) ((Set.member x_1) s))))))))) ;)

(; dict ;)

def thm_945 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> z_4 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_2) (hol.eq B (f_3 (g_1 y_5)) y_5)))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.imp ((x_6 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) x_5) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_7 : hol.term B => hol.and (hol.eq A x_6 (g_1 x_7)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_8 : hol.term A => hol.and (hol.eq B x_7 (f_3 x__1_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_8 s_2))))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => z_4 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_2) (hol.eq B (f_3 (g_1 y_5)) y_5)))) => x_5 : hol.term A => thm_944 B A g_1 x_5 s_2 f_3 z_4 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))))) ;)

(; dict ;)

def thm_946 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> z_4 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_2) (hol.eq B (f_3 (g_1 y_5)) y_5)))) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => z_4 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_2) (hol.eq B (f_3 (g_1 y_5)) y_5)))) => thm_865 B A g_1 s_2 f_3 z_4 (thm_945 B A g_1 s_2 f_3 z_4 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_947 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> z_3 : hol.term B -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B z_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B z_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => z_3 : hol.term B => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B z_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) => hyp_1.

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))) ;)

(; dict ;)

def thm_948 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> f_3 : hol.term (hol.arr A B) -> z_4 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1) (hol.eq B (f_3 (g_2 y_5)) y_5)))) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_2 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1))))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => f_3 : hol.term (hol.arr A B) => z_4 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_5) s_1) (hol.eq B (f_3 (g_2 y_5)) y_5)))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1))) => thm_946 B A g_2 s_1 f_3 z_4 hyp_1 (thm_947 B A s_1 f_3 z_4 hyp_2).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))))) ;)

(; dict ;)

def thm_949 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> z_4 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_2) (hol.eq B (f_3 (g_1 y_5)) y_5)))) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => z_4 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_2) (hol.eq B (f_3 (g_1 y_5)) y_5)))) => hol.PROP_EXT (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))))))) (hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))))))) => (hyp_3 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))))))) => thm_864 B A g_1 s_2 f_3 z_4 hyp_1 hyp_3) (thm_863 B A s_2 g_1 f_3 z_4 hyp_2)) (hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) => (hyp_3 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) => thm_948 B A s_2 g_1 f_3 z_4 hyp_1 hyp_3) (thm_947 B A s_2 f_3 z_4 hyp_2)).

(; Theorem: |- (Data.Bool.! \lambda z. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= z) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))))) ;)

(; dict ;)

def thm_950 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_4) s_2) (hol.eq B (f_3 (g_1 y_4)) y_4)))) -> hol.proof (hol.forall B (z_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))))))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_4) s_2) (hol.eq B (f_3 (g_1 y_4)) y_4)))) => z_4 : hol.term B => thm_949 B A g_1 s_2 f_3 z_4 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))))) ;)

(; dict ;)

def thm_951 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_4) s_2) (hol.eq B (f_3 (g_1 y_4)) y_4)))) -> hol.proof (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))))))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_4) s_2) (hol.eq B (f_3 (g_1 y_4)) y_4)))) => hol.EQ_MP (hol.forall B (z_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B z_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))))))))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))))))))) (thm_614 A B g_1 s_2 f_3) (thm_950 A B g_1 s_2 f_3 hyp_1).

(; Theorem: |- ((= ((Set.image f) s)) ((Set.image f) ((Set.image g) ((Set.image f) s)))) ;)

(; dict ;)

def thm_952 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_4) s_2) (hol.eq B (f_3 (g_1 y_4)) y_4)))) -> hol.proof (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_4) s_2) (hol.eq B (f_3 (g_1 y_4)) y_4)))) => hol.EQ_MP (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_6 : hol.term B => hol.and (hol.eq A x_5 (g_1 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))))))))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)))) (thm_610 A B g_1 s_2 f_3) (thm_951 A B g_1 s_2 f_3 hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y))))) ((= x) y))))) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) ((Set.image g) ((Set.image f) s))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y))))) ((= x) y)))))) ;)

(; dict ;)

def thm_953 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) -> hol.proof (hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)))) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)))) hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y))))) ((= x) y))))) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) ((Set.image g) ((Set.image f) s))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y))))) ((= x) y)))))) ;)

(; dict ;)

def thm_954 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_4) s_1) (hol.eq B (f_2 (g_3 y_4)) y_4)))) -> hol.proof (hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)))) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_4) s_1) (hol.eq B (f_2 (g_3 y_4)) y_4)))) => hol.PROVE_HYP (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) (hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)))) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)))))) (thm_952 A B g_3 s_1 f_2 hyp_1) (hyp_2 : hol.proof (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) => thm_953 B A s_1 f_2 g_3 hyp_2).

(; Theorem: |- ((= \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y))))) ((= x) y)))) \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y))))) ((= x) y)))) ;)

(; dict ;)

def thm_955 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5))) (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hol.REFL (hol.arr A hol.bool) (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5))).

(; Theorem: |- ((= \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y))))) ((= x) y)))) \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y))))) ((= x) y)))) ;)

(; dict ;)

def thm_956 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5))) (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hol.TRANS (hol.arr A hol.bool) (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5))) (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5))) (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5))) (thm_955 B A s_1 f_2 g_3) (thm_955 B A s_1 f_2 g_3).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y))))) ((= x) y))))) ;)

(; dict ;)

def thm_957 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5))) (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5))) (thm_301 A) (thm_956 B A s_1 f_2 g_3).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y))))) ((= x) y))) \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y))))) ((= x) y))) ;)

(; dict ;)

def thm_958 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> x_4 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)) (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => x_4 : hol.term A => hol.REFL (hol.arr A hol.bool) (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y))))) ((= x) y))) \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y))))) ((= x) y))) ;)

(; dict ;)

def thm_959 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> x_4 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)) (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => x_4 : hol.term A => hol.TRANS (hol.arr A hol.bool) (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)) (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)) (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)) (thm_958 B A s_1 f_2 g_3 x_4) (thm_958 B A s_1 f_2 g_3 x_4).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y))))) ((= x) y)))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y))))) ((= x) y)))) ;)

(; dict ;)

def thm_960 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5))) (hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => x_4 : hol.term A => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)) (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)) (thm_301 A) (thm_959 B A s_1 f_2 g_3 x_4).

(; Theorem: |- ((Data.Bool./\ ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y)))) ;)

(; dict ;)

def thm_961 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_5) (f_3 y_1)))) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_5) (f_3 y_1)))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_5) (f_3 y_1)))) => hyp_1.

(; Theorem: |- ((Set.member x) ((Set.image g) ((Set.image f) s))) ;)

(; dict ;)

def thm_962 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_5) (f_3 y_1)))) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_5) (f_3 y_1)))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_185 q_1 p_2 hyp_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_5) (f_3 y_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) hyp_1.

(; Theorem: |- ((Set.member x) ((Set.image g) ((Set.image f) s))) ;)

(; dict ;)

def thm_963 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_5) (f_3 y_1)))) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_5) (f_3 y_1)))) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_5) (f_3 y_1)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (thm_961 B A y_1 s_2 f_3 g_4 x_5 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_5) (f_3 y_1)))) => thm_962 B A y_1 s_2 f_3 g_4 x_5 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y))) ;)

(; dict ;)

def thm_964 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> y_5 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_1) (f_3 y_5)))) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_1) (f_3 y_5))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => y_5 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_1) (f_3 y_5)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_1) (f_3 y_5))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y))) ;)

(; dict ;)

def thm_965 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> y_5 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_1) (f_3 y_5)))) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_1) (f_3 y_5))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => y_5 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_1) (f_3 y_5)))) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_1) (f_3 y_5)))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_1) (f_3 y_5))) (thm_961 B A y_5 s_2 f_3 g_4 x_1 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_1) (f_3 y_5)))) => thm_964 B A x_1 s_2 f_3 g_4 y_5 hyp_2).

(; Theorem: |- ((Set.member x) ((Set.image g) ((Set.image f) s))) ;)

(; dict ;)

def thm_966 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> x_4 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => x_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y))) ;)

(; dict ;)

def thm_967 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> y_5 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_1) (f_3 y_5))) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_1) (f_3 y_5))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => y_5 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_1) (f_3 y_5))) => hyp_1.

(; Theorem: |- ((Set.member y) ((Set.image g) ((Set.image f) s))) ;)

(; dict ;)

def thm_968 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> y_5 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_1) (f_3 y_5))) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => y_5 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_1) (f_3 y_5))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_185 q_1 p_2 hyp_1) (hol.eq B (f_3 x_1) (f_3 y_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) hyp_1.

(; Theorem: |- ((Set.member y) ((Set.image g) ((Set.image f) s))) ;)

(; dict ;)

def thm_969 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> y_5 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_1) (f_3 y_5))) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => y_5 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_1) (f_3 y_5))) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_1) (f_3 y_5))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (thm_967 B A x_1 s_2 f_3 g_4 y_5 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_1) (f_3 y_5))) => thm_968 B A x_1 s_2 f_3 g_4 y_5 hyp_2).

(; Theorem: |- ((= (f x)) (f y)) ;)

(; dict ;)

def thm_970 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> y_3 : hol.term A -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_2 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_1))) (hol.eq B (f_5 x_4) (f_5 y_3))) -> hol.proof (hol.eq B (f_5 x_4) (f_5 y_3)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => y_3 : hol.term A => x_4 : hol.term A => f_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_2 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_1))) (hol.eq B (f_5 x_4) (f_5 y_3))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_2 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_1))) (hol.eq B (f_5 x_4) (f_5 y_3)) hyp_1.

(; Theorem: |- ((= (f x)) (f y)) ;)

(; dict ;)

def thm_971 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr B A) -> y_3 : hol.term A -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_2 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_1))) (hol.eq B (f_5 x_4) (f_5 y_3))) -> hol.proof (hol.eq B (f_5 x_4) (f_5 y_3)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr B A) => y_3 : hol.term A => x_4 : hol.term A => f_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_2 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_1))) (hol.eq B (f_5 x_4) (f_5 y_3))) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_2 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_1))) (hol.eq B (f_5 x_4) (f_5 y_3))) (hol.eq B (f_5 x_4) (f_5 y_3)) (thm_967 B A x_4 s_1 f_5 g_2 y_3 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_2 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_1))) (hol.eq B (f_5 x_4) (f_5 y_3))) => thm_970 A B s_1 g_2 y_3 x_4 f_5 hyp_2).

(; Theorem: |- ((Set.member y) ((Set.image g) ((Set.image f) s))) ;)

(; dict ;)

def thm_972 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> y_4 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => y_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) => hyp_1.

(; Theorem: |- ((= (f x)) (f y)) ;)

(; dict ;)

def thm_973 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) -> hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) => hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)))) ((= x) z))) ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)))) ((= x) z))) ;)

(; dict ;)

def thm_974 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) (hol.eq A x_2 z_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) (hol.eq A x_2 z_1))) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => hol.REFL hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) (hol.eq A x_2 z_1)).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)))) ((= x) z))) ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)))) ((= x) z))) ;)

(; dict ;)

def thm_975 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) (hol.eq A x_2 z_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) (hol.eq A x_2 z_1))) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => hol.TRANS hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) (hol.eq A x_2 z_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) (hol.eq A x_2 z_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) (hol.eq A x_2 z_1)) (thm_974 A z_1 x_2) (thm_974 A z_1 x_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x_1. ((Data.Bool.==> (\lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)) x_1)) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= y) z))) ((= x) z)))))) ((= x) z))))) ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= y) z))) ((= x) z)))))) ((= x) z)))) ;)

(; dict ;)

def thm_976 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.imp (hol.forall A (x__1_3 : hol.term A => hol.imp ((y_4 : hol.term A => hol.and (hol.eq A x_2 y_4) (hol.eq A y_4 z_1)) x__1_3) (hol.imp (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (hol.eq A x_4 y_5) (hol.eq A y_5 z_6)) (hol.eq A x_4 z_6))))) (hol.eq A x_2 z_1)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_5)) (hol.eq A x_3 z_5))))) (hol.eq A x_2 z_1)))) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_279 A Q_1 P_2) A (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_5)) (hol.eq A x_3 z_5))))) (hol.eq A x_2 z_1)) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1)).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= y) z))) ((= x) z))))) ;)

(; dict ;)

def thm_977 : A : hol.type -> hyp_1 : hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.forall A (z_3 : hol.term A => hol.imp (hol.and (hol.eq A x_1 y_2) (hol.eq A y_2 z_3)) (hol.eq A x_1 z_3))))) -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.forall A (z_3 : hol.term A => hol.imp (hol.and (hol.eq A x_1 y_2) (hol.eq A y_2 z_3)) (hol.eq A x_1 z_3))))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.forall A (z_3 : hol.term A => hol.imp (hol.and (hol.eq A x_1 y_2) (hol.eq A y_2 z_3)) (hol.eq A x_1 z_3))))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= y) z))) ((= x) z)))) ;)

(; dict ;)

def thm_978 : A : hol.type -> x_1 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_4)) (hol.eq A x_2 z_4))))) -> hol.proof (hol.forall A (y_2 : hol.term A => hol.forall A (z_3 : hol.term A => hol.imp (hol.and (hol.eq A x_1 y_2) (hol.eq A y_2 z_3)) (hol.eq A x_1 z_3)))) :=
  A : hol.type => x_1 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_4)) (hol.eq A x_2 z_4))))) => thm_977 A hyp_1 x_1.

(; Theorem: |- (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= y) z))) ((= x) z))) ;)

(; dict ;)

def thm_979 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_5)) (hol.eq A x_3 z_5))))) -> hol.proof (hol.forall A (z_3 : hol.term A => hol.imp (hol.and (hol.eq A x_2 y_1) (hol.eq A y_1 z_3)) (hol.eq A x_2 z_3))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_5)) (hol.eq A x_3 z_5))))) => thm_978 A x_2 hyp_1 y_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= y) z))) ((= x) z)) ;)

(; dict ;)

def thm_980 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (hol.eq A x_4 y_5) (hol.eq A y_5 z_6)) (hol.eq A x_4 z_6))))) -> hol.proof (hol.imp (hol.and (hol.eq A x_3 y_2) (hol.eq A y_2 z_1)) (hol.eq A x_3 z_1)) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (hol.eq A x_4 y_5) (hol.eq A y_5 z_6)) (hol.eq A x_4 z_6))))) => thm_979 A y_2 x_3 hyp_1 z_1.

(; Theorem: |- ((Data.Bool./\ ((= x) y)) ((= y) z)) ;)

(; dict ;)

def thm_981 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq A x_3 y_2) (hol.eq A y_2 z_1)) -> hol.proof (hol.and (hol.eq A x_3 y_2) (hol.eq A y_2 z_1)) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq A x_3 y_2) (hol.eq A y_2 z_1)) => hyp_1.

(; Theorem: |- ((= x) z) ;)

(; dict ;)

def thm_982 : A : hol.type -> y_1 : hol.term A -> z_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (hol.eq A x_4 y_5) (hol.eq A y_5 z_6)) (hol.eq A x_4 z_6))))) -> hyp_2 : hol.proof (hol.and (hol.eq A x_3 y_1) (hol.eq A y_1 z_2)) -> hol.proof (hol.eq A x_3 z_2) :=
  A : hol.type => y_1 : hol.term A => z_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (hol.eq A x_4 y_5) (hol.eq A y_5 z_6)) (hol.eq A x_4 z_6))))) => hyp_2 : hol.proof (hol.and (hol.eq A x_3 y_1) (hol.eq A y_1 z_2)) => thm_980 A z_2 y_1 x_3 hyp_1 (thm_981 A z_2 y_1 x_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= y) z))) ((= x) z)))))) ((= x) z)) ;)

(; dict ;)

def thm_983 : A : hol.type -> y_1 : hol.term A -> z_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq A x_3 y_1) (hol.eq A y_1 z_2)) -> hol.proof (hol.imp (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (hol.eq A x_4 y_5) (hol.eq A y_5 z_6)) (hol.eq A x_4 z_6))))) (hol.eq A x_3 z_2)) :=
  A : hol.type => y_1 : hol.term A => z_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq A x_3 y_1) (hol.eq A y_1 z_2)) => hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (hol.eq A x_4 y_5) (hol.eq A y_5 z_6)) (hol.eq A x_4 z_6))))) => thm_982 A y_1 z_2 x_3 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= y) z))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= y) z))) ((= x) z)))))) ((= x) z))) ;)

(; dict ;)

def thm_984 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.imp (hol.and (hol.eq A x_3 y_2) (hol.eq A y_2 z_1)) (hol.imp (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (hol.eq A x_4 y_5) (hol.eq A y_5 z_6)) (hol.eq A x_4 z_6))))) (hol.eq A x_3 z_1))) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq A x_3 y_2) (hol.eq A y_2 z_1)) => thm_983 A y_2 z_1 x_3 hyp_1.

(; Theorem: |- ((= (\lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)) y)) ((Data.Bool./\ ((= x) y)) ((= y) z))) ;)

(; dict ;)

def thm_985 : A : hol.type -> y_1 : hol.term A -> z_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool ((y_4 : hol.term A => hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_2)) y_1) (hol.and (hol.eq A x_3 y_1) (hol.eq A y_1 z_2))) :=
  A : hol.type => y_1 : hol.term A => z_2 : hol.term A => x_3 : hol.term A => hol.BETA_CONV A hol.bool (y_4 : hol.term A => hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_2)) y_1.

(; Theorem: |- (\lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)) y) ;)

(; dict ;)

def thm_986 : A : hol.type -> y_1 : hol.term A -> z_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof ((y_4 : hol.term A => hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_2)) y_1) -> hol.proof ((y_4 : hol.term A => hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_2)) y_1) :=
  A : hol.type => y_1 : hol.term A => z_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof ((y_4 : hol.term A => hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_2)) y_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= x) y)) ((= y) z)) ;)

(; dict ;)

def thm_987 : A : hol.type -> z_1 : hol.term A -> y_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof ((y_4 : hol.term A => hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_1)) y_2) -> hol.proof (hol.and (hol.eq A x_3 y_2) (hol.eq A y_2 z_1)) :=
  A : hol.type => z_1 : hol.term A => y_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof ((y_4 : hol.term A => hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_1)) y_2) => hol.EQ_MP ((y_4 : hol.term A => hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_1)) y_2) (hol.and (hol.eq A x_3 y_2) (hol.eq A y_2 z_1)) (thm_985 A y_2 z_1 x_3) (thm_986 A y_2 z_1 x_3 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= y) z))) ((= x) z)))))) ((= x) z)) ;)

(; dict ;)

def thm_988 : A : hol.type -> y_1 : hol.term A -> z_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof ((y_4 : hol.term A => hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_2)) y_1) -> hol.proof (hol.imp (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (hol.eq A x_4 y_5) (hol.eq A y_5 z_6)) (hol.eq A x_4 z_6))))) (hol.eq A x_3 z_2)) :=
  A : hol.type => y_1 : hol.term A => z_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof ((y_4 : hol.term A => hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_2)) y_1) => thm_984 A z_2 y_1 x_3 (thm_987 A z_2 y_1 x_3 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)) y)) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= y) z))) ((= x) z)))))) ((= x) z))) ;)

(; dict ;)

def thm_989 : A : hol.type -> y_1 : hol.term A -> z_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.imp ((y_4 : hol.term A => hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_2)) y_1) (hol.imp (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (hol.eq A x_4 y_5) (hol.eq A y_5 z_6)) (hol.eq A x_4 z_6))))) (hol.eq A x_3 z_2))) :=
  A : hol.type => y_1 : hol.term A => z_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof ((y_4 : hol.term A => hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_2)) y_1) => thm_988 A y_1 z_2 x_3 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> (\lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)) y)) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= y) z))) ((= x) z)))))) ((= x) z)))) ;)

(; dict ;)

def thm_990 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.forall A (y_3 : hol.term A => hol.imp ((y_4 : hol.term A => hol.and (hol.eq A x_2 y_4) (hol.eq A y_4 z_1)) y_3) (hol.imp (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.forall A (z_6 : hol.term A => hol.imp (hol.and (hol.eq A x_4 y_5) (hol.eq A y_5 z_6)) (hol.eq A x_4 z_6))))) (hol.eq A x_2 z_1)))) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => y_3 : hol.term A => thm_989 A y_3 z_1 x_2.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)))) ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= y) z))) ((= x) z)))))) ((= x) z))) ;)

(; dict ;)

def thm_991 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_5)) (hol.eq A x_3 z_5))))) (hol.eq A x_2 z_1))) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => thm_976 A z_1 x_2 (thm_990 A z_1 x_2).

(; Theorem: |- (Data.Bool.? \lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z))) ;)

(; dict ;)

def thm_992 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= y) z))) ((= x) z)))))) ((= x) z)) ;)

(; dict ;)

def thm_993 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_5)) (hol.eq A x_3 z_5))))) (hol.eq A x_2 z_1)) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) => thm_991 A z_1 x_2 (thm_992 A z_1 x_2 hyp_1).

(; Theorem: |- ((= x) z) ;)

(; dict ;)

def thm_994 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_5)) (hol.eq A x_3 z_5))))) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) -> hol.proof (hol.eq A x_2 z_1) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_5)) (hol.eq A x_3 z_5))))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) => thm_993 A z_1 x_2 hyp_2 (thm_977 A hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)))) ((= x) z)) ;)

(; dict ;)

def thm_995 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_5)) (hol.eq A x_3 z_5))))) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) (hol.eq A x_2 z_1)) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.forall A (z_5 : hol.term A => hol.imp (hol.and (hol.eq A x_3 y_4) (hol.eq A y_4 z_5)) (hol.eq A x_3 z_5))))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) => thm_994 A z_1 x_2 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda z. ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)))) ((= x) z))) ;)

(; dict ;)

def thm_996 : A : hol.type -> x_1 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_4)) (hol.eq A x_2 z_4))))) -> hol.proof (hol.forall A (z_2 : hol.term A => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_1 y_3) (hol.eq A y_3 z_2))) (hol.eq A x_1 z_2))) :=
  A : hol.type => x_1 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.forall A (z_4 : hol.term A => hol.imp (hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_4)) (hol.eq A x_2 z_4))))) => z_2 : hol.term A => thm_995 A z_2 x_1 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda z. ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)))) ((= x) z)))) ;)

(; dict ;)

def thm_997 : A : hol.type -> hyp_1 : hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.forall A (z_3 : hol.term A => hol.imp (hol.and (hol.eq A x_1 y_2) (hol.eq A y_2 z_3)) (hol.eq A x_1 z_3))))) -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (z_2 : hol.term A => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_1 y_3) (hol.eq A y_3 z_2))) (hol.eq A x_1 z_2)))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.forall A (z_3 : hol.term A => hol.imp (hol.and (hol.eq A x_1 y_2) (hol.eq A y_2 z_3)) (hol.eq A x_1 z_3))))) => x_1 : hol.term A => thm_996 A x_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((= x) y)) ((= y) z))) ((= x) z)))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda z. ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)))) ((= x) z))))) ;)

(; dict ;)

def thm_998 : A : hol.type -> hol.proof (hol.imp (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.forall A (z_3 : hol.term A => hol.imp (hol.and (hol.eq A x_1 y_2) (hol.eq A y_2 z_3)) (hol.eq A x_1 z_3))))) (hol.forall A (x_1 : hol.term A => hol.forall A (z_2 : hol.term A => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_1 y_3) (hol.eq A y_3 z_2))) (hol.eq A x_1 z_2))))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.forall A (z_3 : hol.term A => hol.imp (hol.and (hol.eq A x_1 y_2) (hol.eq A y_2 z_3)) (hol.eq A x_1 z_3))))) => thm_997 A hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda z. ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)))) ((= x) z)))) ;)

(; dict ;)

def thm_999 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (z_2 : hol.term A => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_1 y_3) (hol.eq A y_3 z_2))) (hol.eq A x_1 z_2)))) :=
  A : hol.type => thm_998 A (thm_29 A).

(; Theorem: |- (Data.Bool.! \lambda z. ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)))) ((= x) z))) ;)

(; dict ;)

def thm_1000 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.forall A (z_2 : hol.term A => hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_1 y_3) (hol.eq A y_3 z_2))) (hol.eq A x_1 z_2))) :=
  A : hol.type => x_1 : hol.term A => thm_999 A x_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda y. ((Data.Bool./\ ((= x) y)) ((= y) z)))) ((= x) z)) ;)

(; dict ;)

def thm_1001 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) (hol.eq A x_2 z_1)) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => thm_1000 A x_2 z_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda y_1. ((Data.Bool./\ ((= x) y_1)) ((= y_1) y)))) ((= x) y)) ;)

(; dict ;)

def thm_1002 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y__1_3 : hol.term A => hol.and (hol.eq A x_2 y__1_3) (hol.eq A y__1_3 y_1))) (hol.eq A x_2 y_1)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => (A : hol.type => z_1 : hol.term A => x_2 : hol.term A => (A : hol.type => z_1 : hol.term A => x_2 : hol.term A => hol.EQ_MP (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) (hol.eq A x_2 z_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_3 : hol.term A => hol.and (hol.eq A x_2 y_3) (hol.eq A y_3 z_1))) (hol.eq A x_2 z_1)) (thm_975 A z_1 x_2) (thm_1001 A z_1 x_2)) A z_1 x_2) A y_1 x_2.

(; Theorem: |- ((= (\lambda y'. ((Data.Bool./\ ((= x) y')) ((= y') y)) (g (f x)))) ((Data.Bool./\ ((= x) (g (f x)))) ((= (g (f x))) y))) ;)

(; dict ;)

def thm_1003 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr B A) -> y_3 : hol.term A -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool ((y_27_5 : hol.term A => hol.and (hol.eq A x_4 y_27_5) (hol.eq A y_27_5 y_3)) (g_2 (f_1 x_4))) (hol.and (hol.eq A x_4 (g_2 (f_1 x_4))) (hol.eq A (g_2 (f_1 x_4)) y_3))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => y_3 : hol.term A => x_4 : hol.term A => hol.BETA_CONV A hol.bool (y_27_5 : hol.term A => hol.and (hol.eq A x_4 y_27_5) (hol.eq A y_27_5 y_3)) (g_2 (f_1 x_4)).

(; Theorem: |- ((= ((Data.Bool./\ ((= x) (g (f x)))) ((= (g (f x))) y))) (\lambda y'. ((Data.Bool./\ ((= x) y')) ((= y') y)) (g (f x)))) ;)

(; dict ;)

def thm_1004 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (hol.eq A x_4 (g_3 (f_2 x_4))) (hol.eq A (g_3 (f_2 x_4)) y_1)) ((y_27_5 : hol.term A => hol.and (hol.eq A x_4 y_27_5) (hol.eq A y_27_5 y_1)) (g_3 (f_2 x_4)))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => x_4 : hol.term A => hol.SYM hol.bool ((y_27_5 : hol.term A => hol.and (hol.eq A x_4 y_27_5) (hol.eq A y_27_5 y_1)) (g_3 (f_2 x_4))) (hol.and (hol.eq A x_4 (g_3 (f_2 x_4))) (hol.eq A (g_3 (f_2 x_4)) y_1)) (thm_1003 B A f_2 g_3 y_1 x_4).

(; Theorem: |- ((= ((Data.Bool.==> ((= x) y)) ((= y) x))) ((Data.Bool.==> ((= x) y)) ((= y) x))) ;)

(; dict ;)

def thm_1005 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.REFL hol.bool (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)).

(; Theorem: |- ((= ((Data.Bool.==> ((= x) y)) ((= y) x))) ((Data.Bool.==> ((= x) y)) ((= y) x))) ;)

(; dict ;)

def thm_1006 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.TRANS hol.bool (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (thm_1005 A y_1 x_2) (thm_1005 A y_1 x_2).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= x) y)) ((= y) x)))) ;)

(; dict ;)

def thm_1007 : A : hol.type -> hyp_1 : hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.imp (hol.eq A x_1 y_2) (hol.eq A y_2 x_1)))) -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.imp (hol.eq A x_1 y_2) (hol.eq A y_2 x_1)))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.imp (hol.eq A x_1 y_2) (hol.eq A y_2 x_1)))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((= x) y)) ((= y) x))) ;)

(; dict ;)

def thm_1008 : A : hol.type -> x_1 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq A x_2 y_3) (hol.eq A y_3 x_2)))) -> hol.proof (hol.forall A (y_2 : hol.term A => hol.imp (hol.eq A x_1 y_2) (hol.eq A y_2 x_1))) :=
  A : hol.type => x_1 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq A x_2 y_3) (hol.eq A y_3 x_2)))) => thm_1007 A hyp_1 x_1.

(; Theorem: |- ((Data.Bool.==> ((= x) y)) ((= y) x)) ;)

(; dict ;)

def thm_1009 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.eq A x_3 y_4) (hol.eq A y_4 x_3)))) -> hol.proof (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.eq A x_3 y_4) (hol.eq A y_4 x_3)))) => thm_1008 A x_2 hyp_1 y_1.

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_1010 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_2 y_1) -> hol.proof (hol.eq A x_2 y_1) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.eq A x_2 y_1) => hyp_1.

(; Theorem: |- ((= y) x) ;)

(; dict ;)

def thm_1011 : A : hol.type -> x_1 : hol.term A -> y_2 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.eq A x_3 y_4) (hol.eq A y_4 x_3)))) -> hyp_2 : hol.proof (hol.eq A x_1 y_2) -> hol.proof (hol.eq A y_2 x_1) :=
  A : hol.type => x_1 : hol.term A => y_2 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.eq A x_3 y_4) (hol.eq A y_4 x_3)))) => hyp_2 : hol.proof (hol.eq A x_1 y_2) => thm_1009 A y_2 x_1 hyp_1 (thm_1010 A y_2 x_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= x) y)) ((= y) x))))) ((= y) x)) ;)

(; dict ;)

def thm_1012 : A : hol.type -> x_1 : hol.term A -> y_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_1 y_2) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.eq A x_3 y_4) (hol.eq A y_4 x_3)))) (hol.eq A y_2 x_1)) :=
  A : hol.type => x_1 : hol.term A => y_2 : hol.term A => hyp_1 : hol.proof (hol.eq A x_1 y_2) => hyp_2 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.eq A x_3 y_4) (hol.eq A y_4 x_3)))) => thm_1011 A x_1 y_2 hyp_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((= y) x))) ;)

(; dict ;)

def thm_1013 : A : hol.type -> y_1 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq A x_2 y_3) (hol.eq A y_3 x_2)))) -> hol.proof (hol.forall A (x_2 : hol.term A => hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2))) :=
  A : hol.type => y_1 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq A x_2 y_3) (hol.eq A y_3 x_2)))) => x_2 : hol.term A => hyp_2 : hol.proof (hol.eq A x_2 y_1) => thm_1012 A x_2 y_1 hyp_2 (thm_1007 A hyp_1).

(; Theorem: |- (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((= y) x)))) ;)

(; dict ;)

def thm_1014 : A : hol.type -> hyp_1 : hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.imp (hol.eq A x_1 y_2) (hol.eq A y_2 x_1)))) -> hol.proof (hol.forall A (y_1 : hol.term A => hol.forall A (x_2 : hol.term A => hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.imp (hol.eq A x_1 y_2) (hol.eq A y_2 x_1)))) => y_1 : hol.term A => thm_1013 A y_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= x) y)) ((= y) x))))) (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((= y) x))))) ;)

(; dict ;)

def thm_1015 : A : hol.type -> hol.proof (hol.imp (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.imp (hol.eq A x_1 y_2) (hol.eq A y_2 x_1)))) (hol.forall A (y_1 : hol.term A => hol.forall A (x_2 : hol.term A => hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2))))) :=
  A : hol.type => hyp_1 : hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.imp (hol.eq A x_1 y_2) (hol.eq A y_2 x_1)))) => thm_1014 A hyp_1.

(; Theorem: |- (Data.Bool.! \lambda y. (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((= y) x)))) ;)

(; dict ;)

def thm_1016 : A : hol.type -> hol.proof (hol.forall A (y_1 : hol.term A => hol.forall A (x_2 : hol.term A => hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)))) :=
  A : hol.type => thm_1015 A (thm_30 A).

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((= y) x))) ;)

(; dict ;)

def thm_1017 : A : hol.type -> y_1 : hol.term A -> hol.proof (hol.forall A (x_2 : hol.term A => hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2))) :=
  A : hol.type => y_1 : hol.term A => thm_1016 A y_1.

(; Theorem: |- ((Data.Bool.==> ((= x) y)) ((= y) x)) ;)

(; dict ;)

def thm_1018 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => thm_1017 A y_1 x_2.

(; Theorem: |- ((Data.Bool.==> ((= (g (f x))) x)) ((= x) (g (f x)))) ;)

(; dict ;)

def thm_1019 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.imp (hol.eq A (g_3 (f_2 x_1)) x_1) (hol.eq A x_1 (g_3 (f_2 x_1)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => (A : hol.type => y_1 : hol.term A => x_2 : hol.term A => (A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.EQ_MP (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.imp (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (thm_1006 A y_1 x_2) (thm_1018 A y_1 x_2)) A y_1 x_2) A x_1 (g_3 (f_2 x_1)).

(; Theorem: |- ((= (Data.Bool.==> ((Set.member x) ((Set.image g) ((Set.image f) s))))) (Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))) ;)

(; dict ;)

def thm_1020 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> x_4 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A x_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => x_4 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A x_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) thm_107 (thm_601 B A s_1 f_2 g_3 x_4).

(; Theorem: |- ((= ((= (g (f x))) x)) ((= (g (f x))) x)) ;)

(; dict ;)

def thm_1021 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.eq A (g_3 (f_2 x_1)) x_1) (hol.eq A (g_3 (f_2 x_1)) x_1)) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hol.REFL hol.bool (hol.eq A (g_3 (f_2 x_1)) x_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((= (g (f x))) x))) ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))) ((= (g (f x))) x))) ;)

(; dict ;)

def thm_1022 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq A (g_3 (f_2 x_4)) x_4)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A x_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) (hol.eq A (g_3 (f_2 x_4)) x_4))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => x_4 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A x_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))))) (hol.eq A (g_3 (f_2 x_4)) x_4) (hol.eq A (g_3 (f_2 x_4)) x_4) (thm_1020 B A s_1 f_2 g_3 x_4) (thm_1021 B A x_4 f_2 g_3).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))) ((= (g (f x))) x))) ((Data.Bool.==> ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((= (g (f x))) x))) ;)

(; dict ;)

def thm_1023 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A x_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) (hol.eq A (g_3 (f_2 x_4)) x_4)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq A (g_3 (f_2 x_4)) x_4))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => x_4 : hol.term A => hol.SYM hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq A (g_3 (f_2 x_4)) x_4)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A x_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) (hol.eq A (g_3 (f_2 x_4)) x_4)) (thm_1022 B A s_1 f_2 g_3 x_4).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) x)) ((= (g (f x))) x)))) ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))) ((= (g (f x))) x))) ;)

(; dict ;)

def thm_1024 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> x_4 : hol.term A -> hol.proof (hol.imp (hol.forall B (x_5 : hol.term B => hol.imp ((x_6 : hol.term B => hol.and (hol.eq A x_4 (g_3 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_2 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))) x_5) (hol.eq A (g_3 (f_2 x_4)) x_4))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A x_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) (hol.eq A (g_3 (f_2 x_4)) x_4))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => x_4 : hol.term A => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_279 A Q_1 P_2) B (hol.eq A (g_3 (f_2 x_4)) x_4) (x_5 : hol.term B => hol.and (hol.eq A x_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x_1. ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= x') (f x))) ((Set.member x) s)) x_1)) ((= (g (f x))) x)))) ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (f x))) ((Set.member x) s)))) ((= (g (f x))) x))) ;)

(; dict ;)

def thm_1025 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> x_27_5 : hol.term B -> hol.proof (hol.imp (hol.forall A (x__1_6 : hol.term A => hol.imp ((x_7 : hol.term A => hol.and (hol.eq B x_27_5 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) x__1_6) (hol.eq A (g_2 (f_4 x_1)) x_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (hol.eq A (g_2 (f_4 x_1)) x_1))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => x_27_5 : hol.term B => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_279 A Q_1 P_2) A (hol.eq A (g_2 (f_4 x_1)) x_1) (x_6 : hol.term A => hol.and (hol.eq B x_27_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)).

(; Theorem: |- ((= (= (\lambda _11124. ((= (g (f _11124))) _11124) x))) (= (\lambda _11124. ((= (g (f _11124))) _11124) x))) ;)

(; dict ;)

def thm_1026 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11124_4 : hol.term A => hol.eq A (g_3 (f_2 __11124_4)) __11124_4) x_1)) (hol.eq hol.bool ((__11124_4 : hol.term A => hol.eq A (g_3 (f_2 __11124_4)) __11124_4) x_1))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11124_4 : hol.term A => hol.eq A (g_3 (f_2 __11124_4)) __11124_4) x_1)).

(; Theorem: |- ((= (\lambda _11124. ((= (g (f _11124))) _11124) (g (f x'')))) ((= (g (f (g (f x''))))) (g (f x'')))) ;)

(; dict ;)

def thm_1027 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool ((__11124_4 : hol.term A => hol.eq A (g_3 (f_2 __11124_4)) __11124_4) (g_3 (f_2 x_27_27_1))) (hol.eq A (g_3 (f_2 (g_3 (f_2 x_27_27_1)))) (g_3 (f_2 x_27_27_1)))) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hol.BETA_CONV A hol.bool (__11124_4 : hol.term A => hol.eq A (g_3 (f_2 __11124_4)) __11124_4) (g_3 (f_2 x_27_27_1)).

(; Theorem: |- ((= ((= (\lambda _11124. ((= (g (f _11124))) _11124) x)) (\lambda _11124. ((= (g (f _11124))) _11124) (g (f x''))))) ((= (\lambda _11124. ((= (g (f _11124))) _11124) x)) ((= (g (f (g (f x''))))) (g (f x''))))) ;)

(; dict ;)

def thm_1028 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11124_5 : hol.term A => hol.eq A (g_4 (f_3 __11124_5)) __11124_5) x_2) ((__11124_5 : hol.term A => hol.eq A (g_4 (f_3 __11124_5)) __11124_5) (g_4 (f_3 x_27_27_1)))) (hol.eq hol.bool ((__11124_5 : hol.term A => hol.eq A (g_4 (f_3 __11124_5)) __11124_5) x_2) (hol.eq A (g_4 (f_3 (g_4 (f_3 x_27_27_1)))) (g_4 (f_3 x_27_27_1))))) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11124_5 : hol.term A => hol.eq A (g_4 (f_3 __11124_5)) __11124_5) x_2)) (hol.eq hol.bool ((__11124_5 : hol.term A => hol.eq A (g_4 (f_3 __11124_5)) __11124_5) x_2)) ((__11124_5 : hol.term A => hol.eq A (g_4 (f_3 __11124_5)) __11124_5) (g_4 (f_3 x_27_27_1))) (hol.eq A (g_4 (f_3 (g_4 (f_3 x_27_27_1)))) (g_4 (f_3 x_27_27_1))) (thm_1026 B A x_2 f_3 g_4) (thm_1027 B A x_27_27_1 f_3 g_4).

(; Theorem: |- ((= (\lambda _11124. ((= (g (f _11124))) _11124) x)) ((= (g (f x))) x)) ;)

(; dict ;)

def thm_1029 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool ((__11124_4 : hol.term A => hol.eq A (g_3 (f_2 __11124_4)) __11124_4) x_1) (hol.eq A (g_3 (f_2 x_1)) x_1)) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hol.BETA_CONV A hol.bool (__11124_4 : hol.term A => hol.eq A (g_3 (f_2 __11124_4)) __11124_4) x_1.

(; Theorem: |- ((= (= (\lambda _11124. ((= (g (f _11124))) _11124) x))) (= ((= (g (f x))) x))) ;)

(; dict ;)

def thm_1030 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11124_4 : hol.term A => hol.eq A (g_3 (f_2 __11124_4)) __11124_4) x_1)) (hol.eq hol.bool (hol.eq A (g_3 (f_2 x_1)) x_1))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__11124_4 : hol.term A => hol.eq A (g_3 (f_2 __11124_4)) __11124_4) x_1) (hol.eq A (g_3 (f_2 x_1)) x_1) thm_64 (thm_1029 B A x_1 f_2 g_3).

(; Theorem: |- ((= ((= (g (f (g (f x''))))) (g (f x'')))) ((= (g (f (g (f x''))))) (g (f x'')))) ;)

(; dict ;)

def thm_1031 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.eq A (g_3 (f_2 (g_3 (f_2 x_27_27_1)))) (g_3 (f_2 x_27_27_1))) (hol.eq A (g_3 (f_2 (g_3 (f_2 x_27_27_1)))) (g_3 (f_2 x_27_27_1)))) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hol.REFL hol.bool (hol.eq A (g_3 (f_2 (g_3 (f_2 x_27_27_1)))) (g_3 (f_2 x_27_27_1))).

(; Theorem: |- ((= ((= (\lambda _11124. ((= (g (f _11124))) _11124) x)) ((= (g (f (g (f x''))))) (g (f x''))))) ((= ((= (g (f x))) x)) ((= (g (f (g (f x''))))) (g (f x''))))) ;)

(; dict ;)

def thm_1032 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11124_5 : hol.term A => hol.eq A (g_4 (f_3 __11124_5)) __11124_5) x_2) (hol.eq A (g_4 (f_3 (g_4 (f_3 x_27_27_1)))) (g_4 (f_3 x_27_27_1)))) (hol.eq hol.bool (hol.eq A (g_4 (f_3 x_2)) x_2) (hol.eq A (g_4 (f_3 (g_4 (f_3 x_27_27_1)))) (g_4 (f_3 x_27_27_1))))) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11124_5 : hol.term A => hol.eq A (g_4 (f_3 __11124_5)) __11124_5) x_2)) (hol.eq hol.bool (hol.eq A (g_4 (f_3 x_2)) x_2)) (hol.eq A (g_4 (f_3 (g_4 (f_3 x_27_27_1)))) (g_4 (f_3 x_27_27_1))) (hol.eq A (g_4 (f_3 (g_4 (f_3 x_27_27_1)))) (g_4 (f_3 x_27_27_1))) (thm_1030 B A x_2 f_3 g_4) (thm_1031 B A x_27_27_1 f_3 g_4).

(; Theorem: |- ((= ((= (\lambda _11124. ((= (g (f _11124))) _11124) x)) (\lambda _11124. ((= (g (f _11124))) _11124) (g (f x''))))) ((= ((= (g (f x))) x)) ((= (g (f (g (f x''))))) (g (f x''))))) ;)

(; dict ;)

def thm_1033 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11124_5 : hol.term A => hol.eq A (g_4 (f_3 __11124_5)) __11124_5) x_2) ((__11124_5 : hol.term A => hol.eq A (g_4 (f_3 __11124_5)) __11124_5) (g_4 (f_3 x_27_27_1)))) (hol.eq hol.bool (hol.eq A (g_4 (f_3 x_2)) x_2) (hol.eq A (g_4 (f_3 (g_4 (f_3 x_27_27_1)))) (g_4 (f_3 x_27_27_1))))) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hol.TRANS hol.bool (hol.eq hol.bool ((__11124_5 : hol.term A => hol.eq A (g_4 (f_3 __11124_5)) __11124_5) x_2) ((__11124_5 : hol.term A => hol.eq A (g_4 (f_3 __11124_5)) __11124_5) (g_4 (f_3 x_27_27_1)))) (hol.eq hol.bool ((__11124_5 : hol.term A => hol.eq A (g_4 (f_3 __11124_5)) __11124_5) x_2) (hol.eq A (g_4 (f_3 (g_4 (f_3 x_27_27_1)))) (g_4 (f_3 x_27_27_1)))) (hol.eq hol.bool (hol.eq A (g_4 (f_3 x_2)) x_2) (hol.eq A (g_4 (f_3 (g_4 (f_3 x_27_27_1)))) (g_4 (f_3 x_27_27_1)))) (thm_1028 B A x_27_27_1 x_2 f_3 g_4) (thm_1032 B A x_27_27_1 x_2 f_3 g_4).

(; Theorem: |- ((= \lambda _11124. ((= (g (f _11124))) _11124)) \lambda _11124. ((= (g (f _11124))) _11124)) ;)

(; dict ;)

def thm_1034 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr B A) -> hol.proof (hol.eq (hol.arr A hol.bool) (__11124_3 : hol.term A => hol.eq A (g_2 (f_1 __11124_3)) __11124_3) (__11124_3 : hol.term A => hol.eq A (g_2 (f_1 __11124_3)) __11124_3)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => hol.REFL (hol.arr A hol.bool) (__11124_3 : hol.term A => hol.eq A (g_2 (f_1 __11124_3)) __11124_3).

(; Theorem: |- ((= (\lambda _11124. ((= (g (f _11124))) _11124) x)) (\lambda _11124. ((= (g (f _11124))) _11124) (g (f x'')))) ;)

(; dict ;)

def thm_1035 : B : hol.type -> A : hol.type -> x_27_1 : hol.term B -> x_27_27_2 : hol.term A -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.eq A x_3 (g_5 x_27_1)) -> hyp_2 : hol.proof (hol.eq B x_27_1 (f_4 x_27_27_2)) -> hol.proof (hol.eq hol.bool ((__11124_6 : hol.term A => hol.eq A (g_5 (f_4 __11124_6)) __11124_6) x_3) ((__11124_6 : hol.term A => hol.eq A (g_5 (f_4 __11124_6)) __11124_6) (g_5 (f_4 x_27_27_2)))) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term B => x_27_27_2 : hol.term A => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.eq A x_3 (g_5 x_27_1)) => hyp_2 : hol.proof (hol.eq B x_27_1 (f_4 x_27_27_2)) => hol.APP_THM A hol.bool (__11124_6 : hol.term A => hol.eq A (g_5 (f_4 __11124_6)) __11124_6) (__11124_6 : hol.term A => hol.eq A (g_5 (f_4 __11124_6)) __11124_6) x_3 (g_5 (f_4 x_27_27_2)) (thm_1034 B A f_4 g_5) (thm_668 B A x_27_1 x_27_27_2 f_4 g_5 x_3 hyp_1 hyp_2).

(; Theorem: |- ((= ((= (g (f x))) x)) ((= (g (f (g (f x''))))) (g (f x'')))) ;)

(; dict ;)

def thm_1036 : B : hol.type -> A : hol.type -> x_27_1 : hol.term B -> x_27_27_2 : hol.term A -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.eq A x_3 (g_5 x_27_1)) -> hyp_2 : hol.proof (hol.eq B x_27_1 (f_4 x_27_27_2)) -> hol.proof (hol.eq hol.bool (hol.eq A (g_5 (f_4 x_3)) x_3) (hol.eq A (g_5 (f_4 (g_5 (f_4 x_27_27_2)))) (g_5 (f_4 x_27_27_2)))) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term B => x_27_27_2 : hol.term A => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.eq A x_3 (g_5 x_27_1)) => hyp_2 : hol.proof (hol.eq B x_27_1 (f_4 x_27_27_2)) => hol.EQ_MP (hol.eq hol.bool ((__11124_6 : hol.term A => hol.eq A (g_5 (f_4 __11124_6)) __11124_6) x_3) ((__11124_6 : hol.term A => hol.eq A (g_5 (f_4 __11124_6)) __11124_6) (g_5 (f_4 x_27_27_2)))) (hol.eq hol.bool (hol.eq A (g_5 (f_4 x_3)) x_3) (hol.eq A (g_5 (f_4 (g_5 (f_4 x_27_27_2)))) (g_5 (f_4 x_27_27_2)))) (thm_1033 B A x_27_27_2 x_3 f_4 g_5) (thm_1035 B A x_27_1 x_27_27_2 x_3 f_4 g_5 hyp_1 hyp_2).

(; Theorem: |- ((= ((= (g (f (g (f x''))))) (g (f x'')))) ((= (g (f x))) x)) ;)

(; dict ;)

def thm_1037 : B : hol.type -> A : hol.type -> x_27_1 : hol.term B -> x_2 : hol.term A -> x_27_27_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.eq A x_2 (g_5 x_27_1)) -> hyp_2 : hol.proof (hol.eq B x_27_1 (f_4 x_27_27_3)) -> hol.proof (hol.eq hol.bool (hol.eq A (g_5 (f_4 (g_5 (f_4 x_27_27_3)))) (g_5 (f_4 x_27_27_3))) (hol.eq A (g_5 (f_4 x_2)) x_2)) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term B => x_2 : hol.term A => x_27_27_3 : hol.term A => f_4 : hol.term (hol.arr A B) => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.eq A x_2 (g_5 x_27_1)) => hyp_2 : hol.proof (hol.eq B x_27_1 (f_4 x_27_27_3)) => hol.SYM hol.bool (hol.eq A (g_5 (f_4 x_2)) x_2) (hol.eq A (g_5 (f_4 (g_5 (f_4 x_27_27_3)))) (g_5 (f_4 x_27_27_3))) (thm_1036 B A x_27_1 x_27_27_3 x_2 f_4 g_5 hyp_1 hyp_2).

(; Theorem: |- ((= g) g) ;)

(; dict ;)

def thm_1038 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> hol.proof (hol.eq (hol.arr B A) g_1 g_1) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => hol.REFL (hol.arr B A) g_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Set.member (f x'')) ((Set.image f) s))) ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g (f x''))) s)) ((= (f (g (f x'')))) (f x'')))) ((= (f (g (f x'')))) (f x''))))) ((Data.Bool.==> ((Data.Bool.==> ((Set.member (f x'')) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g (f x''))) s)) ((= (f (g (f x'')))) (f x''))))) ((= (f (g (f x'')))) (f x'')))) ;)

(; dict ;)

def thm_1039 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> x_27_27_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hol.proof (hol.imp (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_27_27_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_27_27_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_27_27_3))) (f_4 x_27_27_3))) (hol.eq B (f_4 (g_1 (f_4 x_27_27_3))) (f_4 x_27_27_3)))) (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_27_27_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_27_27_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_27_27_3))) (f_4 x_27_27_3)))) (hol.eq B (f_4 (g_1 (f_4 x_27_27_3))) (f_4 x_27_27_3)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => x_27_27_3 : hol.term A => f_4 : hol.term (hol.arr A B) => (z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => x_3 : hol.term hol.bool => thm_779 z_1 y_2 x_3) (hol.eq B (f_4 (g_1 (f_4 x_27_27_3))) (f_4 x_27_27_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_27_27_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_27_27_3))) (f_4 x_27_27_3))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_27_27_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g (f x''))) s)) ((= (f (g (f x'')))) (f x'')))) ((= (f (g (f x'')))) (f x'')))) ((Data.Bool./\ ((Set.member (f x'')) ((Set.image f) s))) ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g (f x''))) s)) ((= (f (g (f x'')))) (f x'')))) ((= (f (g (f x'')))) (f x''))))) ;)

(; dict ;)

def thm_1040 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_27_27_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_27_27_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_27_27_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_27_27_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g (f x''))) s)) ((= (f (g (f x'')))) (f x'')))) ((= (f (g (f x'')))) (f x'')))) ((Data.Bool./\ ((Set.member (f x'')) ((Set.image f) s))) ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g (f x''))) s)) ((= (f (g (f x'')))) (f x'')))) ((= (f (g (f x'')))) (f x''))))) ;)

(; dict ;)

def thm_1041 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_27_27_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) => hol.PROVE_HYP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_27_27_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.eq hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_27_27_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))))) (thm_802 A B s_1 x_27_27_2 f_3 hyp_1) (hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_27_27_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) => thm_1040 B A s_1 x_27_27_2 f_3 g_4 hyp_2).

(; Theorem: |- ((= (f (g (f x'')))) (f x'')) ;)

(; dict ;)

def thm_1042 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_27_27_2)) s_1) (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_27_27_2))) -> hol.proof (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_27_27_2)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_27_27_2)) s_1) (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_27_27_2))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_27_27_2)) s_1) (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_27_27_2)) hyp_1.

(; Theorem: |- ((= (f (g (f x'')))) (f x'')) ;)

(; dict ;)

def thm_1043 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_27_27_2)) s_1) (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_27_27_2))) -> hol.proof (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_27_27_2)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_27_27_2)) s_1) (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_27_27_2))) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_27_27_2)) s_1) (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_27_27_2))) (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_27_27_2)) (thm_805 B A s_1 x_27_27_2 f_4 g_3 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_27_27_2)) s_1) (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_27_27_2))) => thm_1042 A B s_1 x_27_27_2 g_3 f_4 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g (f x''))) s)) ((= (f (g (f x'')))) (f x'')))) ((= (f (g (f x'')))) (f x''))) ;)

(; dict ;)

def thm_1044 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2))) => thm_1043 A B s_1 x_27_27_2 g_4 f_3 hyp_1.

(; Theorem: |- ((Data.Bool./\ ((Set.member (f x'')) ((Set.image f) s))) ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g (f x''))) s)) ((= (f (g (f x'')))) (f x'')))) ((= (f (g (f x'')))) (f x'')))) ;)

(; dict ;)

def thm_1045 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> x_27_27_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_3 s_2) -> hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_27_27_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_27_27_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_27_27_3))) (f_4 x_27_27_3))) (hol.eq B (f_4 (g_1 (f_4 x_27_27_3))) (f_4 x_27_27_3)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => x_27_27_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_3 s_2) => hol.EQ_MP (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_27_27_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_27_27_3))) (f_4 x_27_27_3))) (hol.eq B (f_4 (g_1 (f_4 x_27_27_3))) (f_4 x_27_27_3))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_27_27_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_27_27_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_27_27_3))) (f_4 x_27_27_3))) (hol.eq B (f_4 (g_1 (f_4 x_27_27_3))) (f_4 x_27_27_3)))) (thm_1041 B A s_2 x_27_27_3 f_4 g_1 hyp_1) (thm_1044 B A s_2 x_27_27_3 f_4 g_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Set.member (f x'')) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g (f x''))) s)) ((= (f (g (f x'')))) (f x''))))) ((= (f (g (f x'')))) (f x''))) ;)

(; dict ;)

def thm_1046 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> x_27_27_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_3 s_2) -> hol.proof (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_27_27_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_27_27_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_27_27_3))) (f_4 x_27_27_3)))) (hol.eq B (f_4 (g_1 (f_4 x_27_27_3))) (f_4 x_27_27_3))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => x_27_27_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_3 s_2) => thm_1039 A B g_1 s_2 x_27_27_3 f_4 (thm_1045 A B g_1 s_2 x_27_27_3 f_4 hyp_1).

(; Theorem: |- ((= (f (g (f x'')))) (f x'')) ;)

(; dict ;)

def thm_1047 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_4 (g_3 y_5)) y_5)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) -> hol.proof (hol.eq B (f_4 (g_3 (f_4 x_27_27_2))) (f_4 x_27_27_2)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_4 (g_3 y_5)) y_5)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) => thm_1046 A B g_3 s_1 x_27_27_2 f_4 hyp_2 (thm_811 A B g_3 s_1 x_27_27_2 f_4 hyp_1).

(; Theorem: |- ((= (g (f (g (f x''))))) (g (f x''))) ;)

(; dict ;)

def thm_1048 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_1) (hol.eq B (f_3 (g_4 y_5)) y_5)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) -> hol.proof (hol.eq A (g_4 (f_3 (g_4 (f_3 x_27_27_2)))) (g_4 (f_3 x_27_27_2))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_1) (hol.eq B (f_3 (g_4 y_5)) y_5)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) => hol.APP_THM B A g_4 g_4 (f_3 (g_4 (f_3 x_27_27_2))) (f_3 x_27_27_2) (thm_1038 A B g_4) (thm_1047 A B s_1 x_27_27_2 g_4 f_3 hyp_1 hyp_2).

(; Theorem: |- ((= (g (f (g (f x''))))) (g (f x''))) ;)

(; dict ;)

def thm_1049 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_1) (hol.eq B (f_3 (g_4 y_5)) y_5)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) -> hol.proof (hol.eq A (g_4 (f_3 (g_4 (f_3 x_27_27_2)))) (g_4 (f_3 x_27_27_2))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_1) (hol.eq B (f_3 (g_4 y_5)) y_5)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) (hol.eq A (g_4 (f_3 (g_4 (f_3 x_27_27_2)))) (g_4 (f_3 x_27_27_2))) (thm_636 A s_1 x_27_27_2 hyp_2) (hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) => thm_1048 B A s_1 x_27_27_2 f_3 g_4 hyp_1 hyp_3).

(; Theorem: |- ((= (g (f (g (f x''))))) (g (f x''))) ;)

(; dict ;)

def thm_1050 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_1) (hol.eq B (f_3 (g_4 y_5)) y_5)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) -> hol.proof (hol.eq A (g_4 (f_3 (g_4 (f_3 x_27_27_2)))) (g_4 (f_3 x_27_27_2))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_1) (hol.eq B (f_3 (g_4 y_5)) y_5)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_2 s_1) => hol.PROVE_HYP (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_1) (hol.eq B (f_3 (g_4 y_5)) y_5)))) (hol.eq A (g_4 (f_3 (g_4 (f_3 x_27_27_2)))) (g_4 (f_3 x_27_27_2))) (thm_510 A B g_4 s_1 f_3 hyp_1) (hyp_3 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_1) (hol.eq B (f_3 (g_4 y_5)) y_5)))) => thm_1049 B A s_1 x_27_27_2 f_3 g_4 hyp_3 hyp_2).

(; Theorem: |- ((= (g (f x))) x) ;)

(; dict ;)

def thm_1051 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> x_27_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> g_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) -> hyp_2 : hol.proof (hol.eq A x_4 (g_6 x_27_2)) -> hyp_3 : hol.proof (hol.eq B x_27_2 (f_5 x_27_27_1)) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_3) -> hol.proof (hol.eq A (g_6 (f_5 x_4)) x_4) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => x_27_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => f_5 : hol.term (hol.arr A B) => g_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) => hyp_2 : hol.proof (hol.eq A x_4 (g_6 x_27_2)) => hyp_3 : hol.proof (hol.eq B x_27_2 (f_5 x_27_27_1)) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_3) => hol.EQ_MP (hol.eq A (g_6 (f_5 (g_6 (f_5 x_27_27_1)))) (g_6 (f_5 x_27_27_1))) (hol.eq A (g_6 (f_5 x_4)) x_4) (thm_1037 B A x_27_2 x_4 x_27_27_1 f_5 g_6 hyp_2 hyp_3) (thm_1050 B A s_3 x_27_27_1 f_5 g_6 hyp_1 hyp_4).

(; Theorem: |- ((= (g (f x))) x) ;)

(; dict ;)

def thm_1052 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> x_27_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> g_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) -> hyp_2 : hol.proof (hol.eq A x_4 (g_6 x_27_2)) -> hyp_3 : hol.proof (hol.eq B x_27_2 (f_5 x_27_27_1)) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_3) -> hol.proof (hol.eq A (g_6 (f_5 x_4)) x_4) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => x_27_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => f_5 : hol.term (hol.arr A B) => g_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) => hyp_2 : hol.proof (hol.eq A x_4 (g_6 x_27_2)) => hyp_3 : hol.proof (hol.eq B x_27_2 (f_5 x_27_27_1)) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_3) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_3) (hol.eq A (g_6 (f_5 x_4)) x_4) (thm_636 A s_3 x_27_27_1 hyp_4) (hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_3) => thm_1051 B A x_27_27_1 x_27_2 s_3 x_4 f_5 g_6 hyp_1 hyp_2 hyp_3 hyp_5).

(; Theorem: |- ((= (g (f x))) x) ;)

(; dict ;)

def thm_1053 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> x_27_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> g_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) -> hyp_2 : hol.proof (hol.eq A x_4 (g_6 x_27_2)) -> hyp_3 : hol.proof (hol.eq B x_27_2 (f_5 x_27_27_1)) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_3) -> hol.proof (hol.eq A (g_6 (f_5 x_4)) x_4) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => x_27_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => f_5 : hol.term (hol.arr A B) => g_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) => hyp_2 : hol.proof (hol.eq A x_4 (g_6 x_27_2)) => hyp_3 : hol.proof (hol.eq B x_27_2 (f_5 x_27_27_1)) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_3) => hol.PROVE_HYP (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) (hol.eq A (g_6 (f_5 x_4)) x_4) (thm_510 A B g_6 s_3 f_5 hyp_1) (hyp_5 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) => thm_1052 B A x_27_27_1 x_27_2 s_3 x_4 f_5 g_6 hyp_5 hyp_2 hyp_3 hyp_4).

(; Theorem: |- ((= (g (f x))) x) ;)

(; dict ;)

def thm_1054 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> x_27_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> g_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) -> hyp_2 : hol.proof (hol.eq A x_4 (g_6 x_27_2)) -> hyp_3 : hol.proof (hol.eq B x_27_2 (f_5 x_27_27_1)) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_3) -> hol.proof (hol.eq A (g_6 (f_5 x_4)) x_4) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => x_27_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => f_5 : hol.term (hol.arr A B) => g_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) => hyp_2 : hol.proof (hol.eq A x_4 (g_6 x_27_2)) => hyp_3 : hol.proof (hol.eq B x_27_2 (f_5 x_27_27_1)) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_3) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_3) (hol.eq A (g_6 (f_5 x_4)) x_4) (thm_636 A s_3 x_27_27_1 hyp_4) (hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_3) => hol.EQ_MP (hol.eq A (g_6 (f_5 x_4)) x_4) (hol.eq A (g_6 (f_5 x_4)) x_4) (thm_1021 B A x_4 f_5 g_6) (thm_1053 B A x_27_27_1 x_27_2 s_3 x_4 f_5 g_6 hyp_1 hyp_2 hyp_3 hyp_5)).

(; Theorem: |- ((= (g (f x))) x) ;)

(; dict ;)

def thm_1055 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> x_27_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> g_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) -> hyp_2 : hol.proof (hol.eq A x_4 (g_6 x_27_2)) -> hyp_3 : hol.proof (hol.eq B x_27_2 (f_5 x_27_27_1)) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_3) -> hol.proof (hol.eq A (g_6 (f_5 x_4)) x_4) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => x_27_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => f_5 : hol.term (hol.arr A B) => g_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) => hyp_2 : hol.proof (hol.eq A x_4 (g_6 x_27_2)) => hyp_3 : hol.proof (hol.eq B x_27_2 (f_5 x_27_27_1)) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_3) => hol.PROVE_HYP (hol.eq B x_27_2 (f_5 x_27_27_1)) (hol.eq A (g_6 (f_5 x_4)) x_4) (thm_635 A B x_27_27_1 f_5 x_27_2 hyp_3) (hyp_5 : hol.proof (hol.eq B x_27_2 (f_5 x_27_27_1)) => thm_1054 B A x_27_27_1 x_27_2 s_3 x_4 f_5 g_6 hyp_1 hyp_2 hyp_5 hyp_4).

(; Theorem: |- ((= (g (f x))) x) ;)

(; dict ;)

def thm_1056 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> x_27_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> g_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) -> hyp_2 : hol.proof (hol.eq A x_4 (g_6 x_27_2)) -> hyp_3 : hol.proof (hol.eq B x_27_2 (f_5 x_27_27_1)) -> hyp_4 : hol.proof (hol.and (hol.eq B x_27_2 (f_5 x_27_27_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_3)) -> hol.proof (hol.eq A (g_6 (f_5 x_4)) x_4) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => x_27_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => f_5 : hol.term (hol.arr A B) => g_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) => hyp_2 : hol.proof (hol.eq A x_4 (g_6 x_27_2)) => hyp_3 : hol.proof (hol.eq B x_27_2 (f_5 x_27_27_1)) => hyp_4 : hol.proof (hol.and (hol.eq B x_27_2 (f_5 x_27_27_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_3)) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_3) (hol.eq A (g_6 (f_5 x_4)) x_4) (thm_633 B A f_5 x_27_2 s_3 x_27_27_1 hyp_4) (hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_3) => thm_1055 B A x_27_27_1 x_27_2 s_3 x_4 f_5 g_6 hyp_1 hyp_2 hyp_3 hyp_5).

(; Theorem: |- ((= (g (f x))) x) ;)

(; dict ;)

def thm_1057 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> x_27_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> g_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) -> hyp_2 : hol.proof (hol.eq A x_4 (g_6 x_27_2)) -> hyp_3 : hol.proof (hol.and (hol.eq B x_27_2 (f_5 x_27_27_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_3)) -> hol.proof (hol.eq A (g_6 (f_5 x_4)) x_4) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => x_27_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => f_5 : hol.term (hol.arr A B) => g_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) => hyp_2 : hol.proof (hol.eq A x_4 (g_6 x_27_2)) => hyp_3 : hol.proof (hol.and (hol.eq B x_27_2 (f_5 x_27_27_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_1 s_3)) => hol.PROVE_HYP (hol.eq B x_27_2 (f_5 x_27_27_1)) (hol.eq A (g_6 (f_5 x_4)) x_4) (thm_631 A B s_3 x_27_27_1 f_5 x_27_2 hyp_3) (hyp_4 : hol.proof (hol.eq B x_27_2 (f_5 x_27_27_1)) => thm_1056 B A x_27_27_1 x_27_2 s_3 x_4 f_5 g_6 hyp_1 hyp_2 hyp_4 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= x') (f x''))) ((Set.member x'') s))) ((= (g (f x))) x)) ;)

(; dict ;)

def thm_1058 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> x_27_27_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> x_27_6 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_7) s_3) (hol.eq B (f_5 (g_2 y_7)) y_7)))) -> hyp_2 : hol.proof (hol.eq A x_1 (g_2 x_27_6)) -> hol.proof (hol.imp (hol.and (hol.eq B x_27_6 (f_5 x_27_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_4 s_3)) (hol.eq A (g_2 (f_5 x_1)) x_1)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => x_27_27_4 : hol.term A => f_5 : hol.term (hol.arr A B) => x_27_6 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_7) s_3) (hol.eq B (f_5 (g_2 y_7)) y_7)))) => hyp_2 : hol.proof (hol.eq A x_1 (g_2 x_27_6)) => hyp_3 : hol.proof (hol.and (hol.eq B x_27_6 (f_5 x_27_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_27_4 s_3)) => thm_1057 B A x_27_27_4 x_27_6 s_3 x_1 f_5 g_2 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((= (g (f x))) x) ;)

(; dict ;)

def thm_1059 : B : hol.type -> A : hol.type -> x_27_27_1 : hol.term A -> x_27_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> g_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) -> hyp_2 : hol.proof ((x_7 : hol.term A => hol.and (hol.eq B x_27_2 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) x_27_27_1) -> hyp_3 : hol.proof (hol.eq A x_4 (g_6 x_27_2)) -> hol.proof (hol.eq A (g_6 (f_5 x_4)) x_4) :=
  B : hol.type => A : hol.type => x_27_27_1 : hol.term A => x_27_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => f_5 : hol.term (hol.arr A B) => g_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) => hyp_2 : hol.proof ((x_7 : hol.term A => hol.and (hol.eq B x_27_2 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) x_27_27_1) => hyp_3 : hol.proof (hol.eq A x_4 (g_6 x_27_2)) => thm_1058 A B x_4 g_6 s_3 x_27_27_1 f_5 x_27_2 hyp_1 hyp_3 (thm_832 A B s_3 x_27_27_1 f_5 x_27_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= x') (f x))) ((Set.member x) s)) x'')) ((= (g (f x))) x)) ;)

(; dict ;)

def thm_1060 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> x_27_27_3 : hol.term A -> s_4 : hol.term (Set_2Eset A) -> f_5 : hol.term (hol.arr A B) -> x_27_6 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_7) s_4) (hol.eq B (f_5 (g_2 y_7)) y_7)))) -> hyp_2 : hol.proof (hol.eq A x_1 (g_2 x_27_6)) -> hol.proof (hol.imp ((x_7 : hol.term A => hol.and (hol.eq B x_27_6 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) x_27_27_3) (hol.eq A (g_2 (f_5 x_1)) x_1)) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr B A) => x_27_27_3 : hol.term A => s_4 : hol.term (Set_2Eset A) => f_5 : hol.term (hol.arr A B) => x_27_6 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_7) s_4) (hol.eq B (f_5 (g_2 y_7)) y_7)))) => hyp_2 : hol.proof (hol.eq A x_1 (g_2 x_27_6)) => hyp_3 : hol.proof ((x_7 : hol.term A => hol.and (hol.eq B x_27_6 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) x_27_27_3) => thm_1059 B A x_27_27_3 x_27_6 s_4 x_1 f_5 g_2 hyp_1 hyp_3 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda x''. ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= x') (f x))) ((Set.member x) s)) x'')) ((= (g (f x))) x))) ;)

(; dict ;)

def thm_1061 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> x_27_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_3) (hol.eq B (f_4 (g_2 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.eq A x_1 (g_2 x_27_5)) -> hol.proof (hol.forall A (x_27_27_6 : hol.term A => hol.imp ((x_7 : hol.term A => hol.and (hol.eq B x_27_5 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) x_27_27_6) (hol.eq A (g_2 (f_4 x_1)) x_1))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => x_27_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_3) (hol.eq B (f_4 (g_2 y_6)) y_6)))) => hyp_2 : hol.proof (hol.eq A x_1 (g_2 x_27_5)) => x_27_27_6 : hol.term A => thm_1060 B A x_1 g_2 x_27_27_6 s_3 f_4 x_27_5 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (f x))) ((Set.member x) s)))) ((= (g (f x))) x)) ;)

(; dict ;)

def thm_1062 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> x_27_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_3) (hol.eq B (f_4 (g_2 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.eq A x_1 (g_2 x_27_5)) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (hol.eq A (g_2 (f_4 x_1)) x_1)) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => x_27_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_3) (hol.eq B (f_4 (g_2 y_6)) y_6)))) => hyp_2 : hol.proof (hol.eq A x_1 (g_2 x_27_5)) => thm_1025 B A x_1 g_2 s_3 f_4 x_27_5 (thm_1061 B A x_1 g_2 s_3 f_4 x_27_5 hyp_1 hyp_2).

(; Theorem: |- ((= (g (f x))) x) ;)

(; dict ;)

def thm_1063 : B : hol.type -> A : hol.type -> x_27_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_2) (hol.eq B (f_4 (g_5 y_6)) y_6)))) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_1 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) -> hyp_3 : hol.proof (hol.eq A x_3 (g_5 x_27_1)) -> hol.proof (hol.eq A (g_5 (f_4 x_3)) x_3) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_2) (hol.eq B (f_4 (g_5 y_6)) y_6)))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_1 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) => hyp_3 : hol.proof (hol.eq A x_3 (g_5 x_27_1)) => thm_1062 B A x_3 g_5 s_2 f_4 x_27_1 hyp_1 hyp_3 (thm_837 B A s_2 f_4 x_27_1 hyp_2).

(; Theorem: |- ((= (g (f x))) x) ;)

(; dict ;)

def thm_1064 : B : hol.type -> A : hol.type -> x_27_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_2) (hol.eq B (f_4 (g_5 y_6)) y_6)))) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_1 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) -> hyp_3 : hol.proof (hol.eq A x_3 (g_5 x_27_1)) -> hol.proof (hol.eq A (g_5 (f_4 x_3)) x_3) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_2) (hol.eq B (f_4 (g_5 y_6)) y_6)))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_1 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) => hyp_3 : hol.proof (hol.eq A x_3 (g_5 x_27_1)) => hol.PROVE_HYP (hol.eq A x_3 (g_5 x_27_1)) (hol.eq A (g_5 (f_4 x_3)) x_3) (thm_628 B A x_27_1 g_5 x_3 hyp_3) (hyp_4 : hol.proof (hol.eq A x_3 (g_5 x_27_1)) => thm_1063 B A x_27_1 s_2 x_3 f_4 g_5 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((= (g (f x))) x) ;)

(; dict ;)

def thm_1065 : B : hol.type -> A : hol.type -> x_27_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_2) (hol.eq B (f_4 (g_5 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.eq A x_3 (g_5 x_27_1)) -> hyp_3 : hol.proof (hol.and (hol.eq A x_3 (g_5 x_27_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_1 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)))) -> hol.proof (hol.eq A (g_5 (f_4 x_3)) x_3) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_2) (hol.eq B (f_4 (g_5 y_6)) y_6)))) => hyp_2 : hol.proof (hol.eq A x_3 (g_5 x_27_1)) => hyp_3 : hol.proof (hol.and (hol.eq A x_3 (g_5 x_27_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_1 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)))) => hol.PROVE_HYP (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_1 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) (hol.eq A (g_5 (f_4 x_3)) x_3) (thm_626 B A g_5 x_3 s_2 f_4 x_27_1 hyp_3) (hyp_4 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_1 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) => thm_1064 B A x_27_1 s_2 x_3 f_4 g_5 hyp_1 hyp_4 hyp_2).

(; Theorem: |- ((= (g (f x))) x) ;)

(; dict ;)

def thm_1066 : B : hol.type -> A : hol.type -> x_27_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_2) (hol.eq B (f_4 (g_5 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.and (hol.eq A x_3 (g_5 x_27_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_1 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)))) -> hol.proof (hol.eq A (g_5 (f_4 x_3)) x_3) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_2) (hol.eq B (f_4 (g_5 y_6)) y_6)))) => hyp_2 : hol.proof (hol.and (hol.eq A x_3 (g_5 x_27_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_1 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)))) => hol.PROVE_HYP (hol.eq A x_3 (g_5 x_27_1)) (hol.eq A (g_5 (f_4 x_3)) x_3) (thm_624 B A s_2 f_4 x_27_1 g_5 x_3 hyp_2) (hyp_3 : hol.proof (hol.eq A x_3 (g_5 x_27_1)) => thm_1065 B A x_27_1 s_2 x_3 f_4 g_5 hyp_1 hyp_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= x) (g x'))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (f x))) ((Set.member x) s))))) ((= (g (f x))) x)) ;)

(; dict ;)

def thm_1067 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> x_27_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_1) (hol.eq B (f_2 (g_4 y_6)) y_6)))) -> hol.proof (hol.imp (hol.and (hol.eq A x_5 (g_4 x_27_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) (hol.eq A (g_4 (f_2 x_5)) x_5)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => x_27_3 : hol.term B => g_4 : hol.term (hol.arr B A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_1) (hol.eq B (f_2 (g_4 y_6)) y_6)))) => hyp_2 : hol.proof (hol.and (hol.eq A x_5 (g_4 x_27_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) => thm_1066 B A x_27_3 s_1 x_5 f_2 g_4 hyp_1 hyp_2.

(; Theorem: |- ((= (g (f x))) x) ;)

(; dict ;)

def thm_1068 : B : hol.type -> A : hol.type -> x_27_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_2) (hol.eq B (f_4 (g_5 y_6)) y_6)))) -> hyp_2 : hol.proof ((x_6 : hol.term B => hol.and (hol.eq A x_3 (g_5 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))) x_27_1) -> hol.proof (hol.eq A (g_5 (f_4 x_3)) x_3) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_2) (hol.eq B (f_4 (g_5 y_6)) y_6)))) => hyp_2 : hol.proof ((x_6 : hol.term B => hol.and (hol.eq A x_3 (g_5 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))) x_27_1) => thm_1067 B A s_2 f_4 x_27_1 g_5 x_3 hyp_1 (thm_845 B A s_2 f_4 x_27_1 g_5 x_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) x')) ((= (g (f x))) x)) ;)

(; dict ;)

def thm_1069 : A : hol.type -> B : hol.type -> x_27_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_2) (hol.eq B (f_3 (g_4 y_6)) y_6)))) -> hol.proof (hol.imp ((x_6 : hol.term B => hol.and (hol.eq A x_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))) x_27_1) (hol.eq A (g_4 (f_3 x_5)) x_5)) :=
  A : hol.type => B : hol.type => x_27_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_2) (hol.eq B (f_3 (g_4 y_6)) y_6)))) => hyp_2 : hol.proof ((x_6 : hol.term B => hol.and (hol.eq A x_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))) x_27_1) => thm_1068 B A x_27_1 s_2 x_5 f_3 g_4 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda x'. ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) x')) ((= (g (f x))) x))) ;)

(; dict ;)

def thm_1070 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_2 (g_3 y_5)) y_5)))) -> hol.proof (hol.forall B (x_27_5 : hol.term B => hol.imp ((x_6 : hol.term B => hol.and (hol.eq A x_4 (g_3 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_2 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))) x_27_5) (hol.eq A (g_3 (f_2 x_4)) x_4))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_2 (g_3 y_5)) y_5)))) => x_27_5 : hol.term B => thm_1069 A B x_27_5 s_1 f_2 g_3 x_4 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))) ((= (g (f x))) x)) ;)

(; dict ;)

def thm_1071 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_2 (g_3 y_5)) y_5)))) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A x_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) (hol.eq A (g_3 (f_2 x_4)) x_4)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_2 (g_3 y_5)) y_5)))) => thm_1024 A B s_1 f_2 g_3 x_4 (thm_1070 A B s_1 f_2 g_3 x_4 hyp_1).

(; Theorem: |- ((= (g (f x))) x) ;)

(; dict ;)

def thm_1072 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_1) (hol.eq B (f_3 (g_4 y_5)) y_5)))) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A x_2 (g_4 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) -> hol.proof (hol.eq A (g_4 (f_3 x_2)) x_2) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_1) (hol.eq B (f_3 (g_4 y_5)) y_5)))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A x_2 (g_4 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) => thm_1071 A B s_1 f_3 g_4 x_2 hyp_1 (thm_850 A B s_1 f_3 g_4 x_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((= (g (f x))) x)) ;)

(; dict ;)

def thm_1073 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_2 (g_3 y_5)) y_5)))) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq A (g_3 (f_2 x_4)) x_4)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_2 (g_3 y_5)) y_5)))) => hol.EQ_MP (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A x_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) (hol.eq A (g_3 (f_2 x_4)) x_4)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq A (g_3 (f_2 x_4)) x_4)) (thm_1023 A B s_1 f_2 g_3 x_4) (hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A x_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) => thm_1072 B A s_1 x_4 f_2 g_3 hyp_1 hyp_2).

(; Theorem: |- ((= (g (f x))) x) ;)

(; dict ;)

def thm_1074 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_1) (hol.eq B (f_3 (g_4 y_5)) y_5)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1))) -> hol.proof (hol.eq A (g_4 (f_3 x_2)) x_2) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_1) (hol.eq B (f_3 (g_4 y_5)) y_5)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1))) => thm_1073 B A s_1 f_3 g_4 x_2 hyp_1 (thm_966 B A s_1 f_3 g_4 x_2 hyp_2).

(; Theorem: |- ((= x) (g (f x))) ;)

(; dict ;)

def thm_1075 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_2 (g_3 y_5)) y_5)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) -> hol.proof (hol.eq A x_4 (g_3 (f_2 x_4))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_2 (g_3 y_5)) y_5)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) => thm_1019 B A x_4 f_2 g_3 (thm_1074 B A s_1 x_4 f_2 g_3 hyp_1 hyp_2).

(; Theorem: |- ((= ((= (g (f x))) y)) ((Data.Bool./\ ((= x) (g (f x)))) ((= (g (f x))) y))) ;)

(; dict ;)

def thm_1076 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.eq A x_2 (g_4 (f_3 x_2))) -> hol.proof (hol.eq hol.bool (hol.eq A (g_4 (f_3 x_2)) y_1) (hol.and (hol.eq A x_2 (g_4 (f_3 x_2))) (hol.eq A (g_4 (f_3 x_2)) y_1))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.eq A x_2 (g_4 (f_3 x_2))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (hol.eq A x_2 (g_4 (f_3 x_2))) (hol.eq A (g_4 (f_3 x_2)) y_1) hyp_1.

(; Theorem: |- ((= ((= (g (f x))) y)) ((Data.Bool./\ ((= x) (g (f x)))) ((= (g (f x))) y))) ;)

(; dict ;)

def thm_1077 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_1) (hol.eq B (f_4 (g_5 y_6)) y_6)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1))) -> hol.proof (hol.eq hol.bool (hol.eq A (g_5 (f_4 x_3)) y_2) (hol.and (hol.eq A x_3 (g_5 (f_4 x_3))) (hol.eq A (g_5 (f_4 x_3)) y_2))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_1) (hol.eq B (f_4 (g_5 y_6)) y_6)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1))) => hol.PROVE_HYP (hol.eq A x_3 (g_5 (f_4 x_3))) (hol.eq hol.bool (hol.eq A (g_5 (f_4 x_3)) y_2) (hol.and (hol.eq A x_3 (g_5 (f_4 x_3))) (hol.eq A (g_5 (f_4 x_3)) y_2))) (thm_1075 B A s_1 f_4 g_5 x_3 hyp_1 hyp_2) (hyp_3 : hol.proof (hol.eq A x_3 (g_5 (f_4 x_3))) => thm_1076 B A y_2 x_3 f_4 g_5 hyp_3).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda y_1. ((Data.Bool./\ ((= (g (f x))) y_1)) ((= y_1) y)))) ((= (g (f x))) y)) ;)

(; dict ;)

def thm_1078 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y__1_5 : hol.term A => hol.and (hol.eq A (g_4 (f_3 x_2)) y__1_5) (hol.eq A y__1_5 y_1))) (hol.eq A (g_4 (f_3 x_2)) y_1)) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => (A : hol.type => z_1 : hol.term A => x_2 : hol.term A => thm_1001 A z_1 x_2) A y_1 (g_4 (f_3 x_2)).

(; Theorem: |- ((= (\lambda y'. ((Data.Bool./\ ((= (g (f x))) y')) ((= y') y)) (g (f y)))) ((Data.Bool./\ ((= (g (f x))) (g (f y)))) ((= (g (f y))) y))) ;)

(; dict ;)

def thm_1079 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool ((y_27_5 : hol.term A => hol.and (hol.eq A (g_4 (f_3 x_2)) y_27_5) (hol.eq A y_27_5 y_1)) (g_4 (f_3 y_1))) (hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 (f_3 y_1))) (hol.eq A (g_4 (f_3 y_1)) y_1))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hol.BETA_CONV A hol.bool (y_27_5 : hol.term A => hol.and (hol.eq A (g_4 (f_3 x_2)) y_27_5) (hol.eq A y_27_5 y_1)) (g_4 (f_3 y_1)).

(; Theorem: |- ((= ((Data.Bool./\ ((= (g (f x))) (g (f y)))) ((= (g (f y))) y))) (\lambda y'. ((Data.Bool./\ ((= (g (f x))) y')) ((= y') y)) (g (f y)))) ;)

(; dict ;)

def thm_1080 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 (f_3 y_1))) (hol.eq A (g_4 (f_3 y_1)) y_1)) ((y_27_5 : hol.term A => hol.and (hol.eq A (g_4 (f_3 x_2)) y_27_5) (hol.eq A y_27_5 y_1)) (g_4 (f_3 y_1)))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hol.SYM hol.bool ((y_27_5 : hol.term A => hol.and (hol.eq A (g_4 (f_3 x_2)) y_27_5) (hol.eq A y_27_5 y_1)) (g_4 (f_3 y_1))) (hol.and (hol.eq A (g_4 (f_3 x_2)) (g_4 (f_3 y_1))) (hol.eq A (g_4 (f_3 y_1)) y_1)) (thm_1079 B A y_1 x_2 f_3 g_4).

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_1081 : A : hol.type -> hol.proof (hol.eq (hol.arr A (hol.arr A hol.bool)) (hol.eq A) (hol.eq A)) :=
  A : hol.type => hol.REFL (hol.arr A (hol.arr A hol.bool)) (hol.eq A).

(; Theorem: |- ((= (g (f x))) (g (f y))) ;)

(; dict ;)

def thm_1082 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) -> hol.proof (hol.eq A (g_4 (f_3 x_2)) (g_4 (f_3 y_1))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) => hol.APP_THM B A g_4 g_4 (f_3 x_2) (f_3 y_1) (thm_1038 A B g_4) (thm_973 A B y_1 x_2 f_3 hyp_1).

(; Theorem: |- ((= (= (g (f x)))) (= (g (f y)))) ;)

(; dict ;)

def thm_1083 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) -> hol.proof (hol.eq (hol.arr A hol.bool) (hol.eq A (g_4 (f_3 x_2))) (hol.eq A (g_4 (f_3 y_1)))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) => hol.APP_THM A (hol.arr A hol.bool) (hol.eq A) (hol.eq A) (g_4 (f_3 x_2)) (g_4 (f_3 y_1)) (thm_1081 A) (thm_1082 B A y_1 x_2 f_3 g_4 hyp_1).

(; Theorem: |- ((= (g (f y))) (g (f y))) ;)

(; dict ;)

def thm_1084 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq A (g_3 (f_2 y_1)) (g_3 (f_2 y_1))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hol.REFL A (g_3 (f_2 y_1)).

(; Theorem: |- ((= ((= (g (f x))) (g (f y)))) ((= (g (f y))) (g (f y)))) ;)

(; dict ;)

def thm_1085 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) -> hol.proof (hol.eq hol.bool (hol.eq A (g_4 (f_3 x_2)) (g_4 (f_3 y_1))) (hol.eq A (g_4 (f_3 y_1)) (g_4 (f_3 y_1)))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) => hol.APP_THM A hol.bool (hol.eq A (g_4 (f_3 x_2))) (hol.eq A (g_4 (f_3 y_1))) (g_4 (f_3 y_1)) (g_4 (f_3 y_1)) (thm_1083 B A y_1 x_2 f_3 g_4 hyp_1) (thm_1084 B A y_1 f_3 g_4).

(; Theorem: |- ((= ((= (g (f y))) (g (f y)))) Data.Bool.T) ;)

(; dict ;)

def thm_1086 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.eq A (g_3 (f_2 y_1)) (g_3 (f_2 y_1))) hol.true) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => (A : hol.type => x_1 : hol.term A => thm_313 A x_1) A (g_3 (f_2 y_1)).

(; Theorem: |- ((= ((= (g (f x))) (g (f y)))) Data.Bool.T) ;)

(; dict ;)

def thm_1087 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) -> hol.proof (hol.eq hol.bool (hol.eq A (g_4 (f_3 x_2)) (g_4 (f_3 y_1))) hol.true) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) => hol.TRANS hol.bool (hol.eq A (g_4 (f_3 x_2)) (g_4 (f_3 y_1))) (hol.eq A (g_4 (f_3 y_1)) (g_4 (f_3 y_1))) hol.true (thm_1085 B A y_1 x_2 f_3 g_4 hyp_1) (thm_1086 B A y_1 f_3 g_4).

(; Theorem: |- ((= Data.Bool.T) ((= (g (f x))) (g (f y)))) ;)

(; dict ;)

def thm_1088 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) -> hol.proof (hol.eq hol.bool hol.true (hol.eq A (g_4 (f_3 x_2)) (g_4 (f_3 y_1)))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) => hol.SYM hol.bool (hol.eq A (g_4 (f_3 x_2)) (g_4 (f_3 y_1))) hol.true (thm_1087 B A y_1 x_2 f_3 g_4 hyp_1).

(; Theorem: |- ((= ((= (g (f y))) y)) ((Data.Bool./\ ((= (g (f x))) (g (f y)))) ((= (g (f y))) y))) ;)

(; dict ;)

def thm_1089 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> y_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.eq A (g_4 (f_3 x_1)) (g_4 (f_3 y_2))) -> hol.proof (hol.eq hol.bool (hol.eq A (g_4 (f_3 y_2)) y_2) (hol.and (hol.eq A (g_4 (f_3 x_1)) (g_4 (f_3 y_2))) (hol.eq A (g_4 (f_3 y_2)) y_2))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => y_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.eq A (g_4 (f_3 x_1)) (g_4 (f_3 y_2))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (hol.eq A (g_4 (f_3 x_1)) (g_4 (f_3 y_2))) (hol.eq A (g_4 (f_3 y_2)) y_2) hyp_1.

(; Theorem: |- ((= ((= (g (f y))) y)) ((Data.Bool./\ ((= (g (f x))) (g (f y)))) ((= (g (f y))) y))) ;)

(; dict ;)

def thm_1090 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> y_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.eq B (f_3 x_1) (f_3 y_2)) -> hol.proof (hol.eq hol.bool (hol.eq A (g_4 (f_3 y_2)) y_2) (hol.and (hol.eq A (g_4 (f_3 x_1)) (g_4 (f_3 y_2))) (hol.eq A (g_4 (f_3 y_2)) y_2))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => y_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.eq B (f_3 x_1) (f_3 y_2)) => hol.PROVE_HYP (hol.eq A (g_4 (f_3 x_1)) (g_4 (f_3 y_2))) (hol.eq hol.bool (hol.eq A (g_4 (f_3 y_2)) y_2) (hol.and (hol.eq A (g_4 (f_3 x_1)) (g_4 (f_3 y_2))) (hol.eq A (g_4 (f_3 y_2)) y_2))) (hol.EQ_MP hol.true (hol.eq A (g_4 (f_3 x_1)) (g_4 (f_3 y_2))) (thm_1088 B A y_2 x_1 f_3 g_4 hyp_1) thm_15) (hyp_2 : hol.proof (hol.eq A (g_4 (f_3 x_1)) (g_4 (f_3 y_2))) => thm_1089 B A x_1 y_2 f_3 g_4 hyp_2).

(; Theorem: |- ((= ((Set.member y) ((Set.image g) ((Set.image f) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (g x))) ((Set.member x) ((Set.image f) s))))) ;)

(; dict ;)

def thm_1091 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> y_4 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A y_4 (g_3 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => y_4 : hol.term A => (B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr B A) => y_3 : hol.term A => thm_523 B A s_1 f_2 y_3) B A (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) g_3 y_4.

(; Theorem: |- ((= (Data.Bool./\ ((= y) (g x)))) (Data.Bool./\ ((= y) (g x)))) ;)

(; dict ;)

def thm_1092 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> y_3 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq A y_3 (g_2 x_1))) (hol.and (hol.eq A y_3 (g_2 x_1)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => g_2 : hol.term (hol.arr B A) => y_3 : hol.term A => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (hol.eq A y_3 (g_2 x_1))).

(; Theorem: |- ((= ((Data.Bool./\ ((= y) (g x))) ((Set.member x) ((Set.image f) s)))) ((Data.Bool./\ ((= y) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_1093 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> y_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (hol.eq A y_5 (g_4 x_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (hol.eq A y_5 (g_4 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => g_4 : hol.term (hol.arr B A) => y_5 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq A y_5 (g_4 x_3))) (hol.and (hol.eq A y_5 (g_4 x_3))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (thm_1092 B A x_3 g_4 y_5) (thm_592 A B s_1 f_2 x_3).

(; Theorem: |- ((= \lambda x. ((Data.Bool./\ ((= y) (g x))) ((Set.member x) ((Set.image f) s)))) \lambda x. ((Data.Bool./\ ((= y) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_1094 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> y_4 : hol.term A -> hol.proof (hol.eq (hol.arr B hol.bool) (x_5 : hol.term B => hol.and (hol.eq A y_4 (g_3 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (x_5 : hol.term B => hol.and (hol.eq A y_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => y_4 : hol.term A => hol.ABS_THM B hol.bool (x_5 : hol.term B => hol.and (hol.eq A y_4 (g_3 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (x_5 : hol.term B => hol.and (hol.eq A y_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) (x_5 : hol.term B => thm_1093 B A s_1 f_2 x_5 g_3 y_4).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (g x))) ((Set.member x) ((Set.image f) s))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))) ;)

(; dict ;)

def thm_1095 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> y_4 : hol.term A -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A y_4 (g_3 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A y_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => y_4 : hol.term A => hol.APP_THM (hol.arr B hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool)) (x_5 : hol.term B => hol.and (hol.eq A y_4 (g_3 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (x_5 : hol.term B => hol.and (hol.eq A y_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) (thm_596 B) (thm_1094 A B s_1 f_2 g_3 y_4).

(; Theorem: |- ((= ((Set.member y) ((Set.image g) ((Set.image f) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))) ;)

(; dict ;)

def thm_1096 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> y_4 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A y_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => y_4 : hol.term A => hol.TRANS hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A y_4 (g_3 x_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A y_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) (thm_1091 B A s_1 f_2 g_3 y_4) (thm_1095 A B s_1 f_2 g_3 y_4).

(; Theorem: |- ((= (Data.Bool.==> ((Set.member y) ((Set.image g) ((Set.image f) s))))) (Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))))) ;)

(; dict ;)

def thm_1097 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> y_4 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A y_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => y_4 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A y_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) thm_107 (thm_1096 B A s_1 f_2 g_3 y_4).

(; Theorem: |- ((= ((= (g (f y))) y)) ((= (g (f y))) y)) ;)

(; dict ;)

def thm_1098 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.eq A (g_3 (f_2 y_1)) y_1) (hol.eq A (g_3 (f_2 y_1)) y_1)) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hol.REFL hol.bool (hol.eq A (g_3 (f_2 y_1)) y_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (g (f y))) y))) ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))) ((= (g (f y))) y))) ;)

(; dict ;)

def thm_1099 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> y_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq A (g_3 (f_2 y_4)) y_4)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A y_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) (hol.eq A (g_3 (f_2 y_4)) y_4))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => y_4 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A y_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))))) (hol.eq A (g_3 (f_2 y_4)) y_4) (hol.eq A (g_3 (f_2 y_4)) y_4) (thm_1097 B A s_1 f_2 g_3 y_4) (thm_1098 B A y_4 f_2 g_3).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))) ((= (g (f y))) y))) ((Data.Bool.==> ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (g (f y))) y))) ;)

(; dict ;)

def thm_1100 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> y_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A y_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) (hol.eq A (g_3 (f_2 y_4)) y_4)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq A (g_3 (f_2 y_4)) y_4))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => y_4 : hol.term A => hol.SYM hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq A (g_3 (f_2 y_4)) y_4)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A y_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) (hol.eq A (g_3 (f_2 y_4)) y_4)) (thm_1099 B A s_1 f_2 g_3 y_4).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= y) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) x)) ((= (g (f y))) y)))) ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))) ((= (g (f y))) y))) ;)

(; dict ;)

def thm_1101 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> y_4 : hol.term A -> hol.proof (hol.imp (hol.forall B (x_5 : hol.term B => hol.imp ((x_6 : hol.term B => hol.and (hol.eq A y_4 (g_3 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_2 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))) x_5) (hol.eq A (g_3 (f_2 y_4)) y_4))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A y_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) (hol.eq A (g_3 (f_2 y_4)) y_4))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => y_4 : hol.term A => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_279 A Q_1 P_2) B (hol.eq A (g_3 (f_2 y_4)) y_4) (x_5 : hol.term B => hol.and (hol.eq A y_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))).

(; Theorem: |- ((Data.Bool./\ ((= y) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_1102 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> y_5 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq A y_5 (g_4 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) -> hol.proof (hol.and (hol.eq A y_5 (g_4 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => g_4 : hol.term (hol.arr B A) => y_5 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq A y_5 (g_4 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) => hyp_1.

(; Theorem: |- ((= y) (g x)) ;)

(; dict ;)

def thm_1103 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> y_5 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq A y_5 (g_4 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) -> hol.proof (hol.eq A y_5 (g_4 x_3)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => g_4 : hol.term (hol.arr B A) => y_5 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq A y_5 (g_4 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_185 q_1 p_2 hyp_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq A y_5 (g_4 x_3)) hyp_1.

(; Theorem: |- ((= y) (g x)) ;)

(; dict ;)

def thm_1104 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> y_5 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq A y_5 (g_4 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) -> hol.proof (hol.eq A y_5 (g_4 x_3)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => g_4 : hol.term (hol.arr B A) => y_5 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq A y_5 (g_4 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) => hol.PROVE_HYP (hol.and (hol.eq A y_5 (g_4 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) (hol.eq A y_5 (g_4 x_3)) (thm_1102 B A s_1 f_2 x_3 g_4 y_5 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq A y_5 (g_4 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) => thm_1103 B A s_1 f_2 x_3 g_4 y_5 hyp_2).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_1105 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> y_2 : hol.term A -> s_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq A y_2 (g_1 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => y_2 : hol.term A => s_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq A y_2 (g_1 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_1) (hol.eq A y_2 (g_1 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_1106 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> y_2 : hol.term A -> s_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq A y_2 (g_1 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => y_2 : hol.term A => s_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq A y_2 (g_1 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)))) => hol.PROVE_HYP (hol.and (hol.eq A y_2 (g_1 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (thm_1102 B A s_3 f_4 x_5 g_1 y_2 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq A y_2 (g_1 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)))) => thm_1105 B A g_1 y_2 s_3 f_4 x_5 hyp_2).

(; Theorem: |- ((= y) (g x)) ;)

(; dict ;)

def thm_1107 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> y_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A y_3 (g_2 x_1)) -> hol.proof (hol.eq A y_3 (g_2 x_1)) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => g_2 : hol.term (hol.arr B A) => y_3 : hol.term A => hyp_1 : hol.proof (hol.eq A y_3 (g_2 x_1)) => hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)) x)) ((= (g (f y))) y)))) ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= (g (f y))) y))) ;)

(; dict ;)

def thm_1108 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hol.proof (hol.imp (hol.forall A (x_6 : hol.term A => hol.imp ((x_7 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) x_6) (hol.eq A (g_2 (f_4 y_1)) y_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (hol.eq A (g_2 (f_4 y_1)) y_1))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_279 A Q_1 P_2) A (hol.eq A (g_2 (f_4 y_1)) y_1) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)).

(; Theorem: |- ((Data.Bool./\ ((= x) (f x'))) ((Set.member x') s)) ;)

(; dict ;)

def thm_1109 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq B x_4 (f_3 x_27_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1)) -> hol.proof (hol.and (hol.eq B x_4 (f_3 x_27_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq B x_4 (f_3 x_27_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1)) => hyp_1.

(; Theorem: |- ((= x) (f x')) ;)

(; dict ;)

def thm_1110 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq B x_4 (f_3 x_27_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1)) -> hol.proof (hol.eq B x_4 (f_3 x_27_2)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq B x_4 (f_3 x_27_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1)) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_185 q_1 p_2 hyp_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) (hol.eq B x_4 (f_3 x_27_2)) hyp_1.

(; Theorem: |- ((= x) (f x')) ;)

(; dict ;)

def thm_1111 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq B x_4 (f_3 x_27_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1)) -> hol.proof (hol.eq B x_4 (f_3 x_27_2)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq B x_4 (f_3 x_27_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1)) => hol.PROVE_HYP (hol.and (hol.eq B x_4 (f_3 x_27_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1)) (hol.eq B x_4 (f_3 x_27_2)) (thm_1109 A B s_1 x_27_2 f_3 x_4 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq B x_4 (f_3 x_27_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1)) => thm_1110 A B s_1 x_27_2 f_3 x_4 hyp_2).

(; Theorem: |- ((Set.member x') s) ;)

(; dict ;)

def thm_1112 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> x_27_4 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq B x_2 (f_1 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_3)) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => x_27_4 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq B x_2 (f_1 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_3)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_1) (hol.eq B x_2 (f_1 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_3) hyp_1.

(; Theorem: |- ((Set.member x') s) ;)

(; dict ;)

def thm_1113 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> x_27_4 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq B x_2 (f_1 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_3)) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => x_27_4 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq B x_2 (f_1 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_3)) => hol.PROVE_HYP (hol.and (hol.eq B x_2 (f_1 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_3)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_3) (thm_1109 A B s_3 x_27_4 f_1 x_2 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq B x_2 (f_1 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_3)) => thm_1112 B A f_1 x_2 s_3 x_27_4 hyp_2).

(; Theorem: |- ((= x) (f x')) ;)

(; dict ;)

def thm_1114 : A : hol.type -> B : hol.type -> x_27_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hyp_1 : hol.proof (hol.eq B x_3 (f_2 x_27_1)) -> hol.proof (hol.eq B x_3 (f_2 x_27_1)) :=
  A : hol.type => B : hol.type => x_27_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => hyp_1 : hol.proof (hol.eq B x_3 (f_2 x_27_1)) => hyp_1.

(; Theorem: |- ((Set.member x') s) ;)

(; dict ;)

def thm_1115 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) => hyp_1.

(; Theorem: |- ((= (= (\lambda _11138. ((= (g (f _11138))) _11138) y))) (= (\lambda _11138. ((= (g (f _11138))) _11138) y))) ;)

(; dict ;)

def thm_1116 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11138_4 : hol.term A => hol.eq A (g_3 (f_2 __11138_4)) __11138_4) y_1)) (hol.eq hol.bool ((__11138_4 : hol.term A => hol.eq A (g_3 (f_2 __11138_4)) __11138_4) y_1))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11138_4 : hol.term A => hol.eq A (g_3 (f_2 __11138_4)) __11138_4) y_1)).

(; Theorem: |- ((= (\lambda _11138. ((= (g (f _11138))) _11138) (g (f x')))) ((= (g (f (g (f x'))))) (g (f x')))) ;)

(; dict ;)

def thm_1117 : B : hol.type -> A : hol.type -> x_27_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool ((__11138_4 : hol.term A => hol.eq A (g_3 (f_2 __11138_4)) __11138_4) (g_3 (f_2 x_27_1))) (hol.eq A (g_3 (f_2 (g_3 (f_2 x_27_1)))) (g_3 (f_2 x_27_1)))) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term A => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hol.BETA_CONV A hol.bool (__11138_4 : hol.term A => hol.eq A (g_3 (f_2 __11138_4)) __11138_4) (g_3 (f_2 x_27_1)).

(; Theorem: |- ((= ((= (\lambda _11138. ((= (g (f _11138))) _11138) y)) (\lambda _11138. ((= (g (f _11138))) _11138) (g (f x'))))) ((= (\lambda _11138. ((= (g (f _11138))) _11138) y)) ((= (g (f (g (f x'))))) (g (f x'))))) ;)

(; dict ;)

def thm_1118 : B : hol.type -> A : hol.type -> x_27_1 : hol.term A -> y_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11138_5 : hol.term A => hol.eq A (g_4 (f_3 __11138_5)) __11138_5) y_2) ((__11138_5 : hol.term A => hol.eq A (g_4 (f_3 __11138_5)) __11138_5) (g_4 (f_3 x_27_1)))) (hol.eq hol.bool ((__11138_5 : hol.term A => hol.eq A (g_4 (f_3 __11138_5)) __11138_5) y_2) (hol.eq A (g_4 (f_3 (g_4 (f_3 x_27_1)))) (g_4 (f_3 x_27_1))))) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term A => y_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11138_5 : hol.term A => hol.eq A (g_4 (f_3 __11138_5)) __11138_5) y_2)) (hol.eq hol.bool ((__11138_5 : hol.term A => hol.eq A (g_4 (f_3 __11138_5)) __11138_5) y_2)) ((__11138_5 : hol.term A => hol.eq A (g_4 (f_3 __11138_5)) __11138_5) (g_4 (f_3 x_27_1))) (hol.eq A (g_4 (f_3 (g_4 (f_3 x_27_1)))) (g_4 (f_3 x_27_1))) (thm_1116 B A y_2 f_3 g_4) (thm_1117 B A x_27_1 f_3 g_4).

(; Theorem: |- ((= (\lambda _11138. ((= (g (f _11138))) _11138) y)) ((= (g (f y))) y)) ;)

(; dict ;)

def thm_1119 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool ((__11138_4 : hol.term A => hol.eq A (g_3 (f_2 __11138_4)) __11138_4) y_1) (hol.eq A (g_3 (f_2 y_1)) y_1)) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hol.BETA_CONV A hol.bool (__11138_4 : hol.term A => hol.eq A (g_3 (f_2 __11138_4)) __11138_4) y_1.

(; Theorem: |- ((= (= (\lambda _11138. ((= (g (f _11138))) _11138) y))) (= ((= (g (f y))) y))) ;)

(; dict ;)

def thm_1120 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11138_4 : hol.term A => hol.eq A (g_3 (f_2 __11138_4)) __11138_4) y_1)) (hol.eq hol.bool (hol.eq A (g_3 (f_2 y_1)) y_1))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__11138_4 : hol.term A => hol.eq A (g_3 (f_2 __11138_4)) __11138_4) y_1) (hol.eq A (g_3 (f_2 y_1)) y_1) thm_64 (thm_1119 B A y_1 f_2 g_3).

(; Theorem: |- ((= ((= (g (f (g (f x'))))) (g (f x')))) ((= (g (f (g (f x'))))) (g (f x')))) ;)

(; dict ;)

def thm_1121 : B : hol.type -> A : hol.type -> x_27_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.eq A (g_3 (f_2 (g_3 (f_2 x_27_1)))) (g_3 (f_2 x_27_1))) (hol.eq A (g_3 (f_2 (g_3 (f_2 x_27_1)))) (g_3 (f_2 x_27_1)))) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term A => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hol.REFL hol.bool (hol.eq A (g_3 (f_2 (g_3 (f_2 x_27_1)))) (g_3 (f_2 x_27_1))).

(; Theorem: |- ((= ((= (\lambda _11138. ((= (g (f _11138))) _11138) y)) ((= (g (f (g (f x'))))) (g (f x'))))) ((= ((= (g (f y))) y)) ((= (g (f (g (f x'))))) (g (f x'))))) ;)

(; dict ;)

def thm_1122 : B : hol.type -> A : hol.type -> x_27_1 : hol.term A -> y_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11138_5 : hol.term A => hol.eq A (g_4 (f_3 __11138_5)) __11138_5) y_2) (hol.eq A (g_4 (f_3 (g_4 (f_3 x_27_1)))) (g_4 (f_3 x_27_1)))) (hol.eq hol.bool (hol.eq A (g_4 (f_3 y_2)) y_2) (hol.eq A (g_4 (f_3 (g_4 (f_3 x_27_1)))) (g_4 (f_3 x_27_1))))) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term A => y_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11138_5 : hol.term A => hol.eq A (g_4 (f_3 __11138_5)) __11138_5) y_2)) (hol.eq hol.bool (hol.eq A (g_4 (f_3 y_2)) y_2)) (hol.eq A (g_4 (f_3 (g_4 (f_3 x_27_1)))) (g_4 (f_3 x_27_1))) (hol.eq A (g_4 (f_3 (g_4 (f_3 x_27_1)))) (g_4 (f_3 x_27_1))) (thm_1120 B A y_2 f_3 g_4) (thm_1121 B A x_27_1 f_3 g_4).

(; Theorem: |- ((= ((= (\lambda _11138. ((= (g (f _11138))) _11138) y)) (\lambda _11138. ((= (g (f _11138))) _11138) (g (f x'))))) ((= ((= (g (f y))) y)) ((= (g (f (g (f x'))))) (g (f x'))))) ;)

(; dict ;)

def thm_1123 : B : hol.type -> A : hol.type -> x_27_1 : hol.term A -> y_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11138_5 : hol.term A => hol.eq A (g_4 (f_3 __11138_5)) __11138_5) y_2) ((__11138_5 : hol.term A => hol.eq A (g_4 (f_3 __11138_5)) __11138_5) (g_4 (f_3 x_27_1)))) (hol.eq hol.bool (hol.eq A (g_4 (f_3 y_2)) y_2) (hol.eq A (g_4 (f_3 (g_4 (f_3 x_27_1)))) (g_4 (f_3 x_27_1))))) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term A => y_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hol.TRANS hol.bool (hol.eq hol.bool ((__11138_5 : hol.term A => hol.eq A (g_4 (f_3 __11138_5)) __11138_5) y_2) ((__11138_5 : hol.term A => hol.eq A (g_4 (f_3 __11138_5)) __11138_5) (g_4 (f_3 x_27_1)))) (hol.eq hol.bool ((__11138_5 : hol.term A => hol.eq A (g_4 (f_3 __11138_5)) __11138_5) y_2) (hol.eq A (g_4 (f_3 (g_4 (f_3 x_27_1)))) (g_4 (f_3 x_27_1)))) (hol.eq hol.bool (hol.eq A (g_4 (f_3 y_2)) y_2) (hol.eq A (g_4 (f_3 (g_4 (f_3 x_27_1)))) (g_4 (f_3 x_27_1)))) (thm_1118 B A x_27_1 y_2 f_3 g_4) (thm_1122 B A x_27_1 y_2 f_3 g_4).

(; Theorem: |- ((= \lambda _11138. ((= (g (f _11138))) _11138)) \lambda _11138. ((= (g (f _11138))) _11138)) ;)

(; dict ;)

def thm_1124 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr B A) -> hol.proof (hol.eq (hol.arr A hol.bool) (__11138_3 : hol.term A => hol.eq A (g_2 (f_1 __11138_3)) __11138_3) (__11138_3 : hol.term A => hol.eq A (g_2 (f_1 __11138_3)) __11138_3)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => hol.REFL (hol.arr A hol.bool) (__11138_3 : hol.term A => hol.eq A (g_2 (f_1 __11138_3)) __11138_3).

(; Theorem: |- ((= (= (\lambda _11134. ((= y) (g _11134)) x))) (= (\lambda _11134. ((= y) (g _11134)) x))) ;)

(; dict ;)

def thm_1125 : A : hol.type -> B : hol.type -> x_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> y_3 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11134_4 : hol.term B => hol.eq A y_3 (g_2 __11134_4)) x_1)) (hol.eq hol.bool ((__11134_4 : hol.term B => hol.eq A y_3 (g_2 __11134_4)) x_1))) :=
  A : hol.type => B : hol.type => x_1 : hol.term B => g_2 : hol.term (hol.arr B A) => y_3 : hol.term A => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11134_4 : hol.term B => hol.eq A y_3 (g_2 __11134_4)) x_1)).

(; Theorem: |- ((= (\lambda _11134. ((= y) (g _11134)) (f x'))) ((= y) (g (f x')))) ;)

(; dict ;)

def thm_1126 : A : hol.type -> B : hol.type -> x_27_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> y_4 : hol.term A -> hol.proof (hol.eq hol.bool ((__11134_5 : hol.term B => hol.eq A y_4 (g_3 __11134_5)) (f_2 x_27_1)) (hol.eq A y_4 (g_3 (f_2 x_27_1)))) :=
  A : hol.type => B : hol.type => x_27_1 : hol.term A => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => y_4 : hol.term A => hol.BETA_CONV B hol.bool (__11134_5 : hol.term B => hol.eq A y_4 (g_3 __11134_5)) (f_2 x_27_1).

(; Theorem: |- ((= ((= (\lambda _11134. ((= y) (g _11134)) x)) (\lambda _11134. ((= y) (g _11134)) (f x')))) ((= (\lambda _11134. ((= y) (g _11134)) x)) ((= y) (g (f x'))))) ;)

(; dict ;)

def thm_1127 : A : hol.type -> B : hol.type -> x_27_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> y_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11134_6 : hol.term B => hol.eq A y_5 (g_4 __11134_6)) x_3) ((__11134_6 : hol.term B => hol.eq A y_5 (g_4 __11134_6)) (f_2 x_27_1))) (hol.eq hol.bool ((__11134_6 : hol.term B => hol.eq A y_5 (g_4 __11134_6)) x_3) (hol.eq A y_5 (g_4 (f_2 x_27_1))))) :=
  A : hol.type => B : hol.type => x_27_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => g_4 : hol.term (hol.arr B A) => y_5 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11134_6 : hol.term B => hol.eq A y_5 (g_4 __11134_6)) x_3)) (hol.eq hol.bool ((__11134_6 : hol.term B => hol.eq A y_5 (g_4 __11134_6)) x_3)) ((__11134_6 : hol.term B => hol.eq A y_5 (g_4 __11134_6)) (f_2 x_27_1)) (hol.eq A y_5 (g_4 (f_2 x_27_1))) (thm_1125 A B x_3 g_4 y_5) (thm_1126 A B x_27_1 f_2 g_4 y_5).

(; Theorem: |- ((= (\lambda _11134. ((= y) (g _11134)) x)) ((= y) (g x))) ;)

(; dict ;)

def thm_1128 : A : hol.type -> B : hol.type -> x_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> y_3 : hol.term A -> hol.proof (hol.eq hol.bool ((__11134_4 : hol.term B => hol.eq A y_3 (g_2 __11134_4)) x_1) (hol.eq A y_3 (g_2 x_1))) :=
  A : hol.type => B : hol.type => x_1 : hol.term B => g_2 : hol.term (hol.arr B A) => y_3 : hol.term A => hol.BETA_CONV B hol.bool (__11134_4 : hol.term B => hol.eq A y_3 (g_2 __11134_4)) x_1.

(; Theorem: |- ((= (= (\lambda _11134. ((= y) (g _11134)) x))) (= ((= y) (g x)))) ;)

(; dict ;)

def thm_1129 : A : hol.type -> B : hol.type -> x_1 : hol.term B -> g_2 : hol.term (hol.arr B A) -> y_3 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11134_4 : hol.term B => hol.eq A y_3 (g_2 __11134_4)) x_1)) (hol.eq hol.bool (hol.eq A y_3 (g_2 x_1)))) :=
  A : hol.type => B : hol.type => x_1 : hol.term B => g_2 : hol.term (hol.arr B A) => y_3 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__11134_4 : hol.term B => hol.eq A y_3 (g_2 __11134_4)) x_1) (hol.eq A y_3 (g_2 x_1)) thm_64 (thm_1128 A B x_1 g_2 y_3).

(; Theorem: |- ((= ((= y) (g (f x')))) ((= y) (g (f x')))) ;)

(; dict ;)

def thm_1130 : B : hol.type -> A : hol.type -> x_27_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> y_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A y_4 (g_3 (f_2 x_27_1))) (hol.eq A y_4 (g_3 (f_2 x_27_1)))) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term A => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => y_4 : hol.term A => hol.REFL hol.bool (hol.eq A y_4 (g_3 (f_2 x_27_1))).

(; Theorem: |- ((= ((= (\lambda _11134. ((= y) (g _11134)) x)) ((= y) (g (f x'))))) ((= ((= y) (g x))) ((= y) (g (f x'))))) ;)

(; dict ;)

def thm_1131 : A : hol.type -> B : hol.type -> x_27_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> y_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11134_6 : hol.term B => hol.eq A y_5 (g_4 __11134_6)) x_3) (hol.eq A y_5 (g_4 (f_2 x_27_1)))) (hol.eq hol.bool (hol.eq A y_5 (g_4 x_3)) (hol.eq A y_5 (g_4 (f_2 x_27_1))))) :=
  A : hol.type => B : hol.type => x_27_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => g_4 : hol.term (hol.arr B A) => y_5 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11134_6 : hol.term B => hol.eq A y_5 (g_4 __11134_6)) x_3)) (hol.eq hol.bool (hol.eq A y_5 (g_4 x_3))) (hol.eq A y_5 (g_4 (f_2 x_27_1))) (hol.eq A y_5 (g_4 (f_2 x_27_1))) (thm_1129 A B x_3 g_4 y_5) (thm_1130 B A x_27_1 f_2 g_4 y_5).

(; Theorem: |- ((= ((= (\lambda _11134. ((= y) (g _11134)) x)) (\lambda _11134. ((= y) (g _11134)) (f x')))) ((= ((= y) (g x))) ((= y) (g (f x'))))) ;)

(; dict ;)

def thm_1132 : A : hol.type -> B : hol.type -> x_27_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> y_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11134_6 : hol.term B => hol.eq A y_5 (g_4 __11134_6)) x_3) ((__11134_6 : hol.term B => hol.eq A y_5 (g_4 __11134_6)) (f_2 x_27_1))) (hol.eq hol.bool (hol.eq A y_5 (g_4 x_3)) (hol.eq A y_5 (g_4 (f_2 x_27_1))))) :=
  A : hol.type => B : hol.type => x_27_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => g_4 : hol.term (hol.arr B A) => y_5 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool ((__11134_6 : hol.term B => hol.eq A y_5 (g_4 __11134_6)) x_3) ((__11134_6 : hol.term B => hol.eq A y_5 (g_4 __11134_6)) (f_2 x_27_1))) (hol.eq hol.bool ((__11134_6 : hol.term B => hol.eq A y_5 (g_4 __11134_6)) x_3) (hol.eq A y_5 (g_4 (f_2 x_27_1)))) (hol.eq hol.bool (hol.eq A y_5 (g_4 x_3)) (hol.eq A y_5 (g_4 (f_2 x_27_1)))) (thm_1127 A B x_27_1 f_2 x_3 g_4 y_5) (thm_1131 A B x_27_1 f_2 x_3 g_4 y_5).

(; Theorem: |- ((= \lambda _11134. ((= y) (g _11134))) \lambda _11134. ((= y) (g _11134))) ;)

(; dict ;)

def thm_1133 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> y_2 : hol.term A -> hol.proof (hol.eq (hol.arr B hol.bool) (__11134_3 : hol.term B => hol.eq A y_2 (g_1 __11134_3)) (__11134_3 : hol.term B => hol.eq A y_2 (g_1 __11134_3))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => y_2 : hol.term A => hol.REFL (hol.arr B hol.bool) (__11134_3 : hol.term B => hol.eq A y_2 (g_1 __11134_3)).

(; Theorem: |- ((= (\lambda _11134. ((= y) (g _11134)) x)) (\lambda _11134. ((= y) (g _11134)) (f x'))) ;)

(; dict ;)

def thm_1134 : A : hol.type -> B : hol.type -> x_27_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> y_5 : hol.term A -> hyp_1 : hol.proof (hol.eq B x_3 (f_2 x_27_1)) -> hol.proof (hol.eq hol.bool ((__11134_6 : hol.term B => hol.eq A y_5 (g_4 __11134_6)) x_3) ((__11134_6 : hol.term B => hol.eq A y_5 (g_4 __11134_6)) (f_2 x_27_1))) :=
  A : hol.type => B : hol.type => x_27_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => g_4 : hol.term (hol.arr B A) => y_5 : hol.term A => hyp_1 : hol.proof (hol.eq B x_3 (f_2 x_27_1)) => hol.APP_THM B hol.bool (__11134_6 : hol.term B => hol.eq A y_5 (g_4 __11134_6)) (__11134_6 : hol.term B => hol.eq A y_5 (g_4 __11134_6)) x_3 (f_2 x_27_1) (thm_1133 A B g_4 y_5) (thm_1114 A B x_27_1 f_2 x_3 hyp_1).

(; Theorem: |- ((= ((= y) (g x))) ((= y) (g (f x')))) ;)

(; dict ;)

def thm_1135 : B : hol.type -> A : hol.type -> x_27_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> y_5 : hol.term A -> hyp_1 : hol.proof (hol.eq B x_3 (f_2 x_27_1)) -> hol.proof (hol.eq hol.bool (hol.eq A y_5 (g_4 x_3)) (hol.eq A y_5 (g_4 (f_2 x_27_1)))) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => g_4 : hol.term (hol.arr B A) => y_5 : hol.term A => hyp_1 : hol.proof (hol.eq B x_3 (f_2 x_27_1)) => hol.EQ_MP (hol.eq hol.bool ((__11134_6 : hol.term B => hol.eq A y_5 (g_4 __11134_6)) x_3) ((__11134_6 : hol.term B => hol.eq A y_5 (g_4 __11134_6)) (f_2 x_27_1))) (hol.eq hol.bool (hol.eq A y_5 (g_4 x_3)) (hol.eq A y_5 (g_4 (f_2 x_27_1)))) (thm_1132 A B x_27_1 f_2 x_3 g_4 y_5) (thm_1134 A B x_27_1 f_2 x_3 g_4 y_5 hyp_1).

(; Theorem: |- ((= y) (g (f x'))) ;)

(; dict ;)

def thm_1136 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> x_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> y_5 : hol.term A -> hyp_1 : hol.proof (hol.eq A y_5 (g_4 x_1)) -> hyp_2 : hol.proof (hol.eq B x_1 (f_3 x_27_2)) -> hol.proof (hol.eq A y_5 (g_4 (f_3 x_27_2))) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => x_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => y_5 : hol.term A => hyp_1 : hol.proof (hol.eq A y_5 (g_4 x_1)) => hyp_2 : hol.proof (hol.eq B x_1 (f_3 x_27_2)) => hol.EQ_MP (hol.eq A y_5 (g_4 x_1)) (hol.eq A y_5 (g_4 (f_3 x_27_2))) (thm_1135 B A x_27_2 f_3 x_1 g_4 y_5 hyp_2) (thm_1107 B A x_1 g_4 y_5 hyp_1).

(; Theorem: |- ((= (\lambda _11138. ((= (g (f _11138))) _11138) y)) (\lambda _11138. ((= (g (f _11138))) _11138) (g (f x')))) ;)

(; dict ;)

def thm_1137 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> x_27_2 : hol.term A -> y_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.eq A y_3 (g_5 x_1)) -> hyp_2 : hol.proof (hol.eq B x_1 (f_4 x_27_2)) -> hol.proof (hol.eq hol.bool ((__11138_6 : hol.term A => hol.eq A (g_5 (f_4 __11138_6)) __11138_6) y_3) ((__11138_6 : hol.term A => hol.eq A (g_5 (f_4 __11138_6)) __11138_6) (g_5 (f_4 x_27_2)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => x_27_2 : hol.term A => y_3 : hol.term A => f_4 : hol.term (hol.arr A B) => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.eq A y_3 (g_5 x_1)) => hyp_2 : hol.proof (hol.eq B x_1 (f_4 x_27_2)) => hol.APP_THM A hol.bool (__11138_6 : hol.term A => hol.eq A (g_5 (f_4 __11138_6)) __11138_6) (__11138_6 : hol.term A => hol.eq A (g_5 (f_4 __11138_6)) __11138_6) y_3 (g_5 (f_4 x_27_2)) (thm_1124 B A f_4 g_5) (thm_1136 B A x_1 x_27_2 f_4 g_5 y_3 hyp_1 hyp_2).

(; Theorem: |- ((= ((= (g (f y))) y)) ((= (g (f (g (f x'))))) (g (f x')))) ;)

(; dict ;)

def thm_1138 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> x_27_2 : hol.term A -> y_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.eq A y_3 (g_5 x_1)) -> hyp_2 : hol.proof (hol.eq B x_1 (f_4 x_27_2)) -> hol.proof (hol.eq hol.bool (hol.eq A (g_5 (f_4 y_3)) y_3) (hol.eq A (g_5 (f_4 (g_5 (f_4 x_27_2)))) (g_5 (f_4 x_27_2)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => x_27_2 : hol.term A => y_3 : hol.term A => f_4 : hol.term (hol.arr A B) => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.eq A y_3 (g_5 x_1)) => hyp_2 : hol.proof (hol.eq B x_1 (f_4 x_27_2)) => hol.EQ_MP (hol.eq hol.bool ((__11138_6 : hol.term A => hol.eq A (g_5 (f_4 __11138_6)) __11138_6) y_3) ((__11138_6 : hol.term A => hol.eq A (g_5 (f_4 __11138_6)) __11138_6) (g_5 (f_4 x_27_2)))) (hol.eq hol.bool (hol.eq A (g_5 (f_4 y_3)) y_3) (hol.eq A (g_5 (f_4 (g_5 (f_4 x_27_2)))) (g_5 (f_4 x_27_2)))) (thm_1123 B A x_27_2 y_3 f_4 g_5) (thm_1137 B A x_1 x_27_2 y_3 f_4 g_5 hyp_1 hyp_2).

(; Theorem: |- ((= ((= (g (f (g (f x'))))) (g (f x')))) ((= (g (f y))) y)) ;)

(; dict ;)

def thm_1139 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> y_2 : hol.term A -> x_27_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.eq A y_2 (g_5 x_1)) -> hyp_2 : hol.proof (hol.eq B x_1 (f_4 x_27_3)) -> hol.proof (hol.eq hol.bool (hol.eq A (g_5 (f_4 (g_5 (f_4 x_27_3)))) (g_5 (f_4 x_27_3))) (hol.eq A (g_5 (f_4 y_2)) y_2)) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => y_2 : hol.term A => x_27_3 : hol.term A => f_4 : hol.term (hol.arr A B) => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.eq A y_2 (g_5 x_1)) => hyp_2 : hol.proof (hol.eq B x_1 (f_4 x_27_3)) => hol.SYM hol.bool (hol.eq A (g_5 (f_4 y_2)) y_2) (hol.eq A (g_5 (f_4 (g_5 (f_4 x_27_3)))) (g_5 (f_4 x_27_3))) (thm_1138 B A x_1 x_27_3 y_2 f_4 g_5 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Set.member (f x')) ((Set.image f) s))) ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g (f x'))) s)) ((= (f (g (f x')))) (f x')))) ((= (f (g (f x')))) (f x'))))) ((Data.Bool.==> ((Data.Bool.==> ((Set.member (f x')) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g (f x'))) s)) ((= (f (g (f x')))) (f x'))))) ((= (f (g (f x')))) (f x')))) ;)

(; dict ;)

def thm_1140 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> x_27_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hol.proof (hol.imp (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_27_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_27_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_27_3))) (f_4 x_27_3))) (hol.eq B (f_4 (g_1 (f_4 x_27_3))) (f_4 x_27_3)))) (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_27_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_27_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_27_3))) (f_4 x_27_3)))) (hol.eq B (f_4 (g_1 (f_4 x_27_3))) (f_4 x_27_3)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => x_27_3 : hol.term A => f_4 : hol.term (hol.arr A B) => (z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => x_3 : hol.term hol.bool => thm_779 z_1 y_2 x_3) (hol.eq B (f_4 (g_1 (f_4 x_27_3))) (f_4 x_27_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_27_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_27_3))) (f_4 x_27_3))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_27_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)).

(; Theorem: |- ((Data.Bool.==> ((Set.member x') s)) ((Set.member (f x')) ((Set.image f) s))) ;)

(; dict ;)

def thm_1141 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> x_27_3 : hol.term A -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_27_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_27_3 : hol.term A => (B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => thm_800 B A f_1 s_2 x_3) B A f_1 s_2 x_27_3.

(; Theorem: |- ((Set.member (f x')) ((Set.image f) s)) ;)

(; dict ;)

def thm_1142 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_27_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) => thm_1141 B A f_3 s_1 x_27_2 (thm_1115 A s_1 x_27_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g (f x'))) s)) ((= (f (g (f x')))) (f x')))) ((= (f (g (f x')))) (f x')))) ((Data.Bool./\ ((Set.member (f x')) ((Set.image f) s))) ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g (f x'))) s)) ((= (f (g (f x')))) (f x')))) ((= (f (g (f x')))) (f x'))))) ;)

(; dict ;)

def thm_1143 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_27_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_2))) (f_3 x_27_2))) (hol.eq B (f_3 (g_4 (f_3 x_27_2))) (f_3 x_27_2))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_27_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_2))) (f_3 x_27_2))) (hol.eq B (f_3 (g_4 (f_3 x_27_2))) (f_3 x_27_2))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_27_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_27_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_2))) (f_3 x_27_2))) (hol.eq B (f_3 (g_4 (f_3 x_27_2))) (f_3 x_27_2))) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g (f x'))) s)) ((= (f (g (f x')))) (f x')))) ((= (f (g (f x')))) (f x')))) ((Data.Bool./\ ((Set.member (f x')) ((Set.image f) s))) ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g (f x'))) s)) ((= (f (g (f x')))) (f x')))) ((= (f (g (f x')))) (f x'))))) ;)

(; dict ;)

def thm_1144 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_2))) (f_3 x_27_2))) (hol.eq B (f_3 (g_4 (f_3 x_27_2))) (f_3 x_27_2))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_27_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_2))) (f_3 x_27_2))) (hol.eq B (f_3 (g_4 (f_3 x_27_2))) (f_3 x_27_2))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) => hol.PROVE_HYP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_27_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.eq hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_2))) (f_3 x_27_2))) (hol.eq B (f_3 (g_4 (f_3 x_27_2))) (f_3 x_27_2))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_27_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_2))) (f_3 x_27_2))) (hol.eq B (f_3 (g_4 (f_3 x_27_2))) (f_3 x_27_2))))) (thm_1142 A B s_1 x_27_2 f_3 hyp_1) (hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_27_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) => thm_1143 B A s_1 x_27_2 f_3 g_4 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((Set.member (g (f x'))) s)) ((= (f (g (f x')))) (f x'))) ;)

(; dict ;)

def thm_1145 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_2))) (f_3 x_27_2))) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_2))) (f_3 x_27_2))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_2))) (f_3 x_27_2))) => hyp_1.

(; Theorem: |- ((= (f (g (f x')))) (f x')) ;)

(; dict ;)

def thm_1146 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_2 : hol.term A -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_27_2)) s_1) (hol.eq B (f_4 (g_3 (f_4 x_27_2))) (f_4 x_27_2))) -> hol.proof (hol.eq B (f_4 (g_3 (f_4 x_27_2))) (f_4 x_27_2)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_2 : hol.term A => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_27_2)) s_1) (hol.eq B (f_4 (g_3 (f_4 x_27_2))) (f_4 x_27_2))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_27_2)) s_1) (hol.eq B (f_4 (g_3 (f_4 x_27_2))) (f_4 x_27_2)) hyp_1.

(; Theorem: |- ((= (f (g (f x')))) (f x')) ;)

(; dict ;)

def thm_1147 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_2 : hol.term A -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_27_2)) s_1) (hol.eq B (f_4 (g_3 (f_4 x_27_2))) (f_4 x_27_2))) -> hol.proof (hol.eq B (f_4 (g_3 (f_4 x_27_2))) (f_4 x_27_2)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_2 : hol.term A => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_27_2)) s_1) (hol.eq B (f_4 (g_3 (f_4 x_27_2))) (f_4 x_27_2))) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_27_2)) s_1) (hol.eq B (f_4 (g_3 (f_4 x_27_2))) (f_4 x_27_2))) (hol.eq B (f_4 (g_3 (f_4 x_27_2))) (f_4 x_27_2)) (thm_1145 B A s_1 x_27_2 f_4 g_3 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 (f_4 x_27_2)) s_1) (hol.eq B (f_4 (g_3 (f_4 x_27_2))) (f_4 x_27_2))) => thm_1146 A B s_1 x_27_2 g_3 f_4 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g (f x'))) s)) ((= (f (g (f x')))) (f x')))) ((= (f (g (f x')))) (f x'))) ;)

(; dict ;)

def thm_1148 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hol.proof (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_2))) (f_3 x_27_2))) (hol.eq B (f_3 (g_4 (f_3 x_27_2))) (f_3 x_27_2))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 (f_3 x_27_2)) s_1) (hol.eq B (f_3 (g_4 (f_3 x_27_2))) (f_3 x_27_2))) => thm_1147 A B s_1 x_27_2 g_4 f_3 hyp_1.

(; Theorem: |- ((Data.Bool./\ ((Set.member (f x')) ((Set.image f) s))) ((Data.Bool.==> ((Data.Bool./\ ((Set.member (g (f x'))) s)) ((= (f (g (f x')))) (f x')))) ((= (f (g (f x')))) (f x')))) ;)

(; dict ;)

def thm_1149 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> x_27_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 s_2) -> hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_27_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_27_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_27_3))) (f_4 x_27_3))) (hol.eq B (f_4 (g_1 (f_4 x_27_3))) (f_4 x_27_3)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => x_27_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 s_2) => hol.EQ_MP (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_27_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_27_3))) (f_4 x_27_3))) (hol.eq B (f_4 (g_1 (f_4 x_27_3))) (f_4 x_27_3))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_27_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_27_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_27_3))) (f_4 x_27_3))) (hol.eq B (f_4 (g_1 (f_4 x_27_3))) (f_4 x_27_3)))) (thm_1144 B A s_2 x_27_3 f_4 g_1 hyp_1) (thm_1148 B A s_2 x_27_3 f_4 g_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Set.member (f x')) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g (f x'))) s)) ((= (f (g (f x')))) (f x'))))) ((= (f (g (f x')))) (f x'))) ;)

(; dict ;)

def thm_1150 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> x_27_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 s_2) -> hol.proof (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_27_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_27_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_27_3))) (f_4 x_27_3)))) (hol.eq B (f_4 (g_1 (f_4 x_27_3))) (f_4 x_27_3))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => x_27_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 s_2) => thm_1140 A B g_1 s_2 x_27_3 f_4 (thm_1149 A B g_1 s_2 x_27_3 f_4 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Set.member (f x')) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g (f x'))) s)) ((= (f (g (f x')))) (f x')))) ;)

(; dict ;)

def thm_1151 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> x_27_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_2) (hol.eq B (f_4 (g_1 y_5)) y_5)))) -> hol.proof (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_27_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 (f_4 x_27_3)) s_2) (hol.eq B (f_4 (g_1 (f_4 x_27_3))) (f_4 x_27_3)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => x_27_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_5) s_2) (hol.eq B (f_4 (g_1 y_5)) y_5)))) => thm_510 A B g_1 s_2 f_4 hyp_1 (f_4 x_27_3).

(; Theorem: |- ((= (f (g (f x')))) (f x')) ;)

(; dict ;)

def thm_1152 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_2 : hol.term A -> g_3 : hol.term (hol.arr B A) -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_4 (g_3 y_5)) y_5)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) -> hol.proof (hol.eq B (f_4 (g_3 (f_4 x_27_2))) (f_4 x_27_2)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_2 : hol.term A => g_3 : hol.term (hol.arr B A) => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_4 (g_3 y_5)) y_5)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) => thm_1150 A B g_3 s_1 x_27_2 f_4 hyp_2 (thm_1151 A B g_3 s_1 x_27_2 f_4 hyp_1).

(; Theorem: |- ((= (g (f (g (f x'))))) (g (f x'))) ;)

(; dict ;)

def thm_1153 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_1) (hol.eq B (f_3 (g_4 y_5)) y_5)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) -> hol.proof (hol.eq A (g_4 (f_3 (g_4 (f_3 x_27_2)))) (g_4 (f_3 x_27_2))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_1) (hol.eq B (f_3 (g_4 y_5)) y_5)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) => hol.APP_THM B A g_4 g_4 (f_3 (g_4 (f_3 x_27_2))) (f_3 x_27_2) (thm_1038 A B g_4) (thm_1152 A B s_1 x_27_2 g_4 f_3 hyp_1 hyp_2).

(; Theorem: |- ((= (g (f (g (f x'))))) (g (f x'))) ;)

(; dict ;)

def thm_1154 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_1) (hol.eq B (f_3 (g_4 y_5)) y_5)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) -> hol.proof (hol.eq A (g_4 (f_3 (g_4 (f_3 x_27_2)))) (g_4 (f_3 x_27_2))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_1) (hol.eq B (f_3 (g_4 y_5)) y_5)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) (hol.eq A (g_4 (f_3 (g_4 (f_3 x_27_2)))) (g_4 (f_3 x_27_2))) (thm_1115 A s_1 x_27_2 hyp_2) (hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) => thm_1153 B A s_1 x_27_2 f_3 g_4 hyp_1 hyp_3).

(; Theorem: |- ((= (g (f (g (f x'))))) (g (f x'))) ;)

(; dict ;)

def thm_1155 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_1) (hol.eq B (f_3 (g_4 y_5)) y_5)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) -> hol.proof (hol.eq A (g_4 (f_3 (g_4 (f_3 x_27_2)))) (g_4 (f_3 x_27_2))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_1) (hol.eq B (f_3 (g_4 y_5)) y_5)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1) => hol.PROVE_HYP (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_1) (hol.eq B (f_3 (g_4 y_5)) y_5)))) (hol.eq A (g_4 (f_3 (g_4 (f_3 x_27_2)))) (g_4 (f_3 x_27_2))) (thm_510 A B g_4 s_1 f_3 hyp_1) (hyp_3 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_1) (hol.eq B (f_3 (g_4 y_5)) y_5)))) => thm_1154 B A s_1 x_27_2 f_3 g_4 hyp_3 hyp_2).

(; Theorem: |- ((= (g (f y))) y) ;)

(; dict ;)

def thm_1156 : B : hol.type -> A : hol.type -> x_27_1 : hol.term A -> x_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> y_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> g_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) -> hyp_2 : hol.proof (hol.eq A y_4 (g_6 x_2)) -> hyp_3 : hol.proof (hol.eq B x_2 (f_5 x_27_1)) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_1 s_3) -> hol.proof (hol.eq A (g_6 (f_5 y_4)) y_4) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term A => x_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => y_4 : hol.term A => f_5 : hol.term (hol.arr A B) => g_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) => hyp_2 : hol.proof (hol.eq A y_4 (g_6 x_2)) => hyp_3 : hol.proof (hol.eq B x_2 (f_5 x_27_1)) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_1 s_3) => hol.EQ_MP (hol.eq A (g_6 (f_5 (g_6 (f_5 x_27_1)))) (g_6 (f_5 x_27_1))) (hol.eq A (g_6 (f_5 y_4)) y_4) (thm_1139 B A x_2 y_4 x_27_1 f_5 g_6 hyp_2 hyp_3) (thm_1155 B A s_3 x_27_1 f_5 g_6 hyp_1 hyp_4).

(; Theorem: |- ((= (g (f y))) y) ;)

(; dict ;)

def thm_1157 : B : hol.type -> A : hol.type -> x_27_1 : hol.term A -> x_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> y_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> g_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) -> hyp_2 : hol.proof (hol.eq A y_4 (g_6 x_2)) -> hyp_3 : hol.proof (hol.eq B x_2 (f_5 x_27_1)) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_1 s_3) -> hol.proof (hol.eq A (g_6 (f_5 y_4)) y_4) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term A => x_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => y_4 : hol.term A => f_5 : hol.term (hol.arr A B) => g_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) => hyp_2 : hol.proof (hol.eq A y_4 (g_6 x_2)) => hyp_3 : hol.proof (hol.eq B x_2 (f_5 x_27_1)) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_1 s_3) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_1 s_3) (hol.eq A (g_6 (f_5 y_4)) y_4) (thm_1115 A s_3 x_27_1 hyp_4) (hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_1 s_3) => thm_1156 B A x_27_1 x_2 s_3 y_4 f_5 g_6 hyp_1 hyp_2 hyp_3 hyp_5).

(; Theorem: |- ((= (g (f y))) y) ;)

(; dict ;)

def thm_1158 : B : hol.type -> A : hol.type -> x_27_1 : hol.term A -> x_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> y_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> g_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) -> hyp_2 : hol.proof (hol.eq A y_4 (g_6 x_2)) -> hyp_3 : hol.proof (hol.eq B x_2 (f_5 x_27_1)) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_1 s_3) -> hol.proof (hol.eq A (g_6 (f_5 y_4)) y_4) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term A => x_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => y_4 : hol.term A => f_5 : hol.term (hol.arr A B) => g_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) => hyp_2 : hol.proof (hol.eq A y_4 (g_6 x_2)) => hyp_3 : hol.proof (hol.eq B x_2 (f_5 x_27_1)) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_1 s_3) => hol.PROVE_HYP (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) (hol.eq A (g_6 (f_5 y_4)) y_4) (thm_510 A B g_6 s_3 f_5 hyp_1) (hyp_5 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) => thm_1157 B A x_27_1 x_2 s_3 y_4 f_5 g_6 hyp_5 hyp_2 hyp_3 hyp_4).

(; Theorem: |- ((= (g (f y))) y) ;)

(; dict ;)

def thm_1159 : B : hol.type -> A : hol.type -> x_27_1 : hol.term A -> x_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> y_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> g_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) -> hyp_2 : hol.proof (hol.eq A y_4 (g_6 x_2)) -> hyp_3 : hol.proof (hol.eq B x_2 (f_5 x_27_1)) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_1 s_3) -> hol.proof (hol.eq A (g_6 (f_5 y_4)) y_4) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term A => x_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => y_4 : hol.term A => f_5 : hol.term (hol.arr A B) => g_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) => hyp_2 : hol.proof (hol.eq A y_4 (g_6 x_2)) => hyp_3 : hol.proof (hol.eq B x_2 (f_5 x_27_1)) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_1 s_3) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_1 s_3) (hol.eq A (g_6 (f_5 y_4)) y_4) (thm_1115 A s_3 x_27_1 hyp_4) (hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_1 s_3) => hol.EQ_MP (hol.eq A (g_6 (f_5 y_4)) y_4) (hol.eq A (g_6 (f_5 y_4)) y_4) (thm_1098 B A y_4 f_5 g_6) (thm_1158 B A x_27_1 x_2 s_3 y_4 f_5 g_6 hyp_1 hyp_2 hyp_3 hyp_5)).

(; Theorem: |- ((= (g (f y))) y) ;)

(; dict ;)

def thm_1160 : B : hol.type -> A : hol.type -> x_27_1 : hol.term A -> x_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> y_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> g_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) -> hyp_2 : hol.proof (hol.eq A y_4 (g_6 x_2)) -> hyp_3 : hol.proof (hol.eq B x_2 (f_5 x_27_1)) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_1 s_3) -> hol.proof (hol.eq A (g_6 (f_5 y_4)) y_4) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term A => x_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => y_4 : hol.term A => f_5 : hol.term (hol.arr A B) => g_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) => hyp_2 : hol.proof (hol.eq A y_4 (g_6 x_2)) => hyp_3 : hol.proof (hol.eq B x_2 (f_5 x_27_1)) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_1 s_3) => hol.PROVE_HYP (hol.eq B x_2 (f_5 x_27_1)) (hol.eq A (g_6 (f_5 y_4)) y_4) (thm_1114 A B x_27_1 f_5 x_2 hyp_3) (hyp_5 : hol.proof (hol.eq B x_2 (f_5 x_27_1)) => thm_1159 B A x_27_1 x_2 s_3 y_4 f_5 g_6 hyp_1 hyp_2 hyp_5 hyp_4).

(; Theorem: |- ((= (g (f y))) y) ;)

(; dict ;)

def thm_1161 : B : hol.type -> A : hol.type -> x_27_1 : hol.term A -> x_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> y_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> g_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) -> hyp_2 : hol.proof (hol.eq A y_4 (g_6 x_2)) -> hyp_3 : hol.proof (hol.eq B x_2 (f_5 x_27_1)) -> hyp_4 : hol.proof (hol.and (hol.eq B x_2 (f_5 x_27_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_1 s_3)) -> hol.proof (hol.eq A (g_6 (f_5 y_4)) y_4) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term A => x_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => y_4 : hol.term A => f_5 : hol.term (hol.arr A B) => g_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) => hyp_2 : hol.proof (hol.eq A y_4 (g_6 x_2)) => hyp_3 : hol.proof (hol.eq B x_2 (f_5 x_27_1)) => hyp_4 : hol.proof (hol.and (hol.eq B x_2 (f_5 x_27_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_1 s_3)) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_1 s_3) (hol.eq A (g_6 (f_5 y_4)) y_4) (thm_1113 B A f_5 x_2 s_3 x_27_1 hyp_4) (hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_1 s_3) => thm_1160 B A x_27_1 x_2 s_3 y_4 f_5 g_6 hyp_1 hyp_2 hyp_3 hyp_5).

(; Theorem: |- ((= (g (f y))) y) ;)

(; dict ;)

def thm_1162 : B : hol.type -> A : hol.type -> x_27_1 : hol.term A -> x_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> y_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> g_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) -> hyp_2 : hol.proof (hol.eq A y_4 (g_6 x_2)) -> hyp_3 : hol.proof (hol.and (hol.eq B x_2 (f_5 x_27_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_1 s_3)) -> hol.proof (hol.eq A (g_6 (f_5 y_4)) y_4) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term A => x_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => y_4 : hol.term A => f_5 : hol.term (hol.arr A B) => g_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) => hyp_2 : hol.proof (hol.eq A y_4 (g_6 x_2)) => hyp_3 : hol.proof (hol.and (hol.eq B x_2 (f_5 x_27_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_1 s_3)) => hol.PROVE_HYP (hol.eq B x_2 (f_5 x_27_1)) (hol.eq A (g_6 (f_5 y_4)) y_4) (thm_1111 A B s_3 x_27_1 f_5 x_2 hyp_3) (hyp_4 : hol.proof (hol.eq B x_2 (f_5 x_27_1)) => thm_1161 B A x_27_1 x_2 s_3 y_4 f_5 g_6 hyp_1 hyp_2 hyp_4 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= x) (f x'))) ((Set.member x') s))) ((= (g (f y))) y)) ;)

(; dict ;)

def thm_1163 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> x_27_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> x_6 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_7) s_3) (hol.eq B (f_5 (g_2 y_7)) y_7)))) -> hyp_2 : hol.proof (hol.eq A y_1 (g_2 x_6)) -> hol.proof (hol.imp (hol.and (hol.eq B x_6 (f_5 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_3)) (hol.eq A (g_2 (f_5 y_1)) y_1)) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => x_27_4 : hol.term A => f_5 : hol.term (hol.arr A B) => x_6 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_7) s_3) (hol.eq B (f_5 (g_2 y_7)) y_7)))) => hyp_2 : hol.proof (hol.eq A y_1 (g_2 x_6)) => hyp_3 : hol.proof (hol.and (hol.eq B x_6 (f_5 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_3)) => thm_1162 B A x_27_4 x_6 s_3 y_1 f_5 g_2 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((= (\lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)) x')) ((Data.Bool./\ ((= x) (f x'))) ((Set.member x') s))) ;)

(; dict ;)

def thm_1164 : B : hol.type -> A : hol.type -> x_27_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hol.proof (hol.eq hol.bool ((x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)) x_27_1) (hol.and (hol.eq B x_4 (f_3 x_27_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_1 s_2))) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => hol.BETA_CONV A hol.bool (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)) x_27_1.

(; Theorem: |- (\lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)) x') ;)

(; dict ;)

def thm_1165 : B : hol.type -> A : hol.type -> x_27_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)) x_27_1) -> hol.proof ((x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)) x_27_1) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)) x_27_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= x) (f x'))) ((Set.member x') s)) ;)

(; dict ;)

def thm_1166 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) x_27_2) -> hol.proof (hol.and (hol.eq B x_4 (f_3 x_27_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) x_27_2) => hol.EQ_MP ((x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) x_27_2) (hol.and (hol.eq B x_4 (f_3 x_27_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 s_1)) (thm_1164 B A x_27_2 s_1 f_3 x_4) (thm_1165 B A x_27_2 s_1 f_3 x_4 hyp_1).

(; Theorem: |- ((= (g (f y))) y) ;)

(; dict ;)

def thm_1167 : B : hol.type -> A : hol.type -> x_27_1 : hol.term A -> x_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> y_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> g_6 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) -> hyp_2 : hol.proof ((x_7 : hol.term A => hol.and (hol.eq B x_2 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) x_27_1) -> hyp_3 : hol.proof (hol.eq A y_4 (g_6 x_2)) -> hol.proof (hol.eq A (g_6 (f_5 y_4)) y_4) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term A => x_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => y_4 : hol.term A => f_5 : hol.term (hol.arr A B) => g_6 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_6 y_7) s_3) (hol.eq B (f_5 (g_6 y_7)) y_7)))) => hyp_2 : hol.proof ((x_7 : hol.term A => hol.and (hol.eq B x_2 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) x_27_1) => hyp_3 : hol.proof (hol.eq A y_4 (g_6 x_2)) => thm_1163 A B y_4 g_6 s_3 x_27_1 f_5 x_2 hyp_1 hyp_3 (thm_1166 A B s_3 x_27_1 f_5 x_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)) x')) ((= (g (f y))) y)) ;)

(; dict ;)

def thm_1168 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> x_27_3 : hol.term A -> s_4 : hol.term (Set_2Eset A) -> f_5 : hol.term (hol.arr A B) -> x_6 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_7) s_4) (hol.eq B (f_5 (g_2 y_7)) y_7)))) -> hyp_2 : hol.proof (hol.eq A y_1 (g_2 x_6)) -> hol.proof (hol.imp ((x_7 : hol.term A => hol.and (hol.eq B x_6 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) x_27_3) (hol.eq A (g_2 (f_5 y_1)) y_1)) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => g_2 : hol.term (hol.arr B A) => x_27_3 : hol.term A => s_4 : hol.term (Set_2Eset A) => f_5 : hol.term (hol.arr A B) => x_6 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_7 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_7 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_5 s_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_7) s_4) (hol.eq B (f_5 (g_2 y_7)) y_7)))) => hyp_2 : hol.proof (hol.eq A y_1 (g_2 x_6)) => hyp_3 : hol.proof ((x_7 : hol.term A => hol.and (hol.eq B x_6 (f_5 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) x_27_3) => thm_1167 B A x_27_3 x_6 s_4 y_1 f_5 g_2 hyp_1 hyp_3 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda x'. ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)) x')) ((= (g (f y))) y))) ;)

(; dict ;)

def thm_1169 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_3) (hol.eq B (f_4 (g_2 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.eq A y_1 (g_2 x_5)) -> hol.proof (hol.forall A (x_27_6 : hol.term A => hol.imp ((x_7 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) x_27_6) (hol.eq A (g_2 (f_4 y_1)) y_1))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_3) (hol.eq B (f_4 (g_2 y_6)) y_6)))) => hyp_2 : hol.proof (hol.eq A y_1 (g_2 x_5)) => x_27_6 : hol.term A => thm_1168 B A y_1 g_2 x_27_6 s_3 f_4 x_5 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= (g (f y))) y)) ;)

(; dict ;)

def thm_1170 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> g_2 : hol.term (hol.arr B A) -> s_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_3) (hol.eq B (f_4 (g_2 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.eq A y_1 (g_2 x_5)) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (hol.eq A (g_2 (f_4 y_1)) y_1)) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => g_2 : hol.term (hol.arr B A) => s_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_2 y_6) s_3) (hol.eq B (f_4 (g_2 y_6)) y_6)))) => hyp_2 : hol.proof (hol.eq A y_1 (g_2 x_5)) => thm_1108 B A y_1 g_2 s_3 f_4 x_5 (thm_1169 B A y_1 g_2 s_3 f_4 x_5 hyp_1 hyp_2).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_1171 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) => hyp_1.

(; Theorem: |- ((= (g (f y))) y) ;)

(; dict ;)

def thm_1172 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_2) (hol.eq B (f_4 (g_5 y_6)) y_6)))) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_1 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) -> hyp_3 : hol.proof (hol.eq A y_3 (g_5 x_1)) -> hol.proof (hol.eq A (g_5 (f_4 y_3)) y_3) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term A => f_4 : hol.term (hol.arr A B) => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_2) (hol.eq B (f_4 (g_5 y_6)) y_6)))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_1 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) => hyp_3 : hol.proof (hol.eq A y_3 (g_5 x_1)) => thm_1170 B A y_3 g_5 s_2 f_4 x_1 hyp_1 hyp_3 (thm_1171 B A s_2 f_4 x_1 hyp_2).

(; Theorem: |- ((= (g (f y))) y) ;)

(; dict ;)

def thm_1173 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_2) (hol.eq B (f_4 (g_5 y_6)) y_6)))) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_1 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) -> hyp_3 : hol.proof (hol.eq A y_3 (g_5 x_1)) -> hol.proof (hol.eq A (g_5 (f_4 y_3)) y_3) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term A => f_4 : hol.term (hol.arr A B) => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_2) (hol.eq B (f_4 (g_5 y_6)) y_6)))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_1 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) => hyp_3 : hol.proof (hol.eq A y_3 (g_5 x_1)) => hol.PROVE_HYP (hol.eq A y_3 (g_5 x_1)) (hol.eq A (g_5 (f_4 y_3)) y_3) (thm_1107 B A x_1 g_5 y_3 hyp_3) (hyp_4 : hol.proof (hol.eq A y_3 (g_5 x_1)) => thm_1172 B A x_1 s_2 y_3 f_4 g_5 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((= (g (f y))) y) ;)

(; dict ;)

def thm_1174 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_2) (hol.eq B (f_4 (g_5 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.eq A y_3 (g_5 x_1)) -> hyp_3 : hol.proof (hol.and (hol.eq A y_3 (g_5 x_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_1 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)))) -> hol.proof (hol.eq A (g_5 (f_4 y_3)) y_3) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term A => f_4 : hol.term (hol.arr A B) => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_2) (hol.eq B (f_4 (g_5 y_6)) y_6)))) => hyp_2 : hol.proof (hol.eq A y_3 (g_5 x_1)) => hyp_3 : hol.proof (hol.and (hol.eq A y_3 (g_5 x_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_1 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)))) => hol.PROVE_HYP (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_1 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) (hol.eq A (g_5 (f_4 y_3)) y_3) (thm_1106 B A g_5 y_3 s_2 f_4 x_1 hyp_3) (hyp_4 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_1 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) => thm_1173 B A x_1 s_2 y_3 f_4 g_5 hyp_1 hyp_4 hyp_2).

(; Theorem: |- ((= (g (f y))) y) ;)

(; dict ;)

def thm_1175 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_2) (hol.eq B (f_4 (g_5 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.and (hol.eq A y_3 (g_5 x_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_1 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)))) -> hol.proof (hol.eq A (g_5 (f_4 y_3)) y_3) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term A => f_4 : hol.term (hol.arr A B) => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_2) (hol.eq B (f_4 (g_5 y_6)) y_6)))) => hyp_2 : hol.proof (hol.and (hol.eq A y_3 (g_5 x_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_1 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)))) => hol.PROVE_HYP (hol.eq A y_3 (g_5 x_1)) (hol.eq A (g_5 (f_4 y_3)) y_3) (thm_1104 B A s_2 f_4 x_1 g_5 y_3 hyp_2) (hyp_3 : hol.proof (hol.eq A y_3 (g_5 x_1)) => thm_1174 B A x_1 s_2 y_3 f_4 g_5 hyp_1 hyp_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= y) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))) ((= (g (f y))) y)) ;)

(; dict ;)

def thm_1176 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> y_5 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_1) (hol.eq B (f_2 (g_4 y_6)) y_6)))) -> hol.proof (hol.imp (hol.and (hol.eq A y_5 (g_4 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) (hol.eq A (g_4 (f_2 y_5)) y_5)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => g_4 : hol.term (hol.arr B A) => y_5 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_1) (hol.eq B (f_2 (g_4 y_6)) y_6)))) => hyp_2 : hol.proof (hol.and (hol.eq A y_5 (g_4 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) => thm_1175 B A x_3 s_1 y_5 f_2 g_4 hyp_1 hyp_2.

(; Theorem: |- ((= (\lambda x. ((Data.Bool./\ ((= y) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) x)) ((Data.Bool./\ ((= y) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_1177 : A : hol.type -> B : hol.type -> x_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> y_5 : hol.term A -> hol.proof (hol.eq hol.bool ((x_6 : hol.term B => hol.and (hol.eq A y_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))) x_1) (hol.and (hol.eq A y_5 (g_4 x_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_1 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))))) :=
  A : hol.type => B : hol.type => x_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => y_5 : hol.term A => hol.BETA_CONV B hol.bool (x_6 : hol.term B => hol.and (hol.eq A y_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))) x_1.

(; Theorem: |- (\lambda x. ((Data.Bool./\ ((= y) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) x) ;)

(; dict ;)

def thm_1178 : A : hol.type -> B : hol.type -> x_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> y_5 : hol.term A -> hyp_1 : hol.proof ((x_6 : hol.term B => hol.and (hol.eq A y_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))) x_1) -> hol.proof ((x_6 : hol.term B => hol.and (hol.eq A y_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))) x_1) :=
  A : hol.type => B : hol.type => x_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => y_5 : hol.term A => hyp_1 : hol.proof ((x_6 : hol.term B => hol.and (hol.eq A y_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))) x_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= y) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_1179 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> g_4 : hol.term (hol.arr B A) -> y_5 : hol.term A -> hyp_1 : hol.proof ((x_6 : hol.term B => hol.and (hol.eq A y_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_2 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))) x_3) -> hol.proof (hol.and (hol.eq A y_5 (g_4 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => g_4 : hol.term (hol.arr B A) => y_5 : hol.term A => hyp_1 : hol.proof ((x_6 : hol.term B => hol.and (hol.eq A y_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_2 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))) x_3) => hol.EQ_MP ((x_6 : hol.term B => hol.and (hol.eq A y_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_2 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))) x_3) (hol.and (hol.eq A y_5 (g_4 x_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)))) (thm_1177 A B x_3 s_1 f_2 g_4 y_5) (thm_1178 A B x_3 s_1 f_2 g_4 y_5 hyp_1).

(; Theorem: |- ((= (g (f y))) y) ;)

(; dict ;)

def thm_1180 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_2) (hol.eq B (f_4 (g_5 y_6)) y_6)))) -> hyp_2 : hol.proof ((x_6 : hol.term B => hol.and (hol.eq A y_3 (g_5 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))) x_1) -> hol.proof (hol.eq A (g_5 (f_4 y_3)) y_3) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term A => f_4 : hol.term (hol.arr A B) => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_2) (hol.eq B (f_4 (g_5 y_6)) y_6)))) => hyp_2 : hol.proof ((x_6 : hol.term B => hol.and (hol.eq A y_3 (g_5 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_4 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))) x_1) => thm_1176 B A s_2 f_4 x_1 g_5 y_3 hyp_1 (thm_1179 B A s_2 f_4 x_1 g_5 y_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= y) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) x)) ((= (g (f y))) y)) ;)

(; dict ;)

def thm_1181 : A : hol.type -> B : hol.type -> x_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> y_5 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_2) (hol.eq B (f_3 (g_4 y_6)) y_6)))) -> hol.proof (hol.imp ((x_6 : hol.term B => hol.and (hol.eq A y_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))) x_1) (hol.eq A (g_4 (f_3 y_5)) y_5)) :=
  A : hol.type => B : hol.type => x_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => y_5 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_2) (hol.eq B (f_3 (g_4 y_6)) y_6)))) => hyp_2 : hol.proof ((x_6 : hol.term B => hol.and (hol.eq A y_5 (g_4 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)))) x_1) => thm_1180 B A x_1 s_2 y_5 f_3 g_4 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= y) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) x)) ((= (g (f y))) y))) ;)

(; dict ;)

def thm_1182 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> y_4 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_2 (g_3 y_5)) y_5)))) -> hol.proof (hol.forall B (x_5 : hol.term B => hol.imp ((x_6 : hol.term B => hol.and (hol.eq A y_4 (g_3 x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_2 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)))) x_5) (hol.eq A (g_3 (f_2 y_4)) y_4))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => y_4 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_2 (g_3 y_5)) y_5)))) => x_5 : hol.term B => thm_1181 A B x_5 s_1 f_2 g_3 y_4 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))))) ((= (g (f y))) y)) ;)

(; dict ;)

def thm_1183 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> y_4 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_2 (g_3 y_5)) y_5)))) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A y_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) (hol.eq A (g_3 (f_2 y_4)) y_4)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => y_4 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_2 (g_3 y_5)) y_5)))) => thm_1101 A B s_1 f_2 g_3 y_4 (thm_1182 A B s_1 f_2 g_3 y_4 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (g x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_1184 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> y_4 : hol.term A -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A y_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A y_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => y_4 : hol.term A => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A y_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) => hyp_1.

(; Theorem: |- ((= (g (f y))) y) ;)

(; dict ;)

def thm_1185 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_1) (hol.eq B (f_3 (g_4 y_5)) y_5)))) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A y_2 (g_4 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) -> hol.proof (hol.eq A (g_4 (f_3 y_2)) y_2) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_1) (hol.eq B (f_3 (g_4 y_5)) y_5)))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A y_2 (g_4 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) => thm_1183 A B s_1 f_3 g_4 y_2 hyp_1 (thm_1184 A B s_1 f_3 g_4 y_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (g (f y))) y)) ;)

(; dict ;)

def thm_1186 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> y_4 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_2 (g_3 y_5)) y_5)))) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq A (g_3 (f_2 y_4)) y_4)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => y_4 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_2 (g_3 y_5)) y_5)))) => hol.EQ_MP (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A y_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) (hol.eq A (g_3 (f_2 y_4)) y_4)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq A (g_3 (f_2 y_4)) y_4)) (thm_1100 A B s_1 f_2 g_3 y_4) (hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (x_5 : hol.term B => hol.and (hol.eq A y_4 (g_3 x_5)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))))) => thm_1185 B A s_1 y_4 f_2 g_3 hyp_1 hyp_2).

(; Theorem: |- ((= (g (f y))) y) ;)

(; dict ;)

def thm_1187 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_1) (hol.eq B (f_3 (g_4 y_5)) y_5)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1))) -> hol.proof (hol.eq A (g_4 (f_3 y_2)) y_2) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_1) (hol.eq B (f_3 (g_4 y_5)) y_5)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1))) => thm_1186 B A s_1 f_3 g_4 y_2 hyp_1 (thm_972 B A s_1 f_3 g_4 y_2 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((= (g (f x))) (g (f y)))) ((= (g (f y))) y)) ;)

(; dict ;)

def thm_1188 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_1) (hol.eq B (f_4 (g_5 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.eq B (f_4 x_3) (f_4 y_2)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1))) -> hol.proof (hol.and (hol.eq A (g_5 (f_4 x_3)) (g_5 (f_4 y_2))) (hol.eq A (g_5 (f_4 y_2)) y_2)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_1) (hol.eq B (f_4 (g_5 y_6)) y_6)))) => hyp_2 : hol.proof (hol.eq B (f_4 x_3) (f_4 y_2)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1))) => hol.EQ_MP (hol.eq A (g_5 (f_4 y_2)) y_2) (hol.and (hol.eq A (g_5 (f_4 x_3)) (g_5 (f_4 y_2))) (hol.eq A (g_5 (f_4 y_2)) y_2)) (thm_1090 B A x_3 y_2 f_4 g_5 hyp_2) (thm_1187 B A s_1 y_2 f_4 g_5 hyp_1 hyp_3).

(; Theorem: |- (\lambda y'. ((Data.Bool./\ ((= (g (f x))) y')) ((= y') y)) (g (f y))) ;)

(; dict ;)

def thm_1189 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_1) (hol.eq B (f_4 (g_5 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.eq B (f_4 x_3) (f_4 y_2)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1))) -> hol.proof ((y_27_6 : hol.term A => hol.and (hol.eq A (g_5 (f_4 x_3)) y_27_6) (hol.eq A y_27_6 y_2)) (g_5 (f_4 y_2))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_1) (hol.eq B (f_4 (g_5 y_6)) y_6)))) => hyp_2 : hol.proof (hol.eq B (f_4 x_3) (f_4 y_2)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1))) => hol.EQ_MP (hol.and (hol.eq A (g_5 (f_4 x_3)) (g_5 (f_4 y_2))) (hol.eq A (g_5 (f_4 y_2)) y_2)) ((y_27_6 : hol.term A => hol.and (hol.eq A (g_5 (f_4 x_3)) y_27_6) (hol.eq A y_27_6 y_2)) (g_5 (f_4 y_2))) (thm_1080 B A y_2 x_3 f_4 g_5) (thm_1188 B A s_1 y_2 x_3 f_4 g_5 hyp_1 hyp_2 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda y'. ((Data.Bool./\ ((= (g (f x))) y')) ((= y') y))) ;)

(; dict ;)

def thm_1190 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> hyp_1 : hol.proof ((y_27_5 : hol.term A => hol.and (hol.eq A (g_4 (f_3 x_2)) y_27_5) (hol.eq A y_27_5 y_1)) (g_4 (f_3 y_1))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_27_5 : hol.term A => hol.and (hol.eq A (g_4 (f_3 x_2)) y_27_5) (hol.eq A y_27_5 y_1))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => hyp_1 : hol.proof ((y_27_5 : hol.term A => hol.and (hol.eq A (g_4 (f_3 x_2)) y_27_5) (hol.eq A y_27_5 y_1)) (g_4 (f_3 y_1))) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_334 A x_1 P_2 hyp_1) A (g_4 (f_3 y_1)) (y_27_5 : hol.term A => hol.and (hol.eq A (g_4 (f_3 x_2)) y_27_5) (hol.eq A y_27_5 y_1)) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda y'. ((Data.Bool./\ ((= (g (f x))) y')) ((= y') y))) ;)

(; dict ;)

def thm_1191 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_1) (hol.eq B (f_4 (g_5 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.eq B (f_4 x_3) (f_4 y_2)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_27_6 : hol.term A => hol.and (hol.eq A (g_5 (f_4 x_3)) y_27_6) (hol.eq A y_27_6 y_2))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_1) (hol.eq B (f_4 (g_5 y_6)) y_6)))) => hyp_2 : hol.proof (hol.eq B (f_4 x_3) (f_4 y_2)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1))) => hol.PROVE_HYP ((y_27_6 : hol.term A => hol.and (hol.eq A (g_5 (f_4 x_3)) y_27_6) (hol.eq A y_27_6 y_2)) (g_5 (f_4 y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_27_6 : hol.term A => hol.and (hol.eq A (g_5 (f_4 x_3)) y_27_6) (hol.eq A y_27_6 y_2))) (thm_1189 B A s_1 y_2 x_3 f_4 g_5 hyp_1 hyp_2 hyp_3) (hyp_4 : hol.proof ((y_27_6 : hol.term A => hol.and (hol.eq A (g_5 (f_4 x_3)) y_27_6) (hol.eq A y_27_6 y_2)) (g_5 (f_4 y_2))) => thm_1190 B A y_2 x_3 f_4 g_5 hyp_4).

(; Theorem: |- ((= (g (f x))) y) ;)

(; dict ;)

def thm_1192 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> g_5 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_1) (hol.eq B (f_4 (g_5 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.eq B (f_4 x_3) (f_4 y_2)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1))) -> hol.proof (hol.eq A (g_5 (f_4 x_3)) y_2) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => g_5 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_5 y_6) s_1) (hol.eq B (f_4 (g_5 y_6)) y_6)))) => hyp_2 : hol.proof (hol.eq B (f_4 x_3) (f_4 y_2)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_4 s_1))) => thm_1078 B A y_2 x_3 f_4 g_5 (thm_1191 B A s_1 y_2 x_3 f_4 g_5 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool./\ ((= x) (g (f x)))) ((= (g (f x))) y)) ;)

(; dict ;)

def thm_1193 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_1) (hol.eq B (f_3 (g_4 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.eq B (f_3 x_5) (f_3 y_2)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1))) -> hol.proof (hol.and (hol.eq A x_5 (g_4 (f_3 x_5))) (hol.eq A (g_4 (f_3 x_5)) y_2)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_1) (hol.eq B (f_3 (g_4 y_6)) y_6)))) => hyp_2 : hol.proof (hol.eq B (f_3 x_5) (f_3 y_2)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1))) => hol.EQ_MP (hol.eq A (g_4 (f_3 x_5)) y_2) (hol.and (hol.eq A x_5 (g_4 (f_3 x_5))) (hol.eq A (g_4 (f_3 x_5)) y_2)) (thm_1077 B A s_1 y_2 x_5 f_3 g_4 hyp_1 hyp_3) (thm_1192 B A s_1 y_2 x_5 f_3 g_4 hyp_1 hyp_2 hyp_4).

(; Theorem: |- (\lambda y'. ((Data.Bool./\ ((= x) y')) ((= y') y)) (g (f x))) ;)

(; dict ;)

def thm_1194 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> y_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_6) s_1) (hol.eq B (f_2 (g_3 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.eq B (f_2 x_5) (f_2 y_4)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) -> hol.proof ((y_27_6 : hol.term A => hol.and (hol.eq A x_5 y_27_6) (hol.eq A y_27_6 y_4)) (g_3 (f_2 x_5))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => y_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_6) s_1) (hol.eq B (f_2 (g_3 y_6)) y_6)))) => hyp_2 : hol.proof (hol.eq B (f_2 x_5) (f_2 y_4)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) => hol.EQ_MP (hol.and (hol.eq A x_5 (g_3 (f_2 x_5))) (hol.eq A (g_3 (f_2 x_5)) y_4)) ((y_27_6 : hol.term A => hol.and (hol.eq A x_5 y_27_6) (hol.eq A y_27_6 y_4)) (g_3 (f_2 x_5))) (thm_1004 B A y_4 f_2 g_3 x_5) (thm_1193 B A s_1 y_4 f_2 g_3 x_5 hyp_1 hyp_2 hyp_3 hyp_4).

(; Theorem: |- (Data.Bool.? \lambda y'. ((Data.Bool./\ ((= x) y')) ((= y') y))) ;)

(; dict ;)

def thm_1195 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr B A) -> y_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof ((y_27_5 : hol.term A => hol.and (hol.eq A x_4 y_27_5) (hol.eq A y_27_5 y_3)) (g_2 (f_1 x_4))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_27_5 : hol.term A => hol.and (hol.eq A x_4 y_27_5) (hol.eq A y_27_5 y_3))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr B A) => y_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof ((y_27_5 : hol.term A => hol.and (hol.eq A x_4 y_27_5) (hol.eq A y_27_5 y_3)) (g_2 (f_1 x_4))) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_334 A x_1 P_2 hyp_1) A (g_2 (f_1 x_4)) (y_27_5 : hol.term A => hol.and (hol.eq A x_4 y_27_5) (hol.eq A y_27_5 y_3)) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda y'. ((Data.Bool./\ ((= x) y')) ((= y') y))) ;)

(; dict ;)

def thm_1196 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> y_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_6) s_2) (hol.eq B (f_3 (g_1 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.eq B (f_3 x_5) (f_3 y_4)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_27_6 : hol.term A => hol.and (hol.eq A x_5 y_27_6) (hol.eq A y_27_6 y_4))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => y_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_6) s_2) (hol.eq B (f_3 (g_1 y_6)) y_6)))) => hyp_2 : hol.proof (hol.eq B (f_3 x_5) (f_3 y_4)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) => hol.PROVE_HYP ((y_27_6 : hol.term A => hol.and (hol.eq A x_5 y_27_6) (hol.eq A y_27_6 y_4)) (g_1 (f_3 x_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (y_27_6 : hol.term A => hol.and (hol.eq A x_5 y_27_6) (hol.eq A y_27_6 y_4))) (thm_1194 B A s_2 f_3 g_1 y_4 x_5 hyp_1 hyp_2 hyp_3 hyp_4) (hyp_5 : hol.proof ((y_27_6 : hol.term A => hol.and (hol.eq A x_5 y_27_6) (hol.eq A y_27_6 y_4)) (g_1 (f_3 x_5))) => thm_1195 B A f_3 g_1 y_4 x_5 hyp_5).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_1197 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> y_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_6) s_2) (hol.eq B (f_3 (g_1 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.eq B (f_3 x_5) (f_3 y_4)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) -> hol.proof (hol.eq A x_5 y_4) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => y_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_6) s_2) (hol.eq B (f_3 (g_1 y_6)) y_6)))) => hyp_2 : hol.proof (hol.eq B (f_3 x_5) (f_3 y_4)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) => thm_1002 A y_4 x_5 (thm_1196 B A g_1 s_2 f_3 y_4 x_5 hyp_1 hyp_2 hyp_3 hyp_4).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_1198 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> y_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_6) s_2) (hol.eq B (f_3 (g_1 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.eq B (f_3 x_5) (f_3 y_4)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) -> hol.proof (hol.eq A x_5 y_4) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => y_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_6) s_2) (hol.eq B (f_3 (g_1 y_6)) y_6)))) => hyp_2 : hol.proof (hol.eq B (f_3 x_5) (f_3 y_4)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) => hol.PROVE_HYP (hol.eq B (f_3 x_5) (f_3 y_4)) (hol.eq A x_5 y_4) (thm_973 A B y_4 x_5 f_3 hyp_2) (hyp_5 : hol.proof (hol.eq B (f_3 x_5) (f_3 y_4)) => thm_1197 B A g_1 s_2 f_3 y_4 x_5 hyp_1 hyp_5 hyp_3 hyp_4).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_1199 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> y_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_6) s_2) (hol.eq B (f_3 (g_1 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.eq B (f_3 x_5) (f_3 y_4)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) -> hol.proof (hol.eq A x_5 y_4) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => y_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_6) s_2) (hol.eq B (f_3 (g_1 y_6)) y_6)))) => hyp_2 : hol.proof (hol.eq B (f_3 x_5) (f_3 y_4)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq A x_5 y_4) (thm_972 B A s_2 f_3 g_1 y_4 hyp_4) (hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) => thm_1198 B A g_1 s_2 f_3 y_4 x_5 hyp_1 hyp_2 hyp_3 hyp_5).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_1200 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> y_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_6) s_2) (hol.eq B (f_3 (g_1 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_5) (f_3 y_4))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) -> hol.proof (hol.eq A x_5 y_4) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => y_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_6) s_2) (hol.eq B (f_3 (g_1 y_6)) y_6)))) => hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_5) (f_3 y_4))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) => hol.PROVE_HYP (hol.eq B (f_3 x_5) (f_3 y_4)) (hol.eq A x_5 y_4) (thm_971 A B s_2 g_1 y_4 x_5 f_3 hyp_2) (hyp_5 : hol.proof (hol.eq B (f_3 x_5) (f_3 y_4)) => thm_1199 B A g_1 s_2 f_3 y_4 x_5 hyp_1 hyp_5 hyp_3 hyp_4).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_1201 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> y_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_6) s_2) (hol.eq B (f_3 (g_1 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_5) (f_3 y_4))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) -> hol.proof (hol.eq A x_5 y_4) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => y_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_6) s_2) (hol.eq B (f_3 (g_1 y_6)) y_6)))) => hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_5) (f_3 y_4))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq A x_5 y_4) (thm_969 B A x_5 s_2 f_3 g_1 y_4 hyp_2) (hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) => thm_1200 B A g_1 s_2 f_3 y_4 x_5 hyp_1 hyp_2 hyp_3 hyp_4).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_1202 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> y_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_6) s_2) (hol.eq B (f_3 (g_1 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_5) (f_3 y_4))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) -> hol.proof (hol.eq A x_5 y_4) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => y_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_6) s_2) (hol.eq B (f_3 (g_1 y_6)) y_6)))) => hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_5) (f_3 y_4))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq A x_5 y_4) (thm_966 B A s_2 f_3 g_1 x_5 hyp_3) (hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) => thm_1201 B A g_1 s_2 f_3 y_4 x_5 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_1203 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> y_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_6) s_2) (hol.eq B (f_3 (g_1 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_5) (f_3 y_4)))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) -> hol.proof (hol.eq A x_5 y_4) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => y_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_6) s_2) (hol.eq B (f_3 (g_1 y_6)) y_6)))) => hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_5) (f_3 y_4)))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_5) (f_3 y_4))) (hol.eq A x_5 y_4) (thm_965 B A x_5 s_2 f_3 g_1 y_4 hyp_2) (hyp_4 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_5) (f_3 y_4))) => thm_1202 B A g_1 s_2 f_3 y_4 x_5 hyp_1 hyp_4 hyp_3).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_1204 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> y_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_6) s_2) (hol.eq B (f_3 (g_1 y_6)) y_6)))) -> hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_5) (f_3 y_4)))) -> hol.proof (hol.eq A x_5 y_4) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => y_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_6) s_2) (hol.eq B (f_3 (g_1 y_6)) y_6)))) => hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_5) (f_3 y_4)))) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq A x_5 y_4) (thm_963 B A y_4 s_2 f_3 g_1 x_5 hyp_2) (hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) => thm_1203 B A g_1 s_2 f_3 y_4 x_5 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y))))) ((= x) y)) ;)

(; dict ;)

def thm_1205 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> g_4 : hol.term (hol.arr B A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_2) (hol.eq B (f_3 (g_4 y_6)) y_6)))) -> hol.proof (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_5) (f_3 y_1)))) (hol.eq A x_5 y_1)) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => g_4 : hol.term (hol.arr B A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_6) s_2) (hol.eq B (f_3 (g_4 y_6)) y_6)))) => hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_5) (f_3 y_1)))) => thm_1204 B A g_4 s_2 f_3 y_1 x_5 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y))))) ((= x) y))) ;)

(; dict ;)

def thm_1206 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_2 (g_3 y_5)) y_5)))) -> hol.proof (hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_5) s_1) (hol.eq B (f_2 (g_3 y_5)) y_5)))) => y_5 : hol.term A => thm_1205 B A y_5 s_1 f_2 g_3 x_4 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y))))) ((= x) y)))) ;)

(; dict ;)

def thm_1207 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_4) s_1) (hol.eq B (f_2 (g_3 y_4)) y_4)))) -> hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_4) s_1) (hol.eq B (f_2 (g_3 y_4)) y_4)))) => x_4 : hol.term A => hol.EQ_MP (hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5))) (hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5))) (thm_960 B A s_1 f_2 g_3 x_4) (thm_1206 B A s_1 f_2 g_3 x_4 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) ((Set.image g) ((Set.image f) s))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y))))) ((= x) y))))) ;)

(; dict ;)

def thm_1208 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_4) s_2) (hol.eq B (f_3 (g_1 y_4)) y_4)))) -> hol.proof (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_4) (f_3 y_5)))) (hol.eq A x_4 y_5))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_4) s_2) (hol.eq B (f_3 (g_1 y_4)) y_4)))) => hol.EQ_MP (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_4) (f_3 y_5)))) (hol.eq A x_4 y_5)))) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_4) (f_3 y_5)))) (hol.eq A x_4 y_5))))) (thm_954 B A s_2 f_3 g_1 hyp_1) (hol.EQ_MP (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_4) (f_3 y_5)))) (hol.eq A x_4 y_5)))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq B (f_3 x_4) (f_3 y_5)))) (hol.eq A x_4 y_5)))) (thm_957 B A s_2 f_3 g_1) (thm_1207 B A s_2 f_3 g_1 hyp_1)).

(; Theorem: |- ((Data.Bool./\ ((Set.subset ((Set.image g) ((Set.image f) s))) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) ((Set.image g) ((Set.image f) s))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) ((Set.image g) ((Set.image f) s)))) ((Data.Bool./\ ((Set.member y) ((Set.image g) ((Set.image f) s)))) ((= (f x)) (f y))))) ((= x) y)))))) ;)

(; dict ;)

def thm_1209 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr B A) -> hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_4) s_1) (hol.eq B (f_2 (g_3 y_4)) y_4)))) -> hol.proof (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) s_1) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_4) s_1) (hol.eq B (f_2 (g_3 y_4)) y_4)))) => hol.EQ_MP (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5))))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) s_1) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)))))) (thm_590 A B g_3 s_1 f_2 hyp_1) (thm_1208 A B g_3 s_1 f_2 hyp_1).

(; Theorem: |- (\lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y)))))) ((Set.image g) ((Set.image f) s))) ;)

(; dict ;)

def thm_1210 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_4) s_3) (hol.eq B (f_2 (g_1 y_4)) y_4)))) -> hol.proof ((t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 s_3) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_4)) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 t_4) (hol.eq B (f_2 x_5) (f_2 y_6)))) (hol.eq A x_5 y_6)))))) (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_4) s_3) (hol.eq B (f_2 (g_1 y_4)) y_4)))) => hol.EQ_MP (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3)) s_3) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3)))) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3))) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)))))) ((t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 s_3) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_4)) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 t_4) (hol.eq B (f_2 x_5) (f_2 y_6)))) (hol.eq A x_5 y_6)))))) (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3))) (thm_512 B A s_3 f_2 g_1) (thm_1209 B A s_3 f_2 g_1 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y))))))) ;)

(; dict ;)

def thm_1211 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof ((t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 s_3) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_4)) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 t_4) (hol.eq B (f_2 x_5) (f_2 y_6)))) (hol.eq A x_5 y_6)))))) (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 s_3) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_4)) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 t_4) (hol.eq B (f_2 x_5) (f_2 y_6)))) (hol.eq A x_5 y_6))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 s_3) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_4)) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 t_4) (hol.eq B (f_2 x_5) (f_2 y_6)))) (hol.eq A x_5 y_6)))))) (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3))) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_334 A x_1 P_2 hyp_1) (Set_2Eset A) (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3)) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 s_3) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_4)) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 t_4) (hol.eq B (f_2 x_5) (f_2 y_6)))) (hol.eq A x_5 y_6)))))) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y))))))) ;)

(; dict ;)

def thm_1212 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_4) s_3) (hol.eq B (f_2 (g_1 y_4)) y_4)))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 s_3) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_4)) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 t_4) (hol.eq B (f_2 x_5) (f_2 y_6)))) (hol.eq A x_5 y_6))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_4) s_3) (hol.eq B (f_2 (g_1 y_4)) y_4)))) => hol.PROVE_HYP ((t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 s_3) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_4)) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 t_4) (hol.eq B (f_2 x_5) (f_2 y_6)))) (hol.eq A x_5 y_6)))))) (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 s_3) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_4)) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 t_4) (hol.eq B (f_2 x_5) (f_2 y_6)))) (hol.eq A x_5 y_6))))))) (thm_1210 B A g_1 f_2 s_3 hyp_1) (hyp_2 : hol.proof ((t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 s_3) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_4)) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 t_4) (hol.eq B (f_2 x_5) (f_2 y_6)))) (hol.eq A x_5 y_6)))))) (Set_2Eimage (hol.arr (hol.arr B A) (hol.arr (Set_2Eset B) (Set_2Eset A))) g_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3))) => thm_1211 B A g_1 f_2 s_3 hyp_2).

(; Theorem: |- (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y))))))) ;)

(; dict ;)

def thm_1213 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_4) s_3) (hol.eq B (f_2 (g_1 y_4)) y_4)))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 s_3) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_4)) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 t_4) (hol.eq B (f_2 x_5) (f_2 y_6)))) (hol.eq A x_5 y_6))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_4) s_3) (hol.eq B (f_2 (g_1 y_4)) y_4)))) => hol.PROVE_HYP (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_4) s_3) (hol.eq B (f_2 (g_1 y_4)) y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 s_3) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_4)) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 t_4) (hol.eq B (f_2 x_5) (f_2 y_6)))) (hol.eq A x_5 y_6))))))) (thm_510 A B g_1 s_3 f_2 hyp_1) (hyp_2 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_4) s_3) (hol.eq B (f_2 (g_1 y_4)) y_4)))) => thm_1212 B A g_1 f_2 s_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y)))))))) ;)

(; dict ;)

def thm_1214 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.imp (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_4) s_2) (hol.eq B (f_3 (g_1 y_4)) y_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 t_4)) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 t_4) (hol.eq B (f_3 x_5) (f_3 y_6)))) (hol.eq A x_5 y_6)))))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_4) s_2) (hol.eq B (f_3 (g_1 y_4)) y_4)))) => thm_1213 B A g_1 f_3 s_2 hyp_1.

(; Theorem: |- ((= (\lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) g)) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))) ;)

(; dict ;)

def thm_1215 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_3 (g_4 y_5)) y_5)))) g_1) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_4) s_2) (hol.eq B (f_3 (g_1 y_4)) y_4))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.BETA_CONV (hol.arr B A) hol.bool (g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_3 (g_4 y_5)) y_5)))) g_1.

(; Theorem: |- (\lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) g) ;)

(; dict ;)

def thm_1216 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof ((g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_3 (g_4 y_5)) y_5)))) g_1) -> hol.proof ((g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_3 (g_4 y_5)) y_5)))) g_1) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof ((g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_3 (g_4 y_5)) y_5)))) g_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) ;)

(; dict ;)

def thm_1217 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof ((g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_3 (g_4 y_5)) y_5)))) g_1) -> hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_4) s_2) (hol.eq B (f_3 (g_1 y_4)) y_4)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof ((g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_3 (g_4 y_5)) y_5)))) g_1) => hol.EQ_MP ((g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_3 (g_4 y_5)) y_5)))) g_1) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_1 y_4) s_2) (hol.eq B (f_3 (g_1 y_4)) y_4)))) (thm_1215 A B g_1 s_2 f_3) (thm_1216 A B g_1 s_2 f_3 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y))))))) ;)

(; dict ;)

def thm_1218 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr B A) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof ((g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5)))) g_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 s_3) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_4)) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 t_4) (hol.eq B (f_2 x_5) (f_2 y_6)))) (hol.eq A x_5 y_6))))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr B A) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_3) (hol.eq B (f_2 (g_4 y_5)) y_5)))) g_1) => thm_1214 A B g_1 s_3 f_2 (thm_1217 A B g_1 s_3 f_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) g)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y)))))))) ;)

(; dict ;)

def thm_1219 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr B A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.imp ((g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_3 (g_4 y_5)) y_5)))) g_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 t_4)) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 t_4) (hol.eq B (f_3 x_5) (f_3 y_6)))) (hol.eq A x_5 y_6)))))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr B A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof ((g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_2) (hol.eq B (f_3 (g_4 y_5)) y_5)))) g_1) => thm_1218 B A g_1 f_3 s_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda g. ((Data.Bool.==> (\lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))) g)) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y))))))))) ;)

(; dict ;)

def thm_1220 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.forall (hol.arr B A) (g_3 : hol.term (hol.arr B A) => hol.imp ((g_4 : hol.term (hol.arr B A) => hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_4 y_5) s_1) (hol.eq B (f_2 (g_4 y_5)) y_5)))) g_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 s_1) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_4)) (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 t_4) (hol.eq B (f_2 x_5) (f_2 y_6)))) (hol.eq A x_5 y_6))))))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr B A) => thm_1219 A B g_3 s_1 f_2.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y)))))))) ;)

(; dict ;)

def thm_1221 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_4) s_1) (hol.eq B (f_2 (g_3 y_4)) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_1) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_2 x_4) (f_2 y_5)))) (hol.eq A x_4 y_5)))))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => thm_509 A B s_1 f_2 (thm_1220 A B s_1 f_2).

(; Theorem: |- (Data.Bool.? \lambda g. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) ((Set.image f) s))) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))) ;)

(; dict ;)

def thm_1222 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_4) s_1) (hol.eq B (f_2 (g_3 y_4)) y_4))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_4) s_1) (hol.eq B (f_2 (g_3 y_4)) y_4))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_4) s_1) (hol.eq B (f_2 (g_3 y_4)) y_4))))) => hyp_1.

(; Theorem: |- (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y))))))) ;)

(; dict ;)

def thm_1223 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_4) s_2) (hol.eq B (f_1 (g_3 y_4)) y_4))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_4) s_2) (hol.eq B (f_1 (g_3 y_4)) y_4))))) => thm_1221 A B s_2 f_1 (thm_1222 A B s_2 f_1 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y))))))) ;)

(; dict ;)

def thm_1224 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.PROVE_HYP (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_4) s_2) (hol.eq B (f_1 (g_3 y_4)) y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5))))))) (thm_508 A B s_2 f_1) (hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B A) hol.bool) hol.bool) (g_3 : hol.term (hol.arr B A) => hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (g_3 y_4) s_2) (hol.eq B (f_1 (g_3 y_4)) y_4))))) => thm_1223 B A f_1 s_2 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y)))))))) ;)

(; dict ;)

def thm_1225 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => thm_1224 B A f_1 s_2.

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y))))))))) ;)

(; dict ;)

def thm_1226 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5))))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.EQ_MP (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))))))) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))))))) (thm_398 B A f_1) (thm_1225 B A f_1).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y))))))))) ;)

(; thm ;)

def thm_1227 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5))))))))) :=
  B : hol.type => A : hol.type => hol.EQ_MP (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5))))))))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 s_2) (hol.and (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 t_3) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5))))))))) (thm_395 B A) (thm_1226 B A).

(; Theorem: |- ((= \lambda f. (Data.Bool.! \lambda u. ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) u)) ((Data.Bool./\ ((Set.subset t) u)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y))))))) \lambda f. (Data.Bool.! \lambda u. ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) u)) ((Data.Bool./\ ((Set.subset t) u)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y))))))) ;)

(; dict ;)

def thm_1228 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))))) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))))).

(; Theorem: |- ((= \lambda f. (Data.Bool.! \lambda u. ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) u)) ((Data.Bool./\ ((Set.subset t) u)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y))))))) \lambda f. (Data.Bool.! \lambda u. ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) u)) ((Data.Bool./\ ((Set.subset t) u)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y))))))) ;)

(; dict ;)

def thm_1229 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))))) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))))) :=
  B : hol.type => A : hol.type => hol.TRANS (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))))) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))))) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))))) (thm_1228 B A) (thm_1228 B A).

(; Theorem: |- ((= (Data.Bool.! \lambda f. (Data.Bool.! \lambda u. ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) u)) ((Data.Bool./\ ((Set.subset t) u)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y)))))))) (Data.Bool.! \lambda f. (Data.Bool.! \lambda u. ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) u)) ((Data.Bool./\ ((Set.subset t) u)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y)))))))) ;)

(; dict ;)

def thm_1230 : B : hol.type -> A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))))))) :=
  B : hol.type => A : hol.type => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B)) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))))) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))))) (thm_38 B A) (thm_1229 B A).

(; Theorem: |- ((= \lambda u. ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) u)) ((Data.Bool./\ ((Set.subset t) u)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y)))))) \lambda u. ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) u)) ((Data.Bool./\ ((Set.subset t) u)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y)))))) ;)

(; dict ;)

def thm_1231 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.REFL (hol.arr (Set_2Eset A) hol.bool) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))).

(; Theorem: |- ((= \lambda u. ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) u)) ((Data.Bool./\ ((Set.subset t) u)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y)))))) \lambda u. ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) u)) ((Data.Bool./\ ((Set.subset t) u)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y)))))) ;)

(; dict ;)

def thm_1232 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.TRANS (hol.arr (Set_2Eset A) hol.bool) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))) (thm_1231 B A f_1) (thm_1231 B A f_1).

(; Theorem: |- ((= (Data.Bool.! \lambda u. ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) u)) ((Data.Bool./\ ((Set.subset t) u)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y))))))) (Data.Bool.! \lambda u. ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) u)) ((Data.Bool./\ ((Set.subset t) u)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y))))))) ;)

(; dict ;)

def thm_1233 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))))) (hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))) (thm_46 A) (thm_1232 B A f_1).

(; Theorem: |- ((= ((Set.subset s) u)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ;)

(; dict ;)

def thm_1234 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 u_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => (A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => thm_516 A t_1 s_2) A u_1 s_2.

(; Theorem: |- ((= (Data.Bool./\ ((Set.subset s) u))) (Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u))))) ;)

(; dict ;)

def thm_1235 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 u_1)) (hol.and (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1))))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 u_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1))) thm_298 (thm_1234 A u_1 s_2).

(; Theorem: |- ((= ((Set.subset t) u)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) ;)

(; dict ;)

def thm_1236 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_2 u_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => (A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => thm_516 A t_1 s_2) A u_1 t_2.

(; Theorem: |- ((= (Data.Bool./\ ((Set.subset t) u))) (Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u))))) ;)

(; dict ;)

def thm_1237 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_2 u_1)) (hol.and (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1))))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_2 u_1) (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1))) thm_298 (thm_1236 A u_1 t_2).

(; Theorem: |- ((= ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. ((= ((Set.member x) ((Set.image f) s))) ((Set.member x) ((Set.image f) t))))) ;)

(; dict ;)

def thm_1238 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 t_1)) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 t_1))))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => (B : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset B) => thm_61 B t_1 s_2) B (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 t_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2).

(; Theorem: |- ((= ((Set.member x) ((Set.image f) t))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))) ;)

(; dict ;)

def thm_1239 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_1)))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => (A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => thm_69 A B s_1 f_2 y_3) A B t_1 f_2 x_3.

(; Theorem: |- ((= ((= ((Set.member x) ((Set.image f) s))) ((Set.member x) ((Set.image f) t)))) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t))))) ;)

(; dict ;)

def thm_1240 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 t_1))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_1))))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 t_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_1))) (thm_593 A B s_2 f_3 x_4) (thm_1239 A B t_1 f_3 x_4).

(; Theorem: |- ((= \lambda x. ((= ((Set.member x) ((Set.image f) s))) ((Set.member x) ((Set.image f) t)))) \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t))))) ;)

(; dict ;)

def thm_1241 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (x_4 : hol.term B => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 t_1))) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_1))))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.ABS_THM B hol.bool (x_4 : hol.term B => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 t_1))) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_1)))) (x_4 : hol.term B => thm_1240 A B t_1 s_2 f_3 x_4).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= ((Set.member x) ((Set.image f) s))) ((Set.member x) ((Set.image f) t))))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))) ;)

(; dict ;)

def thm_1242 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 t_1)))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_1)))))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (x_4 : hol.term B => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 t_1))) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_1)))) (thm_63 B) (thm_1241 A B t_1 s_2 f_3).

(; Theorem: |- ((= ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))) ;)

(; dict ;)

def thm_1243 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 t_1)) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_1)))))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 t_1)) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 t_1)))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_1))))) (thm_1238 A B t_1 s_2 f_3) (thm_1242 A B t_1 s_2 f_3).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.subset t) u)) ((= ((Set.image f) s)) ((Set.image f) t)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t))))))) ;)

(; dict ;)

def thm_1244 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> t_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_3) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_4))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => t_4 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_3)) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3)))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_4)) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))) (thm_1237 A u_3 t_4) (thm_1243 A B t_4 s_1 f_2).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.subset s) u)) ((Data.Bool./\ ((Set.subset t) u)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))))) ;)

(; dict ;)

def thm_1245 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> t_2 : hol.term (Set_2Eset A) -> u_3 : hol.term (Set_2Eset A) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_4 u_3) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_2 u_3) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_4) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_2)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2)))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => t_2 : hol.term (Set_2Eset A) => u_3 : hol.term (Set_2Eset A) => s_4 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_4 u_3)) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3)))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_2 u_3) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_4) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2)))))) (thm_1235 A u_3 s_4) (thm_1244 B A s_4 f_1 u_3 t_2).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ ((Set.subset s) u)) ((Data.Bool./\ ((Set.subset t) u)) ((= ((Set.image f) s)) ((Set.image f) t)))))) (Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t))))))))) ;)

(; dict ;)

def thm_1246 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> t_2 : hol.term (Set_2Eset A) -> u_3 : hol.term (Set_2Eset A) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_4 u_3) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_2 u_3) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_4) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_2))))) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2))))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => t_2 : hol.term (Set_2Eset A) => u_3 : hol.term (Set_2Eset A) => s_4 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_4 u_3) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_2 u_3) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_4) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_2)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2))))))) thm_107 (thm_1245 B A f_1 t_2 u_3 s_4).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) u)) ((Data.Bool./\ ((Set.subset t) u)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))))) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_1247 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> t_2 : hol.term (Set_2Eset A) -> u_3 : hol.term (Set_2Eset A) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_4 u_3) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_2 u_3) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_4) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_2)))) (hol.eq (Set_2Eset A) s_4 t_2)) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => t_2 : hol.term (Set_2Eset A) => u_3 : hol.term (Set_2Eset A) => s_4 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_4 u_3) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_2 u_3) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_4) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_2))))) (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2)))))))) (hol.eq (Set_2Eset A) s_4 t_2) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2))) (thm_1246 B A f_1 t_2 u_3 s_4) (thm_60 A t_2 s_4).

(; Theorem: |- ((= \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) u)) ((Data.Bool./\ ((Set.subset t) u)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))) \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))))) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_1248 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => s_3 : hol.term (Set_2Eset A) => hol.ABS_THM (Set_2Eset A) hol.bool (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))) (t_4 : hol.term (Set_2Eset A) => thm_1247 B A f_1 t_4 u_2 s_3).

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) u)) ((Data.Bool./\ ((Set.subset t) u)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t)))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))))) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))))) ;)

(; dict ;)

def thm_1249 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4))) (hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => s_3 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))) (thm_46 A) (thm_1248 B A f_1 u_2 s_3).

(; Theorem: |- ((= \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) u)) ((Data.Bool./\ ((Set.subset t) u)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t)))) \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))))) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))))) ;)

(; dict ;)

def thm_1250 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4))) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => hol.ABS_THM (Set_2Eset A) hol.bool (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4))) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4))))) (s_3 : hol.term (Set_2Eset A) => thm_1249 B A f_1 u_2 s_3).

(; Theorem: |- ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) u)) ((Data.Bool./\ ((Set.subset t) u)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))))) (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))))) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))))) ;)

(; dict ;)

def thm_1251 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4))) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4))))) (thm_46 A) (thm_1250 B A f_1 u_2).

(; Theorem: |- ((= (= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) u)) ((Data.Bool./\ ((Set.subset t) u)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t)))))) (= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))))) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))))))) ;)

(; dict ;)

def thm_1252 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4))))) (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))) thm_64 (thm_1251 B A f_1 u_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y))))) ;)

(; dict ;)

def thm_1253 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) u)) ((Data.Bool./\ ((Set.subset t) u)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y)))))) ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))))) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y)))))) ;)

(; dict ;)

def thm_1254 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))) (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4))))) (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4))))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (thm_1252 B A f_1 u_2) (thm_1253 B A f_1 u_2).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))))) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y)))))) ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) u)) ((Data.Bool./\ ((Set.subset t) u)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y)))))) ;)

(; dict ;)

def thm_1255 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))) (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => hol.SYM hol.bool (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))) (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))) (thm_1254 B A f_1 u_2).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y)))) ;)

(; dict ;)

def thm_1256 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) => hyp_1.

(; Theorem: |- ((= \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))))) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))))) \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))))) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))))) ;)

(; dict ;)

def thm_1257 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4))))) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => hol.REFL (hol.arr (Set_2Eset A) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4))))).

(; Theorem: |- ((= \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))))) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))))) \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))))) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))))) ;)

(; dict ;)

def thm_1258 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4))))) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => hol.TRANS (hol.arr (Set_2Eset A) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4))))) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4))))) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4))))) (thm_1257 B A f_1 u_2) (thm_1257 B A f_1 u_2).

(; Theorem: |- ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))))) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))))) (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))))) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))))) ;)

(; dict ;)

def thm_1259 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4))))) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4))))) (thm_46 A) (thm_1258 B A f_1 u_2).

(; Theorem: |- ((= \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))))) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))) \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))))) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_1260 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => s_3 : hol.term (Set_2Eset A) => hol.REFL (hol.arr (Set_2Eset A) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))).

(; Theorem: |- ((= \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))))) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))) \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))))) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_1261 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => s_3 : hol.term (Set_2Eset A) => hol.TRANS (hol.arr (Set_2Eset A) hol.bool) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))) (thm_1260 B A f_1 u_2 s_3) (thm_1260 B A f_1 u_2 s_3).

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))))) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))))) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))))) ;)

(; dict ;)

def thm_1262 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4))))) (hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => s_3 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))) (thm_46 A) (thm_1261 B A f_1 u_2 s_3).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t))))))) ;)

(; dict ;)

def thm_1263 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> t_2 : hol.term (Set_2Eset A) -> u_3 : hol.term (Set_2Eset A) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2))))))) -> hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => t_2 : hol.term (Set_2Eset A) => u_3 : hol.term (Set_2Eset A) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2))))))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u))) ;)

(; dict ;)

def thm_1264 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> t_2 : hol.term (Set_2Eset A) -> u_3 : hol.term (Set_2Eset A) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2))))))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => t_2 : hol.term (Set_2Eset A) => u_3 : hol.term (Set_2Eset A) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2))))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_185 q_1 p_2 hyp_1) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2)))))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u))) ;)

(; dict ;)

def thm_1265 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> t_2 : hol.term (Set_2Eset A) -> u_3 : hol.term (Set_2Eset A) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2))))))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => t_2 : hol.term (Set_2Eset A) => u_3 : hol.term (Set_2Eset A) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2))))))) => hol.PROVE_HYP (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2))))))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (thm_1263 B A f_1 t_2 u_3 s_4 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2))))))) => thm_1264 B A f_1 t_2 u_3 s_4 hyp_2).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))) ;)

(; dict ;)

def thm_1266 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> t_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) -> hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4)))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => t_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_1) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4)))))) hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))) ;)

(; dict ;)

def thm_1267 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> t_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) -> hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4)))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => t_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) => hol.PROVE_HYP (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4)))))) (thm_1263 B A f_2 t_4 u_3 s_1 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) => thm_1266 B A s_1 f_2 u_3 t_4 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u))) ;)

(; dict ;)

def thm_1268 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1))) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1))) => hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))) ;)

(; dict ;)

def thm_1269 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> t_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4)))))) -> hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4)))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => t_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4)))))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u))) ;)

(; dict ;)

def thm_1270 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> t_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4)))))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => t_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4)))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_185 q_1 p_2 hyp_1) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u))) ;)

(; dict ;)

def thm_1271 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> t_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4)))))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => t_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4)))))) => hol.PROVE_HYP (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4)))))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (thm_1269 B A s_1 f_2 u_3 t_4 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4)))))) => thm_1270 B A s_1 f_2 u_3 t_4 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t))))) ;)

(; dict ;)

def thm_1272 : A : hol.type -> B : hol.type -> u_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset A) -> s_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2)))))) -> hol.proof (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2))))) :=
  A : hol.type => B : hol.type => u_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => s_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2)))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_1) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2))))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t))))) ;)

(; dict ;)

def thm_1273 : A : hol.type -> B : hol.type -> u_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset A) -> s_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2)))))) -> hol.proof (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2))))) :=
  A : hol.type => B : hol.type => u_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => s_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2)))))) => hol.PROVE_HYP (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2)))))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2))))) (thm_1269 B A s_3 f_4 u_1 t_2 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2)))))) => thm_1272 A B u_1 t_2 s_3 f_4 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u))) ;)

(; dict ;)

def thm_1274 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1))) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t))))) ;)

(; dict ;)

def thm_1275 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_1))))) -> hol.proof (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_1))))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_1))))) => hyp_1.

(; Theorem: |- ((= \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))) \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))) ;)

(; dict ;)

def thm_1276 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)) (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hol.REFL (hol.arr A hol.bool) (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)).

(; Theorem: |- ((= \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))) \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))) ;)

(; dict ;)

def thm_1277 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)) (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hol.TRANS (hol.arr A hol.bool) (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)) (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)) (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)) (thm_1276 A t_1 s_2) (thm_1276 A t_1 s_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))) ;)

(; dict ;)

def thm_1278 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1))) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)) (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)) (thm_301 A) (thm_1277 A t_1 s_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> y) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) y))))) ((Data.Bool.==> ((= w) x)) ((= y) z)))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> y) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) y))))) ((Data.Bool.==> ((= w) x)) ((= y) z)))) ;)

(; dict ;)

def thm_1279 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> y_4 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1)))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => y_4 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> y) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) y))))) ((Data.Bool.==> ((= w) x)) ((= y) z)))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> y) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) y))))) ((Data.Bool.==> ((= w) x)) ((= y) z)))) ;)

(; dict ;)

def thm_1280 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> y_4 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1)))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => y_4 : hol.term hol.bool => hol.TRANS hol.bool (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) (thm_1279 z_1 x_2 w_3 y_4) (thm_1279 z_1 x_2 w_3 y_4).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> y) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) y))))) ((Data.Bool.==> ((= w) x)) ((= y) z))) ;)

(; dict ;)

def thm_1281 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> y_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) -> hol.proof (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => y_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((Data.Bool.==> y) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) y)))) ;)

(; dict ;)

def thm_1282 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> y_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) -> hol.proof (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => y_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= w) x)) ((= y) z)) ;)

(; dict ;)

def thm_1283 : z_1 : hol.term hol.bool -> y_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> w_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.imp y_2 (hol.and w_4 (hol.imp x_3 z_1))) (hol.imp z_1 (hol.and x_3 (hol.imp w_4 y_2)))) -> hyp_2 : hol.proof (hol.imp (hol.and (hol.imp y_2 (hol.and w_4 (hol.imp x_3 z_1))) (hol.imp z_1 (hol.and x_3 (hol.imp w_4 y_2)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool y_2 z_1))) -> hol.proof (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool y_2 z_1)) :=
  z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => x_3 : hol.term hol.bool => w_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.imp y_2 (hol.and w_4 (hol.imp x_3 z_1))) (hol.imp z_1 (hol.and x_3 (hol.imp w_4 y_2)))) => hyp_2 : hol.proof (hol.imp (hol.and (hol.imp y_2 (hol.and w_4 (hol.imp x_3 z_1))) (hol.imp z_1 (hol.and x_3 (hol.imp w_4 y_2)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool y_2 z_1))) => thm_1281 z_1 x_3 w_4 y_2 hyp_2 (thm_1282 z_1 x_3 w_4 y_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> y) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) y))))) ((Data.Bool.==> ((= w) x)) ((= y) z)))) ((Data.Bool.==> ((= w) x)) ((= y) z))) ;)

(; dict ;)

def thm_1284 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> y_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) -> hol.proof (hol.imp (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => y_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) => hyp_2 : hol.proof (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) => thm_1283 z_1 y_4 x_2 w_3 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> y) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) y))))) ((Data.Bool.==> ((= w) x)) ((= y) z)))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> y) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) y))))) ((Data.Bool.==> ((= w) x)) ((= y) z)))) ;)

(; dict ;)

def thm_1285 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> y_4 : hol.term hol.bool -> hol.proof (hol.imp (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1)))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => y_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) => hyp_2 : hol.proof (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) => thm_1284 z_1 x_2 w_3 y_4 hyp_2 (thm_1281 z_1 x_2 w_3 y_4 hyp_1).

(; Theorem: |- ((= (= (\lambda _11146. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11146) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) _11146))))) ((Data.Bool.==> ((= w) x)) ((= _11146) z))) y))) (= (\lambda _11146. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11146) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) _11146))))) ((Data.Bool.==> ((= w) x)) ((= _11146) z))) y))) ;)

(; dict ;)

def thm_1286 : y_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> w_4 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11146_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11146_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11146_5 z_2))) y_1)) (hol.eq hol.bool ((__11146_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11146_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11146_5 z_2))) y_1))) :=
  y_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => w_4 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11146_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11146_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11146_5 z_2))) y_1)).

(; Theorem: |- ((= (\lambda _11146. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11146) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) _11146))))) ((Data.Bool.==> ((= w) x)) ((= _11146) z))) Data.Bool.F)) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.F))))) ((Data.Bool.==> ((= w) x)) ((= Data.Bool.F) z)))) ;)

(; dict ;)

def thm_1287 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__11146_4 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 __11146_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool __11146_4 z_1))) hol.false) (hol.imp (hol.and (hol.imp hol.false (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.false)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool hol.false z_1)))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__11146_4 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 __11146_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool __11146_4 z_1))) hol.false.

(; Theorem: |- ((= ((= (\lambda _11146. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11146) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) _11146))))) ((Data.Bool.==> ((= w) x)) ((= _11146) z))) y)) (\lambda _11146. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11146) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) _11146))))) ((Data.Bool.==> ((= w) x)) ((= _11146) z))) Data.Bool.F))) ((= (\lambda _11146. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11146) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) _11146))))) ((Data.Bool.==> ((= w) x)) ((= _11146) z))) y)) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.F))))) ((Data.Bool.==> ((= w) x)) ((= Data.Bool.F) z))))) ;)

(; dict ;)

def thm_1288 : y_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> w_4 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11146_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11146_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11146_5 z_2))) y_1) ((__11146_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11146_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11146_5 z_2))) hol.false)) (hol.eq hol.bool ((__11146_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11146_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11146_5 z_2))) y_1) (hol.imp (hol.and (hol.imp hol.false (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 hol.false)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool hol.false z_2))))) :=
  y_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => w_4 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11146_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11146_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11146_5 z_2))) y_1)) (hol.eq hol.bool ((__11146_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11146_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11146_5 z_2))) y_1)) ((__11146_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11146_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11146_5 z_2))) hol.false) (hol.imp (hol.and (hol.imp hol.false (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 hol.false)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool hol.false z_2))) (thm_1286 y_1 z_2 x_3 w_4) (thm_1287 z_2 x_3 w_4).

(; Theorem: |- ((= (\lambda _11146. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11146) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) _11146))))) ((Data.Bool.==> ((= w) x)) ((= _11146) z))) y)) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> y) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) y))))) ((Data.Bool.==> ((= w) x)) ((= y) z)))) ;)

(; dict ;)

def thm_1289 : y_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> w_4 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__11146_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11146_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11146_5 z_2))) y_1) (hol.imp (hol.and (hol.imp y_1 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 y_1)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool y_1 z_2)))) :=
  y_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => w_4 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__11146_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11146_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11146_5 z_2))) y_1.

(; Theorem: |- ((= (= (\lambda _11146. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11146) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) _11146))))) ((Data.Bool.==> ((= w) x)) ((= _11146) z))) y))) (= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> y) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) y))))) ((Data.Bool.==> ((= w) x)) ((= y) z))))) ;)

(; dict ;)

def thm_1290 : y_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> w_4 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11146_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11146_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11146_5 z_2))) y_1)) (hol.eq hol.bool (hol.imp (hol.and (hol.imp y_1 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 y_1)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool y_1 z_2))))) :=
  y_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => w_4 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__11146_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11146_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11146_5 z_2))) y_1) (hol.imp (hol.and (hol.imp y_1 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 y_1)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool y_1 z_2))) thm_64 (thm_1289 y_1 z_2 x_3 w_4).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.F))))) ((Data.Bool.==> ((= w) x)) ((= Data.Bool.F) z)))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.F))))) ((Data.Bool.==> ((= w) x)) ((= Data.Bool.F) z)))) ;)

(; dict ;)

def thm_1291 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp hol.false (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.false)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool hol.false z_1))) (hol.imp (hol.and (hol.imp hol.false (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.false)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool hol.false z_1)))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.and (hol.imp hol.false (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.false)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool hol.false z_1))).

(; Theorem: |- ((= ((= (\lambda _11146. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11146) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) _11146))))) ((Data.Bool.==> ((= w) x)) ((= _11146) z))) y)) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.F))))) ((Data.Bool.==> ((= w) x)) ((= Data.Bool.F) z))))) ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> y) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) y))))) ((Data.Bool.==> ((= w) x)) ((= y) z)))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.F))))) ((Data.Bool.==> ((= w) x)) ((= Data.Bool.F) z))))) ;)

(; dict ;)

def thm_1292 : y_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> w_4 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11146_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11146_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11146_5 z_2))) y_1) (hol.imp (hol.and (hol.imp hol.false (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 hol.false)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool hol.false z_2)))) (hol.eq hol.bool (hol.imp (hol.and (hol.imp y_1 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 y_1)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool y_1 z_2))) (hol.imp (hol.and (hol.imp hol.false (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 hol.false)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool hol.false z_2))))) :=
  y_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => w_4 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11146_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11146_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11146_5 z_2))) y_1)) (hol.eq hol.bool (hol.imp (hol.and (hol.imp y_1 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 y_1)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool y_1 z_2)))) (hol.imp (hol.and (hol.imp hol.false (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 hol.false)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool hol.false z_2))) (hol.imp (hol.and (hol.imp hol.false (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 hol.false)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool hol.false z_2))) (thm_1290 y_1 z_2 x_3 w_4) (thm_1291 z_2 x_3 w_4).

(; Theorem: |- ((= ((= (\lambda _11146. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11146) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) _11146))))) ((Data.Bool.==> ((= w) x)) ((= _11146) z))) y)) (\lambda _11146. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11146) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) _11146))))) ((Data.Bool.==> ((= w) x)) ((= _11146) z))) Data.Bool.F))) ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> y) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) y))))) ((Data.Bool.==> ((= w) x)) ((= y) z)))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.F))))) ((Data.Bool.==> ((= w) x)) ((= Data.Bool.F) z))))) ;)

(; dict ;)

def thm_1293 : y_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> w_4 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11146_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11146_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11146_5 z_2))) y_1) ((__11146_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11146_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11146_5 z_2))) hol.false)) (hol.eq hol.bool (hol.imp (hol.and (hol.imp y_1 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 y_1)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool y_1 z_2))) (hol.imp (hol.and (hol.imp hol.false (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 hol.false)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool hol.false z_2))))) :=
  y_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => w_4 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__11146_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11146_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11146_5 z_2))) y_1) ((__11146_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11146_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11146_5 z_2))) hol.false)) (hol.eq hol.bool ((__11146_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11146_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11146_5 z_2))) y_1) (hol.imp (hol.and (hol.imp hol.false (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 hol.false)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool hol.false z_2)))) (hol.eq hol.bool (hol.imp (hol.and (hol.imp y_1 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 y_1)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool y_1 z_2))) (hol.imp (hol.and (hol.imp hol.false (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 hol.false)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool hol.false z_2)))) (thm_1288 y_1 z_2 x_3 w_4) (thm_1292 y_1 z_2 x_3 w_4).

(; Theorem: |- ((= \lambda _11146. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11146) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) _11146))))) ((Data.Bool.==> ((= w) x)) ((= _11146) z)))) \lambda _11146. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11146) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) _11146))))) ((Data.Bool.==> ((= w) x)) ((= _11146) z)))) ;)

(; dict ;)

def thm_1294 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__11146_4 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 __11146_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool __11146_4 z_1))) (__11146_4 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 __11146_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool __11146_4 z_1)))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__11146_4 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 __11146_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool __11146_4 z_1))).

(; Theorem: |- ((= y) Data.Bool.F) ;)

(; dict ;)

def thm_1295 : y_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool y_1 hol.false) -> hol.proof (hol.eq hol.bool y_1 hol.false) :=
  y_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool y_1 hol.false) => hyp_1.

(; Theorem: |- ((= (\lambda _11146. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11146) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) _11146))))) ((Data.Bool.==> ((= w) x)) ((= _11146) z))) y)) (\lambda _11146. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11146) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) _11146))))) ((Data.Bool.==> ((= w) x)) ((= _11146) z))) Data.Bool.F)) ;)

(; dict ;)

def thm_1296 : y_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> w_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool y_1 hol.false) -> hol.proof (hol.eq hol.bool ((__11146_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11146_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11146_5 z_2))) y_1) ((__11146_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11146_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11146_5 z_2))) hol.false)) :=
  y_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => w_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool y_1 hol.false) => hol.APP_THM hol.bool hol.bool (__11146_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11146_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11146_5 z_2))) (__11146_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11146_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11146_5 z_2))) y_1 hol.false (thm_1294 z_2 x_3 w_4) (thm_1295 y_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> y) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) y))))) ((Data.Bool.==> ((= w) x)) ((= y) z)))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.F))))) ((Data.Bool.==> ((= w) x)) ((= Data.Bool.F) z)))) ;)

(; dict ;)

def thm_1297 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> y_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool y_4 hol.false) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) (hol.imp (hol.and (hol.imp hol.false (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.false)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool hol.false z_1)))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => y_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool y_4 hol.false) => hol.EQ_MP (hol.eq hol.bool ((__11146_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_5 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 __11146_5)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool __11146_5 z_1))) y_4) ((__11146_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11146_5 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 __11146_5)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool __11146_5 z_1))) hol.false)) (hol.eq hol.bool (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) (hol.imp (hol.and (hol.imp hol.false (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.false)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool hol.false z_1)))) (thm_1293 y_4 z_1 x_2 w_3) (thm_1296 y_4 z_1 x_2 w_3 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.F))))) ((Data.Bool.==> ((= w) x)) ((= Data.Bool.F) z)))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> y) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) y))))) ((Data.Bool.==> ((= w) x)) ((= y) z)))) ;)

(; dict ;)

def thm_1298 : y_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> w_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool y_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp hol.false (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 hol.false)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool hol.false z_2))) (hol.imp (hol.and (hol.imp y_1 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 y_1)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool y_1 z_2)))) :=
  y_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => w_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool y_1 hol.false) => hol.SYM hol.bool (hol.imp (hol.and (hol.imp y_1 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 y_1)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool y_1 z_2))) (hol.imp (hol.and (hol.imp hol.false (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 hol.false)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool hol.false z_2))) (thm_1297 z_2 x_3 w_4 y_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) Data.Bool.T) ;)

(; dict ;)

def thm_1299 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.false (hol.and w_3 (hol.imp x_2 z_1))) hol.true) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_460 t_1) (hol.and w_3 (hol.imp x_2 z_1)).

(; Theorem: |- ((= (Data.Bool./\ ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ w) ((Data.Bool.==> x) z))))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_1300 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.imp hol.false (hol.and w_3 (hol.imp x_2 z_1)))) (hol.and hol.true)) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.imp hol.false (hol.and w_3 (hol.imp x_2 z_1))) hol.true thm_298 (thm_1299 z_1 x_2 w_3).

(; Theorem: |- ((= (Data.Bool.==> z)) (Data.Bool.==> z)) ;)

(; dict ;)

def thm_1301 : z_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp z_1) (hol.imp z_1)) :=
  z_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.imp z_1).

(; Theorem: |- ((= (Data.Bool./\ x)) (Data.Bool./\ x)) ;)

(; dict ;)

def thm_1302 : x_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and x_1) (hol.and x_1)) :=
  x_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.and x_1).

(; Theorem: |- ((= ((Data.Bool.==> w) Data.Bool.F)) (Data.Bool.~ w)) ;)

(; dict ;)

def thm_1303 : w_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp w_1 hol.false) (hol.not w_1)) :=
  w_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_478 t_1) w_1.

(; Theorem: |- ((= ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.F))) ((Data.Bool./\ x) (Data.Bool.~ w))) ;)

(; dict ;)

def thm_1304 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and x_2 (hol.imp w_1 hol.false)) (hol.and x_2 (hol.not w_1))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and x_2) (hol.and x_2) (hol.imp w_1 hol.false) (hol.not w_1) (thm_1302 x_2) (thm_1303 w_1).

(; Theorem: |- ((= ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.F)))) ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w)))) ;)

(; dict ;)

def thm_1305 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> z_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp z_3 (hol.and x_2 (hol.imp w_1 hol.false))) (hol.imp z_3 (hol.and x_2 (hol.not w_1)))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => z_3 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.imp z_3) (hol.imp z_3) (hol.and x_2 (hol.imp w_1 hol.false)) (hol.and x_2 (hol.not w_1)) (thm_1301 z_3) (thm_1304 w_1 x_2).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.F))))) ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w))))) ;)

(; dict ;)

def thm_1306 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.imp hol.false (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.false)))) (hol.and hol.true (hol.imp z_1 (hol.and x_2 (hol.not w_3))))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and (hol.imp hol.false (hol.and w_3 (hol.imp x_2 z_1)))) (hol.and hol.true) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.false))) (hol.imp z_1 (hol.and x_2 (hol.not w_3))) (thm_1300 z_1 x_2 w_3) (thm_1305 w_3 x_2 z_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w))))) ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w)))) ;)

(; dict ;)

def thm_1307 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> z_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.true (hol.imp z_3 (hol.and x_2 (hol.not w_1)))) (hol.imp z_3 (hol.and x_2 (hol.not w_1)))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => z_3 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_124 t_1) (hol.imp z_3 (hol.and x_2 (hol.not w_1))).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.F))))) ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w)))) ;)

(; dict ;)

def thm_1308 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.imp hol.false (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.false)))) (hol.imp z_1 (hol.and x_2 (hol.not w_3)))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hol.TRANS hol.bool (hol.and (hol.imp hol.false (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.false)))) (hol.and hol.true (hol.imp z_1 (hol.and x_2 (hol.not w_3)))) (hol.imp z_1 (hol.and x_2 (hol.not w_3))) (thm_1306 z_1 x_2 w_3) (thm_1307 w_3 x_2 z_1).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.F)))))) (Data.Bool.==> ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w))))) ;)

(; dict ;)

def thm_1309 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and (hol.imp hol.false (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.false))))) (hol.imp (hol.imp z_1 (hol.and x_2 (hol.not w_3))))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.and (hol.imp hol.false (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.false)))) (hol.imp z_1 (hol.and x_2 (hol.not w_3))) thm_107 (thm_1308 z_1 x_2 w_3).

(; Theorem: |- ((= (Data.Bool.==> ((= w) x))) (Data.Bool.==> ((= w) x))) ;)

(; dict ;)

def thm_1310 : x_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.eq hol.bool w_2 x_1)) (hol.imp (hol.eq hol.bool w_2 x_1))) :=
  x_1 : hol.term hol.bool => w_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.imp (hol.eq hol.bool w_2 x_1)).

(; Theorem: |- ((= ((= Data.Bool.F) z)) (Data.Bool.~ z)) ;)

(; dict ;)

def thm_1311 : z_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false z_1) (hol.not z_1)) :=
  z_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_214 t_1) z_1.

(; Theorem: |- ((= ((Data.Bool.==> ((= w) x)) ((= Data.Bool.F) z))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ z))) ;)

(; dict ;)

def thm_1312 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool hol.false z_1)) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.not z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.imp (hol.eq hol.bool w_3 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2)) (hol.eq hol.bool hol.false z_1) (hol.not z_1) (thm_1310 x_2 w_3) (thm_1311 z_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.F))))) ((Data.Bool.==> ((= w) x)) ((= Data.Bool.F) z)))) ((Data.Bool.==> ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ z)))) ;)

(; dict ;)

def thm_1313 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp hol.false (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.false)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool hol.false z_1))) (hol.imp (hol.imp z_1 (hol.and x_2 (hol.not w_3))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.not z_1)))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and (hol.imp hol.false (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.false))))) (hol.imp (hol.imp z_1 (hol.and x_2 (hol.not w_3)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool hol.false z_1)) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.not z_1)) (thm_1309 z_1 x_2 w_3) (thm_1312 z_1 x_2 w_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ z)))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.F))))) ((Data.Bool.==> ((= w) x)) ((= Data.Bool.F) z)))) ;)

(; dict ;)

def thm_1314 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> z_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3))) (hol.imp (hol.and (hol.imp hol.false (hol.and w_1 (hol.imp x_2 z_3))) (hol.imp z_3 (hol.and x_2 (hol.imp w_1 hol.false)))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.eq hol.bool hol.false z_3)))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => z_3 : hol.term hol.bool => hol.SYM hol.bool (hol.imp (hol.and (hol.imp hol.false (hol.and w_1 (hol.imp x_2 z_3))) (hol.imp z_3 (hol.and x_2 (hol.imp w_1 hol.false)))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.eq hol.bool hol.false z_3))) (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3))) (thm_1313 z_3 x_2 w_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ z)))) ((Data.Bool.==> ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ z)))) ;)

(; dict ;)

def thm_1315 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> z_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3))) (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3)))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => z_3 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3))).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ z)))) ((Data.Bool.==> ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ z)))) ;)

(; dict ;)

def thm_1316 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> z_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3))) (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3)))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => z_3 : hol.term hol.bool => hol.SYM hol.bool (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3))) (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3))) (thm_1315 w_1 x_2 z_3).

(; Theorem: |- ((= (= (\lambda _11158. ((Data.Bool.==> ((Data.Bool.==> _11158) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ _11158))) z))) (= (\lambda _11158. ((Data.Bool.==> ((Data.Bool.==> _11158) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ _11158))) z))) ;)

(; dict ;)

def thm_1317 : z_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11158_4 : hol.term hol.bool => hol.imp (hol.imp __11158_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11158_4))) z_1)) (hol.eq hol.bool ((__11158_4 : hol.term hol.bool => hol.imp (hol.imp __11158_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11158_4))) z_1))) :=
  z_1 : hol.term hol.bool => w_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11158_4 : hol.term hol.bool => hol.imp (hol.imp __11158_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11158_4))) z_1)).

(; Theorem: |- ((= (\lambda _11158. ((Data.Bool.==> ((Data.Bool.==> _11158) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ _11158))) Data.Bool.F)) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ Data.Bool.F)))) ;)

(; dict ;)

def thm_1318 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__11158_3 : hol.term hol.bool => hol.imp (hol.imp __11158_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not __11158_3))) hol.false) (hol.imp (hol.imp hol.false (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not hol.false)))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__11158_3 : hol.term hol.bool => hol.imp (hol.imp __11158_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not __11158_3))) hol.false.

(; Theorem: |- ((= ((= (\lambda _11158. ((Data.Bool.==> ((Data.Bool.==> _11158) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ _11158))) z)) (\lambda _11158. ((Data.Bool.==> ((Data.Bool.==> _11158) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ _11158))) Data.Bool.F))) ((= (\lambda _11158. ((Data.Bool.==> ((Data.Bool.==> _11158) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ _11158))) z)) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ Data.Bool.F))))) ;)

(; dict ;)

def thm_1319 : z_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11158_4 : hol.term hol.bool => hol.imp (hol.imp __11158_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11158_4))) z_1) ((__11158_4 : hol.term hol.bool => hol.imp (hol.imp __11158_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11158_4))) hol.false)) (hol.eq hol.bool ((__11158_4 : hol.term hol.bool => hol.imp (hol.imp __11158_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11158_4))) z_1) (hol.imp (hol.imp hol.false (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not hol.false))))) :=
  z_1 : hol.term hol.bool => w_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11158_4 : hol.term hol.bool => hol.imp (hol.imp __11158_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11158_4))) z_1)) (hol.eq hol.bool ((__11158_4 : hol.term hol.bool => hol.imp (hol.imp __11158_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11158_4))) z_1)) ((__11158_4 : hol.term hol.bool => hol.imp (hol.imp __11158_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11158_4))) hol.false) (hol.imp (hol.imp hol.false (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not hol.false))) (thm_1317 z_1 w_2 x_3) (thm_1318 w_2 x_3).

(; Theorem: |- ((= (\lambda _11158. ((Data.Bool.==> ((Data.Bool.==> _11158) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ _11158))) z)) ((Data.Bool.==> ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ z)))) ;)

(; dict ;)

def thm_1320 : z_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__11158_4 : hol.term hol.bool => hol.imp (hol.imp __11158_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11158_4))) z_1) (hol.imp (hol.imp z_1 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not z_1)))) :=
  z_1 : hol.term hol.bool => w_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__11158_4 : hol.term hol.bool => hol.imp (hol.imp __11158_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11158_4))) z_1.

(; Theorem: |- ((= (= (\lambda _11158. ((Data.Bool.==> ((Data.Bool.==> _11158) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ _11158))) z))) (= ((Data.Bool.==> ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ z))))) ;)

(; dict ;)

def thm_1321 : z_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11158_4 : hol.term hol.bool => hol.imp (hol.imp __11158_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11158_4))) z_1)) (hol.eq hol.bool (hol.imp (hol.imp z_1 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not z_1))))) :=
  z_1 : hol.term hol.bool => w_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__11158_4 : hol.term hol.bool => hol.imp (hol.imp __11158_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11158_4))) z_1) (hol.imp (hol.imp z_1 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not z_1))) thm_64 (thm_1320 z_1 w_2 x_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ Data.Bool.F)))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ Data.Bool.F)))) ;)

(; dict ;)

def thm_1322 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp hol.false (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not hol.false))) (hol.imp (hol.imp hol.false (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not hol.false)))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.imp hol.false (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not hol.false))).

(; Theorem: |- ((= ((= (\lambda _11158. ((Data.Bool.==> ((Data.Bool.==> _11158) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ _11158))) z)) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ Data.Bool.F))))) ((= ((Data.Bool.==> ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ z)))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ Data.Bool.F))))) ;)

(; dict ;)

def thm_1323 : z_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11158_4 : hol.term hol.bool => hol.imp (hol.imp __11158_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11158_4))) z_1) (hol.imp (hol.imp hol.false (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not hol.false)))) (hol.eq hol.bool (hol.imp (hol.imp z_1 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not z_1))) (hol.imp (hol.imp hol.false (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not hol.false))))) :=
  z_1 : hol.term hol.bool => w_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11158_4 : hol.term hol.bool => hol.imp (hol.imp __11158_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11158_4))) z_1)) (hol.eq hol.bool (hol.imp (hol.imp z_1 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not z_1)))) (hol.imp (hol.imp hol.false (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not hol.false))) (hol.imp (hol.imp hol.false (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not hol.false))) (thm_1321 z_1 w_2 x_3) (thm_1322 w_2 x_3).

(; Theorem: |- ((= ((= (\lambda _11158. ((Data.Bool.==> ((Data.Bool.==> _11158) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ _11158))) z)) (\lambda _11158. ((Data.Bool.==> ((Data.Bool.==> _11158) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ _11158))) Data.Bool.F))) ((= ((Data.Bool.==> ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ z)))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ Data.Bool.F))))) ;)

(; dict ;)

def thm_1324 : z_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11158_4 : hol.term hol.bool => hol.imp (hol.imp __11158_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11158_4))) z_1) ((__11158_4 : hol.term hol.bool => hol.imp (hol.imp __11158_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11158_4))) hol.false)) (hol.eq hol.bool (hol.imp (hol.imp z_1 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not z_1))) (hol.imp (hol.imp hol.false (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not hol.false))))) :=
  z_1 : hol.term hol.bool => w_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__11158_4 : hol.term hol.bool => hol.imp (hol.imp __11158_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11158_4))) z_1) ((__11158_4 : hol.term hol.bool => hol.imp (hol.imp __11158_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11158_4))) hol.false)) (hol.eq hol.bool ((__11158_4 : hol.term hol.bool => hol.imp (hol.imp __11158_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11158_4))) z_1) (hol.imp (hol.imp hol.false (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not hol.false)))) (hol.eq hol.bool (hol.imp (hol.imp z_1 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not z_1))) (hol.imp (hol.imp hol.false (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not hol.false)))) (thm_1319 z_1 w_2 x_3) (thm_1323 z_1 w_2 x_3).

(; Theorem: |- ((= \lambda _11158. ((Data.Bool.==> ((Data.Bool.==> _11158) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ _11158)))) \lambda _11158. ((Data.Bool.==> ((Data.Bool.==> _11158) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ _11158)))) ;)

(; dict ;)

def thm_1325 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__11158_3 : hol.term hol.bool => hol.imp (hol.imp __11158_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not __11158_3))) (__11158_3 : hol.term hol.bool => hol.imp (hol.imp __11158_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not __11158_3)))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__11158_3 : hol.term hol.bool => hol.imp (hol.imp __11158_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not __11158_3))).

(; Theorem: |- ((= z) Data.Bool.F) ;)

(; dict ;)

def thm_1326 : z_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool z_1 hol.false) -> hol.proof (hol.eq hol.bool z_1 hol.false) :=
  z_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool z_1 hol.false) => hyp_1.

(; Theorem: |- ((= (\lambda _11158. ((Data.Bool.==> ((Data.Bool.==> _11158) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ _11158))) z)) (\lambda _11158. ((Data.Bool.==> ((Data.Bool.==> _11158) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ _11158))) Data.Bool.F)) ;)

(; dict ;)

def thm_1327 : z_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool z_1 hol.false) -> hol.proof (hol.eq hol.bool ((__11158_4 : hol.term hol.bool => hol.imp (hol.imp __11158_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11158_4))) z_1) ((__11158_4 : hol.term hol.bool => hol.imp (hol.imp __11158_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11158_4))) hol.false)) :=
  z_1 : hol.term hol.bool => w_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool z_1 hol.false) => hol.APP_THM hol.bool hol.bool (__11158_4 : hol.term hol.bool => hol.imp (hol.imp __11158_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11158_4))) (__11158_4 : hol.term hol.bool => hol.imp (hol.imp __11158_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11158_4))) z_1 hol.false (thm_1325 w_2 x_3) (thm_1326 z_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ z)))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ Data.Bool.F)))) ;)

(; dict ;)

def thm_1328 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> z_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool z_3 hol.false) -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3))) (hol.imp (hol.imp hol.false (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not hol.false)))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => z_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool z_3 hol.false) => hol.EQ_MP (hol.eq hol.bool ((__11158_4 : hol.term hol.bool => hol.imp (hol.imp __11158_4 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not __11158_4))) z_3) ((__11158_4 : hol.term hol.bool => hol.imp (hol.imp __11158_4 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not __11158_4))) hol.false)) (hol.eq hol.bool (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3))) (hol.imp (hol.imp hol.false (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not hol.false)))) (thm_1324 z_3 w_1 x_2) (thm_1327 z_3 w_1 x_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ Data.Bool.F)))) ((Data.Bool.==> ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ z)))) ;)

(; dict ;)

def thm_1329 : z_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool z_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp hol.false (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not hol.false))) (hol.imp (hol.imp z_1 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not z_1)))) :=
  z_1 : hol.term hol.bool => w_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool z_1 hol.false) => hol.SYM hol.bool (hol.imp (hol.imp z_1 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not z_1))) (hol.imp (hol.imp hol.false (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not hol.false))) (thm_1328 w_2 x_3 z_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ x) (Data.Bool.~ w)))) Data.Bool.T) ;)

(; dict ;)

def thm_1330 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.false (hol.and x_2 (hol.not w_1))) hol.true) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_460 t_1) (hol.and x_2 (hol.not w_1)).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ x) (Data.Bool.~ w))))) (Data.Bool.==> Data.Bool.T)) ;)

(; dict ;)

def thm_1331 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.imp hol.false (hol.and x_2 (hol.not w_1)))) (hol.imp hol.true)) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.imp hol.false (hol.and x_2 (hol.not w_1))) hol.true thm_107 (thm_1330 w_1 x_2).

(; Theorem: |- ((= ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)) ;)

(; dict ;)

def thm_1332 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.eq hol.bool (hol.not hol.false) hol.true)) :=
  hol.REFL hol.bool (hol.eq hol.bool (hol.not hol.false) hol.true).

(; Theorem: |- ((= ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)) ;)

(; dict ;)

def thm_1333 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.eq hol.bool (hol.not hol.false) hol.true)) :=
  hol.TRANS hol.bool (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.eq hol.bool (hol.not hol.false) hol.true) thm_1332 thm_1332.

(; Theorem: |- ((= ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ;)

(; dict ;)

def thm_1334 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.true) hol.false)) :=
  hol.REFL hol.bool (hol.eq hol.bool (hol.not hol.true) hol.false).

(; Theorem: |- ((= ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ;)

(; dict ;)

def thm_1335 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.true) hol.false)) :=
  hol.TRANS hol.bool (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.true) hol.false) thm_1334 thm_1334.

(; Theorem: |- ((= ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)) ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T))) ;)

(; dict ;)

def thm_1336 : hyp_1 : hol.proof (hol.eq hol.bool (hol.not hol.true) hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) :=
  hyp_1 : hol.proof (hol.eq hol.bool (hol.not hol.true) hol.false) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true) hyp_1.

(; Theorem: |- ((= ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)) ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T))) ;)

(; dict ;)

def thm_1337 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) :=
  hol.PROVE_HYP (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) (hol.EQ_MP (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.true) hol.false) thm_1335 thm_31) (hyp_1 : hol.proof (hol.eq hol.bool (hol.not hol.true) hol.false) => thm_1336 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)) ;)

(; dict ;)

def thm_1338 : hol.proof (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) :=
  hol.EQ_MP (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) thm_1337 (hol.EQ_MP (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.eq hol.bool (hol.not hol.false) hol.true) thm_1332 thm_32).

(; Theorem: |- ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T) ;)

(; dict ;)

def thm_1339 : hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) -> hol.proof (hol.eq hol.bool (hol.not hol.false) hol.true) :=
  hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true) hyp_1.

(; Theorem: |- ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T) ;)

(; dict ;)

def thm_1340 : hol.proof (hol.eq hol.bool (hol.not hol.false) hol.true) :=
  hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) (hol.eq hol.bool (hol.not hol.false) hol.true) thm_1338 (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) => thm_1339 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= w) x)) (Data.Bool.~ Data.Bool.F))) ((Data.Bool.==> ((= w) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_1341 : x_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool w_2 x_1) (hol.not hol.false)) (hol.imp (hol.eq hol.bool w_2 x_1) hol.true)) :=
  x_1 : hol.term hol.bool => w_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.imp (hol.eq hol.bool w_2 x_1)) (hol.imp (hol.eq hol.bool w_2 x_1)) (hol.not hol.false) hol.true (thm_1310 x_1 w_2) (hol.EQ_MP (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.eq hol.bool (hol.not hol.false) hol.true) thm_1333 thm_1340).

(; Theorem: |- ((= ((Data.Bool.==> ((= w) x)) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_1342 : x_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool w_2 x_1) hol.true) hol.true) :=
  x_1 : hol.term hol.bool => w_2 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_455 t_1) (hol.eq hol.bool w_2 x_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= w) x)) (Data.Bool.~ Data.Bool.F))) Data.Bool.T) ;)

(; dict ;)

def thm_1343 : x_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool w_2 x_1) (hol.not hol.false)) hol.true) :=
  x_1 : hol.term hol.bool => w_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.imp (hol.eq hol.bool w_2 x_1) (hol.not hol.false)) (hol.imp (hol.eq hol.bool w_2 x_1) hol.true) hol.true (thm_1341 x_1 w_2) (thm_1342 x_1 w_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ Data.Bool.F)))) ((Data.Bool.==> Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_1344 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp hol.false (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not hol.false))) (hol.imp hol.true hol.true)) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.imp (hol.imp hol.false (hol.and x_2 (hol.not w_1)))) (hol.imp hol.true) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not hol.false)) hol.true (thm_1331 w_1 x_2) (thm_1343 x_2 w_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_1345 : hol.proof (hol.eq hol.bool (hol.imp hol.true hol.true) hol.true) :=
  (t_1 : hol.term hol.bool => thm_450 t_1) hol.true.

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ Data.Bool.F)))) Data.Bool.T) ;)

(; dict ;)

def thm_1346 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp hol.false (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not hol.false))) hol.true) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.imp (hol.imp hol.false (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not hol.false))) (hol.imp hol.true hol.true) hol.true (thm_1344 w_1 x_2) thm_1345.

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ Data.Bool.F)))) ;)

(; dict ;)

def thm_1347 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.imp (hol.imp hol.false (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not hol.false)))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.SYM hol.bool (hol.imp (hol.imp hol.false (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not hol.false))) hol.true (thm_1346 w_1 x_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ Data.Bool.F))) ;)

(; dict ;)

def thm_1348 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.imp hol.false (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not hol.false))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.EQ_MP hol.true (hol.imp (hol.imp hol.false (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not hol.false))) (thm_1347 w_1 x_2) thm_15.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ z))) ;)

(; dict ;)

def thm_1349 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> z_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool z_3 hol.false) -> hol.proof (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => z_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool z_3 hol.false) => hol.EQ_MP (hol.imp (hol.imp hol.false (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not hol.false))) (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3))) (thm_1329 z_3 w_1 x_2 hyp_1) (thm_1348 w_1 x_2).

(; Theorem: |- ((Data.Bool.==> ((= z) Data.Bool.F)) ((Data.Bool.==> ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ z)))) ;)

(; dict ;)

def thm_1350 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> z_3 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool z_3 hol.false) (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3)))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => z_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool z_3 hol.false) => thm_1349 w_1 x_2 z_3 hyp_1.

(; Theorem: |- ((= (= (\lambda _11156. ((Data.Bool.==> ((Data.Bool.==> _11156) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ _11156))) z))) (= (\lambda _11156. ((Data.Bool.==> ((Data.Bool.==> _11156) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ _11156))) z))) ;)

(; dict ;)

def thm_1351 : z_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11156_4 : hol.term hol.bool => hol.imp (hol.imp __11156_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11156_4))) z_1)) (hol.eq hol.bool ((__11156_4 : hol.term hol.bool => hol.imp (hol.imp __11156_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11156_4))) z_1))) :=
  z_1 : hol.term hol.bool => w_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11156_4 : hol.term hol.bool => hol.imp (hol.imp __11156_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11156_4))) z_1)).

(; Theorem: |- ((= (\lambda _11156. ((Data.Bool.==> ((Data.Bool.==> _11156) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ _11156))) Data.Bool.T)) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ Data.Bool.T)))) ;)

(; dict ;)

def thm_1352 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__11156_3 : hol.term hol.bool => hol.imp (hol.imp __11156_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not __11156_3))) hol.true) (hol.imp (hol.imp hol.true (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not hol.true)))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__11156_3 : hol.term hol.bool => hol.imp (hol.imp __11156_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not __11156_3))) hol.true.

(; Theorem: |- ((= ((= (\lambda _11156. ((Data.Bool.==> ((Data.Bool.==> _11156) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ _11156))) z)) (\lambda _11156. ((Data.Bool.==> ((Data.Bool.==> _11156) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ _11156))) Data.Bool.T))) ((= (\lambda _11156. ((Data.Bool.==> ((Data.Bool.==> _11156) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ _11156))) z)) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ Data.Bool.T))))) ;)

(; dict ;)

def thm_1353 : z_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11156_4 : hol.term hol.bool => hol.imp (hol.imp __11156_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11156_4))) z_1) ((__11156_4 : hol.term hol.bool => hol.imp (hol.imp __11156_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11156_4))) hol.true)) (hol.eq hol.bool ((__11156_4 : hol.term hol.bool => hol.imp (hol.imp __11156_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11156_4))) z_1) (hol.imp (hol.imp hol.true (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not hol.true))))) :=
  z_1 : hol.term hol.bool => w_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11156_4 : hol.term hol.bool => hol.imp (hol.imp __11156_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11156_4))) z_1)) (hol.eq hol.bool ((__11156_4 : hol.term hol.bool => hol.imp (hol.imp __11156_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11156_4))) z_1)) ((__11156_4 : hol.term hol.bool => hol.imp (hol.imp __11156_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11156_4))) hol.true) (hol.imp (hol.imp hol.true (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not hol.true))) (thm_1351 z_1 w_2 x_3) (thm_1352 w_2 x_3).

(; Theorem: |- ((= (\lambda _11156. ((Data.Bool.==> ((Data.Bool.==> _11156) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ _11156))) z)) ((Data.Bool.==> ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ z)))) ;)

(; dict ;)

def thm_1354 : z_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__11156_4 : hol.term hol.bool => hol.imp (hol.imp __11156_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11156_4))) z_1) (hol.imp (hol.imp z_1 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not z_1)))) :=
  z_1 : hol.term hol.bool => w_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__11156_4 : hol.term hol.bool => hol.imp (hol.imp __11156_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11156_4))) z_1.

(; Theorem: |- ((= (= (\lambda _11156. ((Data.Bool.==> ((Data.Bool.==> _11156) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ _11156))) z))) (= ((Data.Bool.==> ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ z))))) ;)

(; dict ;)

def thm_1355 : z_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11156_4 : hol.term hol.bool => hol.imp (hol.imp __11156_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11156_4))) z_1)) (hol.eq hol.bool (hol.imp (hol.imp z_1 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not z_1))))) :=
  z_1 : hol.term hol.bool => w_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__11156_4 : hol.term hol.bool => hol.imp (hol.imp __11156_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11156_4))) z_1) (hol.imp (hol.imp z_1 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not z_1))) thm_64 (thm_1354 z_1 w_2 x_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ Data.Bool.T)))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ Data.Bool.T)))) ;)

(; dict ;)

def thm_1356 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp hol.true (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not hol.true))) (hol.imp (hol.imp hol.true (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not hol.true)))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.imp hol.true (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not hol.true))).

(; Theorem: |- ((= ((= (\lambda _11156. ((Data.Bool.==> ((Data.Bool.==> _11156) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ _11156))) z)) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ Data.Bool.T))))) ((= ((Data.Bool.==> ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ z)))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ Data.Bool.T))))) ;)

(; dict ;)

def thm_1357 : z_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11156_4 : hol.term hol.bool => hol.imp (hol.imp __11156_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11156_4))) z_1) (hol.imp (hol.imp hol.true (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not hol.true)))) (hol.eq hol.bool (hol.imp (hol.imp z_1 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not z_1))) (hol.imp (hol.imp hol.true (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not hol.true))))) :=
  z_1 : hol.term hol.bool => w_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11156_4 : hol.term hol.bool => hol.imp (hol.imp __11156_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11156_4))) z_1)) (hol.eq hol.bool (hol.imp (hol.imp z_1 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not z_1)))) (hol.imp (hol.imp hol.true (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not hol.true))) (hol.imp (hol.imp hol.true (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not hol.true))) (thm_1355 z_1 w_2 x_3) (thm_1356 w_2 x_3).

(; Theorem: |- ((= ((= (\lambda _11156. ((Data.Bool.==> ((Data.Bool.==> _11156) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ _11156))) z)) (\lambda _11156. ((Data.Bool.==> ((Data.Bool.==> _11156) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ _11156))) Data.Bool.T))) ((= ((Data.Bool.==> ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ z)))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ Data.Bool.T))))) ;)

(; dict ;)

def thm_1358 : z_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11156_4 : hol.term hol.bool => hol.imp (hol.imp __11156_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11156_4))) z_1) ((__11156_4 : hol.term hol.bool => hol.imp (hol.imp __11156_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11156_4))) hol.true)) (hol.eq hol.bool (hol.imp (hol.imp z_1 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not z_1))) (hol.imp (hol.imp hol.true (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not hol.true))))) :=
  z_1 : hol.term hol.bool => w_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__11156_4 : hol.term hol.bool => hol.imp (hol.imp __11156_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11156_4))) z_1) ((__11156_4 : hol.term hol.bool => hol.imp (hol.imp __11156_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11156_4))) hol.true)) (hol.eq hol.bool ((__11156_4 : hol.term hol.bool => hol.imp (hol.imp __11156_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11156_4))) z_1) (hol.imp (hol.imp hol.true (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not hol.true)))) (hol.eq hol.bool (hol.imp (hol.imp z_1 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not z_1))) (hol.imp (hol.imp hol.true (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not hol.true)))) (thm_1353 z_1 w_2 x_3) (thm_1357 z_1 w_2 x_3).

(; Theorem: |- ((= \lambda _11156. ((Data.Bool.==> ((Data.Bool.==> _11156) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ _11156)))) \lambda _11156. ((Data.Bool.==> ((Data.Bool.==> _11156) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ _11156)))) ;)

(; dict ;)

def thm_1359 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__11156_3 : hol.term hol.bool => hol.imp (hol.imp __11156_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not __11156_3))) (__11156_3 : hol.term hol.bool => hol.imp (hol.imp __11156_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not __11156_3)))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__11156_3 : hol.term hol.bool => hol.imp (hol.imp __11156_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not __11156_3))).

(; Theorem: |- ((= z) Data.Bool.T) ;)

(; dict ;)

def thm_1360 : z_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool z_1 hol.true) -> hol.proof (hol.eq hol.bool z_1 hol.true) :=
  z_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool z_1 hol.true) => hyp_1.

(; Theorem: |- ((= (\lambda _11156. ((Data.Bool.==> ((Data.Bool.==> _11156) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ _11156))) z)) (\lambda _11156. ((Data.Bool.==> ((Data.Bool.==> _11156) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ _11156))) Data.Bool.T)) ;)

(; dict ;)

def thm_1361 : z_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool z_1 hol.true) -> hol.proof (hol.eq hol.bool ((__11156_4 : hol.term hol.bool => hol.imp (hol.imp __11156_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11156_4))) z_1) ((__11156_4 : hol.term hol.bool => hol.imp (hol.imp __11156_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11156_4))) hol.true)) :=
  z_1 : hol.term hol.bool => w_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool z_1 hol.true) => hol.APP_THM hol.bool hol.bool (__11156_4 : hol.term hol.bool => hol.imp (hol.imp __11156_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11156_4))) (__11156_4 : hol.term hol.bool => hol.imp (hol.imp __11156_4 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not __11156_4))) z_1 hol.true (thm_1359 w_2 x_3) (thm_1360 z_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ z)))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ Data.Bool.T)))) ;)

(; dict ;)

def thm_1362 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> z_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool z_3 hol.true) -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3))) (hol.imp (hol.imp hol.true (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not hol.true)))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => z_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool z_3 hol.true) => hol.EQ_MP (hol.eq hol.bool ((__11156_4 : hol.term hol.bool => hol.imp (hol.imp __11156_4 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not __11156_4))) z_3) ((__11156_4 : hol.term hol.bool => hol.imp (hol.imp __11156_4 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not __11156_4))) hol.true)) (hol.eq hol.bool (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3))) (hol.imp (hol.imp hol.true (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not hol.true)))) (thm_1358 z_3 w_1 x_2) (thm_1361 z_3 w_1 x_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ Data.Bool.T)))) ((Data.Bool.==> ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ z)))) ;)

(; dict ;)

def thm_1363 : z_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool z_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp hol.true (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not hol.true))) (hol.imp (hol.imp z_1 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not z_1)))) :=
  z_1 : hol.term hol.bool => w_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool z_1 hol.true) => hol.SYM hol.bool (hol.imp (hol.imp z_1 (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not z_1))) (hol.imp (hol.imp hol.true (hol.and x_3 (hol.not w_2))) (hol.imp (hol.eq hol.bool w_2 x_3) (hol.not hol.true))) (thm_1362 w_2 x_3 z_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool./\ x) (Data.Bool.~ w))) ;)

(; dict ;)

def thm_1364 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.true (hol.and x_2 (hol.not w_1))) (hol.and x_2 (hol.not w_1))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_450 t_1) (hol.and x_2 (hol.not w_1)).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ x) (Data.Bool.~ w))))) (Data.Bool.==> ((Data.Bool./\ x) (Data.Bool.~ w)))) ;)

(; dict ;)

def thm_1365 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.imp hol.true (hol.and x_2 (hol.not w_1)))) (hol.imp (hol.and x_2 (hol.not w_1)))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.imp hol.true (hol.and x_2 (hol.not w_1))) (hol.and x_2 (hol.not w_1)) thm_107 (thm_1364 w_1 x_2).

(; Theorem: |- ((= ((Data.Bool.==> ((= w) x)) (Data.Bool.~ Data.Bool.T))) ((Data.Bool.==> ((= w) x)) Data.Bool.F)) ;)

(; dict ;)

def thm_1366 : x_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool w_2 x_1) (hol.not hol.true)) (hol.imp (hol.eq hol.bool w_2 x_1) hol.false)) :=
  x_1 : hol.term hol.bool => w_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.imp (hol.eq hol.bool w_2 x_1)) (hol.imp (hol.eq hol.bool w_2 x_1)) (hol.not hol.true) hol.false (thm_1310 x_1 w_2) thm_31.

(; Theorem: |- ((= ((Data.Bool.==> ((= w) x)) Data.Bool.F)) (Data.Bool.~ ((= w) x))) ;)

(; dict ;)

def thm_1367 : x_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool w_2 x_1) hol.false) (hol.not (hol.eq hol.bool w_2 x_1))) :=
  x_1 : hol.term hol.bool => w_2 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_478 t_1) (hol.eq hol.bool w_2 x_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= w) x)) (Data.Bool.~ Data.Bool.T))) (Data.Bool.~ ((= w) x))) ;)

(; dict ;)

def thm_1368 : x_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool w_2 x_1) (hol.not hol.true)) (hol.not (hol.eq hol.bool w_2 x_1))) :=
  x_1 : hol.term hol.bool => w_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.imp (hol.eq hol.bool w_2 x_1) (hol.not hol.true)) (hol.imp (hol.eq hol.bool w_2 x_1) hol.false) (hol.not (hol.eq hol.bool w_2 x_1)) (thm_1366 x_1 w_2) (thm_1367 x_1 w_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ Data.Bool.T)))) ((Data.Bool.==> ((Data.Bool./\ x) (Data.Bool.~ w))) (Data.Bool.~ ((= w) x)))) ;)

(; dict ;)

def thm_1369 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp hol.true (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not hol.true))) (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2)))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.imp (hol.imp hol.true (hol.and x_2 (hol.not w_1)))) (hol.imp (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not hol.true)) (hol.not (hol.eq hol.bool w_1 x_2)) (thm_1365 w_1 x_2) (thm_1368 x_2 w_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ x) (Data.Bool.~ w))) (Data.Bool.~ ((= w) x)))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ Data.Bool.T)))) ;)

(; dict ;)

def thm_1370 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2))) (hol.imp (hol.imp hol.true (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not hol.true)))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.SYM hol.bool (hol.imp (hol.imp hol.true (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not hol.true))) (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2))) (thm_1369 w_1 x_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ x) (Data.Bool.~ w))) (Data.Bool.~ ((= w) x)))) ((Data.Bool.==> ((Data.Bool./\ x) (Data.Bool.~ w))) (Data.Bool.~ ((= w) x)))) ;)

(; dict ;)

def thm_1371 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2))) (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2)))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2))).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ x) (Data.Bool.~ w))) (Data.Bool.~ ((= w) x)))) ((Data.Bool.==> ((Data.Bool./\ x) (Data.Bool.~ w))) (Data.Bool.~ ((= w) x)))) ;)

(; dict ;)

def thm_1372 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2))) (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2)))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.SYM hol.bool (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2))) (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2))) (thm_1371 w_1 x_2).

(; Theorem: |- ((= (= (\lambda _11162. ((Data.Bool.==> ((Data.Bool./\ _11162) (Data.Bool.~ w))) (Data.Bool.~ ((= w) _11162))) x))) (= (\lambda _11162. ((Data.Bool.==> ((Data.Bool./\ _11162) (Data.Bool.~ w))) (Data.Bool.~ ((= w) _11162))) x))) ;)

(; dict ;)

def thm_1373 : x_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11162_3 : hol.term hol.bool => hol.imp (hol.and __11162_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11162_3))) x_1)) (hol.eq hol.bool ((__11162_3 : hol.term hol.bool => hol.imp (hol.and __11162_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11162_3))) x_1))) :=
  x_1 : hol.term hol.bool => w_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11162_3 : hol.term hol.bool => hol.imp (hol.and __11162_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11162_3))) x_1)).

(; Theorem: |- ((= (\lambda _11162. ((Data.Bool.==> ((Data.Bool./\ _11162) (Data.Bool.~ w))) (Data.Bool.~ ((= w) _11162))) Data.Bool.F)) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ w))) (Data.Bool.~ ((= w) Data.Bool.F)))) ;)

(; dict ;)

def thm_1374 : w_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__11162_2 : hol.term hol.bool => hol.imp (hol.and __11162_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 __11162_2))) hol.false) (hol.imp (hol.and hol.false (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 hol.false)))) :=
  w_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__11162_2 : hol.term hol.bool => hol.imp (hol.and __11162_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 __11162_2))) hol.false.

(; Theorem: |- ((= ((= (\lambda _11162. ((Data.Bool.==> ((Data.Bool./\ _11162) (Data.Bool.~ w))) (Data.Bool.~ ((= w) _11162))) x)) (\lambda _11162. ((Data.Bool.==> ((Data.Bool./\ _11162) (Data.Bool.~ w))) (Data.Bool.~ ((= w) _11162))) Data.Bool.F))) ((= (\lambda _11162. ((Data.Bool.==> ((Data.Bool./\ _11162) (Data.Bool.~ w))) (Data.Bool.~ ((= w) _11162))) x)) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ w))) (Data.Bool.~ ((= w) Data.Bool.F))))) ;)

(; dict ;)

def thm_1375 : x_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11162_3 : hol.term hol.bool => hol.imp (hol.and __11162_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11162_3))) x_1) ((__11162_3 : hol.term hol.bool => hol.imp (hol.and __11162_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11162_3))) hol.false)) (hol.eq hol.bool ((__11162_3 : hol.term hol.bool => hol.imp (hol.and __11162_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11162_3))) x_1) (hol.imp (hol.and hol.false (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 hol.false))))) :=
  x_1 : hol.term hol.bool => w_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11162_3 : hol.term hol.bool => hol.imp (hol.and __11162_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11162_3))) x_1)) (hol.eq hol.bool ((__11162_3 : hol.term hol.bool => hol.imp (hol.and __11162_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11162_3))) x_1)) ((__11162_3 : hol.term hol.bool => hol.imp (hol.and __11162_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11162_3))) hol.false) (hol.imp (hol.and hol.false (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 hol.false))) (thm_1373 x_1 w_2) (thm_1374 w_2).

(; Theorem: |- ((= (\lambda _11162. ((Data.Bool.==> ((Data.Bool./\ _11162) (Data.Bool.~ w))) (Data.Bool.~ ((= w) _11162))) x)) ((Data.Bool.==> ((Data.Bool./\ x) (Data.Bool.~ w))) (Data.Bool.~ ((= w) x)))) ;)

(; dict ;)

def thm_1376 : x_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__11162_3 : hol.term hol.bool => hol.imp (hol.and __11162_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11162_3))) x_1) (hol.imp (hol.and x_1 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 x_1)))) :=
  x_1 : hol.term hol.bool => w_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__11162_3 : hol.term hol.bool => hol.imp (hol.and __11162_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11162_3))) x_1.

(; Theorem: |- ((= (= (\lambda _11162. ((Data.Bool.==> ((Data.Bool./\ _11162) (Data.Bool.~ w))) (Data.Bool.~ ((= w) _11162))) x))) (= ((Data.Bool.==> ((Data.Bool./\ x) (Data.Bool.~ w))) (Data.Bool.~ ((= w) x))))) ;)

(; dict ;)

def thm_1377 : x_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11162_3 : hol.term hol.bool => hol.imp (hol.and __11162_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11162_3))) x_1)) (hol.eq hol.bool (hol.imp (hol.and x_1 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 x_1))))) :=
  x_1 : hol.term hol.bool => w_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__11162_3 : hol.term hol.bool => hol.imp (hol.and __11162_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11162_3))) x_1) (hol.imp (hol.and x_1 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 x_1))) thm_64 (thm_1376 x_1 w_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ w))) (Data.Bool.~ ((= w) Data.Bool.F)))) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ w))) (Data.Bool.~ ((= w) Data.Bool.F)))) ;)

(; dict ;)

def thm_1378 : w_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and hol.false (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 hol.false))) (hol.imp (hol.and hol.false (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 hol.false)))) :=
  w_1 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.and hol.false (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 hol.false))).

(; Theorem: |- ((= ((= (\lambda _11162. ((Data.Bool.==> ((Data.Bool./\ _11162) (Data.Bool.~ w))) (Data.Bool.~ ((= w) _11162))) x)) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ w))) (Data.Bool.~ ((= w) Data.Bool.F))))) ((= ((Data.Bool.==> ((Data.Bool./\ x) (Data.Bool.~ w))) (Data.Bool.~ ((= w) x)))) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ w))) (Data.Bool.~ ((= w) Data.Bool.F))))) ;)

(; dict ;)

def thm_1379 : x_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11162_3 : hol.term hol.bool => hol.imp (hol.and __11162_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11162_3))) x_1) (hol.imp (hol.and hol.false (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 hol.false)))) (hol.eq hol.bool (hol.imp (hol.and x_1 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 x_1))) (hol.imp (hol.and hol.false (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 hol.false))))) :=
  x_1 : hol.term hol.bool => w_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11162_3 : hol.term hol.bool => hol.imp (hol.and __11162_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11162_3))) x_1)) (hol.eq hol.bool (hol.imp (hol.and x_1 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 x_1)))) (hol.imp (hol.and hol.false (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 hol.false))) (hol.imp (hol.and hol.false (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 hol.false))) (thm_1377 x_1 w_2) (thm_1378 w_2).

(; Theorem: |- ((= ((= (\lambda _11162. ((Data.Bool.==> ((Data.Bool./\ _11162) (Data.Bool.~ w))) (Data.Bool.~ ((= w) _11162))) x)) (\lambda _11162. ((Data.Bool.==> ((Data.Bool./\ _11162) (Data.Bool.~ w))) (Data.Bool.~ ((= w) _11162))) Data.Bool.F))) ((= ((Data.Bool.==> ((Data.Bool./\ x) (Data.Bool.~ w))) (Data.Bool.~ ((= w) x)))) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ w))) (Data.Bool.~ ((= w) Data.Bool.F))))) ;)

(; dict ;)

def thm_1380 : x_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11162_3 : hol.term hol.bool => hol.imp (hol.and __11162_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11162_3))) x_1) ((__11162_3 : hol.term hol.bool => hol.imp (hol.and __11162_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11162_3))) hol.false)) (hol.eq hol.bool (hol.imp (hol.and x_1 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 x_1))) (hol.imp (hol.and hol.false (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 hol.false))))) :=
  x_1 : hol.term hol.bool => w_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__11162_3 : hol.term hol.bool => hol.imp (hol.and __11162_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11162_3))) x_1) ((__11162_3 : hol.term hol.bool => hol.imp (hol.and __11162_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11162_3))) hol.false)) (hol.eq hol.bool ((__11162_3 : hol.term hol.bool => hol.imp (hol.and __11162_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11162_3))) x_1) (hol.imp (hol.and hol.false (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 hol.false)))) (hol.eq hol.bool (hol.imp (hol.and x_1 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 x_1))) (hol.imp (hol.and hol.false (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 hol.false)))) (thm_1375 x_1 w_2) (thm_1379 x_1 w_2).

(; Theorem: |- ((= \lambda _11162. ((Data.Bool.==> ((Data.Bool./\ _11162) (Data.Bool.~ w))) (Data.Bool.~ ((= w) _11162)))) \lambda _11162. ((Data.Bool.==> ((Data.Bool./\ _11162) (Data.Bool.~ w))) (Data.Bool.~ ((= w) _11162)))) ;)

(; dict ;)

def thm_1381 : w_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__11162_2 : hol.term hol.bool => hol.imp (hol.and __11162_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 __11162_2))) (__11162_2 : hol.term hol.bool => hol.imp (hol.and __11162_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 __11162_2)))) :=
  w_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__11162_2 : hol.term hol.bool => hol.imp (hol.and __11162_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 __11162_2))).

(; Theorem: |- ((= (\lambda _11162. ((Data.Bool.==> ((Data.Bool./\ _11162) (Data.Bool.~ w))) (Data.Bool.~ ((= w) _11162))) x)) (\lambda _11162. ((Data.Bool.==> ((Data.Bool./\ _11162) (Data.Bool.~ w))) (Data.Bool.~ ((= w) _11162))) Data.Bool.F)) ;)

(; dict ;)

def thm_1382 : x_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.false) -> hol.proof (hol.eq hol.bool ((__11162_3 : hol.term hol.bool => hol.imp (hol.and __11162_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11162_3))) x_1) ((__11162_3 : hol.term hol.bool => hol.imp (hol.and __11162_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11162_3))) hol.false)) :=
  x_1 : hol.term hol.bool => w_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.false) => hol.APP_THM hol.bool hol.bool (__11162_3 : hol.term hol.bool => hol.imp (hol.and __11162_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11162_3))) (__11162_3 : hol.term hol.bool => hol.imp (hol.and __11162_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11162_3))) x_1 hol.false (thm_1381 w_2) (thm_712 x_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ x) (Data.Bool.~ w))) (Data.Bool.~ ((= w) x)))) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ w))) (Data.Bool.~ ((= w) Data.Bool.F)))) ;)

(; dict ;)

def thm_1383 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2))) (hol.imp (hol.and hol.false (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 hol.false)))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_2 hol.false) => hol.EQ_MP (hol.eq hol.bool ((__11162_3 : hol.term hol.bool => hol.imp (hol.and __11162_3 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 __11162_3))) x_2) ((__11162_3 : hol.term hol.bool => hol.imp (hol.and __11162_3 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 __11162_3))) hol.false)) (hol.eq hol.bool (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2))) (hol.imp (hol.and hol.false (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 hol.false)))) (thm_1380 x_2 w_1) (thm_1382 x_2 w_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ w))) (Data.Bool.~ ((= w) Data.Bool.F)))) ((Data.Bool.==> ((Data.Bool./\ x) (Data.Bool.~ w))) (Data.Bool.~ ((= w) x)))) ;)

(; dict ;)

def thm_1384 : x_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and hol.false (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 hol.false))) (hol.imp (hol.and x_1 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 x_1)))) :=
  x_1 : hol.term hol.bool => w_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.false) => hol.SYM hol.bool (hol.imp (hol.and x_1 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 x_1))) (hol.imp (hol.and hol.false (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 hol.false))) (thm_1383 w_2 x_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ w))) Data.Bool.F) ;)

(; dict ;)

def thm_1385 : w_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.false (hol.not w_1)) hol.false) :=
  w_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_162 t_1) (hol.not w_1).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ w)))) (Data.Bool.==> Data.Bool.F)) ;)

(; dict ;)

def thm_1386 : w_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and hol.false (hol.not w_1))) (hol.imp hol.false)) :=
  w_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.and hol.false (hol.not w_1)) hol.false thm_107 (thm_1385 w_1).

(; Theorem: |- ((= Data.Bool.~) Data.Bool.~) ;)

(; dict ;)

def thm_1387 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) hol.not hol.not) :=
  hol.REFL (hol.arr hol.bool hol.bool) hol.not.

(; Theorem: |- ((= ((= w) Data.Bool.F)) (Data.Bool.~ w)) ;)

(; dict ;)

def thm_1388 : w_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool w_1 hol.false) (hol.not w_1)) :=
  w_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_219 t_1) w_1.

(; Theorem: |- ((= (Data.Bool.~ ((= w) Data.Bool.F))) (Data.Bool.~ (Data.Bool.~ w))) ;)

(; dict ;)

def thm_1389 : w_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.bool w_1 hol.false)) (hol.not (hol.not w_1))) :=
  w_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.eq hol.bool w_1 hol.false) (hol.not w_1) thm_1387 (thm_1388 w_1).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.~ t))) t)) ((= (Data.Bool.~ (Data.Bool.~ t))) t)) ;)

(; dict ;)

def thm_1390 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) (hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.not t_1)) t_1).

(; Theorem: |- ((= ((= (Data.Bool.~ (Data.Bool.~ t))) t)) ((= (Data.Bool.~ (Data.Bool.~ t))) t)) ;)

(; dict ;)

def thm_1391 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) (hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) (thm_1390 t_1) (thm_1390 t_1).

(; Theorem: |- ((= ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T))) ((Data.Bool./\ (Data.Bool.! \lambda t. ((= (Data.Bool.~ (Data.Bool.~ t))) t))) ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)))) ;)

(; dict ;)

def thm_1392 : hyp_1 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)))) :=
  hyp_1 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T))) ((Data.Bool./\ (Data.Bool.! \lambda t. ((= (Data.Bool.~ (Data.Bool.~ t))) t))) ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)))) ;)

(; dict ;)

def thm_1393 : hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)))) :=
  hol.PROVE_HYP (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)))) thm_33 (hyp_1 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) => thm_1392 hyp_1).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda t. ((= (Data.Bool.~ (Data.Bool.~ t))) t))) ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T))) ;)

(; dict ;)

def thm_1394 : hol.proof (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) :=
  hol.EQ_MP (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) thm_1393 thm_1338.

(; Theorem: |- (Data.Bool.! \lambda t. ((= (Data.Bool.~ (Data.Bool.~ t))) t)) ;)

(; dict ;)

def thm_1395 : hyp_1 : hol.proof (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) -> hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) :=
  hyp_1 : hol.proof (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_185 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda t. ((= (Data.Bool.~ (Data.Bool.~ t))) t)) ;)

(; dict ;)

def thm_1396 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) :=
  hol.PROVE_HYP (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) thm_1394 (hyp_1 : hol.proof (hol.and (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.not t_1)) t_1)) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) => thm_1395 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ t))) t) ;)

(; dict ;)

def thm_1397 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) :=
  t_1 : hol.term hol.bool => thm_1396 t_1.

(; Theorem: |- ((= (Data.Bool.~ (Data.Bool.~ w))) w) ;)

(; dict ;)

def thm_1398 : w_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.not w_1)) w_1) :=
  w_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) (hol.eq hol.bool (hol.not (hol.not t_1)) t_1) (thm_1391 t_1) (thm_1397 t_1)) w_1.

(; Theorem: |- ((= (Data.Bool.~ ((= w) Data.Bool.F))) w) ;)

(; dict ;)

def thm_1399 : w_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.bool w_1 hol.false)) w_1) :=
  w_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.not (hol.eq hol.bool w_1 hol.false)) (hol.not (hol.not w_1)) w_1 (thm_1389 w_1) (thm_1398 w_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ w))) (Data.Bool.~ ((= w) Data.Bool.F)))) ((Data.Bool.==> Data.Bool.F) w)) ;)

(; dict ;)

def thm_1400 : w_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and hol.false (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 hol.false))) (hol.imp hol.false w_1)) :=
  w_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and hol.false (hol.not w_1))) (hol.imp hol.false) (hol.not (hol.eq hol.bool w_1 hol.false)) w_1 (thm_1386 w_1) (thm_1399 w_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) w)) Data.Bool.T) ;)

(; dict ;)

def thm_1401 : w_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.false w_1) hol.true) :=
  w_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_460 t_1) w_1.

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ w))) (Data.Bool.~ ((= w) Data.Bool.F)))) Data.Bool.T) ;)

(; dict ;)

def thm_1402 : w_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and hol.false (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 hol.false))) hol.true) :=
  w_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.imp (hol.and hol.false (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 hol.false))) (hol.imp hol.false w_1) hol.true (thm_1400 w_1) (thm_1401 w_1).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ w))) (Data.Bool.~ ((= w) Data.Bool.F)))) ;)

(; dict ;)

def thm_1403 : w_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.imp (hol.and hol.false (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 hol.false)))) :=
  w_1 : hol.term hol.bool => hol.SYM hol.bool (hol.imp (hol.and hol.false (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 hol.false))) hol.true (thm_1402 w_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) (Data.Bool.~ w))) (Data.Bool.~ ((= w) Data.Bool.F))) ;)

(; dict ;)

def thm_1404 : w_1 : hol.term hol.bool -> hol.proof (hol.imp (hol.and hol.false (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 hol.false))) :=
  w_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.imp (hol.and hol.false (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 hol.false))) (thm_1403 w_1) thm_15.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ x) (Data.Bool.~ w))) (Data.Bool.~ ((= w) x))) ;)

(; dict ;)

def thm_1405 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_2 hol.false) -> hol.proof (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_2 hol.false) => hol.EQ_MP (hol.imp (hol.and hol.false (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 hol.false))) (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2))) (thm_1384 x_2 w_1 hyp_1) (thm_1404 w_1).

(; Theorem: |- ((Data.Bool.==> ((= x) Data.Bool.F)) ((Data.Bool.==> ((Data.Bool./\ x) (Data.Bool.~ w))) (Data.Bool.~ ((= w) x)))) ;)

(; dict ;)

def thm_1406 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool x_2 hol.false) (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2)))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_2 hol.false) => thm_1405 w_1 x_2 hyp_1.

(; Theorem: |- ((= (= (\lambda _11160. ((Data.Bool.==> ((Data.Bool./\ _11160) (Data.Bool.~ w))) (Data.Bool.~ ((= w) _11160))) x))) (= (\lambda _11160. ((Data.Bool.==> ((Data.Bool./\ _11160) (Data.Bool.~ w))) (Data.Bool.~ ((= w) _11160))) x))) ;)

(; dict ;)

def thm_1407 : x_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11160_3 : hol.term hol.bool => hol.imp (hol.and __11160_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11160_3))) x_1)) (hol.eq hol.bool ((__11160_3 : hol.term hol.bool => hol.imp (hol.and __11160_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11160_3))) x_1))) :=
  x_1 : hol.term hol.bool => w_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11160_3 : hol.term hol.bool => hol.imp (hol.and __11160_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11160_3))) x_1)).

(; Theorem: |- ((= (\lambda _11160. ((Data.Bool.==> ((Data.Bool./\ _11160) (Data.Bool.~ w))) (Data.Bool.~ ((= w) _11160))) Data.Bool.T)) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ w))) (Data.Bool.~ ((= w) Data.Bool.T)))) ;)

(; dict ;)

def thm_1408 : w_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__11160_2 : hol.term hol.bool => hol.imp (hol.and __11160_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 __11160_2))) hol.true) (hol.imp (hol.and hol.true (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 hol.true)))) :=
  w_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__11160_2 : hol.term hol.bool => hol.imp (hol.and __11160_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 __11160_2))) hol.true.

(; Theorem: |- ((= ((= (\lambda _11160. ((Data.Bool.==> ((Data.Bool./\ _11160) (Data.Bool.~ w))) (Data.Bool.~ ((= w) _11160))) x)) (\lambda _11160. ((Data.Bool.==> ((Data.Bool./\ _11160) (Data.Bool.~ w))) (Data.Bool.~ ((= w) _11160))) Data.Bool.T))) ((= (\lambda _11160. ((Data.Bool.==> ((Data.Bool./\ _11160) (Data.Bool.~ w))) (Data.Bool.~ ((= w) _11160))) x)) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ w))) (Data.Bool.~ ((= w) Data.Bool.T))))) ;)

(; dict ;)

def thm_1409 : x_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11160_3 : hol.term hol.bool => hol.imp (hol.and __11160_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11160_3))) x_1) ((__11160_3 : hol.term hol.bool => hol.imp (hol.and __11160_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11160_3))) hol.true)) (hol.eq hol.bool ((__11160_3 : hol.term hol.bool => hol.imp (hol.and __11160_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11160_3))) x_1) (hol.imp (hol.and hol.true (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 hol.true))))) :=
  x_1 : hol.term hol.bool => w_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11160_3 : hol.term hol.bool => hol.imp (hol.and __11160_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11160_3))) x_1)) (hol.eq hol.bool ((__11160_3 : hol.term hol.bool => hol.imp (hol.and __11160_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11160_3))) x_1)) ((__11160_3 : hol.term hol.bool => hol.imp (hol.and __11160_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11160_3))) hol.true) (hol.imp (hol.and hol.true (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 hol.true))) (thm_1407 x_1 w_2) (thm_1408 w_2).

(; Theorem: |- ((= (\lambda _11160. ((Data.Bool.==> ((Data.Bool./\ _11160) (Data.Bool.~ w))) (Data.Bool.~ ((= w) _11160))) x)) ((Data.Bool.==> ((Data.Bool./\ x) (Data.Bool.~ w))) (Data.Bool.~ ((= w) x)))) ;)

(; dict ;)

def thm_1410 : x_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__11160_3 : hol.term hol.bool => hol.imp (hol.and __11160_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11160_3))) x_1) (hol.imp (hol.and x_1 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 x_1)))) :=
  x_1 : hol.term hol.bool => w_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__11160_3 : hol.term hol.bool => hol.imp (hol.and __11160_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11160_3))) x_1.

(; Theorem: |- ((= (= (\lambda _11160. ((Data.Bool.==> ((Data.Bool./\ _11160) (Data.Bool.~ w))) (Data.Bool.~ ((= w) _11160))) x))) (= ((Data.Bool.==> ((Data.Bool./\ x) (Data.Bool.~ w))) (Data.Bool.~ ((= w) x))))) ;)

(; dict ;)

def thm_1411 : x_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11160_3 : hol.term hol.bool => hol.imp (hol.and __11160_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11160_3))) x_1)) (hol.eq hol.bool (hol.imp (hol.and x_1 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 x_1))))) :=
  x_1 : hol.term hol.bool => w_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__11160_3 : hol.term hol.bool => hol.imp (hol.and __11160_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11160_3))) x_1) (hol.imp (hol.and x_1 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 x_1))) thm_64 (thm_1410 x_1 w_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ w))) (Data.Bool.~ ((= w) Data.Bool.T)))) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ w))) (Data.Bool.~ ((= w) Data.Bool.T)))) ;)

(; dict ;)

def thm_1412 : w_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and hol.true (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 hol.true))) (hol.imp (hol.and hol.true (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 hol.true)))) :=
  w_1 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.and hol.true (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 hol.true))).

(; Theorem: |- ((= ((= (\lambda _11160. ((Data.Bool.==> ((Data.Bool./\ _11160) (Data.Bool.~ w))) (Data.Bool.~ ((= w) _11160))) x)) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ w))) (Data.Bool.~ ((= w) Data.Bool.T))))) ((= ((Data.Bool.==> ((Data.Bool./\ x) (Data.Bool.~ w))) (Data.Bool.~ ((= w) x)))) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ w))) (Data.Bool.~ ((= w) Data.Bool.T))))) ;)

(; dict ;)

def thm_1413 : x_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11160_3 : hol.term hol.bool => hol.imp (hol.and __11160_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11160_3))) x_1) (hol.imp (hol.and hol.true (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 hol.true)))) (hol.eq hol.bool (hol.imp (hol.and x_1 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 x_1))) (hol.imp (hol.and hol.true (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 hol.true))))) :=
  x_1 : hol.term hol.bool => w_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11160_3 : hol.term hol.bool => hol.imp (hol.and __11160_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11160_3))) x_1)) (hol.eq hol.bool (hol.imp (hol.and x_1 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 x_1)))) (hol.imp (hol.and hol.true (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 hol.true))) (hol.imp (hol.and hol.true (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 hol.true))) (thm_1411 x_1 w_2) (thm_1412 w_2).

(; Theorem: |- ((= ((= (\lambda _11160. ((Data.Bool.==> ((Data.Bool./\ _11160) (Data.Bool.~ w))) (Data.Bool.~ ((= w) _11160))) x)) (\lambda _11160. ((Data.Bool.==> ((Data.Bool./\ _11160) (Data.Bool.~ w))) (Data.Bool.~ ((= w) _11160))) Data.Bool.T))) ((= ((Data.Bool.==> ((Data.Bool./\ x) (Data.Bool.~ w))) (Data.Bool.~ ((= w) x)))) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ w))) (Data.Bool.~ ((= w) Data.Bool.T))))) ;)

(; dict ;)

def thm_1414 : x_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11160_3 : hol.term hol.bool => hol.imp (hol.and __11160_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11160_3))) x_1) ((__11160_3 : hol.term hol.bool => hol.imp (hol.and __11160_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11160_3))) hol.true)) (hol.eq hol.bool (hol.imp (hol.and x_1 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 x_1))) (hol.imp (hol.and hol.true (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 hol.true))))) :=
  x_1 : hol.term hol.bool => w_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__11160_3 : hol.term hol.bool => hol.imp (hol.and __11160_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11160_3))) x_1) ((__11160_3 : hol.term hol.bool => hol.imp (hol.and __11160_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11160_3))) hol.true)) (hol.eq hol.bool ((__11160_3 : hol.term hol.bool => hol.imp (hol.and __11160_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11160_3))) x_1) (hol.imp (hol.and hol.true (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 hol.true)))) (hol.eq hol.bool (hol.imp (hol.and x_1 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 x_1))) (hol.imp (hol.and hol.true (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 hol.true)))) (thm_1409 x_1 w_2) (thm_1413 x_1 w_2).

(; Theorem: |- ((= \lambda _11160. ((Data.Bool.==> ((Data.Bool./\ _11160) (Data.Bool.~ w))) (Data.Bool.~ ((= w) _11160)))) \lambda _11160. ((Data.Bool.==> ((Data.Bool./\ _11160) (Data.Bool.~ w))) (Data.Bool.~ ((= w) _11160)))) ;)

(; dict ;)

def thm_1415 : w_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__11160_2 : hol.term hol.bool => hol.imp (hol.and __11160_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 __11160_2))) (__11160_2 : hol.term hol.bool => hol.imp (hol.and __11160_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 __11160_2)))) :=
  w_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__11160_2 : hol.term hol.bool => hol.imp (hol.and __11160_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 __11160_2))).

(; Theorem: |- ((= (\lambda _11160. ((Data.Bool.==> ((Data.Bool./\ _11160) (Data.Bool.~ w))) (Data.Bool.~ ((= w) _11160))) x)) (\lambda _11160. ((Data.Bool.==> ((Data.Bool./\ _11160) (Data.Bool.~ w))) (Data.Bool.~ ((= w) _11160))) Data.Bool.T)) ;)

(; dict ;)

def thm_1416 : x_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.true) -> hol.proof (hol.eq hol.bool ((__11160_3 : hol.term hol.bool => hol.imp (hol.and __11160_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11160_3))) x_1) ((__11160_3 : hol.term hol.bool => hol.imp (hol.and __11160_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11160_3))) hol.true)) :=
  x_1 : hol.term hol.bool => w_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.true) => hol.APP_THM hol.bool hol.bool (__11160_3 : hol.term hol.bool => hol.imp (hol.and __11160_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11160_3))) (__11160_3 : hol.term hol.bool => hol.imp (hol.and __11160_3 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 __11160_3))) x_1 hol.true (thm_1415 w_2) (thm_740 x_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ x) (Data.Bool.~ w))) (Data.Bool.~ ((= w) x)))) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ w))) (Data.Bool.~ ((= w) Data.Bool.T)))) ;)

(; dict ;)

def thm_1417 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2))) (hol.imp (hol.and hol.true (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 hol.true)))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_2 hol.true) => hol.EQ_MP (hol.eq hol.bool ((__11160_3 : hol.term hol.bool => hol.imp (hol.and __11160_3 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 __11160_3))) x_2) ((__11160_3 : hol.term hol.bool => hol.imp (hol.and __11160_3 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 __11160_3))) hol.true)) (hol.eq hol.bool (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2))) (hol.imp (hol.and hol.true (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 hol.true)))) (thm_1414 x_2 w_1) (thm_1416 x_2 w_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ w))) (Data.Bool.~ ((= w) Data.Bool.T)))) ((Data.Bool.==> ((Data.Bool./\ x) (Data.Bool.~ w))) (Data.Bool.~ ((= w) x)))) ;)

(; dict ;)

def thm_1418 : x_1 : hol.term hol.bool -> w_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and hol.true (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 hol.true))) (hol.imp (hol.and x_1 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 x_1)))) :=
  x_1 : hol.term hol.bool => w_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.true) => hol.SYM hol.bool (hol.imp (hol.and x_1 (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 x_1))) (hol.imp (hol.and hol.true (hol.not w_2)) (hol.not (hol.eq hol.bool w_2 hol.true))) (thm_1417 w_2 x_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ w))) (Data.Bool.~ w)) ;)

(; dict ;)

def thm_1419 : w_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.true (hol.not w_1)) (hol.not w_1)) :=
  w_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_124 t_1) (hol.not w_1).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ w)))) (Data.Bool.==> (Data.Bool.~ w))) ;)

(; dict ;)

def thm_1420 : w_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and hol.true (hol.not w_1))) (hol.imp (hol.not w_1))) :=
  w_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.and hol.true (hol.not w_1)) (hol.not w_1) thm_107 (thm_1419 w_1).

(; Theorem: |- ((= ((= w) Data.Bool.T)) w) ;)

(; dict ;)

def thm_1421 : w_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool w_1 hol.true) w_1) :=
  w_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_209 t_1) w_1.

(; Theorem: |- ((= (Data.Bool.~ ((= w) Data.Bool.T))) (Data.Bool.~ w)) ;)

(; dict ;)

def thm_1422 : w_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.eq hol.bool w_1 hol.true)) (hol.not w_1)) :=
  w_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.eq hol.bool w_1 hol.true) w_1 thm_1387 (thm_1421 w_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ w))) (Data.Bool.~ ((= w) Data.Bool.T)))) ((Data.Bool.==> (Data.Bool.~ w)) (Data.Bool.~ w))) ;)

(; dict ;)

def thm_1423 : w_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and hol.true (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 hol.true))) (hol.imp (hol.not w_1) (hol.not w_1))) :=
  w_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and hol.true (hol.not w_1))) (hol.imp (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 hol.true)) (hol.not w_1) (thm_1420 w_1) (thm_1422 w_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ w)) (Data.Bool.~ w))) Data.Bool.T) ;)

(; dict ;)

def thm_1424 : w_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.not w_1) (hol.not w_1)) hol.true) :=
  w_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_468 t_1) (hol.not w_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ w))) (Data.Bool.~ ((= w) Data.Bool.T)))) Data.Bool.T) ;)

(; dict ;)

def thm_1425 : w_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and hol.true (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 hol.true))) hol.true) :=
  w_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.imp (hol.and hol.true (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 hol.true))) (hol.imp (hol.not w_1) (hol.not w_1)) hol.true (thm_1423 w_1) (thm_1424 w_1).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ w))) (Data.Bool.~ ((= w) Data.Bool.T)))) ;)

(; dict ;)

def thm_1426 : w_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.imp (hol.and hol.true (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 hol.true)))) :=
  w_1 : hol.term hol.bool => hol.SYM hol.bool (hol.imp (hol.and hol.true (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 hol.true))) hol.true (thm_1425 w_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ w))) (Data.Bool.~ ((= w) Data.Bool.T))) ;)

(; dict ;)

def thm_1427 : w_1 : hol.term hol.bool -> hol.proof (hol.imp (hol.and hol.true (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 hol.true))) :=
  w_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.imp (hol.and hol.true (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 hol.true))) (thm_1426 w_1) thm_15.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ x) (Data.Bool.~ w))) (Data.Bool.~ ((= w) x))) ;)

(; dict ;)

def thm_1428 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_2 hol.true) -> hol.proof (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_2 hol.true) => hol.EQ_MP (hol.imp (hol.and hol.true (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 hol.true))) (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2))) (thm_1418 x_2 w_1 hyp_1) (thm_1427 w_1).

(; Theorem: |- ((Data.Bool.==> ((= x) Data.Bool.T)) ((Data.Bool.==> ((Data.Bool./\ x) (Data.Bool.~ w))) (Data.Bool.~ ((= w) x)))) ;)

(; dict ;)

def thm_1429 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool x_2 hol.true) (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2)))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_2 hol.true) => thm_1428 w_1 x_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ x) (Data.Bool.~ w))) (Data.Bool.~ ((= w) x))) ;)

(; dict ;)

def thm_1430 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.false) (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2)))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.true) (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2)))) -> hyp_3 : hol.proof (hol.or (hol.eq hol.bool x_2 hol.true) (hol.eq hol.bool x_2 hol.false)) -> hol.proof (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.false) (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2)))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.true) (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2)))) => hyp_3 : hol.proof (hol.or (hol.eq hol.bool x_2 hol.true) (hol.eq hol.bool x_2 hol.false)) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_775 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.eq hol.bool x_2 hol.false) (hol.eq hol.bool x_2 hol.true) (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2))) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ x) (Data.Bool.~ w))) (Data.Bool.~ ((= w) x))) ;)

(; dict ;)

def thm_1431 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.false) (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2)))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.true) (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2)))) -> hol.proof (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.false) (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2)))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.true) (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2)))) => hol.PROVE_HYP (hol.or (hol.eq hol.bool x_2 hol.true) (hol.eq hol.bool x_2 hol.false)) (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2))) (thm_756 x_2) (hyp_3 : hol.proof (hol.or (hol.eq hol.bool x_2 hol.true) (hol.eq hol.bool x_2 hol.false)) => thm_1430 w_1 x_2 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ x) (Data.Bool.~ w))) (Data.Bool.~ ((= w) x))) ;)

(; dict ;)

def thm_1432 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.false) (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2)))) -> hol.proof (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.false) (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2)))) => hol.PROVE_HYP (hol.imp (hol.eq hol.bool x_2 hol.true) (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2)))) (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2))) (thm_1429 w_1 x_2) (hyp_2 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.true) (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2)))) => thm_1431 w_1 x_2 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ x) (Data.Bool.~ w))) (Data.Bool.~ ((= w) x))) ;)

(; dict ;)

def thm_1433 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.PROVE_HYP (hol.imp (hol.eq hol.bool x_2 hol.false) (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2)))) (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2))) (thm_1406 w_1 x_2) (hyp_1 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.false) (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2)))) => thm_1432 w_1 x_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ Data.Bool.T))) ;)

(; dict ;)

def thm_1434 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.imp hol.true (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not hol.true))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.EQ_MP (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2))) (hol.imp (hol.imp hol.true (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not hol.true))) (thm_1370 w_1 x_2) (hol.EQ_MP (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2))) (hol.imp (hol.and x_2 (hol.not w_1)) (hol.not (hol.eq hol.bool w_1 x_2))) (thm_1372 w_1 x_2) (thm_1433 w_1 x_2)).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ z))) ;)

(; dict ;)

def thm_1435 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> z_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool z_3 hol.true) -> hol.proof (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => z_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool z_3 hol.true) => hol.EQ_MP (hol.imp (hol.imp hol.true (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not hol.true))) (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3))) (thm_1363 z_3 w_1 x_2 hyp_1) (thm_1434 w_1 x_2).

(; Theorem: |- ((Data.Bool.==> ((= z) Data.Bool.T)) ((Data.Bool.==> ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ z)))) ;)

(; dict ;)

def thm_1436 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> z_3 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool z_3 hol.true) (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3)))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => z_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool z_3 hol.true) => thm_1435 w_1 x_2 z_3 hyp_1.

(; Theorem: |- ((Data.Bool.\/ ((= z) Data.Bool.T)) ((= z) Data.Bool.F)) ;)

(; dict ;)

def thm_1437 : z_1 : hol.term hol.bool -> hol.proof (hol.or (hol.eq hol.bool z_1 hol.true) (hol.eq hol.bool z_1 hol.false)) :=
  z_1 : hol.term hol.bool => thm_26 z_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ z))) ;)

(; dict ;)

def thm_1438 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> z_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool z_3 hol.false) (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3)))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool z_3 hol.true) (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3)))) -> hyp_3 : hol.proof (hol.or (hol.eq hol.bool z_3 hol.true) (hol.eq hol.bool z_3 hol.false)) -> hol.proof (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => z_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool z_3 hol.false) (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3)))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool z_3 hol.true) (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3)))) => hyp_3 : hol.proof (hol.or (hol.eq hol.bool z_3 hol.true) (hol.eq hol.bool z_3 hol.false)) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_775 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.eq hol.bool z_3 hol.false) (hol.eq hol.bool z_3 hol.true) (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3))) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ z))) ;)

(; dict ;)

def thm_1439 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> z_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool z_3 hol.false) (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3)))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool z_3 hol.true) (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3)))) -> hol.proof (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => z_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool z_3 hol.false) (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3)))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool z_3 hol.true) (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3)))) => hol.PROVE_HYP (hol.or (hol.eq hol.bool z_3 hol.true) (hol.eq hol.bool z_3 hol.false)) (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3))) (thm_1437 z_3) (hyp_3 : hol.proof (hol.or (hol.eq hol.bool z_3 hol.true) (hol.eq hol.bool z_3 hol.false)) => thm_1438 w_1 x_2 z_3 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ z))) ;)

(; dict ;)

def thm_1440 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> z_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool z_3 hol.false) (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3)))) -> hol.proof (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => z_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool z_3 hol.false) (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3)))) => hol.PROVE_HYP (hol.imp (hol.eq hol.bool z_3 hol.true) (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3)))) (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3))) (thm_1436 w_1 x_2 z_3) (hyp_2 : hol.proof (hol.imp (hol.eq hol.bool z_3 hol.true) (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3)))) => thm_1439 w_1 x_2 z_3 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> z) ((Data.Bool./\ x) (Data.Bool.~ w)))) ((Data.Bool.==> ((= w) x)) (Data.Bool.~ z))) ;)

(; dict ;)

def thm_1441 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> z_3 : hol.term hol.bool -> hol.proof (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3))) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => z_3 : hol.term hol.bool => hol.PROVE_HYP (hol.imp (hol.eq hol.bool z_3 hol.false) (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3)))) (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3))) (thm_1350 w_1 x_2 z_3) (hyp_1 : hol.proof (hol.imp (hol.eq hol.bool z_3 hol.false) (hol.imp (hol.imp z_3 (hol.and x_2 (hol.not w_1))) (hol.imp (hol.eq hol.bool w_1 x_2) (hol.not z_3)))) => thm_1440 w_1 x_2 z_3 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.F))))) ((Data.Bool.==> ((= w) x)) ((= Data.Bool.F) z))) ;)

(; dict ;)

def thm_1442 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hol.proof (hol.imp (hol.and (hol.imp hol.false (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.false)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool hol.false z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hol.EQ_MP (hol.imp (hol.imp z_1 (hol.and x_2 (hol.not w_3))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.not z_1))) (hol.imp (hol.and (hol.imp hol.false (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.false)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool hol.false z_1))) (thm_1314 w_3 x_2 z_1) (hol.EQ_MP (hol.imp (hol.imp z_1 (hol.and x_2 (hol.not w_3))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.not z_1))) (hol.imp (hol.imp z_1 (hol.and x_2 (hol.not w_3))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.not z_1))) (thm_1316 w_3 x_2 z_1) (thm_1441 w_3 x_2 z_1)).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> y) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) y))))) ((Data.Bool.==> ((= w) x)) ((= y) z))) ;)

(; dict ;)

def thm_1443 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> y_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool y_4 hol.false) -> hol.proof (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => y_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool y_4 hol.false) => hol.EQ_MP (hol.imp (hol.and (hol.imp hol.false (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.false)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool hol.false z_1))) (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) (thm_1298 y_4 z_1 x_2 w_3 hyp_1) (thm_1442 z_1 x_2 w_3).

(; Theorem: |- ((Data.Bool.==> ((= y) Data.Bool.F)) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> y) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) y))))) ((Data.Bool.==> ((= w) x)) ((= y) z)))) ;)

(; dict ;)

def thm_1444 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> y_4 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool y_4 hol.false) (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1)))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => y_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool y_4 hol.false) => thm_1443 z_1 x_2 w_3 y_4 hyp_1.

(; Theorem: |- ((= (= (\lambda _11144. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11144) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) _11144))))) ((Data.Bool.==> ((= w) x)) ((= _11144) z))) y))) (= (\lambda _11144. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11144) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) _11144))))) ((Data.Bool.==> ((= w) x)) ((= _11144) z))) y))) ;)

(; dict ;)

def thm_1445 : y_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> w_4 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11144_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11144_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11144_5 z_2))) y_1)) (hol.eq hol.bool ((__11144_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11144_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11144_5 z_2))) y_1))) :=
  y_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => w_4 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11144_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11144_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11144_5 z_2))) y_1)).

(; Theorem: |- ((= (\lambda _11144. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11144) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) _11144))))) ((Data.Bool.==> ((= w) x)) ((= _11144) z))) Data.Bool.T)) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.T))))) ((Data.Bool.==> ((= w) x)) ((= Data.Bool.T) z)))) ;)

(; dict ;)

def thm_1446 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__11144_4 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 __11144_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool __11144_4 z_1))) hol.true) (hol.imp (hol.and (hol.imp hol.true (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.true)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool hol.true z_1)))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__11144_4 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 __11144_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool __11144_4 z_1))) hol.true.

(; Theorem: |- ((= ((= (\lambda _11144. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11144) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) _11144))))) ((Data.Bool.==> ((= w) x)) ((= _11144) z))) y)) (\lambda _11144. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11144) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) _11144))))) ((Data.Bool.==> ((= w) x)) ((= _11144) z))) Data.Bool.T))) ((= (\lambda _11144. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11144) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) _11144))))) ((Data.Bool.==> ((= w) x)) ((= _11144) z))) y)) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.T))))) ((Data.Bool.==> ((= w) x)) ((= Data.Bool.T) z))))) ;)

(; dict ;)

def thm_1447 : y_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> w_4 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11144_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11144_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11144_5 z_2))) y_1) ((__11144_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11144_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11144_5 z_2))) hol.true)) (hol.eq hol.bool ((__11144_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11144_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11144_5 z_2))) y_1) (hol.imp (hol.and (hol.imp hol.true (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 hol.true)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool hol.true z_2))))) :=
  y_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => w_4 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11144_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11144_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11144_5 z_2))) y_1)) (hol.eq hol.bool ((__11144_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11144_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11144_5 z_2))) y_1)) ((__11144_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11144_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11144_5 z_2))) hol.true) (hol.imp (hol.and (hol.imp hol.true (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 hol.true)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool hol.true z_2))) (thm_1445 y_1 z_2 x_3 w_4) (thm_1446 z_2 x_3 w_4).

(; Theorem: |- ((= (\lambda _11144. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11144) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) _11144))))) ((Data.Bool.==> ((= w) x)) ((= _11144) z))) y)) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> y) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) y))))) ((Data.Bool.==> ((= w) x)) ((= y) z)))) ;)

(; dict ;)

def thm_1448 : y_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> w_4 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__11144_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11144_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11144_5 z_2))) y_1) (hol.imp (hol.and (hol.imp y_1 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 y_1)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool y_1 z_2)))) :=
  y_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => w_4 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__11144_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11144_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11144_5 z_2))) y_1.

(; Theorem: |- ((= (= (\lambda _11144. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11144) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) _11144))))) ((Data.Bool.==> ((= w) x)) ((= _11144) z))) y))) (= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> y) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) y))))) ((Data.Bool.==> ((= w) x)) ((= y) z))))) ;)

(; dict ;)

def thm_1449 : y_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> w_4 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11144_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11144_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11144_5 z_2))) y_1)) (hol.eq hol.bool (hol.imp (hol.and (hol.imp y_1 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 y_1)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool y_1 z_2))))) :=
  y_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => w_4 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__11144_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11144_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11144_5 z_2))) y_1) (hol.imp (hol.and (hol.imp y_1 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 y_1)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool y_1 z_2))) thm_64 (thm_1448 y_1 z_2 x_3 w_4).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.T))))) ((Data.Bool.==> ((= w) x)) ((= Data.Bool.T) z)))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.T))))) ((Data.Bool.==> ((= w) x)) ((= Data.Bool.T) z)))) ;)

(; dict ;)

def thm_1450 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp hol.true (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.true)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool hol.true z_1))) (hol.imp (hol.and (hol.imp hol.true (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.true)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool hol.true z_1)))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.and (hol.imp hol.true (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.true)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool hol.true z_1))).

(; Theorem: |- ((= ((= (\lambda _11144. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11144) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) _11144))))) ((Data.Bool.==> ((= w) x)) ((= _11144) z))) y)) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.T))))) ((Data.Bool.==> ((= w) x)) ((= Data.Bool.T) z))))) ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> y) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) y))))) ((Data.Bool.==> ((= w) x)) ((= y) z)))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.T))))) ((Data.Bool.==> ((= w) x)) ((= Data.Bool.T) z))))) ;)

(; dict ;)

def thm_1451 : y_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> w_4 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11144_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11144_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11144_5 z_2))) y_1) (hol.imp (hol.and (hol.imp hol.true (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 hol.true)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool hol.true z_2)))) (hol.eq hol.bool (hol.imp (hol.and (hol.imp y_1 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 y_1)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool y_1 z_2))) (hol.imp (hol.and (hol.imp hol.true (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 hol.true)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool hol.true z_2))))) :=
  y_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => w_4 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11144_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11144_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11144_5 z_2))) y_1)) (hol.eq hol.bool (hol.imp (hol.and (hol.imp y_1 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 y_1)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool y_1 z_2)))) (hol.imp (hol.and (hol.imp hol.true (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 hol.true)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool hol.true z_2))) (hol.imp (hol.and (hol.imp hol.true (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 hol.true)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool hol.true z_2))) (thm_1449 y_1 z_2 x_3 w_4) (thm_1450 z_2 x_3 w_4).

(; Theorem: |- ((= ((= (\lambda _11144. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11144) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) _11144))))) ((Data.Bool.==> ((= w) x)) ((= _11144) z))) y)) (\lambda _11144. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11144) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) _11144))))) ((Data.Bool.==> ((= w) x)) ((= _11144) z))) Data.Bool.T))) ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> y) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) y))))) ((Data.Bool.==> ((= w) x)) ((= y) z)))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.T))))) ((Data.Bool.==> ((= w) x)) ((= Data.Bool.T) z))))) ;)

(; dict ;)

def thm_1452 : y_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> w_4 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11144_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11144_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11144_5 z_2))) y_1) ((__11144_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11144_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11144_5 z_2))) hol.true)) (hol.eq hol.bool (hol.imp (hol.and (hol.imp y_1 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 y_1)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool y_1 z_2))) (hol.imp (hol.and (hol.imp hol.true (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 hol.true)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool hol.true z_2))))) :=
  y_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => w_4 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__11144_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11144_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11144_5 z_2))) y_1) ((__11144_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11144_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11144_5 z_2))) hol.true)) (hol.eq hol.bool ((__11144_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11144_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11144_5 z_2))) y_1) (hol.imp (hol.and (hol.imp hol.true (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 hol.true)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool hol.true z_2)))) (hol.eq hol.bool (hol.imp (hol.and (hol.imp y_1 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 y_1)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool y_1 z_2))) (hol.imp (hol.and (hol.imp hol.true (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 hol.true)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool hol.true z_2)))) (thm_1447 y_1 z_2 x_3 w_4) (thm_1451 y_1 z_2 x_3 w_4).

(; Theorem: |- ((= \lambda _11144. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11144) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) _11144))))) ((Data.Bool.==> ((= w) x)) ((= _11144) z)))) \lambda _11144. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11144) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) _11144))))) ((Data.Bool.==> ((= w) x)) ((= _11144) z)))) ;)

(; dict ;)

def thm_1453 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__11144_4 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 __11144_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool __11144_4 z_1))) (__11144_4 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 __11144_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool __11144_4 z_1)))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__11144_4 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 __11144_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool __11144_4 z_1))).

(; Theorem: |- ((= y) Data.Bool.T) ;)

(; dict ;)

def thm_1454 : y_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool y_1 hol.true) -> hol.proof (hol.eq hol.bool y_1 hol.true) :=
  y_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool y_1 hol.true) => hyp_1.

(; Theorem: |- ((= (\lambda _11144. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11144) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) _11144))))) ((Data.Bool.==> ((= w) x)) ((= _11144) z))) y)) (\lambda _11144. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11144) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) _11144))))) ((Data.Bool.==> ((= w) x)) ((= _11144) z))) Data.Bool.T)) ;)

(; dict ;)

def thm_1455 : y_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> w_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool y_1 hol.true) -> hol.proof (hol.eq hol.bool ((__11144_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11144_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11144_5 z_2))) y_1) ((__11144_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11144_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11144_5 z_2))) hol.true)) :=
  y_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => w_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool y_1 hol.true) => hol.APP_THM hol.bool hol.bool (__11144_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11144_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11144_5 z_2))) (__11144_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_5 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 __11144_5)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool __11144_5 z_2))) y_1 hol.true (thm_1453 z_2 x_3 w_4) (thm_1454 y_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> y) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) y))))) ((Data.Bool.==> ((= w) x)) ((= y) z)))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.T))))) ((Data.Bool.==> ((= w) x)) ((= Data.Bool.T) z)))) ;)

(; dict ;)

def thm_1456 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> y_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool y_4 hol.true) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) (hol.imp (hol.and (hol.imp hol.true (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.true)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool hol.true z_1)))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => y_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool y_4 hol.true) => hol.EQ_MP (hol.eq hol.bool ((__11144_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_5 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 __11144_5)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool __11144_5 z_1))) y_4) ((__11144_5 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11144_5 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 __11144_5)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool __11144_5 z_1))) hol.true)) (hol.eq hol.bool (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) (hol.imp (hol.and (hol.imp hol.true (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.true)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool hol.true z_1)))) (thm_1452 y_4 z_1 x_2 w_3) (thm_1455 y_4 z_1 x_2 w_3 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.T))))) ((Data.Bool.==> ((= w) x)) ((= Data.Bool.T) z)))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> y) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) y))))) ((Data.Bool.==> ((= w) x)) ((= y) z)))) ;)

(; dict ;)

def thm_1457 : y_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> w_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool y_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp hol.true (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 hol.true)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool hol.true z_2))) (hol.imp (hol.and (hol.imp y_1 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 y_1)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool y_1 z_2)))) :=
  y_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => w_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool y_1 hol.true) => hol.SYM hol.bool (hol.imp (hol.and (hol.imp y_1 (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 y_1)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool y_1 z_2))) (hol.imp (hol.and (hol.imp hol.true (hol.and w_4 (hol.imp x_3 z_2))) (hol.imp z_2 (hol.and x_3 (hol.imp w_4 hol.true)))) (hol.imp (hol.eq hol.bool w_4 x_3) (hol.eq hol.bool hol.true z_2))) (thm_1456 z_2 x_3 w_4 y_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool./\ w) ((Data.Bool.==> x) z))) ;)

(; dict ;)

def thm_1458 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.true (hol.and w_3 (hol.imp x_2 z_1))) (hol.and w_3 (hol.imp x_2 z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_450 t_1) (hol.and w_3 (hol.imp x_2 z_1)).

(; Theorem: |- ((= (Data.Bool./\ ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ w) ((Data.Bool.==> x) z))))) (Data.Bool./\ ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ;)

(; dict ;)

def thm_1459 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.imp hol.true (hol.and w_3 (hol.imp x_2 z_1)))) (hol.and (hol.and w_3 (hol.imp x_2 z_1)))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.imp hol.true (hol.and w_3 (hol.imp x_2 z_1))) (hol.and w_3 (hol.imp x_2 z_1)) thm_298 (thm_1458 z_1 x_2 w_3).

(; Theorem: |- ((= ((Data.Bool.==> w) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_1460 : w_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp w_1 hol.true) hol.true) :=
  w_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_455 t_1) w_1.

(; Theorem: |- ((= ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.T))) ((Data.Bool./\ x) Data.Bool.T)) ;)

(; dict ;)

def thm_1461 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and x_2 (hol.imp w_1 hol.true)) (hol.and x_2 hol.true)) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and x_2) (hol.and x_2) (hol.imp w_1 hol.true) hol.true (thm_1302 x_2) (thm_1460 w_1).

(; Theorem: |- ((= ((Data.Bool./\ x) Data.Bool.T)) x) ;)

(; dict ;)

def thm_1462 : x_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and x_1 hol.true) x_1) :=
  x_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_157 t_1) x_1.

(; Theorem: |- ((= ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.T))) x) ;)

(; dict ;)

def thm_1463 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and x_2 (hol.imp w_1 hol.true)) x_2) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.and x_2 (hol.imp w_1 hol.true)) (hol.and x_2 hol.true) x_2 (thm_1461 w_1 x_2) (thm_1462 x_2).

(; Theorem: |- ((= ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.T)))) ((Data.Bool.==> z) x)) ;)

(; dict ;)

def thm_1464 : w_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> z_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp z_3 (hol.and x_2 (hol.imp w_1 hol.true))) (hol.imp z_3 x_2)) :=
  w_1 : hol.term hol.bool => x_2 : hol.term hol.bool => z_3 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.imp z_3) (hol.imp z_3) (hol.and x_2 (hol.imp w_1 hol.true)) x_2 (thm_1301 z_3) (thm_1463 w_1 x_2).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.T))))) ((Data.Bool./\ ((Data.Bool./\ w) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ;)

(; dict ;)

def thm_1465 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.imp hol.true (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.true)))) (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and (hol.imp hol.true (hol.and w_3 (hol.imp x_2 z_1)))) (hol.and (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.true))) (hol.imp z_1 x_2) (thm_1459 z_1 x_2 w_3) (thm_1464 w_3 x_2 z_1).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.T)))))) (Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ w) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x)))) ;)

(; dict ;)

def thm_1466 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and (hol.imp hol.true (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.true))))) (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.and (hol.imp hol.true (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.true)))) (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) thm_107 (thm_1465 z_1 x_2 w_3).

(; Theorem: |- ((= ((= Data.Bool.T) z)) z) ;)

(; dict ;)

def thm_1467 : z_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true z_1) z_1) :=
  z_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_206 t_1) z_1.

(; Theorem: |- ((= ((Data.Bool.==> ((= w) x)) ((= Data.Bool.T) z))) ((Data.Bool.==> ((= w) x)) z)) ;)

(; dict ;)

def thm_1468 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool hol.true z_1)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1)) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.imp (hol.eq hol.bool w_3 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2)) (hol.eq hol.bool hol.true z_1) z_1 (thm_1310 x_2 w_3) (thm_1467 z_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.T))))) ((Data.Bool.==> ((= w) x)) ((= Data.Bool.T) z)))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ w) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= w) x)) z))) ;)

(; dict ;)

def thm_1469 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp hol.true (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.true)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool hol.true z_1))) (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and (hol.imp hol.true (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.true))))) (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool hol.true z_1)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1) (thm_1466 z_1 x_2 w_3) (thm_1468 z_1 x_2 w_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ w) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= w) x)) z))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.T))))) ((Data.Bool.==> ((= w) x)) ((= Data.Bool.T) z)))) ;)

(; dict ;)

def thm_1470 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1)) (hol.imp (hol.and (hol.imp hol.true (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.true)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool hol.true z_1)))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hol.SYM hol.bool (hol.imp (hol.and (hol.imp hol.true (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.true)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool hol.true z_1))) (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1)) (thm_1469 z_1 x_2 w_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ w) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= w) x)) z))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ w) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= w) x)) z))) ;)

(; dict ;)

def thm_1471 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1)) (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1)).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ w) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= w) x)) z))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ w) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= w) x)) z))) ;)

(; dict ;)

def thm_1472 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1)) (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hol.SYM hol.bool (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1)) (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1)) (thm_1471 z_1 x_2 w_3).

(; Theorem: |- ((= (= (\lambda _11150. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ _11150) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= _11150) x)) z)) w))) (= (\lambda _11150. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ _11150) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= _11150) x)) z)) w))) ;)

(; dict ;)

def thm_1473 : w_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11150_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11150_4 x_3) z_2)) w_1)) (hol.eq hol.bool ((__11150_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11150_4 x_3) z_2)) w_1))) :=
  w_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11150_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11150_4 x_3) z_2)) w_1)).

(; Theorem: |- ((= (\lambda _11150. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ _11150) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= _11150) x)) z)) Data.Bool.F)) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= Data.Bool.F) x)) z))) ;)

(; dict ;)

def thm_1474 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__11150_3 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool __11150_3 x_2) z_1)) hol.false) (hol.imp (hol.and (hol.and hol.false (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool hol.false x_2) z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__11150_3 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool __11150_3 x_2) z_1)) hol.false.

(; Theorem: |- ((= ((= (\lambda _11150. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ _11150) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= _11150) x)) z)) w)) (\lambda _11150. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ _11150) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= _11150) x)) z)) Data.Bool.F))) ((= (\lambda _11150. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ _11150) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= _11150) x)) z)) w)) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= Data.Bool.F) x)) z)))) ;)

(; dict ;)

def thm_1475 : w_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11150_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11150_4 x_3) z_2)) w_1) ((__11150_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11150_4 x_3) z_2)) hol.false)) (hol.eq hol.bool ((__11150_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11150_4 x_3) z_2)) w_1) (hol.imp (hol.and (hol.and hol.false (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool hol.false x_3) z_2)))) :=
  w_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11150_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11150_4 x_3) z_2)) w_1)) (hol.eq hol.bool ((__11150_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11150_4 x_3) z_2)) w_1)) ((__11150_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11150_4 x_3) z_2)) hol.false) (hol.imp (hol.and (hol.and hol.false (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool hol.false x_3) z_2)) (thm_1473 w_1 z_2 x_3) (thm_1474 z_2 x_3).

(; Theorem: |- ((= (\lambda _11150. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ _11150) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= _11150) x)) z)) w)) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ w) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= w) x)) z))) ;)

(; dict ;)

def thm_1476 : w_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__11150_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11150_4 x_3) z_2)) w_1) (hol.imp (hol.and (hol.and w_1 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool w_1 x_3) z_2))) :=
  w_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__11150_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11150_4 x_3) z_2)) w_1.

(; Theorem: |- ((= (= (\lambda _11150. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ _11150) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= _11150) x)) z)) w))) (= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ w) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= w) x)) z)))) ;)

(; dict ;)

def thm_1477 : w_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11150_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11150_4 x_3) z_2)) w_1)) (hol.eq hol.bool (hol.imp (hol.and (hol.and w_1 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool w_1 x_3) z_2)))) :=
  w_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__11150_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11150_4 x_3) z_2)) w_1) (hol.imp (hol.and (hol.and w_1 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool w_1 x_3) z_2)) thm_64 (thm_1476 w_1 z_2 x_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= Data.Bool.F) x)) z))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= Data.Bool.F) x)) z))) ;)

(; dict ;)

def thm_1478 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.and hol.false (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool hol.false x_2) z_1)) (hol.imp (hol.and (hol.and hol.false (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool hol.false x_2) z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.and (hol.and hol.false (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool hol.false x_2) z_1)).

(; Theorem: |- ((= ((= (\lambda _11150. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ _11150) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= _11150) x)) z)) w)) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= Data.Bool.F) x)) z)))) ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ w) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= w) x)) z))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= Data.Bool.F) x)) z)))) ;)

(; dict ;)

def thm_1479 : w_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11150_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11150_4 x_3) z_2)) w_1) (hol.imp (hol.and (hol.and hol.false (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool hol.false x_3) z_2))) (hol.eq hol.bool (hol.imp (hol.and (hol.and w_1 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool w_1 x_3) z_2)) (hol.imp (hol.and (hol.and hol.false (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool hol.false x_3) z_2)))) :=
  w_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11150_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11150_4 x_3) z_2)) w_1)) (hol.eq hol.bool (hol.imp (hol.and (hol.and w_1 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool w_1 x_3) z_2))) (hol.imp (hol.and (hol.and hol.false (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool hol.false x_3) z_2)) (hol.imp (hol.and (hol.and hol.false (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool hol.false x_3) z_2)) (thm_1477 w_1 z_2 x_3) (thm_1478 z_2 x_3).

(; Theorem: |- ((= ((= (\lambda _11150. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ _11150) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= _11150) x)) z)) w)) (\lambda _11150. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ _11150) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= _11150) x)) z)) Data.Bool.F))) ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ w) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= w) x)) z))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= Data.Bool.F) x)) z)))) ;)

(; dict ;)

def thm_1480 : w_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11150_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11150_4 x_3) z_2)) w_1) ((__11150_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11150_4 x_3) z_2)) hol.false)) (hol.eq hol.bool (hol.imp (hol.and (hol.and w_1 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool w_1 x_3) z_2)) (hol.imp (hol.and (hol.and hol.false (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool hol.false x_3) z_2)))) :=
  w_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__11150_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11150_4 x_3) z_2)) w_1) ((__11150_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11150_4 x_3) z_2)) hol.false)) (hol.eq hol.bool ((__11150_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11150_4 x_3) z_2)) w_1) (hol.imp (hol.and (hol.and hol.false (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool hol.false x_3) z_2))) (hol.eq hol.bool (hol.imp (hol.and (hol.and w_1 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool w_1 x_3) z_2)) (hol.imp (hol.and (hol.and hol.false (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool hol.false x_3) z_2))) (thm_1475 w_1 z_2 x_3) (thm_1479 w_1 z_2 x_3).

(; Theorem: |- ((= \lambda _11150. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ _11150) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= _11150) x)) z))) \lambda _11150. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ _11150) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= _11150) x)) z))) ;)

(; dict ;)

def thm_1481 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__11150_3 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool __11150_3 x_2) z_1)) (__11150_3 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool __11150_3 x_2) z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__11150_3 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool __11150_3 x_2) z_1)).

(; Theorem: |- ((= w) Data.Bool.F) ;)

(; dict ;)

def thm_1482 : w_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool w_1 hol.false) -> hol.proof (hol.eq hol.bool w_1 hol.false) :=
  w_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool w_1 hol.false) => hyp_1.

(; Theorem: |- ((= (\lambda _11150. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ _11150) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= _11150) x)) z)) w)) (\lambda _11150. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ _11150) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= _11150) x)) z)) Data.Bool.F)) ;)

(; dict ;)

def thm_1483 : w_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool w_1 hol.false) -> hol.proof (hol.eq hol.bool ((__11150_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11150_4 x_3) z_2)) w_1) ((__11150_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11150_4 x_3) z_2)) hol.false)) :=
  w_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool w_1 hol.false) => hol.APP_THM hol.bool hol.bool (__11150_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11150_4 x_3) z_2)) (__11150_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11150_4 x_3) z_2)) w_1 hol.false (thm_1481 z_2 x_3) (thm_1482 w_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ w) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= w) x)) z))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= Data.Bool.F) x)) z))) ;)

(; dict ;)

def thm_1484 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool w_3 hol.false) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1)) (hol.imp (hol.and (hol.and hol.false (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool hol.false x_2) z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool w_3 hol.false) => hol.EQ_MP (hol.eq hol.bool ((__11150_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_4 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool __11150_4 x_2) z_1)) w_3) ((__11150_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11150_4 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool __11150_4 x_2) z_1)) hol.false)) (hol.eq hol.bool (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1)) (hol.imp (hol.and (hol.and hol.false (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool hol.false x_2) z_1))) (thm_1480 w_3 z_1 x_2) (thm_1483 w_3 z_1 x_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= Data.Bool.F) x)) z))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ w) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= w) x)) z))) ;)

(; dict ;)

def thm_1485 : w_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool w_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.and hol.false (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool hol.false x_3) z_2)) (hol.imp (hol.and (hol.and w_1 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool w_1 x_3) z_2))) :=
  w_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool w_1 hol.false) => hol.SYM hol.bool (hol.imp (hol.and (hol.and w_1 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool w_1 x_3) z_2)) (hol.imp (hol.and (hol.and hol.false (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool hol.false x_3) z_2)) (thm_1484 z_2 x_3 w_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> x) z))) Data.Bool.F) ;)

(; dict ;)

def thm_1486 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.false (hol.imp x_2 z_1)) hol.false) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_162 t_1) (hol.imp x_2 z_1).

(; Theorem: |- ((= (Data.Bool./\ ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> x) z)))) (Data.Bool./\ Data.Bool.F)) ;)

(; dict ;)

def thm_1487 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.and hol.false (hol.imp x_2 z_1))) (hol.and hol.false)) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.and hol.false (hol.imp x_2 z_1)) hol.false thm_298 (thm_1486 z_1 x_2).

(; Theorem: |- ((= ((Data.Bool.==> z) x)) ((Data.Bool.==> z) x)) ;)

(; dict ;)

def thm_1488 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp z_2 x_1) (hol.imp z_2 x_1)) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => hol.REFL hol.bool (hol.imp z_2 x_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> z) x))) ;)

(; dict ;)

def thm_1489 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.and hol.false (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.and hol.false (hol.imp z_1 x_2))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and (hol.and hol.false (hol.imp x_2 z_1))) (hol.and hol.false) (hol.imp z_1 x_2) (hol.imp z_1 x_2) (thm_1487 z_1 x_2) (thm_1488 x_2 z_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> z) x))) Data.Bool.F) ;)

(; dict ;)

def thm_1490 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.false (hol.imp z_2 x_1)) hol.false) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_162 t_1) (hol.imp z_2 x_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) Data.Bool.F) ;)

(; dict ;)

def thm_1491 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.and hol.false (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) hol.false) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.and (hol.and hol.false (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.and hol.false (hol.imp z_1 x_2)) hol.false (thm_1489 z_1 x_2) (thm_1490 x_2 z_1).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x)))) (Data.Bool.==> Data.Bool.F)) ;)

(; dict ;)

def thm_1492 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and (hol.and hol.false (hol.imp x_2 z_1)) (hol.imp z_1 x_2))) (hol.imp hol.false)) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.and (hol.and hol.false (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) hol.false thm_107 (thm_1491 z_1 x_2).

(; Theorem: |- ((= ((= Data.Bool.F) x)) (Data.Bool.~ x)) ;)

(; dict ;)

def thm_1493 : x_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false x_1) (hol.not x_1)) :=
  x_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_214 t_1) x_1.

(; Theorem: |- ((= (Data.Bool.==> ((= Data.Bool.F) x))) (Data.Bool.==> (Data.Bool.~ x))) ;)

(; dict ;)

def thm_1494 : x_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.eq hol.bool hol.false x_1)) (hol.imp (hol.not x_1))) :=
  x_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.eq hol.bool hol.false x_1) (hol.not x_1) thm_107 (thm_1493 x_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= Data.Bool.F) x)) z)) ((Data.Bool.==> (Data.Bool.~ x)) z)) ;)

(; dict ;)

def thm_1495 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool hol.false x_2) z_1) (hol.imp (hol.not x_2) z_1)) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.imp (hol.eq hol.bool hol.false x_2)) (hol.imp (hol.not x_2)) z_1 z_1 (thm_1494 x_2) (thm_720 z_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= Data.Bool.F) x)) z))) ((Data.Bool.==> Data.Bool.F) ((Data.Bool.==> (Data.Bool.~ x)) z))) ;)

(; dict ;)

def thm_1496 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.and hol.false (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool hol.false x_2) z_1)) (hol.imp hol.false (hol.imp (hol.not x_2) z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and (hol.and hol.false (hol.imp x_2 z_1)) (hol.imp z_1 x_2))) (hol.imp hol.false) (hol.imp (hol.eq hol.bool hol.false x_2) z_1) (hol.imp (hol.not x_2) z_1) (thm_1492 z_1 x_2) (thm_1495 z_1 x_2).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) ((Data.Bool.==> (Data.Bool.~ x)) z))) Data.Bool.T) ;)

(; dict ;)

def thm_1497 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.false (hol.imp (hol.not x_2) z_1)) hol.true) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_460 t_1) (hol.imp (hol.not x_2) z_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= Data.Bool.F) x)) z))) Data.Bool.T) ;)

(; dict ;)

def thm_1498 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.and hol.false (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool hol.false x_2) z_1)) hol.true) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.imp (hol.and (hol.and hol.false (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool hol.false x_2) z_1)) (hol.imp hol.false (hol.imp (hol.not x_2) z_1)) hol.true (thm_1496 z_1 x_2) (thm_1497 z_1 x_2).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= Data.Bool.F) x)) z))) ;)

(; dict ;)

def thm_1499 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.imp (hol.and (hol.and hol.false (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool hol.false x_2) z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.SYM hol.bool (hol.imp (hol.and (hol.and hol.false (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool hol.false x_2) z_1)) hol.true (thm_1498 z_1 x_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= Data.Bool.F) x)) z)) ;)

(; dict ;)

def thm_1500 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.and (hol.and hol.false (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool hol.false x_2) z_1)) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.EQ_MP hol.true (hol.imp (hol.and (hol.and hol.false (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool hol.false x_2) z_1)) (thm_1499 z_1 x_2) thm_15.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ w) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= w) x)) z)) ;)

(; dict ;)

def thm_1501 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool w_3 hol.false) -> hol.proof (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1)) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool w_3 hol.false) => hol.EQ_MP (hol.imp (hol.and (hol.and hol.false (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool hol.false x_2) z_1)) (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1)) (thm_1485 w_3 z_1 x_2 hyp_1) (thm_1500 z_1 x_2).

(; Theorem: |- ((Data.Bool.==> ((= w) Data.Bool.F)) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ w) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= w) x)) z))) ;)

(; dict ;)

def thm_1502 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool w_3 hol.false) (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool w_3 hol.false) => thm_1501 z_1 x_2 w_3 hyp_1.

(; Theorem: |- ((= (= (\lambda _11148. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ _11148) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= _11148) x)) z)) w))) (= (\lambda _11148. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ _11148) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= _11148) x)) z)) w))) ;)

(; dict ;)

def thm_1503 : w_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11148_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11148_4 x_3) z_2)) w_1)) (hol.eq hol.bool ((__11148_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11148_4 x_3) z_2)) w_1))) :=
  w_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11148_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11148_4 x_3) z_2)) w_1)).

(; Theorem: |- ((= (\lambda _11148. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ _11148) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= _11148) x)) z)) Data.Bool.T)) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= Data.Bool.T) x)) z))) ;)

(; dict ;)

def thm_1504 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__11148_3 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool __11148_3 x_2) z_1)) hol.true) (hol.imp (hol.and (hol.and hol.true (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool hol.true x_2) z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__11148_3 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool __11148_3 x_2) z_1)) hol.true.

(; Theorem: |- ((= ((= (\lambda _11148. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ _11148) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= _11148) x)) z)) w)) (\lambda _11148. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ _11148) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= _11148) x)) z)) Data.Bool.T))) ((= (\lambda _11148. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ _11148) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= _11148) x)) z)) w)) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= Data.Bool.T) x)) z)))) ;)

(; dict ;)

def thm_1505 : w_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11148_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11148_4 x_3) z_2)) w_1) ((__11148_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11148_4 x_3) z_2)) hol.true)) (hol.eq hol.bool ((__11148_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11148_4 x_3) z_2)) w_1) (hol.imp (hol.and (hol.and hol.true (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool hol.true x_3) z_2)))) :=
  w_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11148_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11148_4 x_3) z_2)) w_1)) (hol.eq hol.bool ((__11148_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11148_4 x_3) z_2)) w_1)) ((__11148_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11148_4 x_3) z_2)) hol.true) (hol.imp (hol.and (hol.and hol.true (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool hol.true x_3) z_2)) (thm_1503 w_1 z_2 x_3) (thm_1504 z_2 x_3).

(; Theorem: |- ((= (\lambda _11148. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ _11148) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= _11148) x)) z)) w)) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ w) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= w) x)) z))) ;)

(; dict ;)

def thm_1506 : w_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__11148_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11148_4 x_3) z_2)) w_1) (hol.imp (hol.and (hol.and w_1 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool w_1 x_3) z_2))) :=
  w_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__11148_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11148_4 x_3) z_2)) w_1.

(; Theorem: |- ((= (= (\lambda _11148. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ _11148) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= _11148) x)) z)) w))) (= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ w) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= w) x)) z)))) ;)

(; dict ;)

def thm_1507 : w_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11148_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11148_4 x_3) z_2)) w_1)) (hol.eq hol.bool (hol.imp (hol.and (hol.and w_1 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool w_1 x_3) z_2)))) :=
  w_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__11148_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11148_4 x_3) z_2)) w_1) (hol.imp (hol.and (hol.and w_1 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool w_1 x_3) z_2)) thm_64 (thm_1506 w_1 z_2 x_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= Data.Bool.T) x)) z))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= Data.Bool.T) x)) z))) ;)

(; dict ;)

def thm_1508 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.and hol.true (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool hol.true x_2) z_1)) (hol.imp (hol.and (hol.and hol.true (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool hol.true x_2) z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.and (hol.and hol.true (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool hol.true x_2) z_1)).

(; Theorem: |- ((= ((= (\lambda _11148. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ _11148) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= _11148) x)) z)) w)) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= Data.Bool.T) x)) z)))) ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ w) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= w) x)) z))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= Data.Bool.T) x)) z)))) ;)

(; dict ;)

def thm_1509 : w_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11148_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11148_4 x_3) z_2)) w_1) (hol.imp (hol.and (hol.and hol.true (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool hol.true x_3) z_2))) (hol.eq hol.bool (hol.imp (hol.and (hol.and w_1 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool w_1 x_3) z_2)) (hol.imp (hol.and (hol.and hol.true (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool hol.true x_3) z_2)))) :=
  w_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11148_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11148_4 x_3) z_2)) w_1)) (hol.eq hol.bool (hol.imp (hol.and (hol.and w_1 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool w_1 x_3) z_2))) (hol.imp (hol.and (hol.and hol.true (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool hol.true x_3) z_2)) (hol.imp (hol.and (hol.and hol.true (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool hol.true x_3) z_2)) (thm_1507 w_1 z_2 x_3) (thm_1508 z_2 x_3).

(; Theorem: |- ((= ((= (\lambda _11148. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ _11148) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= _11148) x)) z)) w)) (\lambda _11148. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ _11148) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= _11148) x)) z)) Data.Bool.T))) ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ w) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= w) x)) z))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= Data.Bool.T) x)) z)))) ;)

(; dict ;)

def thm_1510 : w_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11148_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11148_4 x_3) z_2)) w_1) ((__11148_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11148_4 x_3) z_2)) hol.true)) (hol.eq hol.bool (hol.imp (hol.and (hol.and w_1 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool w_1 x_3) z_2)) (hol.imp (hol.and (hol.and hol.true (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool hol.true x_3) z_2)))) :=
  w_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__11148_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11148_4 x_3) z_2)) w_1) ((__11148_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11148_4 x_3) z_2)) hol.true)) (hol.eq hol.bool ((__11148_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11148_4 x_3) z_2)) w_1) (hol.imp (hol.and (hol.and hol.true (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool hol.true x_3) z_2))) (hol.eq hol.bool (hol.imp (hol.and (hol.and w_1 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool w_1 x_3) z_2)) (hol.imp (hol.and (hol.and hol.true (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool hol.true x_3) z_2))) (thm_1505 w_1 z_2 x_3) (thm_1509 w_1 z_2 x_3).

(; Theorem: |- ((= \lambda _11148. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ _11148) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= _11148) x)) z))) \lambda _11148. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ _11148) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= _11148) x)) z))) ;)

(; dict ;)

def thm_1511 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__11148_3 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool __11148_3 x_2) z_1)) (__11148_3 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool __11148_3 x_2) z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__11148_3 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool __11148_3 x_2) z_1)).

(; Theorem: |- ((= w) Data.Bool.T) ;)

(; dict ;)

def thm_1512 : w_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool w_1 hol.true) -> hol.proof (hol.eq hol.bool w_1 hol.true) :=
  w_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool w_1 hol.true) => hyp_1.

(; Theorem: |- ((= (\lambda _11148. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ _11148) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= _11148) x)) z)) w)) (\lambda _11148. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ _11148) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= _11148) x)) z)) Data.Bool.T)) ;)

(; dict ;)

def thm_1513 : w_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool w_1 hol.true) -> hol.proof (hol.eq hol.bool ((__11148_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11148_4 x_3) z_2)) w_1) ((__11148_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11148_4 x_3) z_2)) hol.true)) :=
  w_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool w_1 hol.true) => hol.APP_THM hol.bool hol.bool (__11148_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11148_4 x_3) z_2)) (__11148_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_4 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool __11148_4 x_3) z_2)) w_1 hol.true (thm_1511 z_2 x_3) (thm_1512 w_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ w) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= w) x)) z))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= Data.Bool.T) x)) z))) ;)

(; dict ;)

def thm_1514 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool w_3 hol.true) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1)) (hol.imp (hol.and (hol.and hol.true (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool hol.true x_2) z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool w_3 hol.true) => hol.EQ_MP (hol.eq hol.bool ((__11148_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_4 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool __11148_4 x_2) z_1)) w_3) ((__11148_4 : hol.term hol.bool => hol.imp (hol.and (hol.and __11148_4 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool __11148_4 x_2) z_1)) hol.true)) (hol.eq hol.bool (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1)) (hol.imp (hol.and (hol.and hol.true (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool hol.true x_2) z_1))) (thm_1510 w_3 z_1 x_2) (thm_1513 w_3 z_1 x_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= Data.Bool.T) x)) z))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ w) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= w) x)) z))) ;)

(; dict ;)

def thm_1515 : w_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool w_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.and hol.true (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool hol.true x_3) z_2)) (hol.imp (hol.and (hol.and w_1 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool w_1 x_3) z_2))) :=
  w_1 : hol.term hol.bool => z_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool w_1 hol.true) => hol.SYM hol.bool (hol.imp (hol.and (hol.and w_1 (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool w_1 x_3) z_2)) (hol.imp (hol.and (hol.and hol.true (hol.imp x_3 z_2)) (hol.imp z_2 x_3)) (hol.imp (hol.eq hol.bool hol.true x_3) z_2)) (thm_1514 z_2 x_3 w_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> x) z))) ((Data.Bool.==> x) z)) ;)

(; dict ;)

def thm_1516 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.true (hol.imp x_2 z_1)) (hol.imp x_2 z_1)) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_124 t_1) (hol.imp x_2 z_1).

(; Theorem: |- ((= (Data.Bool./\ ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> x) z)))) (Data.Bool./\ ((Data.Bool.==> x) z))) ;)

(; dict ;)

def thm_1517 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.and hol.true (hol.imp x_2 z_1))) (hol.and (hol.imp x_2 z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.and hol.true (hol.imp x_2 z_1)) (hol.imp x_2 z_1) thm_298 (thm_1516 z_1 x_2).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool./\ ((Data.Bool.==> x) z)) ((Data.Bool.==> z) x))) ;)

(; dict ;)

def thm_1518 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.and hol.true (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and (hol.and hol.true (hol.imp x_2 z_1))) (hol.and (hol.imp x_2 z_1)) (hol.imp z_1 x_2) (hol.imp z_1 x_2) (thm_1517 z_1 x_2) (thm_1488 x_2 z_1).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x)))) (Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> x) z)) ((Data.Bool.==> z) x)))) ;)

(; dict ;)

def thm_1519 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and (hol.and hol.true (hol.imp x_2 z_1)) (hol.imp z_1 x_2))) (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.and (hol.and hol.true (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) thm_107 (thm_1518 z_1 x_2).

(; Theorem: |- ((= ((= Data.Bool.T) x)) x) ;)

(; dict ;)

def thm_1520 : x_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true x_1) x_1) :=
  x_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_206 t_1) x_1.

(; Theorem: |- ((= (Data.Bool.==> ((= Data.Bool.T) x))) (Data.Bool.==> x)) ;)

(; dict ;)

def thm_1521 : x_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.eq hol.bool hol.true x_1)) (hol.imp x_1)) :=
  x_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.eq hol.bool hol.true x_1) x_1 thm_107 (thm_1520 x_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= Data.Bool.T) x)) z)) ((Data.Bool.==> x) z)) ;)

(; dict ;)

def thm_1522 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool hol.true x_2) z_1) (hol.imp x_2 z_1)) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.imp (hol.eq hol.bool hol.true x_2)) (hol.imp x_2) z_1 z_1 (thm_1521 x_2) (thm_720 z_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= Data.Bool.T) x)) z))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> x) z)) ((Data.Bool.==> z) x))) ((Data.Bool.==> x) z))) ;)

(; dict ;)

def thm_1523 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.and hol.true (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool hol.true x_2) z_1)) (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and (hol.and hol.true (hol.imp x_2 z_1)) (hol.imp z_1 x_2))) (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2))) (hol.imp (hol.eq hol.bool hol.true x_2) z_1) (hol.imp x_2 z_1) (thm_1519 z_1 x_2) (thm_1522 z_1 x_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> x) z)) ((Data.Bool.==> z) x))) ((Data.Bool.==> x) z))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= Data.Bool.T) x)) z))) ;)

(; dict ;)

def thm_1524 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1)) (hol.imp (hol.and (hol.and hol.true (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool hol.true x_2) z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.SYM hol.bool (hol.imp (hol.and (hol.and hol.true (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool hol.true x_2) z_1)) (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1)) (thm_1523 z_1 x_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> x) z)) ((Data.Bool.==> z) x))) ((Data.Bool.==> x) z))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> x) z)) ((Data.Bool.==> z) x))) ((Data.Bool.==> x) z))) ;)

(; dict ;)

def thm_1525 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1)) (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1)).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> x) z)) ((Data.Bool.==> z) x))) ((Data.Bool.==> x) z))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> x) z)) ((Data.Bool.==> z) x))) ((Data.Bool.==> x) z))) ;)

(; dict ;)

def thm_1526 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1)) (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.SYM hol.bool (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1)) (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1)) (thm_1525 z_1 x_2).

(; Theorem: |- ((= (= (\lambda _11154. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11154) z)) ((Data.Bool.==> z) _11154))) ((Data.Bool.==> _11154) z)) x))) (= (\lambda _11154. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11154) z)) ((Data.Bool.==> z) _11154))) ((Data.Bool.==> _11154) z)) x))) ;)

(; dict ;)

def thm_1527 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11154_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_3 z_2) (hol.imp z_2 __11154_3)) (hol.imp __11154_3 z_2)) x_1)) (hol.eq hol.bool ((__11154_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_3 z_2) (hol.imp z_2 __11154_3)) (hol.imp __11154_3 z_2)) x_1))) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11154_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_3 z_2) (hol.imp z_2 __11154_3)) (hol.imp __11154_3 z_2)) x_1)).

(; Theorem: |- ((= (\lambda _11154. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11154) z)) ((Data.Bool.==> z) _11154))) ((Data.Bool.==> _11154) z)) Data.Bool.F)) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) z)) ((Data.Bool.==> z) Data.Bool.F))) ((Data.Bool.==> Data.Bool.F) z))) ;)

(; dict ;)

def thm_1528 : z_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__11154_2 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_2 z_1) (hol.imp z_1 __11154_2)) (hol.imp __11154_2 z_1)) hol.false) (hol.imp (hol.and (hol.imp hol.false z_1) (hol.imp z_1 hol.false)) (hol.imp hol.false z_1))) :=
  z_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__11154_2 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_2 z_1) (hol.imp z_1 __11154_2)) (hol.imp __11154_2 z_1)) hol.false.

(; Theorem: |- ((= ((= (\lambda _11154. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11154) z)) ((Data.Bool.==> z) _11154))) ((Data.Bool.==> _11154) z)) x)) (\lambda _11154. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11154) z)) ((Data.Bool.==> z) _11154))) ((Data.Bool.==> _11154) z)) Data.Bool.F))) ((= (\lambda _11154. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11154) z)) ((Data.Bool.==> z) _11154))) ((Data.Bool.==> _11154) z)) x)) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) z)) ((Data.Bool.==> z) Data.Bool.F))) ((Data.Bool.==> Data.Bool.F) z)))) ;)

(; dict ;)

def thm_1529 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11154_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_3 z_2) (hol.imp z_2 __11154_3)) (hol.imp __11154_3 z_2)) x_1) ((__11154_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_3 z_2) (hol.imp z_2 __11154_3)) (hol.imp __11154_3 z_2)) hol.false)) (hol.eq hol.bool ((__11154_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_3 z_2) (hol.imp z_2 __11154_3)) (hol.imp __11154_3 z_2)) x_1) (hol.imp (hol.and (hol.imp hol.false z_2) (hol.imp z_2 hol.false)) (hol.imp hol.false z_2)))) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11154_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_3 z_2) (hol.imp z_2 __11154_3)) (hol.imp __11154_3 z_2)) x_1)) (hol.eq hol.bool ((__11154_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_3 z_2) (hol.imp z_2 __11154_3)) (hol.imp __11154_3 z_2)) x_1)) ((__11154_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_3 z_2) (hol.imp z_2 __11154_3)) (hol.imp __11154_3 z_2)) hol.false) (hol.imp (hol.and (hol.imp hol.false z_2) (hol.imp z_2 hol.false)) (hol.imp hol.false z_2)) (thm_1527 x_1 z_2) (thm_1528 z_2).

(; Theorem: |- ((= (\lambda _11154. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11154) z)) ((Data.Bool.==> z) _11154))) ((Data.Bool.==> _11154) z)) x)) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> x) z)) ((Data.Bool.==> z) x))) ((Data.Bool.==> x) z))) ;)

(; dict ;)

def thm_1530 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__11154_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_3 z_2) (hol.imp z_2 __11154_3)) (hol.imp __11154_3 z_2)) x_1) (hol.imp (hol.and (hol.imp x_1 z_2) (hol.imp z_2 x_1)) (hol.imp x_1 z_2))) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__11154_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_3 z_2) (hol.imp z_2 __11154_3)) (hol.imp __11154_3 z_2)) x_1.

(; Theorem: |- ((= (= (\lambda _11154. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11154) z)) ((Data.Bool.==> z) _11154))) ((Data.Bool.==> _11154) z)) x))) (= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> x) z)) ((Data.Bool.==> z) x))) ((Data.Bool.==> x) z)))) ;)

(; dict ;)

def thm_1531 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11154_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_3 z_2) (hol.imp z_2 __11154_3)) (hol.imp __11154_3 z_2)) x_1)) (hol.eq hol.bool (hol.imp (hol.and (hol.imp x_1 z_2) (hol.imp z_2 x_1)) (hol.imp x_1 z_2)))) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__11154_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_3 z_2) (hol.imp z_2 __11154_3)) (hol.imp __11154_3 z_2)) x_1) (hol.imp (hol.and (hol.imp x_1 z_2) (hol.imp z_2 x_1)) (hol.imp x_1 z_2)) thm_64 (thm_1530 x_1 z_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) z)) ((Data.Bool.==> z) Data.Bool.F))) ((Data.Bool.==> Data.Bool.F) z))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) z)) ((Data.Bool.==> z) Data.Bool.F))) ((Data.Bool.==> Data.Bool.F) z))) ;)

(; dict ;)

def thm_1532 : z_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp hol.false z_1) (hol.imp z_1 hol.false)) (hol.imp hol.false z_1)) (hol.imp (hol.and (hol.imp hol.false z_1) (hol.imp z_1 hol.false)) (hol.imp hol.false z_1))) :=
  z_1 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.and (hol.imp hol.false z_1) (hol.imp z_1 hol.false)) (hol.imp hol.false z_1)).

(; Theorem: |- ((= ((= (\lambda _11154. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11154) z)) ((Data.Bool.==> z) _11154))) ((Data.Bool.==> _11154) z)) x)) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) z)) ((Data.Bool.==> z) Data.Bool.F))) ((Data.Bool.==> Data.Bool.F) z)))) ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> x) z)) ((Data.Bool.==> z) x))) ((Data.Bool.==> x) z))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) z)) ((Data.Bool.==> z) Data.Bool.F))) ((Data.Bool.==> Data.Bool.F) z)))) ;)

(; dict ;)

def thm_1533 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11154_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_3 z_2) (hol.imp z_2 __11154_3)) (hol.imp __11154_3 z_2)) x_1) (hol.imp (hol.and (hol.imp hol.false z_2) (hol.imp z_2 hol.false)) (hol.imp hol.false z_2))) (hol.eq hol.bool (hol.imp (hol.and (hol.imp x_1 z_2) (hol.imp z_2 x_1)) (hol.imp x_1 z_2)) (hol.imp (hol.and (hol.imp hol.false z_2) (hol.imp z_2 hol.false)) (hol.imp hol.false z_2)))) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11154_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_3 z_2) (hol.imp z_2 __11154_3)) (hol.imp __11154_3 z_2)) x_1)) (hol.eq hol.bool (hol.imp (hol.and (hol.imp x_1 z_2) (hol.imp z_2 x_1)) (hol.imp x_1 z_2))) (hol.imp (hol.and (hol.imp hol.false z_2) (hol.imp z_2 hol.false)) (hol.imp hol.false z_2)) (hol.imp (hol.and (hol.imp hol.false z_2) (hol.imp z_2 hol.false)) (hol.imp hol.false z_2)) (thm_1531 x_1 z_2) (thm_1532 z_2).

(; Theorem: |- ((= ((= (\lambda _11154. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11154) z)) ((Data.Bool.==> z) _11154))) ((Data.Bool.==> _11154) z)) x)) (\lambda _11154. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11154) z)) ((Data.Bool.==> z) _11154))) ((Data.Bool.==> _11154) z)) Data.Bool.F))) ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> x) z)) ((Data.Bool.==> z) x))) ((Data.Bool.==> x) z))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) z)) ((Data.Bool.==> z) Data.Bool.F))) ((Data.Bool.==> Data.Bool.F) z)))) ;)

(; dict ;)

def thm_1534 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11154_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_3 z_2) (hol.imp z_2 __11154_3)) (hol.imp __11154_3 z_2)) x_1) ((__11154_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_3 z_2) (hol.imp z_2 __11154_3)) (hol.imp __11154_3 z_2)) hol.false)) (hol.eq hol.bool (hol.imp (hol.and (hol.imp x_1 z_2) (hol.imp z_2 x_1)) (hol.imp x_1 z_2)) (hol.imp (hol.and (hol.imp hol.false z_2) (hol.imp z_2 hol.false)) (hol.imp hol.false z_2)))) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__11154_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_3 z_2) (hol.imp z_2 __11154_3)) (hol.imp __11154_3 z_2)) x_1) ((__11154_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_3 z_2) (hol.imp z_2 __11154_3)) (hol.imp __11154_3 z_2)) hol.false)) (hol.eq hol.bool ((__11154_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_3 z_2) (hol.imp z_2 __11154_3)) (hol.imp __11154_3 z_2)) x_1) (hol.imp (hol.and (hol.imp hol.false z_2) (hol.imp z_2 hol.false)) (hol.imp hol.false z_2))) (hol.eq hol.bool (hol.imp (hol.and (hol.imp x_1 z_2) (hol.imp z_2 x_1)) (hol.imp x_1 z_2)) (hol.imp (hol.and (hol.imp hol.false z_2) (hol.imp z_2 hol.false)) (hol.imp hol.false z_2))) (thm_1529 x_1 z_2) (thm_1533 x_1 z_2).

(; Theorem: |- ((= \lambda _11154. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11154) z)) ((Data.Bool.==> z) _11154))) ((Data.Bool.==> _11154) z))) \lambda _11154. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11154) z)) ((Data.Bool.==> z) _11154))) ((Data.Bool.==> _11154) z))) ;)

(; dict ;)

def thm_1535 : z_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__11154_2 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_2 z_1) (hol.imp z_1 __11154_2)) (hol.imp __11154_2 z_1)) (__11154_2 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_2 z_1) (hol.imp z_1 __11154_2)) (hol.imp __11154_2 z_1))) :=
  z_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__11154_2 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_2 z_1) (hol.imp z_1 __11154_2)) (hol.imp __11154_2 z_1)).

(; Theorem: |- ((= (\lambda _11154. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11154) z)) ((Data.Bool.==> z) _11154))) ((Data.Bool.==> _11154) z)) x)) (\lambda _11154. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11154) z)) ((Data.Bool.==> z) _11154))) ((Data.Bool.==> _11154) z)) Data.Bool.F)) ;)

(; dict ;)

def thm_1536 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.false) -> hol.proof (hol.eq hol.bool ((__11154_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_3 z_2) (hol.imp z_2 __11154_3)) (hol.imp __11154_3 z_2)) x_1) ((__11154_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_3 z_2) (hol.imp z_2 __11154_3)) (hol.imp __11154_3 z_2)) hol.false)) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.false) => hol.APP_THM hol.bool hol.bool (__11154_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_3 z_2) (hol.imp z_2 __11154_3)) (hol.imp __11154_3 z_2)) (__11154_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_3 z_2) (hol.imp z_2 __11154_3)) (hol.imp __11154_3 z_2)) x_1 hol.false (thm_1535 z_2) (thm_712 x_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> x) z)) ((Data.Bool.==> z) x))) ((Data.Bool.==> x) z))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) z)) ((Data.Bool.==> z) Data.Bool.F))) ((Data.Bool.==> Data.Bool.F) z))) ;)

(; dict ;)

def thm_1537 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_2 hol.false) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1)) (hol.imp (hol.and (hol.imp hol.false z_1) (hol.imp z_1 hol.false)) (hol.imp hol.false z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_2 hol.false) => hol.EQ_MP (hol.eq hol.bool ((__11154_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_3 z_1) (hol.imp z_1 __11154_3)) (hol.imp __11154_3 z_1)) x_2) ((__11154_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11154_3 z_1) (hol.imp z_1 __11154_3)) (hol.imp __11154_3 z_1)) hol.false)) (hol.eq hol.bool (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1)) (hol.imp (hol.and (hol.imp hol.false z_1) (hol.imp z_1 hol.false)) (hol.imp hol.false z_1))) (thm_1534 x_2 z_1) (thm_1536 x_2 z_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) z)) ((Data.Bool.==> z) Data.Bool.F))) ((Data.Bool.==> Data.Bool.F) z))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> x) z)) ((Data.Bool.==> z) x))) ((Data.Bool.==> x) z))) ;)

(; dict ;)

def thm_1538 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp hol.false z_2) (hol.imp z_2 hol.false)) (hol.imp hol.false z_2)) (hol.imp (hol.and (hol.imp x_1 z_2) (hol.imp z_2 x_1)) (hol.imp x_1 z_2))) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.false) => hol.SYM hol.bool (hol.imp (hol.and (hol.imp x_1 z_2) (hol.imp z_2 x_1)) (hol.imp x_1 z_2)) (hol.imp (hol.and (hol.imp hol.false z_2) (hol.imp z_2 hol.false)) (hol.imp hol.false z_2)) (thm_1537 z_2 x_1 hyp_1).

(; Theorem: |- ((= (Data.Bool./\ ((Data.Bool.==> Data.Bool.F) z))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_1539 : z_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.imp hol.false z_1)) (hol.and hol.true)) :=
  z_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.imp hol.false z_1) hol.true thm_298 (thm_725 z_1).

(; Theorem: |- ((= ((Data.Bool.==> z) Data.Bool.F)) (Data.Bool.~ z)) ;)

(; dict ;)

def thm_1540 : z_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp z_1 hol.false) (hol.not z_1)) :=
  z_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_478 t_1) z_1.

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) z)) ((Data.Bool.==> z) Data.Bool.F))) ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ z))) ;)

(; dict ;)

def thm_1541 : z_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.imp hol.false z_1) (hol.imp z_1 hol.false)) (hol.and hol.true (hol.not z_1))) :=
  z_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and (hol.imp hol.false z_1)) (hol.and hol.true) (hol.imp z_1 hol.false) (hol.not z_1) (thm_1539 z_1) (thm_1540 z_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) (Data.Bool.~ z))) (Data.Bool.~ z)) ;)

(; dict ;)

def thm_1542 : z_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.true (hol.not z_1)) (hol.not z_1)) :=
  z_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_124 t_1) (hol.not z_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) z)) ((Data.Bool.==> z) Data.Bool.F))) (Data.Bool.~ z)) ;)

(; dict ;)

def thm_1543 : z_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.imp hol.false z_1) (hol.imp z_1 hol.false)) (hol.not z_1)) :=
  z_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.and (hol.imp hol.false z_1) (hol.imp z_1 hol.false)) (hol.and hol.true (hol.not z_1)) (hol.not z_1) (thm_1541 z_1) (thm_1542 z_1).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) z)) ((Data.Bool.==> z) Data.Bool.F)))) (Data.Bool.==> (Data.Bool.~ z))) ;)

(; dict ;)

def thm_1544 : z_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and (hol.imp hol.false z_1) (hol.imp z_1 hol.false))) (hol.imp (hol.not z_1))) :=
  z_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.and (hol.imp hol.false z_1) (hol.imp z_1 hol.false)) (hol.not z_1) thm_107 (thm_1543 z_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) z)) ((Data.Bool.==> z) Data.Bool.F))) ((Data.Bool.==> Data.Bool.F) z))) ((Data.Bool.==> (Data.Bool.~ z)) Data.Bool.T)) ;)

(; dict ;)

def thm_1545 : z_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp hol.false z_1) (hol.imp z_1 hol.false)) (hol.imp hol.false z_1)) (hol.imp (hol.not z_1) hol.true)) :=
  z_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and (hol.imp hol.false z_1) (hol.imp z_1 hol.false))) (hol.imp (hol.not z_1)) (hol.imp hol.false z_1) hol.true (thm_1544 z_1) (thm_725 z_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ z)) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_1546 : z_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.not z_1) hol.true) hol.true) :=
  z_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_455 t_1) (hol.not z_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) z)) ((Data.Bool.==> z) Data.Bool.F))) ((Data.Bool.==> Data.Bool.F) z))) Data.Bool.T) ;)

(; dict ;)

def thm_1547 : z_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp hol.false z_1) (hol.imp z_1 hol.false)) (hol.imp hol.false z_1)) hol.true) :=
  z_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.imp (hol.and (hol.imp hol.false z_1) (hol.imp z_1 hol.false)) (hol.imp hol.false z_1)) (hol.imp (hol.not z_1) hol.true) hol.true (thm_1545 z_1) (thm_1546 z_1).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) z)) ((Data.Bool.==> z) Data.Bool.F))) ((Data.Bool.==> Data.Bool.F) z))) ;)

(; dict ;)

def thm_1548 : z_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.imp (hol.and (hol.imp hol.false z_1) (hol.imp z_1 hol.false)) (hol.imp hol.false z_1))) :=
  z_1 : hol.term hol.bool => hol.SYM hol.bool (hol.imp (hol.and (hol.imp hol.false z_1) (hol.imp z_1 hol.false)) (hol.imp hol.false z_1)) hol.true (thm_1547 z_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.F) z)) ((Data.Bool.==> z) Data.Bool.F))) ((Data.Bool.==> Data.Bool.F) z)) ;)

(; dict ;)

def thm_1549 : z_1 : hol.term hol.bool -> hol.proof (hol.imp (hol.and (hol.imp hol.false z_1) (hol.imp z_1 hol.false)) (hol.imp hol.false z_1)) :=
  z_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.imp (hol.and (hol.imp hol.false z_1) (hol.imp z_1 hol.false)) (hol.imp hol.false z_1)) (thm_1548 z_1) thm_15.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> x) z)) ((Data.Bool.==> z) x))) ((Data.Bool.==> x) z)) ;)

(; dict ;)

def thm_1550 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_2 hol.false) -> hol.proof (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1)) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_2 hol.false) => hol.EQ_MP (hol.imp (hol.and (hol.imp hol.false z_1) (hol.imp z_1 hol.false)) (hol.imp hol.false z_1)) (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1)) (thm_1538 x_2 z_1 hyp_1) (thm_1549 z_1).

(; Theorem: |- ((Data.Bool.==> ((= x) Data.Bool.F)) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> x) z)) ((Data.Bool.==> z) x))) ((Data.Bool.==> x) z))) ;)

(; dict ;)

def thm_1551 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool x_2 hol.false) (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_2 hol.false) => thm_1550 z_1 x_2 hyp_1.

(; Theorem: |- ((= (= (\lambda _11152. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11152) z)) ((Data.Bool.==> z) _11152))) ((Data.Bool.==> _11152) z)) x))) (= (\lambda _11152. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11152) z)) ((Data.Bool.==> z) _11152))) ((Data.Bool.==> _11152) z)) x))) ;)

(; dict ;)

def thm_1552 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11152_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_3 z_2) (hol.imp z_2 __11152_3)) (hol.imp __11152_3 z_2)) x_1)) (hol.eq hol.bool ((__11152_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_3 z_2) (hol.imp z_2 __11152_3)) (hol.imp __11152_3 z_2)) x_1))) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11152_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_3 z_2) (hol.imp z_2 __11152_3)) (hol.imp __11152_3 z_2)) x_1)).

(; Theorem: |- ((= (\lambda _11152. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11152) z)) ((Data.Bool.==> z) _11152))) ((Data.Bool.==> _11152) z)) Data.Bool.T)) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.T) z)) ((Data.Bool.==> z) Data.Bool.T))) ((Data.Bool.==> Data.Bool.T) z))) ;)

(; dict ;)

def thm_1553 : z_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__11152_2 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_2 z_1) (hol.imp z_1 __11152_2)) (hol.imp __11152_2 z_1)) hol.true) (hol.imp (hol.and (hol.imp hol.true z_1) (hol.imp z_1 hol.true)) (hol.imp hol.true z_1))) :=
  z_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__11152_2 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_2 z_1) (hol.imp z_1 __11152_2)) (hol.imp __11152_2 z_1)) hol.true.

(; Theorem: |- ((= ((= (\lambda _11152. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11152) z)) ((Data.Bool.==> z) _11152))) ((Data.Bool.==> _11152) z)) x)) (\lambda _11152. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11152) z)) ((Data.Bool.==> z) _11152))) ((Data.Bool.==> _11152) z)) Data.Bool.T))) ((= (\lambda _11152. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11152) z)) ((Data.Bool.==> z) _11152))) ((Data.Bool.==> _11152) z)) x)) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.T) z)) ((Data.Bool.==> z) Data.Bool.T))) ((Data.Bool.==> Data.Bool.T) z)))) ;)

(; dict ;)

def thm_1554 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11152_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_3 z_2) (hol.imp z_2 __11152_3)) (hol.imp __11152_3 z_2)) x_1) ((__11152_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_3 z_2) (hol.imp z_2 __11152_3)) (hol.imp __11152_3 z_2)) hol.true)) (hol.eq hol.bool ((__11152_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_3 z_2) (hol.imp z_2 __11152_3)) (hol.imp __11152_3 z_2)) x_1) (hol.imp (hol.and (hol.imp hol.true z_2) (hol.imp z_2 hol.true)) (hol.imp hol.true z_2)))) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11152_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_3 z_2) (hol.imp z_2 __11152_3)) (hol.imp __11152_3 z_2)) x_1)) (hol.eq hol.bool ((__11152_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_3 z_2) (hol.imp z_2 __11152_3)) (hol.imp __11152_3 z_2)) x_1)) ((__11152_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_3 z_2) (hol.imp z_2 __11152_3)) (hol.imp __11152_3 z_2)) hol.true) (hol.imp (hol.and (hol.imp hol.true z_2) (hol.imp z_2 hol.true)) (hol.imp hol.true z_2)) (thm_1552 x_1 z_2) (thm_1553 z_2).

(; Theorem: |- ((= (\lambda _11152. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11152) z)) ((Data.Bool.==> z) _11152))) ((Data.Bool.==> _11152) z)) x)) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> x) z)) ((Data.Bool.==> z) x))) ((Data.Bool.==> x) z))) ;)

(; dict ;)

def thm_1555 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__11152_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_3 z_2) (hol.imp z_2 __11152_3)) (hol.imp __11152_3 z_2)) x_1) (hol.imp (hol.and (hol.imp x_1 z_2) (hol.imp z_2 x_1)) (hol.imp x_1 z_2))) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__11152_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_3 z_2) (hol.imp z_2 __11152_3)) (hol.imp __11152_3 z_2)) x_1.

(; Theorem: |- ((= (= (\lambda _11152. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11152) z)) ((Data.Bool.==> z) _11152))) ((Data.Bool.==> _11152) z)) x))) (= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> x) z)) ((Data.Bool.==> z) x))) ((Data.Bool.==> x) z)))) ;)

(; dict ;)

def thm_1556 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11152_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_3 z_2) (hol.imp z_2 __11152_3)) (hol.imp __11152_3 z_2)) x_1)) (hol.eq hol.bool (hol.imp (hol.and (hol.imp x_1 z_2) (hol.imp z_2 x_1)) (hol.imp x_1 z_2)))) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__11152_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_3 z_2) (hol.imp z_2 __11152_3)) (hol.imp __11152_3 z_2)) x_1) (hol.imp (hol.and (hol.imp x_1 z_2) (hol.imp z_2 x_1)) (hol.imp x_1 z_2)) thm_64 (thm_1555 x_1 z_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.T) z)) ((Data.Bool.==> z) Data.Bool.T))) ((Data.Bool.==> Data.Bool.T) z))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.T) z)) ((Data.Bool.==> z) Data.Bool.T))) ((Data.Bool.==> Data.Bool.T) z))) ;)

(; dict ;)

def thm_1557 : z_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp hol.true z_1) (hol.imp z_1 hol.true)) (hol.imp hol.true z_1)) (hol.imp (hol.and (hol.imp hol.true z_1) (hol.imp z_1 hol.true)) (hol.imp hol.true z_1))) :=
  z_1 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.and (hol.imp hol.true z_1) (hol.imp z_1 hol.true)) (hol.imp hol.true z_1)).

(; Theorem: |- ((= ((= (\lambda _11152. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11152) z)) ((Data.Bool.==> z) _11152))) ((Data.Bool.==> _11152) z)) x)) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.T) z)) ((Data.Bool.==> z) Data.Bool.T))) ((Data.Bool.==> Data.Bool.T) z)))) ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> x) z)) ((Data.Bool.==> z) x))) ((Data.Bool.==> x) z))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.T) z)) ((Data.Bool.==> z) Data.Bool.T))) ((Data.Bool.==> Data.Bool.T) z)))) ;)

(; dict ;)

def thm_1558 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11152_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_3 z_2) (hol.imp z_2 __11152_3)) (hol.imp __11152_3 z_2)) x_1) (hol.imp (hol.and (hol.imp hol.true z_2) (hol.imp z_2 hol.true)) (hol.imp hol.true z_2))) (hol.eq hol.bool (hol.imp (hol.and (hol.imp x_1 z_2) (hol.imp z_2 x_1)) (hol.imp x_1 z_2)) (hol.imp (hol.and (hol.imp hol.true z_2) (hol.imp z_2 hol.true)) (hol.imp hol.true z_2)))) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11152_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_3 z_2) (hol.imp z_2 __11152_3)) (hol.imp __11152_3 z_2)) x_1)) (hol.eq hol.bool (hol.imp (hol.and (hol.imp x_1 z_2) (hol.imp z_2 x_1)) (hol.imp x_1 z_2))) (hol.imp (hol.and (hol.imp hol.true z_2) (hol.imp z_2 hol.true)) (hol.imp hol.true z_2)) (hol.imp (hol.and (hol.imp hol.true z_2) (hol.imp z_2 hol.true)) (hol.imp hol.true z_2)) (thm_1556 x_1 z_2) (thm_1557 z_2).

(; Theorem: |- ((= ((= (\lambda _11152. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11152) z)) ((Data.Bool.==> z) _11152))) ((Data.Bool.==> _11152) z)) x)) (\lambda _11152. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11152) z)) ((Data.Bool.==> z) _11152))) ((Data.Bool.==> _11152) z)) Data.Bool.T))) ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> x) z)) ((Data.Bool.==> z) x))) ((Data.Bool.==> x) z))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.T) z)) ((Data.Bool.==> z) Data.Bool.T))) ((Data.Bool.==> Data.Bool.T) z)))) ;)

(; dict ;)

def thm_1559 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11152_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_3 z_2) (hol.imp z_2 __11152_3)) (hol.imp __11152_3 z_2)) x_1) ((__11152_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_3 z_2) (hol.imp z_2 __11152_3)) (hol.imp __11152_3 z_2)) hol.true)) (hol.eq hol.bool (hol.imp (hol.and (hol.imp x_1 z_2) (hol.imp z_2 x_1)) (hol.imp x_1 z_2)) (hol.imp (hol.and (hol.imp hol.true z_2) (hol.imp z_2 hol.true)) (hol.imp hol.true z_2)))) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__11152_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_3 z_2) (hol.imp z_2 __11152_3)) (hol.imp __11152_3 z_2)) x_1) ((__11152_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_3 z_2) (hol.imp z_2 __11152_3)) (hol.imp __11152_3 z_2)) hol.true)) (hol.eq hol.bool ((__11152_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_3 z_2) (hol.imp z_2 __11152_3)) (hol.imp __11152_3 z_2)) x_1) (hol.imp (hol.and (hol.imp hol.true z_2) (hol.imp z_2 hol.true)) (hol.imp hol.true z_2))) (hol.eq hol.bool (hol.imp (hol.and (hol.imp x_1 z_2) (hol.imp z_2 x_1)) (hol.imp x_1 z_2)) (hol.imp (hol.and (hol.imp hol.true z_2) (hol.imp z_2 hol.true)) (hol.imp hol.true z_2))) (thm_1554 x_1 z_2) (thm_1558 x_1 z_2).

(; Theorem: |- ((= \lambda _11152. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11152) z)) ((Data.Bool.==> z) _11152))) ((Data.Bool.==> _11152) z))) \lambda _11152. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11152) z)) ((Data.Bool.==> z) _11152))) ((Data.Bool.==> _11152) z))) ;)

(; dict ;)

def thm_1560 : z_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__11152_2 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_2 z_1) (hol.imp z_1 __11152_2)) (hol.imp __11152_2 z_1)) (__11152_2 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_2 z_1) (hol.imp z_1 __11152_2)) (hol.imp __11152_2 z_1))) :=
  z_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__11152_2 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_2 z_1) (hol.imp z_1 __11152_2)) (hol.imp __11152_2 z_1)).

(; Theorem: |- ((= (\lambda _11152. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11152) z)) ((Data.Bool.==> z) _11152))) ((Data.Bool.==> _11152) z)) x)) (\lambda _11152. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> _11152) z)) ((Data.Bool.==> z) _11152))) ((Data.Bool.==> _11152) z)) Data.Bool.T)) ;)

(; dict ;)

def thm_1561 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.true) -> hol.proof (hol.eq hol.bool ((__11152_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_3 z_2) (hol.imp z_2 __11152_3)) (hol.imp __11152_3 z_2)) x_1) ((__11152_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_3 z_2) (hol.imp z_2 __11152_3)) (hol.imp __11152_3 z_2)) hol.true)) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.true) => hol.APP_THM hol.bool hol.bool (__11152_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_3 z_2) (hol.imp z_2 __11152_3)) (hol.imp __11152_3 z_2)) (__11152_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_3 z_2) (hol.imp z_2 __11152_3)) (hol.imp __11152_3 z_2)) x_1 hol.true (thm_1560 z_2) (thm_740 x_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> x) z)) ((Data.Bool.==> z) x))) ((Data.Bool.==> x) z))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.T) z)) ((Data.Bool.==> z) Data.Bool.T))) ((Data.Bool.==> Data.Bool.T) z))) ;)

(; dict ;)

def thm_1562 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_2 hol.true) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1)) (hol.imp (hol.and (hol.imp hol.true z_1) (hol.imp z_1 hol.true)) (hol.imp hol.true z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_2 hol.true) => hol.EQ_MP (hol.eq hol.bool ((__11152_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_3 z_1) (hol.imp z_1 __11152_3)) (hol.imp __11152_3 z_1)) x_2) ((__11152_3 : hol.term hol.bool => hol.imp (hol.and (hol.imp __11152_3 z_1) (hol.imp z_1 __11152_3)) (hol.imp __11152_3 z_1)) hol.true)) (hol.eq hol.bool (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1)) (hol.imp (hol.and (hol.imp hol.true z_1) (hol.imp z_1 hol.true)) (hol.imp hol.true z_1))) (thm_1559 x_2 z_1) (thm_1561 x_2 z_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.T) z)) ((Data.Bool.==> z) Data.Bool.T))) ((Data.Bool.==> Data.Bool.T) z))) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> x) z)) ((Data.Bool.==> z) x))) ((Data.Bool.==> x) z))) ;)

(; dict ;)

def thm_1563 : x_1 : hol.term hol.bool -> z_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp hol.true z_2) (hol.imp z_2 hol.true)) (hol.imp hol.true z_2)) (hol.imp (hol.and (hol.imp x_1 z_2) (hol.imp z_2 x_1)) (hol.imp x_1 z_2))) :=
  x_1 : hol.term hol.bool => z_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_1 hol.true) => hol.SYM hol.bool (hol.imp (hol.and (hol.imp x_1 z_2) (hol.imp z_2 x_1)) (hol.imp x_1 z_2)) (hol.imp (hol.and (hol.imp hol.true z_2) (hol.imp z_2 hol.true)) (hol.imp hol.true z_2)) (thm_1562 z_2 x_1 hyp_1).

(; Theorem: |- ((= (Data.Bool./\ ((Data.Bool.==> Data.Bool.T) z))) (Data.Bool./\ z)) ;)

(; dict ;)

def thm_1564 : z_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.imp hol.true z_1)) (hol.and z_1)) :=
  z_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.imp hol.true z_1) z_1 thm_298 (thm_722 z_1).

(; Theorem: |- ((= ((Data.Bool.==> z) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_1565 : z_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp z_1 hol.true) hol.true) :=
  z_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_455 t_1) z_1.

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool.==> Data.Bool.T) z)) ((Data.Bool.==> z) Data.Bool.T))) ((Data.Bool./\ z) Data.Bool.T)) ;)

(; dict ;)

def thm_1566 : z_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.imp hol.true z_1) (hol.imp z_1 hol.true)) (hol.and z_1 hol.true)) :=
  z_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and (hol.imp hol.true z_1)) (hol.and z_1) (hol.imp z_1 hol.true) hol.true (thm_1564 z_1) (thm_1565 z_1).

(; Theorem: |- ((= ((Data.Bool./\ z) Data.Bool.T)) z) ;)

(; dict ;)

def thm_1567 : z_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and z_1 hol.true) z_1) :=
  z_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_157 t_1) z_1.

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool.==> Data.Bool.T) z)) ((Data.Bool.==> z) Data.Bool.T))) z) ;)

(; dict ;)

def thm_1568 : z_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.imp hol.true z_1) (hol.imp z_1 hol.true)) z_1) :=
  z_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.and (hol.imp hol.true z_1) (hol.imp z_1 hol.true)) (hol.and z_1 hol.true) z_1 (thm_1566 z_1) (thm_1567 z_1).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.T) z)) ((Data.Bool.==> z) Data.Bool.T)))) (Data.Bool.==> z)) ;)

(; dict ;)

def thm_1569 : z_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and (hol.imp hol.true z_1) (hol.imp z_1 hol.true))) (hol.imp z_1)) :=
  z_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.and (hol.imp hol.true z_1) (hol.imp z_1 hol.true)) z_1 thm_107 (thm_1568 z_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.T) z)) ((Data.Bool.==> z) Data.Bool.T))) ((Data.Bool.==> Data.Bool.T) z))) ((Data.Bool.==> z) z)) ;)

(; dict ;)

def thm_1570 : z_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp hol.true z_1) (hol.imp z_1 hol.true)) (hol.imp hol.true z_1)) (hol.imp z_1 z_1)) :=
  z_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and (hol.imp hol.true z_1) (hol.imp z_1 hol.true))) (hol.imp z_1) (hol.imp hol.true z_1) z_1 (thm_1569 z_1) (thm_722 z_1).

(; Theorem: |- ((= ((Data.Bool.==> z) z)) Data.Bool.T) ;)

(; dict ;)

def thm_1571 : z_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp z_1 z_1) hol.true) :=
  z_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_468 t_1) z_1.

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.T) z)) ((Data.Bool.==> z) Data.Bool.T))) ((Data.Bool.==> Data.Bool.T) z))) Data.Bool.T) ;)

(; dict ;)

def thm_1572 : z_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.imp hol.true z_1) (hol.imp z_1 hol.true)) (hol.imp hol.true z_1)) hol.true) :=
  z_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.imp (hol.and (hol.imp hol.true z_1) (hol.imp z_1 hol.true)) (hol.imp hol.true z_1)) (hol.imp z_1 z_1) hol.true (thm_1570 z_1) (thm_1571 z_1).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.T) z)) ((Data.Bool.==> z) Data.Bool.T))) ((Data.Bool.==> Data.Bool.T) z))) ;)

(; dict ;)

def thm_1573 : z_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.imp (hol.and (hol.imp hol.true z_1) (hol.imp z_1 hol.true)) (hol.imp hol.true z_1))) :=
  z_1 : hol.term hol.bool => hol.SYM hol.bool (hol.imp (hol.and (hol.imp hol.true z_1) (hol.imp z_1 hol.true)) (hol.imp hol.true z_1)) hol.true (thm_1572 z_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.T) z)) ((Data.Bool.==> z) Data.Bool.T))) ((Data.Bool.==> Data.Bool.T) z)) ;)

(; dict ;)

def thm_1574 : z_1 : hol.term hol.bool -> hol.proof (hol.imp (hol.and (hol.imp hol.true z_1) (hol.imp z_1 hol.true)) (hol.imp hol.true z_1)) :=
  z_1 : hol.term hol.bool => hol.EQ_MP hol.true (hol.imp (hol.and (hol.imp hol.true z_1) (hol.imp z_1 hol.true)) (hol.imp hol.true z_1)) (thm_1573 z_1) thm_15.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> x) z)) ((Data.Bool.==> z) x))) ((Data.Bool.==> x) z)) ;)

(; dict ;)

def thm_1575 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool x_2 hol.true) -> hol.proof (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1)) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_2 hol.true) => hol.EQ_MP (hol.imp (hol.and (hol.imp hol.true z_1) (hol.imp z_1 hol.true)) (hol.imp hol.true z_1)) (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1)) (thm_1563 x_2 z_1 hyp_1) (thm_1574 z_1).

(; Theorem: |- ((Data.Bool.==> ((= x) Data.Bool.T)) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> x) z)) ((Data.Bool.==> z) x))) ((Data.Bool.==> x) z))) ;)

(; dict ;)

def thm_1576 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool x_2 hol.true) (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool x_2 hol.true) => thm_1575 z_1 x_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> x) z)) ((Data.Bool.==> z) x))) ((Data.Bool.==> x) z)) ;)

(; dict ;)

def thm_1577 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.false) (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.true) (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1))) -> hyp_3 : hol.proof (hol.or (hol.eq hol.bool x_2 hol.true) (hol.eq hol.bool x_2 hol.false)) -> hol.proof (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1)) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.false) (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.true) (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1))) => hyp_3 : hol.proof (hol.or (hol.eq hol.bool x_2 hol.true) (hol.eq hol.bool x_2 hol.false)) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_775 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.eq hol.bool x_2 hol.false) (hol.eq hol.bool x_2 hol.true) (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1)) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> x) z)) ((Data.Bool.==> z) x))) ((Data.Bool.==> x) z)) ;)

(; dict ;)

def thm_1578 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.false) (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.true) (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1))) -> hol.proof (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1)) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.false) (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.true) (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1))) => hol.PROVE_HYP (hol.or (hol.eq hol.bool x_2 hol.true) (hol.eq hol.bool x_2 hol.false)) (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1)) (thm_756 x_2) (hyp_3 : hol.proof (hol.or (hol.eq hol.bool x_2 hol.true) (hol.eq hol.bool x_2 hol.false)) => thm_1577 z_1 x_2 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> x) z)) ((Data.Bool.==> z) x))) ((Data.Bool.==> x) z)) ;)

(; dict ;)

def thm_1579 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.false) (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1))) -> hol.proof (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1)) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.false) (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1))) => hol.PROVE_HYP (hol.imp (hol.eq hol.bool x_2 hol.true) (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1))) (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1)) (thm_1576 z_1 x_2) (hyp_2 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.true) (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1))) => thm_1578 z_1 x_2 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> x) z)) ((Data.Bool.==> z) x))) ((Data.Bool.==> x) z)) ;)

(; dict ;)

def thm_1580 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1)) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.PROVE_HYP (hol.imp (hol.eq hol.bool x_2 hol.false) (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1))) (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1)) (thm_1551 z_1 x_2) (hyp_1 : hol.proof (hol.imp (hol.eq hol.bool x_2 hol.false) (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1))) => thm_1579 z_1 x_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= Data.Bool.T) x)) z)) ;)

(; dict ;)

def thm_1581 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.and (hol.and hol.true (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool hol.true x_2) z_1)) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => hol.EQ_MP (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1)) (hol.imp (hol.and (hol.and hol.true (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool hol.true x_2) z_1)) (thm_1524 z_1 x_2) (hol.EQ_MP (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1)) (hol.imp (hol.and (hol.imp x_2 z_1) (hol.imp z_1 x_2)) (hol.imp x_2 z_1)) (thm_1526 z_1 x_2) (thm_1580 z_1 x_2)).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ w) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= w) x)) z)) ;)

(; dict ;)

def thm_1582 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool w_3 hol.true) -> hol.proof (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1)) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool w_3 hol.true) => hol.EQ_MP (hol.imp (hol.and (hol.and hol.true (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool hol.true x_2) z_1)) (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1)) (thm_1515 w_3 z_1 x_2 hyp_1) (thm_1581 z_1 x_2).

(; Theorem: |- ((Data.Bool.==> ((= w) Data.Bool.T)) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ w) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= w) x)) z))) ;)

(; dict ;)

def thm_1583 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool w_3 hol.true) (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool w_3 hol.true) => thm_1582 z_1 x_2 w_3 hyp_1.

(; Theorem: |- ((Data.Bool.\/ ((= w) Data.Bool.T)) ((= w) Data.Bool.F)) ;)

(; dict ;)

def thm_1584 : w_1 : hol.term hol.bool -> hol.proof (hol.or (hol.eq hol.bool w_1 hol.true) (hol.eq hol.bool w_1 hol.false)) :=
  w_1 : hol.term hol.bool => thm_26 w_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ w) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= w) x)) z)) ;)

(; dict ;)

def thm_1585 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool w_3 hol.false) (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool w_3 hol.true) (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1))) -> hyp_3 : hol.proof (hol.or (hol.eq hol.bool w_3 hol.true) (hol.eq hol.bool w_3 hol.false)) -> hol.proof (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1)) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool w_3 hol.false) (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool w_3 hol.true) (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1))) => hyp_3 : hol.proof (hol.or (hol.eq hol.bool w_3 hol.true) (hol.eq hol.bool w_3 hol.false)) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_775 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.eq hol.bool w_3 hol.false) (hol.eq hol.bool w_3 hol.true) (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1)) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ w) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= w) x)) z)) ;)

(; dict ;)

def thm_1586 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool w_3 hol.false) (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool w_3 hol.true) (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1))) -> hol.proof (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1)) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool w_3 hol.false) (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool w_3 hol.true) (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1))) => hol.PROVE_HYP (hol.or (hol.eq hol.bool w_3 hol.true) (hol.eq hol.bool w_3 hol.false)) (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1)) (thm_1584 w_3) (hyp_3 : hol.proof (hol.or (hol.eq hol.bool w_3 hol.true) (hol.eq hol.bool w_3 hol.false)) => thm_1585 z_1 x_2 w_3 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ w) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= w) x)) z)) ;)

(; dict ;)

def thm_1587 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool w_3 hol.false) (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1))) -> hol.proof (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1)) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool w_3 hol.false) (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1))) => hol.PROVE_HYP (hol.imp (hol.eq hol.bool w_3 hol.true) (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1))) (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1)) (thm_1583 z_1 x_2 w_3) (hyp_2 : hol.proof (hol.imp (hol.eq hol.bool w_3 hol.true) (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1))) => thm_1586 z_1 x_2 w_3 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ w) ((Data.Bool.==> x) z))) ((Data.Bool.==> z) x))) ((Data.Bool.==> ((= w) x)) z)) ;)

(; dict ;)

def thm_1588 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hol.proof (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1)) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hol.PROVE_HYP (hol.imp (hol.eq hol.bool w_3 hol.false) (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1))) (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1)) (thm_1502 z_1 x_2 w_3) (hyp_1 : hol.proof (hol.imp (hol.eq hol.bool w_3 hol.false) (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1))) => thm_1587 z_1 x_2 w_3 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> Data.Bool.T) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) Data.Bool.T))))) ((Data.Bool.==> ((= w) x)) ((= Data.Bool.T) z))) ;)

(; dict ;)

def thm_1589 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> hol.proof (hol.imp (hol.and (hol.imp hol.true (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.true)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool hol.true z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => hol.EQ_MP (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1)) (hol.imp (hol.and (hol.imp hol.true (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.true)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool hol.true z_1))) (thm_1470 z_1 x_2 w_3) (hol.EQ_MP (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1)) (hol.imp (hol.and (hol.and w_3 (hol.imp x_2 z_1)) (hol.imp z_1 x_2)) (hol.imp (hol.eq hol.bool w_3 x_2) z_1)) (thm_1472 z_1 x_2 w_3) (thm_1588 z_1 x_2 w_3)).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> y) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) y))))) ((Data.Bool.==> ((= w) x)) ((= y) z))) ;)

(; dict ;)

def thm_1590 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> y_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool y_4 hol.true) -> hol.proof (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => y_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool y_4 hol.true) => hol.EQ_MP (hol.imp (hol.and (hol.imp hol.true (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 hol.true)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool hol.true z_1))) (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) (thm_1457 y_4 z_1 x_2 w_3 hyp_1) (thm_1589 z_1 x_2 w_3).

(; Theorem: |- ((Data.Bool.==> ((= y) Data.Bool.T)) ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> y) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) y))))) ((Data.Bool.==> ((= w) x)) ((= y) z)))) ;)

(; dict ;)

def thm_1591 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> y_4 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool y_4 hol.true) (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1)))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => y_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool y_4 hol.true) => thm_1590 z_1 x_2 w_3 y_4 hyp_1.

(; Theorem: |- ((Data.Bool.\/ ((= y) Data.Bool.T)) ((= y) Data.Bool.F)) ;)

(; dict ;)

def thm_1592 : y_1 : hol.term hol.bool -> hol.proof (hol.or (hol.eq hol.bool y_1 hol.true) (hol.eq hol.bool y_1 hol.false)) :=
  y_1 : hol.term hol.bool => thm_26 y_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> y) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) y))))) ((Data.Bool.==> ((= w) x)) ((= y) z))) ;)

(; dict ;)

def thm_1593 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> y_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool y_4 hol.false) (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1)))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool y_4 hol.true) (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1)))) -> hyp_3 : hol.proof (hol.or (hol.eq hol.bool y_4 hol.true) (hol.eq hol.bool y_4 hol.false)) -> hol.proof (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => y_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool y_4 hol.false) (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1)))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool y_4 hol.true) (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1)))) => hyp_3 : hol.proof (hol.or (hol.eq hol.bool y_4 hol.true) (hol.eq hol.bool y_4 hol.false)) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_775 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.eq hol.bool y_4 hol.false) (hol.eq hol.bool y_4 hol.true) (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> y) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) y))))) ((Data.Bool.==> ((= w) x)) ((= y) z))) ;)

(; dict ;)

def thm_1594 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> y_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool y_4 hol.false) (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1)))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool y_4 hol.true) (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1)))) -> hol.proof (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => y_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool y_4 hol.false) (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1)))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool y_4 hol.true) (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1)))) => hol.PROVE_HYP (hol.or (hol.eq hol.bool y_4 hol.true) (hol.eq hol.bool y_4 hol.false)) (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) (thm_1592 y_4) (hyp_3 : hol.proof (hol.or (hol.eq hol.bool y_4 hol.true) (hol.eq hol.bool y_4 hol.false)) => thm_1593 z_1 x_2 w_3 y_4 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> y) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) y))))) ((Data.Bool.==> ((= w) x)) ((= y) z))) ;)

(; dict ;)

def thm_1595 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> y_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool y_4 hol.false) (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1)))) -> hol.proof (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => y_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool y_4 hol.false) (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1)))) => hol.PROVE_HYP (hol.imp (hol.eq hol.bool y_4 hol.true) (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1)))) (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) (thm_1591 z_1 x_2 w_3 y_4) (hyp_2 : hol.proof (hol.imp (hol.eq hol.bool y_4 hol.true) (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1)))) => thm_1594 z_1 x_2 w_3 y_4 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> y) ((Data.Bool./\ w) ((Data.Bool.==> x) z)))) ((Data.Bool.==> z) ((Data.Bool./\ x) ((Data.Bool.==> w) y))))) ((Data.Bool.==> ((= w) x)) ((= y) z))) ;)

(; dict ;)

def thm_1596 : z_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> w_3 : hol.term hol.bool -> y_4 : hol.term hol.bool -> hol.proof (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) :=
  z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => y_4 : hol.term hol.bool => hol.PROVE_HYP (hol.imp (hol.eq hol.bool y_4 hol.false) (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1)))) (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) (thm_1444 z_1 x_2 w_3 y_4) (hyp_1 : hol.proof (hol.imp (hol.eq hol.bool y_4 hol.false) (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1)))) => thm_1595 z_1 x_2 w_3 y_4 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> ((Set.member x) s)) ((Data.Bool./\ (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) ((Data.Bool.==> (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)))) ((Set.member x) t))))) ((Data.Bool.==> ((Set.member x) t)) ((Data.Bool./\ (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)))) ((Data.Bool.==> (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) ((Set.member x) s)))))) ((Data.Bool.==> ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t))))) ((= ((Set.member x) s)) ((Set.member x) t)))) ;)

(; dict ;)

def thm_1597 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.imp (hol.and (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_2 x_4) (f_2 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_2 x_4) (f_2 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_1)))) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_1) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_2 x_4) (f_2 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_2 x_4) (f_2 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_3))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3))))) (hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_2 x_4) (f_2 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_2 x_4) (f_2 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_1)))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => (z_1 : hol.term hol.bool => x_2 : hol.term hol.bool => w_3 : hol.term hol.bool => y_4 : hol.term hol.bool => hol.EQ_MP (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) (thm_1280 z_1 x_2 w_3 y_4) (thm_1285 z_1 x_2 w_3 y_4 (hol.EQ_MP (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) (thm_1279 z_1 x_2 w_3 y_4) (hol.EQ_MP (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) (hol.imp (hol.and (hol.imp y_4 (hol.and w_3 (hol.imp x_2 z_1))) (hol.imp z_1 (hol.and x_2 (hol.imp w_3 y_4)))) (hol.imp (hol.eq hol.bool w_3 x_2) (hol.eq hol.bool y_4 z_1))) (thm_1279 z_1 x_2 w_3 y_4) (thm_1596 z_1 x_2 w_3 y_4))))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_2 x_4) (f_2 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_2 x_4) (f_2 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_3))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)))) ((Set.member x) t))) ((Data.Bool./\ (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) ((Data.Bool.==> (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)))) ((Set.member x) t)))) ;)

(; dict ;)

def thm_1598 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1))) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2)) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2)) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)))) ((Set.member x) t))) ((Data.Bool./\ (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) ((Data.Bool.==> (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)))) ((Set.member x) t)))) ;)

(; dict ;)

def thm_1599 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2)) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) => hol.PROVE_HYP (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1))) (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2)) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2)))) (thm_923 B A s_1 x_3 f_4 hyp_1) (hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1))) => thm_1598 B A s_1 t_2 x_3 f_4 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x_1. ((Data.Bool.==> (\lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)) x_1)) ((Set.member x) t)))) ((Data.Bool.==> (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)))) ((Set.member x) t))) ;)

(; dict ;)

def thm_1600 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.imp (hol.forall A (x__1_4 : hol.term A => hol.imp ((x_27_5 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_1)) x__1_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 t_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_279 A Q_1 P_2) A (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) (x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= (f x)) (f z))) ((Set.member z) t)) ;)

(; dict ;)

def thm_1601 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (hol.eq B (f_4 x_3) (f_4 z_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1)) -> hol.proof (hol.and (hol.eq B (f_4 x_3) (f_4 z_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1)) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (hol.eq B (f_4 x_3) (f_4 z_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1)) => hyp_1.

(; Theorem: |- ((= (f x)) (f z)) ;)

(; dict ;)

def thm_1602 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (hol.eq B (f_4 x_3) (f_4 z_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1)) -> hol.proof (hol.eq B (f_4 x_3) (f_4 z_2)) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (hol.eq B (f_4 x_3) (f_4 z_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1)) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_185 q_1 p_2 hyp_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1) (hol.eq B (f_4 x_3) (f_4 z_2)) hyp_1.

(; Theorem: |- ((= (f x)) (f z)) ;)

(; dict ;)

def thm_1603 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (hol.eq B (f_4 x_3) (f_4 z_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1)) -> hol.proof (hol.eq B (f_4 x_3) (f_4 z_2)) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (hol.eq B (f_4 x_3) (f_4 z_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1)) => hol.PROVE_HYP (hol.and (hol.eq B (f_4 x_3) (f_4 z_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1)) (hol.eq B (f_4 x_3) (f_4 z_2)) (thm_1601 A B t_1 z_2 x_3 f_4 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq B (f_4 x_3) (f_4 z_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1)) => thm_1602 A B t_1 z_2 x_3 f_4 hyp_2).

(; Theorem: |- ((Set.member z) t) ;)

(; dict ;)

def thm_1604 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> t_3 : hol.term (Set_2Eset A) -> z_4 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq B (f_2 x_1) (f_2 z_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 t_3)) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 t_3) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => t_3 : hol.term (Set_2Eset A) => z_4 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq B (f_2 x_1) (f_2 z_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 t_3)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_1) (hol.eq B (f_2 x_1) (f_2 z_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 t_3) hyp_1.

(; Theorem: |- ((Set.member z) t) ;)

(; dict ;)

def thm_1605 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> t_3 : hol.term (Set_2Eset A) -> z_4 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq B (f_2 x_1) (f_2 z_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 t_3)) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 t_3) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => t_3 : hol.term (Set_2Eset A) => z_4 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq B (f_2 x_1) (f_2 z_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 t_3)) => hol.PROVE_HYP (hol.and (hol.eq B (f_2 x_1) (f_2 z_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 t_3)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 t_3) (thm_1601 A B t_3 z_4 x_1 f_2 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq B (f_2 x_1) (f_2 z_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 t_3)) => thm_1604 B A x_1 f_2 t_3 z_4 hyp_2).

(; Theorem: |- ((= (f x)) (f z)) ;)

(; dict ;)

def thm_1606 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 z_1)) -> hol.proof (hol.eq B (f_3 x_2) (f_3 z_1)) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 z_1)) => hyp_1.

(; Theorem: |- ((Set.member z) t) ;)

(; dict ;)

def thm_1607 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1) => hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y))) ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y))) ;)

(; dict ;)

def thm_1608 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) (hol.eq A x_4 y_2)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) (hol.eq A x_4 y_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.REFL hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) (hol.eq A x_4 y_2)).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y))) ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y))) ;)

(; dict ;)

def thm_1609 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) (hol.eq A x_4 y_2)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) (hol.eq A x_4 y_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.TRANS hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) (hol.eq A x_4 y_2)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) (hol.eq A x_4 y_2)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) (hol.eq A x_4 y_2)) (thm_1608 B A f_1 y_2 u_3 x_4) (thm_1608 B A f_1 y_2 u_3 x_4).

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y))) ;)

(; dict ;)

def thm_1610 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 u_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) -> hol.proof (hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 u_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) => thm_1256 B A f_1 u_2 hyp_1 x_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y)) ;)

(; dict ;)

def thm_1611 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 u_3) (hol.eq B (f_1 x_5) (f_1 y_6)))) (hol.eq A x_5 y_6)))) -> hol.proof (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) (hol.eq A x_4 y_2)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 u_3) (hol.eq B (f_1 x_5) (f_1 y_6)))) (hol.eq A x_5 y_6)))) => thm_1610 B A f_1 u_3 x_4 hyp_1 y_2.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member z) u)) ((= (f x)) (f z))))) ((= x) z)) ;)

(; dict ;)

def thm_1612 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> z_2 : hol.term A -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 u_3) (hol.eq B (f_1 x_5) (f_1 y_6)))) (hol.eq A x_5 y_6)))) -> hol.proof (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_3) (hol.eq B (f_1 x_4) (f_1 z_2)))) (hol.eq A x_4 z_2)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => z_2 : hol.term A => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 u_3) (hol.eq B (f_1 x_5) (f_1 y_6)))) (hol.eq A x_5 y_6)))) => (B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 u_3) (hol.eq B (f_1 x_5) (f_1 y_6)))) (hol.eq A x_5 y_6)))) => (B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 u_3) (hol.eq B (f_1 x_5) (f_1 y_6)))) (hol.eq A x_5 y_6)))) => hol.EQ_MP (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) (hol.eq A x_4 y_2)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) (hol.eq A x_4 y_2)) (thm_1609 B A f_1 y_2 u_3 x_4) (thm_1611 B A f_1 y_2 u_3 x_4 hyp_1)) B A f_1 y_2 u_3 x_4 hyp_1) B A f_1 z_2 u_3 x_4 hyp_1.

(; Theorem: |- ((= (Data.Bool./\ ((Set.member x) u))) (Data.Bool./\ ((Set.member x) u))) ;)

(; dict ;)

def thm_1613 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1)).

(; Theorem: |- ((= (Data.Bool./\ ((Set.member z) u))) (Data.Bool./\ ((Set.member z) u))) ;)

(; dict ;)

def thm_1614 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1)).

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_1615 : B : hol.type -> hol.proof (hol.eq (hol.arr B (hol.arr B hol.bool)) (hol.eq B) (hol.eq B)) :=
  B : hol.type => hol.REFL (hol.arr B (hol.arr B hol.bool)) (hol.eq B).

(; Theorem: |- ((= (= (f x))) (= (f z))) ;)

(; dict ;)

def thm_1616 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 z_1)) -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B (f_3 x_2)) (hol.eq B (f_3 z_1))) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 z_1)) => hol.APP_THM B (hol.arr B hol.bool) (hol.eq B) (hol.eq B) (f_3 x_2) (f_3 z_1) (thm_1615 B) (thm_1606 A B z_1 x_2 f_3 hyp_1).

(; Theorem: |- ((= (f z)) (f z)) ;)

(; dict ;)

def thm_1617 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq B (f_2 z_1) (f_2 z_1)) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => f_2 : hol.term (hol.arr A B) => hol.REFL B (f_2 z_1).

(; Theorem: |- ((= ((= (f x)) (f z))) ((= (f z)) (f z))) ;)

(; dict ;)

def thm_1618 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 z_1)) -> hol.proof (hol.eq hol.bool (hol.eq B (f_3 x_2) (f_3 z_1)) (hol.eq B (f_3 z_1) (f_3 z_1))) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 z_1)) => hol.APP_THM B hol.bool (hol.eq B (f_3 x_2)) (hol.eq B (f_3 z_1)) (f_3 z_1) (f_3 z_1) (thm_1616 A B z_1 x_2 f_3 hyp_1) (thm_1617 A B z_1 f_3).

(; Theorem: |- ((= ((= (f x)) (f z))) Data.Bool.T) ;)

(; dict ;)

def thm_1619 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 z_1)) -> hol.proof (hol.eq hol.bool (hol.eq B (f_3 x_2) (f_3 z_1)) hol.true) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 z_1)) => hol.TRANS hol.bool (hol.eq B (f_3 x_2) (f_3 z_1)) (hol.eq B (f_3 z_1) (f_3 z_1)) hol.true (thm_1618 A B z_1 x_2 f_3 hyp_1) (thm_316 A B z_1 f_3).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member z) u)) ((= (f x)) (f z)))) ((Data.Bool./\ ((Set.member z) u)) Data.Bool.T)) ;)

(; dict ;)

def thm_1620 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> z_4 : hol.term A -> hyp_1 : hol.proof (hol.eq B (f_2 x_1) (f_2 z_4)) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3) (hol.eq B (f_2 x_1) (f_2 z_4))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3) hol.true)) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => z_4 : hol.term A => hyp_1 : hol.proof (hol.eq B (f_2 x_1) (f_2 z_4)) => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3)) (hol.eq B (f_2 x_1) (f_2 z_4)) hol.true (thm_1614 A u_3 z_4) (thm_1619 A B z_4 x_1 f_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member z) u)) Data.Bool.T)) ((Set.member z) u)) ;)

(; dict ;)

def thm_1621 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) hol.true) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1)) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => (t_1 : hol.term hol.bool => thm_157 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member z) u)) ((= (f x)) (f z)))) ((Set.member z) u)) ;)

(; dict ;)

def thm_1622 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> z_4 : hol.term A -> hyp_1 : hol.proof (hol.eq B (f_2 x_1) (f_2 z_4)) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3) (hol.eq B (f_2 x_1) (f_2 z_4))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3)) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => z_4 : hol.term A => hyp_1 : hol.proof (hol.eq B (f_2 x_1) (f_2 z_4)) => hol.TRANS hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3) (hol.eq B (f_2 x_1) (f_2 z_4))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3) hol.true) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3) (thm_1620 B A x_1 f_2 u_3 z_4 hyp_1) (thm_1621 A u_3 z_4).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member z) u)) ((= (f x)) (f z))))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member z) u))) ;)

(; dict ;)

def thm_1623 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> z_2 : hol.term A -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.eq B (f_1 x_4) (f_1 z_2)) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_3) (hol.eq B (f_1 x_4) (f_1 z_2)))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_3))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => z_2 : hol.term A => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.eq B (f_1 x_4) (f_1 z_2)) => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_3) (hol.eq B (f_1 x_4) (f_1 z_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_3) (thm_1613 A u_3 x_4) (thm_1622 B A x_4 f_1 u_3 z_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member x) u)) ((Set.member z) u))) ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member z) u)) ((= (f x)) (f z))))) ;)

(; dict ;)

def thm_1624 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> z_2 : hol.term A -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.eq B (f_1 x_4) (f_1 z_2)) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_3) (hol.eq B (f_1 x_4) (f_1 z_2))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => z_2 : hol.term A => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.eq B (f_1 x_4) (f_1 z_2)) => hol.SYM hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_3) (hol.eq B (f_1 x_4) (f_1 z_2)))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_3)) (thm_1623 B A f_1 z_2 u_3 x_4 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u))) ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u))) ;)

(; dict ;)

def thm_1625 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hol.REFL hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u))) ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u))) ;)

(; dict ;)

def thm_1626 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hol.TRANS hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)) (thm_1625 A u_1 s_2 x_3) (thm_1625 A u_1 s_2 x_3).

(; Theorem: |- ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)) ;)

(; dict ;)

def thm_1627 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_1))) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_1))) => thm_1268 A u_1 s_2 hyp_1 x_3.

(; Theorem: |- ((Set.member x) u) ;)

(; dict ;)

def thm_1628 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> u_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => u_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) => (A : hol.type => u_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_1))) => hol.EQ_MP (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)) (thm_1626 A u_1 s_2 x_3) (thm_1627 A u_1 s_2 x_3 hyp_1)) A u_2 s_1 x_3 hyp_1 (thm_790 A s_1 x_3 hyp_2).

(; Theorem: |- ((= ((Set.member z) u)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member z) u))) ;)

(; dict ;)

def thm_1629 : A : hol.type -> x_1 : hol.term A -> u_2 : hol.term (Set_2Eset A) -> z_3 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 u_2) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 u_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2))) :=
  A : hol.type => x_1 : hol.term A => u_2 : hol.term (Set_2Eset A) => z_3 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 u_2) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 u_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) hyp_1.

(; Theorem: |- ((= ((Set.member z) u)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member z) u))) ;)

(; dict ;)

def thm_1630 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> u_3 : hol.term (Set_2Eset A) -> z_4 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => u_3 : hol.term (Set_2Eset A) => z_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_3) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3))) (thm_1628 A s_1 u_3 x_2 hyp_1 hyp_2) (hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_3) => thm_1629 A x_2 u_3 z_4 hyp_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u))) ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u))) ;)

(; dict ;)

def thm_1631 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hol.REFL hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u))) ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u))) ;)

(; dict ;)

def thm_1632 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hol.TRANS hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)) (thm_1631 A u_1 t_2 x_3) (thm_1631 A u_1 t_2 x_3).

(; Theorem: |- ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)) ;)

(; dict ;)

def thm_1633 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_1))) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_1))) => thm_1274 A u_1 t_2 hyp_1 x_3.

(; Theorem: |- ((Data.Bool.==> ((Set.member z) t)) ((Set.member z) u)) ;)

(; dict ;)

def thm_1634 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset A) -> z_3 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_1))) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_1)) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => z_3 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_1))) => (A : hol.type => u_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_1))) => (A : hol.type => u_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_1))) => hol.EQ_MP (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)) (thm_1632 A u_1 t_2 x_3) (thm_1633 A u_1 t_2 x_3 hyp_1)) A u_1 t_2 x_3 hyp_1) A u_1 t_2 z_3 hyp_1.

(; Theorem: |- ((Set.member z) u) ;)

(; dict ;)

def thm_1635 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> u_2 : hol.term (Set_2Eset A) -> z_3 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 t_1) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => u_2 : hol.term (Set_2Eset A) => z_3 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 t_1) => thm_1634 A u_2 t_1 z_3 hyp_1 (thm_1607 A t_1 z_3 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((Set.member x) u)) ((Set.member z) u)) ;)

(; dict ;)

def thm_1636 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> z_3 : hol.term A -> u_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 t_1) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_4)) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => z_3 : hol.term A => u_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 t_1) => hol.EQ_MP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_4)) (thm_1630 A s_2 x_5 u_4 z_3 hyp_1 hyp_3) (thm_1635 A t_1 u_4 z_3 hyp_2 hyp_4).

(; Theorem: |- ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member z) u)) ((= (f x)) (f z)))) ;)

(; dict ;)

def thm_1637 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> z_4 : hol.term A -> u_5 : hol.term (Set_2Eset A) -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_5))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_5))) -> hyp_3 : hol.proof (hol.eq B (f_3 x_6) (f_3 z_4)) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) -> hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 t_1) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_5) (hol.eq B (f_3 x_6) (f_3 z_4)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => z_4 : hol.term A => u_5 : hol.term (Set_2Eset A) => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_5))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_5))) => hyp_3 : hol.proof (hol.eq B (f_3 x_6) (f_3 z_4)) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) => hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 t_1) => hol.EQ_MP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_5) (hol.eq B (f_3 x_6) (f_3 z_4)))) (thm_1624 B A f_3 z_4 u_5 x_6 hyp_3) (thm_1636 A t_1 s_2 z_4 u_5 x_6 hyp_1 hyp_2 hyp_4 hyp_5).

(; Theorem: |- ((= x) z) ;)

(; dict ;)

def thm_1638 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> z_5 : hol.term A -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_4) (hol.eq B (f_3 x_7) (f_3 y_8)))) (hol.eq A x_7 y_8)))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) -> hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) -> hyp_4 : hol.proof (hol.eq B (f_3 x_6) (f_3 z_5)) -> hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) -> hyp_6 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 t_1) -> hol.proof (hol.eq A x_6 z_5) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => z_5 : hol.term A => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_4) (hol.eq B (f_3 x_7) (f_3 y_8)))) (hol.eq A x_7 y_8)))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) => hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) => hyp_4 : hol.proof (hol.eq B (f_3 x_6) (f_3 z_5)) => hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) => hyp_6 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 t_1) => thm_1612 B A f_3 z_5 u_4 x_6 hyp_1 (thm_1637 B A t_1 s_2 f_3 z_5 u_4 x_6 hyp_2 hyp_3 hyp_4 hyp_5 hyp_6).

(; Theorem: |- ((= Set.member) Set.member) ;)

(; dict ;)

def thm_1639 : A : hol.type -> hol.proof (hol.eq (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)))) :=
  A : hol.type => hol.REFL (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool))).

(; Theorem: |- ((= ((= x) z)) ((= x) z)) ;)

(; dict ;)

def thm_1640 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_2 z_1) (hol.eq A x_2 z_1)) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => hol.REFL hol.bool (hol.eq A x_2 z_1).

(; Theorem: |- ((= ((= x) z)) ((= x) z)) ;)

(; dict ;)

def thm_1641 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_2 z_1) (hol.eq A x_2 z_1)) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => hol.TRANS hol.bool (hol.eq A x_2 z_1) (hol.eq A x_2 z_1) (hol.eq A x_2 z_1) (thm_1640 A z_1 x_2) (thm_1640 A z_1 x_2).

(; Theorem: |- ((= x) z) ;)

(; dict ;)

def thm_1642 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_2 z_1) -> hol.proof (hol.eq A x_2 z_1) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.eq A x_2 z_1) => hyp_1.

(; Theorem: |- ((= (Set.member x)) (Set.member z)) ;)

(; dict ;)

def thm_1643 : A : hol.type -> z_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_2 z_1) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1)) :=
  A : hol.type => z_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.eq A x_2 z_1) => hol.APP_THM A (hol.arr (Set_2Eset A) hol.bool) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool))) x_2 z_1 (thm_1639 A) (hol.EQ_MP (hol.eq A x_2 z_1) (hol.eq A x_2 z_1) (thm_1641 A z_1 x_2) (thm_1642 A z_1 x_2 hyp_1)).

(; Theorem: |- ((= t) t) ;)

(; dict ;)

def thm_1644 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (Set_2Eset A) t_1 t_1) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => hol.REFL (Set_2Eset A) t_1.

(; Theorem: |- ((= ((Set.member x) t)) ((Set.member z) t)) ;)

(; dict ;)

def thm_1645 : A : hol.type -> z_1 : hol.term A -> t_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_3 z_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 t_2)) :=
  A : hol.type => z_1 : hol.term A => t_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_3 z_1) => hol.APP_THM (Set_2Eset A) hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1) t_2 t_2 (thm_1643 A z_1 x_3 hyp_1) (thm_1644 A t_2).

(; Theorem: |- ((= ((= ((Set.member z) t)) Data.Bool.T)) ((= ((Set.member z) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_1646 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1) hol.true)) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1) hol.true).

(; Theorem: |- ((= ((= ((Set.member z) t)) Data.Bool.T)) ((= ((Set.member z) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_1647 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1) hol.true)) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1) hol.true) (thm_1646 A t_1 z_2) (thm_1646 A t_1 z_2).

(; Theorem: |- ((= ((Set.member z) t)) ((= ((Set.member z) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_1648 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1) hol.true)) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => (t_1 : hol.term hol.bool => thm_310 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1).

(; Theorem: |- ((= ((Set.member z) t)) Data.Bool.T) ;)

(; dict ;)

def thm_1649 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1) hol.true) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1) => hol.EQ_MP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1) hol.true) (thm_1648 A t_1 z_2) (thm_1607 A t_1 z_2 hyp_1).

(; Theorem: |- ((= ((Set.member x) t)) Data.Bool.T) ;)

(; dict ;)

def thm_1650 : A : hol.type -> z_1 : hol.term A -> t_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_3 z_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 t_2) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) hol.true) :=
  A : hol.type => z_1 : hol.term A => t_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_3 z_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 t_2) => hol.TRANS hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 t_2) hol.true (thm_1645 A z_1 t_2 x_3 hyp_1) (hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 t_2) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 t_2) hol.true) (thm_1647 A t_2 z_1) (thm_1649 A t_2 z_1 hyp_2)).

(; Theorem: |- ((= Data.Bool.T) ((Set.member x) t)) ;)

(; dict ;)

def thm_1651 : A : hol.type -> z_1 : hol.term A -> t_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_3 z_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 t_2) -> hol.proof (hol.eq hol.bool hol.true (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2)) :=
  A : hol.type => z_1 : hol.term A => t_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_3 z_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 t_2) => hol.SYM hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) hol.true (thm_1650 A z_1 t_2 x_3 hyp_1 hyp_2).

(; Theorem: |- ((Set.member x) t) ;)

(; dict ;)

def thm_1652 : A : hol.type -> z_1 : hol.term A -> t_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_3 z_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 t_2) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) :=
  A : hol.type => z_1 : hol.term A => t_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_3 z_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 t_2) => hol.EQ_MP hol.true (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2) (thm_1651 A z_1 t_2 x_3 hyp_1 hyp_2) thm_15.

(; Theorem: |- ((Set.member x) t) ;)

(; dict ;)

def thm_1653 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> t_5 : hol.term (Set_2Eset A) -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_4) (hol.eq B (f_3 x_7) (f_3 y_8)))) (hol.eq A x_7 y_8)))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) -> hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) -> hyp_4 : hol.proof (hol.eq B (f_3 x_6) (f_3 z_1)) -> hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) -> hyp_6 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 t_5) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_5) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => t_5 : hol.term (Set_2Eset A) => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_4) (hol.eq B (f_3 x_7) (f_3 y_8)))) (hol.eq A x_7 y_8)))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) => hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) => hyp_4 : hol.proof (hol.eq B (f_3 x_6) (f_3 z_1)) => hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) => hyp_6 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 t_5) => hol.PROVE_HYP (hol.eq A x_6 z_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_5) (thm_1638 B A t_5 s_2 f_3 u_4 z_1 x_6 hyp_1 hyp_2 hyp_3 hyp_4 hyp_5 hyp_6) (hyp_7 : hol.proof (hol.eq A x_6 z_1) => thm_1652 A z_1 t_5 x_6 hyp_7 hyp_6).

(; Theorem: |- ((Set.member x) t) ;)

(; dict ;)

def thm_1654 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> t_5 : hol.term (Set_2Eset A) -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_4) (hol.eq B (f_3 x_7) (f_3 y_8)))) (hol.eq A x_7 y_8)))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) -> hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) -> hyp_4 : hol.proof (hol.eq B (f_3 x_6) (f_3 z_1)) -> hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) -> hyp_6 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 t_5) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_5) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => t_5 : hol.term (Set_2Eset A) => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_4) (hol.eq B (f_3 x_7) (f_3 y_8)))) (hol.eq A x_7 y_8)))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) => hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) => hyp_4 : hol.proof (hol.eq B (f_3 x_6) (f_3 z_1)) => hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) => hyp_6 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 t_5) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 t_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_5) (thm_1607 A t_5 z_1 hyp_6) (hyp_7 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 t_5) => thm_1653 B A z_1 s_2 f_3 u_4 t_5 x_6 hyp_1 hyp_2 hyp_3 hyp_4 hyp_5 hyp_7).

(; Theorem: |- ((Set.member x) t) ;)

(; dict ;)

def thm_1655 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> t_5 : hol.term (Set_2Eset A) -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_4) (hol.eq B (f_3 x_7) (f_3 y_8)))) (hol.eq A x_7 y_8)))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) -> hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) -> hyp_4 : hol.proof (hol.eq B (f_3 x_6) (f_3 z_1)) -> hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) -> hyp_6 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 t_5) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_5) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => t_5 : hol.term (Set_2Eset A) => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_4) (hol.eq B (f_3 x_7) (f_3 y_8)))) (hol.eq A x_7 y_8)))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) => hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) => hyp_4 : hol.proof (hol.eq B (f_3 x_6) (f_3 z_1)) => hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) => hyp_6 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 t_5) => hol.PROVE_HYP (hol.eq B (f_3 x_6) (f_3 z_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_5) (thm_1606 A B z_1 x_6 f_3 hyp_4) (hyp_7 : hol.proof (hol.eq B (f_3 x_6) (f_3 z_1)) => thm_1654 B A z_1 s_2 f_3 u_4 t_5 x_6 hyp_1 hyp_2 hyp_3 hyp_7 hyp_5 hyp_6).

(; Theorem: |- ((Set.member x) t) ;)

(; dict ;)

def thm_1656 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> t_5 : hol.term (Set_2Eset A) -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_4) (hol.eq B (f_3 x_7) (f_3 y_8)))) (hol.eq A x_7 y_8)))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) -> hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) -> hyp_4 : hol.proof (hol.eq B (f_3 x_6) (f_3 z_1)) -> hyp_5 : hol.proof (hol.and (hol.eq B (f_3 x_6) (f_3 z_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 t_5)) -> hyp_6 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_5) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => t_5 : hol.term (Set_2Eset A) => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_4) (hol.eq B (f_3 x_7) (f_3 y_8)))) (hol.eq A x_7 y_8)))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) => hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) => hyp_4 : hol.proof (hol.eq B (f_3 x_6) (f_3 z_1)) => hyp_5 : hol.proof (hol.and (hol.eq B (f_3 x_6) (f_3 z_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 t_5)) => hyp_6 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 t_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_5) (thm_1605 B A x_6 f_3 t_5 z_1 hyp_5) (hyp_7 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 t_5) => thm_1655 B A z_1 s_2 f_3 u_4 t_5 x_6 hyp_1 hyp_2 hyp_3 hyp_4 hyp_6 hyp_7).

(; Theorem: |- ((Set.member x) t) ;)

(; dict ;)

def thm_1657 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> t_5 : hol.term (Set_2Eset A) -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_4) (hol.eq B (f_3 x_7) (f_3 y_8)))) (hol.eq A x_7 y_8)))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) -> hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) -> hyp_4 : hol.proof (hol.and (hol.eq B (f_3 x_6) (f_3 z_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 t_5)) -> hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_5) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => t_5 : hol.term (Set_2Eset A) => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_4) (hol.eq B (f_3 x_7) (f_3 y_8)))) (hol.eq A x_7 y_8)))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) => hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) => hyp_4 : hol.proof (hol.and (hol.eq B (f_3 x_6) (f_3 z_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 t_5)) => hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) => hol.PROVE_HYP (hol.eq B (f_3 x_6) (f_3 z_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_5) (thm_1603 A B t_5 z_1 x_6 f_3 hyp_4) (hyp_6 : hol.proof (hol.eq B (f_3 x_6) (f_3 z_1)) => thm_1656 B A z_1 s_2 f_3 u_4 t_5 x_6 hyp_1 hyp_2 hyp_3 hyp_6 hyp_4 hyp_5).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= (f x)) (f z))) ((Set.member z) t))) ((Set.member x) t)) ;)

(; dict ;)

def thm_1658 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> u_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset A) -> z_4 : hol.term A -> x_5 : hol.term A -> f_6 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_2) (hol.eq B (f_6 x_7) (f_6 y_8)))) (hol.eq A x_7 y_8)))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) -> hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) -> hol.proof (hol.imp (hol.and (hol.eq B (f_6 x_5) (f_6 z_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 t_3)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => u_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset A) => z_4 : hol.term A => x_5 : hol.term A => f_6 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_2) (hol.eq B (f_6 x_7) (f_6 y_8)))) (hol.eq A x_7 y_8)))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) => hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) => hyp_5 : hol.proof (hol.and (hol.eq B (f_6 x_5) (f_6 z_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 t_3)) => thm_1657 B A z_4 s_1 f_6 u_2 t_3 x_5 hyp_1 hyp_2 hyp_3 hyp_5 hyp_4.

(; Theorem: |- ((= (\lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)) z)) ((Data.Bool./\ ((= (f x)) (f z))) ((Set.member z) t))) ;)

(; dict ;)

def thm_1659 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> t_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_2)) z_1) (hol.and (hol.eq B (f_4 x_3) (f_4 z_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 t_2))) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => t_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hol.BETA_CONV A hol.bool (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_2)) z_1.

(; Theorem: |- (\lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)) z) ;)

(; dict ;)

def thm_1660 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> t_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof ((x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_2)) z_1) -> hol.proof ((x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_2)) z_1) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => t_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof ((x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_2)) z_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= (f x)) (f z))) ((Set.member z) t)) ;)

(; dict ;)

def thm_1661 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof ((x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_1)) z_2) -> hol.proof (hol.and (hol.eq B (f_4 x_3) (f_4 z_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1)) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof ((x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_1)) z_2) => hol.EQ_MP ((x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_1)) z_2) (hol.and (hol.eq B (f_4 x_3) (f_4 z_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 t_1)) (thm_1659 B A z_2 t_1 x_3 f_4) (thm_1660 B A z_2 t_1 x_3 f_4 hyp_1).

(; Theorem: |- ((Set.member x) t) ;)

(; dict ;)

def thm_1662 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> t_5 : hol.term (Set_2Eset A) -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_4) (hol.eq B (f_3 x_7) (f_3 y_8)))) (hol.eq A x_7 y_8)))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) -> hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) -> hyp_4 : hol.proof ((x_27_7 : hol.term A => hol.and (hol.eq B (f_3 x_6) (f_3 x_27_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_7 t_5)) z_1) -> hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_5) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => t_5 : hol.term (Set_2Eset A) => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_4) (hol.eq B (f_3 x_7) (f_3 y_8)))) (hol.eq A x_7 y_8)))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) => hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) => hyp_4 : hol.proof ((x_27_7 : hol.term A => hol.and (hol.eq B (f_3 x_6) (f_3 x_27_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_7 t_5)) z_1) => hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) => thm_1658 A B s_2 u_4 t_5 z_1 x_6 f_3 hyp_1 hyp_2 hyp_3 hyp_5 (thm_1661 A B t_5 z_1 x_6 f_3 hyp_4).

(; Theorem: |- ((Data.Bool.==> (\lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)) z)) ((Set.member x) t)) ;)

(; dict ;)

def thm_1663 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> u_2 : hol.term (Set_2Eset A) -> z_3 : hol.term A -> t_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> f_6 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_2) (hol.eq B (f_6 x_7) (f_6 y_8)))) (hol.eq A x_7 y_8)))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) -> hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) -> hol.proof (hol.imp ((x_27_7 : hol.term A => hol.and (hol.eq B (f_6 x_5) (f_6 x_27_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_7 t_4)) z_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => u_2 : hol.term (Set_2Eset A) => z_3 : hol.term A => t_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => f_6 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_2) (hol.eq B (f_6 x_7) (f_6 y_8)))) (hol.eq A x_7 y_8)))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) => hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) => hyp_5 : hol.proof ((x_27_7 : hol.term A => hol.and (hol.eq B (f_6 x_5) (f_6 x_27_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_7 t_4)) z_3) => thm_1662 B A z_3 s_1 f_6 u_2 t_4 x_5 hyp_1 hyp_2 hyp_3 hyp_5 hyp_4.

(; Theorem: |- (Data.Bool.! \lambda z. ((Data.Bool.==> (\lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)) z)) ((Set.member x) t))) ;)

(; dict ;)

def thm_1664 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> u_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_2) (hol.eq B (f_5 x_6) (f_5 y_7)))) (hol.eq A x_6 y_7)))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) -> hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) -> hol.proof (hol.forall A (z_6 : hol.term A => hol.imp ((x_27_7 : hol.term A => hol.and (hol.eq B (f_5 x_4) (f_5 x_27_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_7 t_3)) z_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => u_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => f_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_2) (hol.eq B (f_5 x_6) (f_5 y_7)))) (hol.eq A x_6 y_7)))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) => hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) => z_6 : hol.term A => thm_1663 B A s_1 u_2 z_6 t_3 x_4 f_5 hyp_1 hyp_2 hyp_3 hyp_4.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)))) ((Set.member x) t)) ;)

(; dict ;)

def thm_1665 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> u_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_2) (hol.eq B (f_5 x_6) (f_5 y_7)))) (hol.eq A x_6 y_7)))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) -> hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_4) (f_5 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 t_3))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => u_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => f_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_2) (hol.eq B (f_5 x_6) (f_5 y_7)))) (hol.eq A x_6 y_7)))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) => hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) => thm_1600 B A t_3 x_4 f_5 (thm_1664 B A s_1 u_2 t_3 x_4 f_5 hyp_1 hyp_2 hyp_3 hyp_4).

(; Theorem: |- (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t))) ;)

(; dict ;)

def thm_1666 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 t_1))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 t_1))) => hyp_1.

(; Theorem: |- ((Set.member x) t) ;)

(; dict ;)

def thm_1667 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> t_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_3) (hol.eq B (f_2 x_6) (f_2 y_7)))) (hol.eq A x_6 y_7)))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3))) -> hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3))) -> hyp_4 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_2 x_5) (f_2 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 t_4))) -> hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => t_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_3) (hol.eq B (f_2 x_6) (f_2 y_7)))) (hol.eq A x_6 y_7)))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3))) => hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3))) => hyp_4 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_2 x_5) (f_2 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 t_4))) => hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) => thm_1665 B A s_1 u_3 t_4 x_5 f_2 hyp_1 hyp_2 hyp_3 hyp_5 (thm_1666 B A t_4 x_5 f_2 hyp_4).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) ((Data.Bool.==> (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)))) ((Set.member x) t))) ;)

(; dict ;)

def thm_1668 : B : hol.type -> A : hol.type -> u_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset A) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_1) (hol.eq B (f_5 x_6) (f_5 y_7)))) (hol.eq A x_6 y_7)))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) -> hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) -> hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_4) (f_5 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_4) (f_5 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 t_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_2))) :=
  B : hol.type => A : hol.type => u_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => f_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_1) (hol.eq B (f_5 x_6) (f_5 y_7)))) (hol.eq A x_6 y_7)))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) => hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) => hol.EQ_MP (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_4) (f_5 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 t_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_2)) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_4) (f_5 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_4) (f_5 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 t_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_2))) (thm_1599 B A s_3 t_2 x_4 f_5 hyp_4) (hyp_5 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_4) (f_5 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 t_2))) => thm_1667 B A s_3 f_5 u_1 t_2 x_4 hyp_1 hyp_2 hyp_3 hyp_5 hyp_4).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) ((Data.Bool.==> (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)))) ((Set.member x) t))) ;)

(; dict ;)

def thm_1669 : B : hol.type -> A : hol.type -> u_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset A) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_1) (hol.eq B (f_5 x_6) (f_5 y_7)))) (hol.eq A x_6 y_7)))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) -> hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) -> hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_4) (f_5 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_4) (f_5 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 t_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_2))) :=
  B : hol.type => A : hol.type => u_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => f_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_1) (hol.eq B (f_5 x_6) (f_5 y_7)))) (hol.eq A x_6 y_7)))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) => hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_4) (f_5 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_4) (f_5 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 t_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_2))) (thm_790 A s_3 x_4 hyp_4) (hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) => thm_1668 B A u_1 t_2 s_3 x_4 f_5 hyp_1 hyp_2 hyp_3 hyp_5).

(; Theorem: |- ((Data.Bool.==> ((Set.member x) s)) ((Data.Bool./\ (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) ((Data.Bool.==> (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)))) ((Set.member x) t)))) ;)

(; dict ;)

def thm_1670 : B : hol.type -> A : hol.type -> u_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_1) (hol.eq B (f_3 x_6) (f_3 y_7)))) (hol.eq A x_6 y_7)))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) -> hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_3 x_5) (f_3 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_4))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_3 x_5) (f_3 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 t_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2)))) :=
  B : hol.type => A : hol.type => u_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_1) (hol.eq B (f_3 x_6) (f_3 y_7)))) (hol.eq A x_6 y_7)))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) => hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) => thm_1669 B A u_1 t_2 s_4 x_5 f_3 hyp_1 hyp_2 hyp_3 hyp_4.

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) t)) ((Data.Bool./\ (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)))) ((Data.Bool.==> (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) ((Set.member x) s))))) ((Data.Bool./\ ((Data.Bool.==> ((Set.member x) s)) ((Data.Bool./\ (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) ((Data.Bool.==> (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)))) ((Set.member x) t))))) ((Data.Bool.==> ((Set.member x) t)) ((Data.Bool./\ (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)))) ((Data.Bool.==> (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) ((Set.member x) s)))))) ;)

(; dict ;)

def thm_1671 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> t_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_2 x_4) (f_2 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_2 x_4) (f_2 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_3))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3)))) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_2 x_4) (f_2 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_2 x_4) (f_2 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (hol.and (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_2 x_4) (f_2 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_2 x_4) (f_2 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_3))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3)))) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_2 x_4) (f_2 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_2 x_4) (f_2 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => t_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_2 x_4) (f_2 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_2 x_4) (f_2 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_3))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_2 x_4) (f_2 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_2 x_4) (f_2 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_3))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3)))) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_2 x_4) (f_2 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_2 x_4) (f_2 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) t)) ((Data.Bool./\ (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)))) ((Data.Bool.==> (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) ((Set.member x) s))))) ((Data.Bool./\ ((Data.Bool.==> ((Set.member x) s)) ((Data.Bool./\ (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) ((Data.Bool.==> (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)))) ((Set.member x) t))))) ((Data.Bool.==> ((Set.member x) t)) ((Data.Bool./\ (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)))) ((Data.Bool.==> (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) ((Set.member x) s)))))) ;)

(; dict ;)

def thm_1672 : B : hol.type -> A : hol.type -> u_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> t_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_1) (hol.eq B (f_3 x_6) (f_3 y_7)))) (hol.eq A x_6 y_7)))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) -> hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_3 x_5) (f_3 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 t_4))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_3 x_5) (f_3 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)))) (hol.and (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_3 x_5) (f_3 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_2))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_3 x_5) (f_3 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 t_4))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_3 x_5) (f_3 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 t_4))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_3 x_5) (f_3 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)))))) :=
  B : hol.type => A : hol.type => u_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => t_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_1) (hol.eq B (f_3 x_6) (f_3 y_7)))) (hol.eq A x_6 y_7)))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) => hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) => hol.PROVE_HYP (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_3 x_5) (f_3 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_2))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_3 x_5) (f_3 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 t_4))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))) (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_3 x_5) (f_3 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 t_4))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_3 x_5) (f_3 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)))) (hol.and (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_3 x_5) (f_3 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_2))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_3 x_5) (f_3 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 t_4))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_3 x_5) (f_3 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 t_4))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_3 x_5) (f_3 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)))))) (thm_1670 B A u_1 t_4 f_3 s_2 x_5 hyp_1 hyp_2 hyp_3) (hyp_4 : hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_3 x_5) (f_3 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_2))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_3 x_5) (f_3 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 t_4))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))) => thm_1671 B A s_2 f_3 t_4 x_5 hyp_4).

(; Theorem: |- ((Set.member x) t) ;)

(; dict ;)

def thm_1673 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) => hyp_1.

(; Theorem: |- ((= (\lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)) x)) ((Data.Bool./\ ((= (f x)) (f x))) ((Set.member x) t))) ;)

(; dict ;)

def thm_1674 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 t_1)) x_2) (hol.and (hol.eq B (f_3 x_2) (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hol.BETA_CONV A hol.bool (x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 t_1)) x_2.

(; Theorem: |- ((= ((Data.Bool./\ ((= (f x)) (f x))) ((Set.member x) t))) (\lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)) x)) ;)

(; dict ;)

def thm_1675 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B (f_3 x_2) (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1)) ((x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 t_1)) x_2)) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hol.SYM hol.bool ((x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 t_1)) x_2) (hol.and (hol.eq B (f_3 x_2) (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1)) (thm_1674 B A t_1 x_2 f_3).

(; Theorem: |- ((= ((= ((Set.member x) t)) Data.Bool.T)) ((= ((Set.member x) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_1676 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) hol.true)) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) hol.true).

(; Theorem: |- ((= ((= ((Set.member x) t)) Data.Bool.T)) ((= ((Set.member x) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_1677 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) hol.true)) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) hol.true) (thm_1676 A t_1 x_2) (thm_1676 A t_1 x_2).

(; Theorem: |- ((= ((Set.member x) t)) ((= ((Set.member x) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_1678 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) hol.true)) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => (t_1 : hol.term hol.bool => thm_310 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1).

(; Theorem: |- ((= ((Set.member x) t)) Data.Bool.T) ;)

(; dict ;)

def thm_1679 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) hol.true) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) => hol.EQ_MP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) hol.true) (thm_1678 A t_1 x_2) (thm_1673 A t_1 x_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ ((= (f x)) (f x))) ((Set.member x) t))) ((Data.Bool./\ Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_1680 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B (f_3 x_2) (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1)) (hol.and hol.true hol.true)) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq B (f_3 x_2) (f_3 x_2))) (hol.and hol.true) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) hol.true (thm_912 A B x_2 f_3) (hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) hol.true) (thm_1677 A t_1 x_2) (thm_1679 A t_1 x_2 hyp_1)).

(; Theorem: |- ((= ((Data.Bool./\ ((= (f x)) (f x))) ((Set.member x) t))) Data.Bool.T) ;)

(; dict ;)

def thm_1681 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B (f_3 x_2) (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1)) hol.true) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) => hol.TRANS hol.bool (hol.and (hol.eq B (f_3 x_2) (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1)) (hol.and hol.true hol.true) hol.true (thm_1680 A B t_1 x_2 f_3 hyp_1) thm_323.

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool./\ ((= (f x)) (f x))) ((Set.member x) t))) ;)

(; dict ;)

def thm_1682 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) -> hol.proof (hol.eq hol.bool hol.true (hol.and (hol.eq B (f_3 x_2) (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) => hol.SYM hol.bool (hol.and (hol.eq B (f_3 x_2) (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1)) hol.true (thm_1681 A B t_1 x_2 f_3 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= (f x)) (f x))) ((Set.member x) t)) ;)

(; dict ;)

def thm_1683 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) -> hol.proof (hol.and (hol.eq B (f_3 x_2) (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1)) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) => hol.EQ_MP hol.true (hol.and (hol.eq B (f_3 x_2) (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1)) (thm_1682 A B t_1 x_2 f_3 hyp_1) thm_15.

(; Theorem: |- (\lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)) x) ;)

(; dict ;)

def thm_1684 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) -> hol.proof ((x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 t_1)) x_2) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) => hol.EQ_MP (hol.and (hol.eq B (f_3 x_2) (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1)) ((x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 t_1)) x_2) (thm_1675 A B t_1 x_2 f_3) (thm_1683 A B t_1 x_2 f_3 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t))) ;)

(; dict ;)

def thm_1685 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof ((x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 t_1)) x_2) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof ((x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 t_1)) x_2) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_334 A x_1 P_2 hyp_1) A x_2 (x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 t_1)) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t))) ;)

(; dict ;)

def thm_1686 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) => hol.PROVE_HYP ((x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 t_1)) x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 t_1))) (thm_1684 B A t_1 x_2 f_3 hyp_1) (hyp_2 : hol.proof ((x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 t_1)) x_2) => thm_1685 B A t_1 x_2 f_3 hyp_2).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) ((Set.member x) s))) ((Data.Bool./\ (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)))) ((Data.Bool.==> (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_1687 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_1))) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_1))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) ((Set.member x) s))) ((Data.Bool./\ (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)))) ((Data.Bool.==> (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_1688 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1) => hol.PROVE_HYP (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_1))) (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)))) (thm_1686 B A t_1 x_3 f_4 hyp_1) (hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 t_1))) => thm_1687 B A t_1 s_2 x_3 f_4 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x_1. ((Data.Bool.==> (\lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)) x_1)) ((Set.member x) s)))) ((Data.Bool.==> (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) ((Set.member x) s))) ;)

(; dict ;)

def thm_1689 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.imp (hol.forall A (x__1_4 : hol.term A => hol.imp ((x_27_5 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1)) x__1_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_279 A Q_1 P_2) A (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1)).

(; Theorem: |- ((Data.Bool./\ ((= (f x)) (f z))) ((Set.member z) s)) ;)

(; dict ;)

def thm_1690 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (hol.eq B (f_4 x_3) (f_4 z_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1)) -> hol.proof (hol.and (hol.eq B (f_4 x_3) (f_4 z_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (hol.eq B (f_4 x_3) (f_4 z_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1)) => hyp_1.

(; Theorem: |- ((= (f x)) (f z)) ;)

(; dict ;)

def thm_1691 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (hol.eq B (f_4 x_3) (f_4 z_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1)) -> hol.proof (hol.eq B (f_4 x_3) (f_4 z_2)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (hol.eq B (f_4 x_3) (f_4 z_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1)) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_185 q_1 p_2 hyp_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) (hol.eq B (f_4 x_3) (f_4 z_2)) hyp_1.

(; Theorem: |- ((= (f x)) (f z)) ;)

(; dict ;)

def thm_1692 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (hol.eq B (f_4 x_3) (f_4 z_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1)) -> hol.proof (hol.eq B (f_4 x_3) (f_4 z_2)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (hol.eq B (f_4 x_3) (f_4 z_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1)) => hol.PROVE_HYP (hol.and (hol.eq B (f_4 x_3) (f_4 z_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1)) (hol.eq B (f_4 x_3) (f_4 z_2)) (thm_1690 A B s_1 z_2 x_3 f_4 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq B (f_4 x_3) (f_4 z_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1)) => thm_1691 A B s_1 z_2 x_3 f_4 hyp_2).

(; Theorem: |- ((Set.member z) s) ;)

(; dict ;)

def thm_1693 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> z_4 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq B (f_2 x_1) (f_2 z_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3)) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => z_4 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq B (f_2 x_1) (f_2 z_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_1) (hol.eq B (f_2 x_1) (f_2 z_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) hyp_1.

(; Theorem: |- ((Set.member z) s) ;)

(; dict ;)

def thm_1694 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> z_4 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq B (f_2 x_1) (f_2 z_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3)) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => z_4 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq B (f_2 x_1) (f_2 z_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3)) => hol.PROVE_HYP (hol.and (hol.eq B (f_2 x_1) (f_2 z_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3) (thm_1690 A B s_3 z_4 x_1 f_2 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq B (f_2 x_1) (f_2 z_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3)) => thm_1693 B A x_1 f_2 s_3 z_4 hyp_2).

(; Theorem: |- ((Set.member z) s) ;)

(; dict ;)

def thm_1695 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) => hyp_1.

(; Theorem: |- ((Set.member x) u) ;)

(; dict ;)

def thm_1696 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> u_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => u_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1) => thm_1633 A u_2 t_1 x_3 hyp_1 (thm_1673 A t_1 x_3 hyp_2).

(; Theorem: |- ((= ((Set.member z) u)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member z) u))) ;)

(; dict ;)

def thm_1697 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> u_3 : hol.term (Set_2Eset A) -> z_4 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => u_3 : hol.term (Set_2Eset A) => z_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 t_1) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_3) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3))) (thm_1696 A t_1 u_3 x_2 hyp_1 hyp_2) (hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_3) => thm_1629 A x_2 u_3 z_4 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Set.member z) s)) ((Set.member z) u)) ;)

(; dict ;)

def thm_1698 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> z_3 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_1))) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_1)) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => z_3 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_1))) => (A : hol.type => u_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_1))) => thm_1627 A u_1 s_2 x_3 hyp_1) A u_1 s_2 z_3 hyp_1.

(; Theorem: |- ((Set.member z) u) ;)

(; dict ;)

def thm_1699 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> u_2 : hol.term (Set_2Eset A) -> z_3 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 s_1) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => u_2 : hol.term (Set_2Eset A) => z_3 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 s_1) => thm_1698 A u_2 s_1 z_3 hyp_1 (thm_1695 A s_1 z_3 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((Set.member x) u)) ((Set.member z) u)) ;)

(; dict ;)

def thm_1700 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> z_3 : hol.term A -> u_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_1) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 s_2) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_4)) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => z_3 : hol.term A => u_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_1) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 s_2) => hol.EQ_MP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_4)) (thm_1697 A t_1 x_5 u_4 z_3 hyp_2 hyp_3) (thm_1699 A s_2 u_4 z_3 hyp_1 hyp_4).

(; Theorem: |- ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member z) u)) ((= (f x)) (f z)))) ;)

(; dict ;)

def thm_1701 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> z_4 : hol.term A -> u_5 : hol.term (Set_2Eset A) -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_5))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_5))) -> hyp_3 : hol.proof (hol.eq B (f_3 x_6) (f_3 z_4)) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_1) -> hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_2) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_5) (hol.eq B (f_3 x_6) (f_3 z_4)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => z_4 : hol.term A => u_5 : hol.term (Set_2Eset A) => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_5))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_5))) => hyp_3 : hol.proof (hol.eq B (f_3 x_6) (f_3 z_4)) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_1) => hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_2) => hol.EQ_MP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_5) (hol.eq B (f_3 x_6) (f_3 z_4)))) (thm_1624 B A f_3 z_4 u_5 x_6 hyp_3) (thm_1700 A t_1 s_2 z_4 u_5 x_6 hyp_1 hyp_2 hyp_4 hyp_5).

(; Theorem: |- ((= x) z) ;)

(; dict ;)

def thm_1702 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> z_5 : hol.term A -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_4) (hol.eq B (f_3 x_7) (f_3 y_8)))) (hol.eq A x_7 y_8)))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) -> hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) -> hyp_4 : hol.proof (hol.eq B (f_3 x_6) (f_3 z_5)) -> hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_1) -> hyp_6 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_2) -> hol.proof (hol.eq A x_6 z_5) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => z_5 : hol.term A => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_4) (hol.eq B (f_3 x_7) (f_3 y_8)))) (hol.eq A x_7 y_8)))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) => hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) => hyp_4 : hol.proof (hol.eq B (f_3 x_6) (f_3 z_5)) => hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_1) => hyp_6 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 s_2) => thm_1612 B A f_3 z_5 u_4 x_6 hyp_1 (thm_1701 B A t_1 s_2 f_3 z_5 u_4 x_6 hyp_2 hyp_3 hyp_4 hyp_5 hyp_6).

(; Theorem: |- ((= s) s) ;)

(; dict ;)

def thm_1703 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (Set_2Eset A) s_1 s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.REFL (Set_2Eset A) s_1.

(; Theorem: |- ((= ((Set.member x) s)) ((Set.member z) s)) ;)

(; dict ;)

def thm_1704 : A : hol.type -> z_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_3 z_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 s_2)) :=
  A : hol.type => z_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_3 z_1) => hol.APP_THM (Set_2Eset A) hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1) s_2 s_2 (thm_1643 A z_1 x_3 hyp_1) (thm_1703 A s_2).

(; Theorem: |- ((= ((= ((Set.member z) s)) Data.Bool.T)) ((= ((Set.member z) s)) Data.Bool.T)) ;)

(; dict ;)

def thm_1705 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) hol.true).

(; Theorem: |- ((= ((= ((Set.member z) s)) Data.Bool.T)) ((= ((Set.member z) s)) Data.Bool.T)) ;)

(; dict ;)

def thm_1706 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) hol.true) (thm_1705 A s_1 z_2) (thm_1705 A s_1 z_2).

(; Theorem: |- ((= ((Set.member z) s)) ((= ((Set.member z) s)) Data.Bool.T)) ;)

(; dict ;)

def thm_1707 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => (t_1 : hol.term hol.bool => thm_310 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1).

(; Theorem: |- ((= ((Set.member z) s)) Data.Bool.T) ;)

(; dict ;)

def thm_1708 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) => hol.EQ_MP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1) hol.true) (thm_1707 A s_1 z_2) (thm_1695 A s_1 z_2 hyp_1).

(; Theorem: |- ((= ((Set.member x) s)) Data.Bool.T) ;)

(; dict ;)

def thm_1709 : A : hol.type -> z_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_3 z_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 s_2) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) hol.true) :=
  A : hol.type => z_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_3 z_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 s_2) => hol.TRANS hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 s_2) hol.true (thm_1704 A z_1 s_2 x_3 hyp_1) (hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 s_2) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 s_2) hol.true) (thm_1706 A s_2 z_1) (thm_1708 A s_2 z_1 hyp_2)).

(; Theorem: |- ((= Data.Bool.T) ((Set.member x) s)) ;)

(; dict ;)

def thm_1710 : A : hol.type -> z_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_3 z_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 s_2) -> hol.proof (hol.eq hol.bool hol.true (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) :=
  A : hol.type => z_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_3 z_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 s_2) => hol.SYM hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) hol.true (thm_1709 A z_1 s_2 x_3 hyp_1 hyp_2).

(; Theorem: |- ((Set.member x) s) ;)

(; dict ;)

def thm_1711 : A : hol.type -> z_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_3 z_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 s_2) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) :=
  A : hol.type => z_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_3 z_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 s_2) => hol.EQ_MP hol.true (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (thm_1710 A z_1 s_2 x_3 hyp_1 hyp_2) thm_15.

(; Theorem: |- ((Set.member x) s) ;)

(; dict ;)

def thm_1712 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> t_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> s_5 : hol.term (Set_2Eset A) -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_4) (hol.eq B (f_3 x_7) (f_3 y_8)))) (hol.eq A x_7 y_8)))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) -> hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) -> hyp_4 : hol.proof (hol.eq B (f_3 x_6) (f_3 z_1)) -> hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2) -> hyp_6 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 s_5) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => t_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => s_5 : hol.term (Set_2Eset A) => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_4) (hol.eq B (f_3 x_7) (f_3 y_8)))) (hol.eq A x_7 y_8)))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) => hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) => hyp_4 : hol.proof (hol.eq B (f_3 x_6) (f_3 z_1)) => hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2) => hyp_6 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 s_5) => hol.PROVE_HYP (hol.eq A x_6 z_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (thm_1702 B A t_2 s_5 f_3 u_4 z_1 x_6 hyp_1 hyp_2 hyp_3 hyp_4 hyp_5 hyp_6) (hyp_7 : hol.proof (hol.eq A x_6 z_1) => thm_1711 A z_1 s_5 x_6 hyp_7 hyp_6).

(; Theorem: |- ((Set.member x) s) ;)

(; dict ;)

def thm_1713 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> t_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> s_5 : hol.term (Set_2Eset A) -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_4) (hol.eq B (f_3 x_7) (f_3 y_8)))) (hol.eq A x_7 y_8)))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) -> hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) -> hyp_4 : hol.proof (hol.eq B (f_3 x_6) (f_3 z_1)) -> hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2) -> hyp_6 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 s_5) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => t_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => s_5 : hol.term (Set_2Eset A) => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_4) (hol.eq B (f_3 x_7) (f_3 y_8)))) (hol.eq A x_7 y_8)))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) => hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) => hyp_4 : hol.proof (hol.eq B (f_3 x_6) (f_3 z_1)) => hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2) => hyp_6 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 s_5) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (thm_1695 A s_5 z_1 hyp_6) (hyp_7 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 s_5) => thm_1712 B A z_1 t_2 f_3 u_4 s_5 x_6 hyp_1 hyp_2 hyp_3 hyp_4 hyp_5 hyp_7).

(; Theorem: |- ((Set.member x) s) ;)

(; dict ;)

def thm_1714 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> t_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> s_5 : hol.term (Set_2Eset A) -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_4) (hol.eq B (f_3 x_7) (f_3 y_8)))) (hol.eq A x_7 y_8)))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) -> hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) -> hyp_4 : hol.proof (hol.eq B (f_3 x_6) (f_3 z_1)) -> hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2) -> hyp_6 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 s_5) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => t_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => s_5 : hol.term (Set_2Eset A) => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_4) (hol.eq B (f_3 x_7) (f_3 y_8)))) (hol.eq A x_7 y_8)))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) => hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) => hyp_4 : hol.proof (hol.eq B (f_3 x_6) (f_3 z_1)) => hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2) => hyp_6 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 s_5) => hol.PROVE_HYP (hol.eq B (f_3 x_6) (f_3 z_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (thm_1606 A B z_1 x_6 f_3 hyp_4) (hyp_7 : hol.proof (hol.eq B (f_3 x_6) (f_3 z_1)) => thm_1713 B A z_1 t_2 f_3 u_4 s_5 x_6 hyp_1 hyp_2 hyp_3 hyp_7 hyp_5 hyp_6).

(; Theorem: |- ((Set.member x) s) ;)

(; dict ;)

def thm_1715 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> t_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> s_5 : hol.term (Set_2Eset A) -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_4) (hol.eq B (f_3 x_7) (f_3 y_8)))) (hol.eq A x_7 y_8)))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) -> hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) -> hyp_4 : hol.proof (hol.eq B (f_3 x_6) (f_3 z_1)) -> hyp_5 : hol.proof (hol.and (hol.eq B (f_3 x_6) (f_3 z_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 s_5)) -> hyp_6 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => t_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => s_5 : hol.term (Set_2Eset A) => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_4) (hol.eq B (f_3 x_7) (f_3 y_8)))) (hol.eq A x_7 y_8)))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) => hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) => hyp_4 : hol.proof (hol.eq B (f_3 x_6) (f_3 z_1)) => hyp_5 : hol.proof (hol.and (hol.eq B (f_3 x_6) (f_3 z_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 s_5)) => hyp_6 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (thm_1694 B A x_6 f_3 s_5 z_1 hyp_5) (hyp_7 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 s_5) => thm_1714 B A z_1 t_2 f_3 u_4 s_5 x_6 hyp_1 hyp_2 hyp_3 hyp_4 hyp_6 hyp_7).

(; Theorem: |- ((Set.member x) s) ;)

(; dict ;)

def thm_1716 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> t_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> s_5 : hol.term (Set_2Eset A) -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_4) (hol.eq B (f_3 x_7) (f_3 y_8)))) (hol.eq A x_7 y_8)))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) -> hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) -> hyp_4 : hol.proof (hol.and (hol.eq B (f_3 x_6) (f_3 z_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 s_5)) -> hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => t_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => s_5 : hol.term (Set_2Eset A) => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_4) (hol.eq B (f_3 x_7) (f_3 y_8)))) (hol.eq A x_7 y_8)))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) => hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) => hyp_4 : hol.proof (hol.and (hol.eq B (f_3 x_6) (f_3 z_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 s_5)) => hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2) => hol.PROVE_HYP (hol.eq B (f_3 x_6) (f_3 z_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (thm_1692 A B s_5 z_1 x_6 f_3 hyp_4) (hyp_6 : hol.proof (hol.eq B (f_3 x_6) (f_3 z_1)) => thm_1715 B A z_1 t_2 f_3 u_4 s_5 x_6 hyp_1 hyp_2 hyp_3 hyp_6 hyp_4 hyp_5).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= (f x)) (f z))) ((Set.member z) s))) ((Set.member x) s)) ;)

(; dict ;)

def thm_1717 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset A) -> u_2 : hol.term (Set_2Eset A) -> s_3 : hol.term (Set_2Eset A) -> z_4 : hol.term A -> x_5 : hol.term A -> f_6 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_2) (hol.eq B (f_6 x_7) (f_6 y_8)))) (hol.eq A x_7 y_8)))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) -> hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_1) -> hol.proof (hol.imp (hol.and (hol.eq B (f_6 x_5) (f_6 z_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset A) => u_2 : hol.term (Set_2Eset A) => s_3 : hol.term (Set_2Eset A) => z_4 : hol.term A => x_5 : hol.term A => f_6 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_2) (hol.eq B (f_6 x_7) (f_6 y_8)))) (hol.eq A x_7 y_8)))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) => hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_1) => hyp_5 : hol.proof (hol.and (hol.eq B (f_6 x_5) (f_6 z_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 s_3)) => thm_1716 B A z_4 t_1 f_6 u_2 s_3 x_5 hyp_1 hyp_2 hyp_3 hyp_5 hyp_4.

(; Theorem: |- ((= (\lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)) z)) ((Data.Bool./\ ((= (f x)) (f z))) ((Set.member z) s))) ;)

(; dict ;)

def thm_1718 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_2)) z_1) (hol.and (hol.eq B (f_4 x_3) (f_4 z_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 s_2))) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hol.BETA_CONV A hol.bool (x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_2)) z_1.

(; Theorem: |- (\lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)) z) ;)

(; dict ;)

def thm_1719 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof ((x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_2)) z_1) -> hol.proof ((x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_2)) z_1) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof ((x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_2)) z_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= (f x)) (f z))) ((Set.member z) s)) ;)

(; dict ;)

def thm_1720 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof ((x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1)) z_2) -> hol.proof (hol.and (hol.eq B (f_4 x_3) (f_4 z_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof ((x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1)) z_2) => hol.EQ_MP ((x_27_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 s_1)) z_2) (hol.and (hol.eq B (f_4 x_3) (f_4 z_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 s_1)) (thm_1718 B A z_2 s_1 x_3 f_4) (thm_1719 B A z_2 s_1 x_3 f_4 hyp_1).

(; Theorem: |- ((Set.member x) s) ;)

(; dict ;)

def thm_1721 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> t_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> s_5 : hol.term (Set_2Eset A) -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_4) (hol.eq B (f_3 x_7) (f_3 y_8)))) (hol.eq A x_7 y_8)))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) -> hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) -> hyp_4 : hol.proof ((x_27_7 : hol.term A => hol.and (hol.eq B (f_3 x_6) (f_3 x_27_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_7 s_5)) z_1) -> hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => t_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => s_5 : hol.term (Set_2Eset A) => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_4) (hol.eq B (f_3 x_7) (f_3 y_8)))) (hol.eq A x_7 y_8)))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) => hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) => hyp_4 : hol.proof ((x_27_7 : hol.term A => hol.and (hol.eq B (f_3 x_6) (f_3 x_27_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_7 s_5)) z_1) => hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2) => thm_1717 A B t_2 u_4 s_5 z_1 x_6 f_3 hyp_1 hyp_2 hyp_3 hyp_5 (thm_1720 A B s_5 z_1 x_6 f_3 hyp_4).

(; Theorem: |- ((Data.Bool.==> (\lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)) z)) ((Set.member x) s)) ;)

(; dict ;)

def thm_1722 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset A) -> u_2 : hol.term (Set_2Eset A) -> z_3 : hol.term A -> s_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> f_6 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_2) (hol.eq B (f_6 x_7) (f_6 y_8)))) (hol.eq A x_7 y_8)))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) -> hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_1) -> hol.proof (hol.imp ((x_27_7 : hol.term A => hol.and (hol.eq B (f_6 x_5) (f_6 x_27_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_7 s_4)) z_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset A) => u_2 : hol.term (Set_2Eset A) => z_3 : hol.term A => s_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => f_6 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.forall A (y_8 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_8 u_2) (hol.eq B (f_6 x_7) (f_6 y_8)))) (hol.eq A x_7 y_8)))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) => hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_1) => hyp_5 : hol.proof ((x_27_7 : hol.term A => hol.and (hol.eq B (f_6 x_5) (f_6 x_27_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_7 s_4)) z_3) => thm_1721 B A z_3 t_1 f_6 u_2 s_4 x_5 hyp_1 hyp_2 hyp_3 hyp_5 hyp_4.

(; Theorem: |- (Data.Bool.! \lambda z. ((Data.Bool.==> (\lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)) z)) ((Set.member x) s))) ;)

(; dict ;)

def thm_1723 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset A) -> u_2 : hol.term (Set_2Eset A) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_2) (hol.eq B (f_5 x_6) (f_5 y_7)))) (hol.eq A x_6 y_7)))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) -> hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_1) -> hol.proof (hol.forall A (z_6 : hol.term A => hol.imp ((x_27_7 : hol.term A => hol.and (hol.eq B (f_5 x_4) (f_5 x_27_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_7 s_3)) z_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset A) => u_2 : hol.term (Set_2Eset A) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => f_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_2) (hol.eq B (f_5 x_6) (f_5 y_7)))) (hol.eq A x_6 y_7)))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) => hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_1) => z_6 : hol.term A => thm_1722 B A t_1 u_2 z_6 s_3 x_4 f_5 hyp_1 hyp_2 hyp_3 hyp_4.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) ((Set.member x) s)) ;)

(; dict ;)

def thm_1724 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset A) -> u_2 : hol.term (Set_2Eset A) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_2) (hol.eq B (f_5 x_6) (f_5 y_7)))) (hol.eq A x_6 y_7)))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) -> hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_1) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_4) (f_5 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_3))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset A) => u_2 : hol.term (Set_2Eset A) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => f_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_2) (hol.eq B (f_5 x_6) (f_5 y_7)))) (hol.eq A x_6 y_7)))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) => hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_1) => thm_1689 B A s_3 x_4 f_5 (thm_1723 B A t_1 u_2 s_3 x_4 f_5 hyp_1 hyp_2 hyp_3 hyp_4).

(; Theorem: |- (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s))) ;)

(; dict ;)

def thm_1725 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B (f_3 x_2) (f_3 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 s_1))) => hyp_1.

(; Theorem: |- ((Set.member x) s) ;)

(; dict ;)

def thm_1726 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> s_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_3) (hol.eq B (f_2 x_6) (f_2 y_7)))) (hol.eq A x_6 y_7)))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3))) -> hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3))) -> hyp_4 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_2 x_5) (f_2 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_4))) -> hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_1) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => s_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_3) (hol.eq B (f_2 x_6) (f_2 y_7)))) (hol.eq A x_6 y_7)))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3))) => hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3))) => hyp_4 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_2 x_5) (f_2 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_4))) => hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_1) => thm_1724 B A t_1 u_3 s_4 x_5 f_2 hyp_1 hyp_2 hyp_3 hyp_5 (thm_1725 B A s_4 x_5 f_2 hyp_4).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)))) ((Data.Bool.==> (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) ((Set.member x) s))) ;)

(; dict ;)

def thm_1727 : B : hol.type -> A : hol.type -> u_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_1) (hol.eq B (f_5 x_6) (f_5 y_7)))) (hol.eq A x_6 y_7)))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) -> hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) -> hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_4) (f_5 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 t_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_4) (f_5 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2))) :=
  B : hol.type => A : hol.type => u_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => f_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_1) (hol.eq B (f_5 x_6) (f_5 y_7)))) (hol.eq A x_6 y_7)))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) => hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) => hol.EQ_MP (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_4) (f_5 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2)) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_4) (f_5 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 t_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_4) (f_5 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2))) (thm_1688 B A t_3 s_2 x_4 f_5 hyp_4) (hyp_5 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_4) (f_5 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_2))) => thm_1726 B A t_3 f_5 u_1 s_2 x_4 hyp_1 hyp_2 hyp_3 hyp_5 hyp_4).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)))) ((Data.Bool.==> (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) ((Set.member x) s))) ;)

(; dict ;)

def thm_1728 : B : hol.type -> A : hol.type -> u_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_1) (hol.eq B (f_5 x_6) (f_5 y_7)))) (hol.eq A x_6 y_7)))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) -> hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) -> hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_4) (f_5 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 t_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_4) (f_5 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2))) :=
  B : hol.type => A : hol.type => u_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => f_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_1) (hol.eq B (f_5 x_6) (f_5 y_7)))) (hol.eq A x_6 y_7)))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) => hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_4) (f_5 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 t_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_4) (f_5 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2))) (thm_1673 A t_3 x_4 hyp_4) (hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_3) => thm_1727 B A u_1 s_2 t_3 x_4 f_5 hyp_1 hyp_2 hyp_3 hyp_5).

(; Theorem: |- ((Data.Bool.==> ((Set.member x) t)) ((Data.Bool./\ (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)))) ((Data.Bool.==> (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_1729 : B : hol.type -> A : hol.type -> u_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> t_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_1) (hol.eq B (f_3 x_6) (f_3 y_7)))) (hol.eq A x_6 y_7)))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) -> hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_3 x_5) (f_3 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 t_4))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_3 x_5) (f_3 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)))) :=
  B : hol.type => A : hol.type => u_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => t_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_1) (hol.eq B (f_3 x_6) (f_3 y_7)))) (hol.eq A x_6 y_7)))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) => hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) => thm_1728 B A u_1 s_2 t_4 x_5 f_3 hyp_1 hyp_2 hyp_3 hyp_4.

(; Theorem: |- ((Data.Bool./\ ((Data.Bool.==> ((Set.member x) s)) ((Data.Bool./\ (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) ((Data.Bool.==> (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)))) ((Set.member x) t))))) ((Data.Bool.==> ((Set.member x) t)) ((Data.Bool./\ (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t)))) ((Data.Bool.==> (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_1730 : B : hol.type -> A : hol.type -> u_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_1) (hol.eq B (f_3 x_6) (f_3 y_7)))) (hol.eq A x_6 y_7)))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) -> hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) -> hol.proof (hol.and (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_3 x_5) (f_3 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_4))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_3 x_5) (f_3 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 t_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2)))) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_3 x_5) (f_3 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 t_2))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_3 x_5) (f_3 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_4))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4))))) :=
  B : hol.type => A : hol.type => u_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_1) (hol.eq B (f_3 x_6) (f_3 y_7)))) (hol.eq A x_6 y_7)))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) => hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) => hol.EQ_MP (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_3 x_5) (f_3 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 t_2))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_3 x_5) (f_3 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_4))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)))) (hol.and (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_3 x_5) (f_3 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_4))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_3 x_5) (f_3 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 t_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2)))) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_3 x_5) (f_3 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 t_2))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_3 x_5) (f_3 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_4))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4))))) (thm_1672 B A u_1 s_4 f_3 t_2 x_5 hyp_1 hyp_2 hyp_3) (thm_1729 B A u_1 s_4 f_3 t_2 x_5 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') s)))) (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= (f x)) (f x'))) ((Set.member x') t))))) ((= ((Set.member x) s)) ((Set.member x) t))) ;)

(; dict ;)

def thm_1731 : B : hol.type -> A : hol.type -> u_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset A) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_1) (hol.eq B (f_5 x_6) (f_5 y_7)))) (hol.eq A x_6 y_7)))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) -> hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) -> hol.proof (hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_4) (f_5 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B (f_5 x_4) (f_5 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 t_2)))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 t_2))) :=
  B : hol.type => A : hol.type => u_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset A) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => f_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_1) (hol.eq B (f_5 x_6) (f_5 y_7)))) (hol.eq A x_6 y_7)))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) => hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) => thm_1597 B A t_2 f_5 s_3 x_4 (thm_1730 B A u_1 t_2 f_5 s_3 x_4 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= (f x)) (f x_1))) ((Set.member x_1) s)))) (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= (f x)) (f x_1))) ((Set.member x_1) t)))) ;)

(; dict ;)

def thm_1732 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_1))))) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x__1_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_5 : hol.term A => hol.and (hol.eq B (f_4 x_3) (f_4 x__1_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_1))))) => thm_1275 A B t_1 s_2 f_4 hyp_1 (f_4 x_3).

(; Theorem: |- ((= ((Set.member x) s)) ((Set.member x) t)) ;)

(; dict ;)

def thm_1733 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset A) -> s_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_2) (hol.eq B (f_1 x_6) (f_1 y_7)))) (hol.eq A x_6 y_7)))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) -> hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) -> hyp_4 : hol.proof (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_3))))) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset A) => s_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.forall A (y_7 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_7 u_2) (hol.eq B (f_1 x_6) (f_1 y_7)))) (hol.eq A x_6 y_7)))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) => hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) => hyp_4 : hol.proof (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_3))))) => thm_1731 B A u_2 t_3 s_4 x_5 f_1 hyp_1 hyp_2 hyp_3 (thm_1732 B A t_3 s_4 x_5 f_1 hyp_4).

(; Theorem: |- (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))) ;)

(; dict ;)

def thm_1734 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset A) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 u_2) (hol.eq B (f_1 x_5) (f_1 y_6)))) (hol.eq A x_5 y_6)))) -> hyp_2 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) -> hyp_3 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) -> hyp_4 : hol.proof (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3))))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset A) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 u_2) (hol.eq B (f_1 x_5) (f_1 y_6)))) (hol.eq A x_5 y_6)))) => hyp_2 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) => hyp_3 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) => hyp_4 : hol.proof (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3))))) => x_5 : hol.term A => thm_1733 B A f_1 u_2 t_3 s_4 x_5 hyp_1 hyp_2 hyp_3 hyp_4.

(; Theorem: |- (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))) ;)

(; dict ;)

def thm_1735 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset A) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 u_2) (hol.eq B (f_1 x_5) (f_1 y_6)))) (hol.eq A x_5 y_6)))) -> hyp_2 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) -> hyp_3 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) -> hyp_4 : hol.proof (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3))))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset A) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 u_2) (hol.eq B (f_1 x_5) (f_1 y_6)))) (hol.eq A x_5 y_6)))) => hyp_2 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) => hyp_3 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) => hyp_4 : hol.proof (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3))))) => hol.PROVE_HYP (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3))) (thm_1275 A B t_3 s_4 f_1 hyp_4) (hyp_5 : hol.proof (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3))))) => hol.EQ_MP (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3))) (thm_1278 A t_3 s_4) (thm_1734 B A f_1 u_2 t_3 s_4 hyp_1 hyp_2 hyp_3 hyp_5)).

(; Theorem: |- (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))) ;)

(; dict ;)

def thm_1736 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset A) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 u_2) (hol.eq B (f_1 x_5) (f_1 y_6)))) (hol.eq A x_5 y_6)))) -> hyp_2 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) -> hyp_3 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) -> hyp_4 : hol.proof (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3))))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset A) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 u_2) (hol.eq B (f_1 x_5) (f_1 y_6)))) (hol.eq A x_5 y_6)))) => hyp_2 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) => hyp_3 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) => hyp_4 : hol.proof (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3))))) => hol.PROVE_HYP (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3))) (thm_1274 A u_2 t_3 hyp_3) (hyp_5 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) => thm_1735 B A f_1 u_2 t_3 s_4 hyp_1 hyp_2 hyp_5 hyp_4).

(; Theorem: |- (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))) ;)

(; dict ;)

def thm_1737 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset A) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 u_2) (hol.eq B (f_1 x_5) (f_1 y_6)))) (hol.eq A x_5 y_6)))) -> hyp_2 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) -> hyp_3 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) -> hyp_4 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3)))))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset A) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 u_2) (hol.eq B (f_1 x_5) (f_1 y_6)))) (hol.eq A x_5 y_6)))) => hyp_2 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) => hyp_3 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) => hyp_4 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3)))))) => hol.PROVE_HYP (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3))) (thm_1273 A B u_2 t_3 s_4 f_1 hyp_4) (hyp_5 : hol.proof (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3))))) => thm_1736 B A f_1 u_2 t_3 s_4 hyp_1 hyp_2 hyp_3 hyp_5).

(; Theorem: |- (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))) ;)

(; dict ;)

def thm_1738 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset A) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 u_2) (hol.eq B (f_1 x_5) (f_1 y_6)))) (hol.eq A x_5 y_6)))) -> hyp_2 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) -> hyp_3 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3)))))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset A) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 u_2) (hol.eq B (f_1 x_5) (f_1 y_6)))) (hol.eq A x_5 y_6)))) => hyp_2 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) => hyp_3 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3)))))) => hol.PROVE_HYP (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3))) (thm_1271 B A s_4 f_1 u_2 t_3 hyp_3) (hyp_4 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) => thm_1737 B A f_1 u_2 t_3 s_4 hyp_1 hyp_2 hyp_4 hyp_3).

(; Theorem: |- (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))) ;)

(; dict ;)

def thm_1739 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset A) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 u_2) (hol.eq B (f_1 x_5) (f_1 y_6)))) (hol.eq A x_5 y_6)))) -> hyp_2 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) -> hyp_3 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3)))))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset A) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 u_2) (hol.eq B (f_1 x_5) (f_1 y_6)))) (hol.eq A x_5 y_6)))) => hyp_2 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) => hyp_3 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3)))))) => hol.PROVE_HYP (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3))) (thm_1268 A u_2 s_4 hyp_2) (hyp_4 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) => thm_1738 B A f_1 u_2 t_3 s_4 hyp_1 hyp_4 hyp_3).

(; Theorem: |- (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))) ;)

(; dict ;)

def thm_1740 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset A) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 u_2) (hol.eq B (f_1 x_5) (f_1 y_6)))) (hol.eq A x_5 y_6)))) -> hyp_2 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) -> hyp_3 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3))))))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset A) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 u_2) (hol.eq B (f_1 x_5) (f_1 y_6)))) (hol.eq A x_5 y_6)))) => hyp_2 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) => hyp_3 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3))))))) => hol.PROVE_HYP (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3)))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3))) (thm_1267 B A s_4 f_1 u_2 t_3 hyp_3) (hyp_4 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3)))))) => thm_1739 B A f_1 u_2 t_3 s_4 hyp_1 hyp_2 hyp_4).

(; Theorem: |- (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))) ;)

(; dict ;)

def thm_1741 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset A) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 u_2) (hol.eq B (f_1 x_5) (f_1 y_6)))) (hol.eq A x_5 y_6)))) -> hyp_2 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3))))))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset A) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 u_2) (hol.eq B (f_1 x_5) (f_1 y_6)))) (hol.eq A x_5 y_6)))) => hyp_2 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_3))))))) => hol.PROVE_HYP (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_3))) (thm_1265 B A f_1 t_3 u_2 s_4 hyp_2) (hyp_3 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) => thm_1740 B A f_1 u_2 t_3 s_4 hyp_1 hyp_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))))) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))) ;)

(; dict ;)

def thm_1742 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> t_2 : hol.term (Set_2Eset A) -> u_3 : hol.term (Set_2Eset A) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 u_3) (hol.eq B (f_1 x_5) (f_1 y_6)))) (hol.eq A x_5 y_6)))) -> hol.proof (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => t_2 : hol.term (Set_2Eset A) => u_3 : hol.term (Set_2Eset A) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.forall A (y_6 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_6 u_3) (hol.eq B (f_1 x_5) (f_1 y_6)))) (hol.eq A x_5 y_6)))) => hyp_2 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_2))))))) => thm_1741 B A f_1 u_3 t_2 s_4 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))))) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_1743 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 u_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) -> hol.proof (hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.forall A (y_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_5 u_2) (hol.eq B (f_1 x_4) (f_1 y_5)))) (hol.eq A x_4 y_5)))) => t_4 : hol.term (Set_2Eset A) => thm_1742 B A f_1 t_4 u_2 s_3 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))))) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))))) ;)

(; dict ;)

def thm_1744 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) -> hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) => s_3 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4))))) (hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4))))) (thm_1262 B A f_1 u_2 s_3) (thm_1743 B A f_1 u_2 s_3 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))))) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))))) ;)

(; dict ;)

def thm_1745 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) -> hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) => hol.PROVE_HYP (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))) (thm_1256 B A f_1 u_2 hyp_1) (hyp_2 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) => hol.EQ_MP (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))) (thm_1259 B A f_1 u_2) (thm_1744 B A f_1 u_2 hyp_2)).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))))) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))))) ;)

(; dict ;)

def thm_1746 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) => thm_1745 B A f_1 u_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))))) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))))) ;)

(; dict ;)

def thm_1747 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))) -> hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))) => hyp_1.

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y))) \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y))) ;)

(; dict ;)

def thm_1748 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)) (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hol.REFL (hol.arr A hol.bool) (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y))) \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y))) ;)

(; dict ;)

def thm_1749 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)) (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hol.TRANS (hol.arr A hol.bool) (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)) (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)) (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)) (thm_1748 B A f_1 u_2 x_3) (thm_1748 B A f_1 u_2 x_3).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y)))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y)))) ;)

(; dict ;)

def thm_1750 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))) (hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)) (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)) (thm_301 A) (thm_1749 B A f_1 u_2 x_3).

(; Theorem: |- ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y)))) ;)

(; dict ;)

def thm_1751 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) => hyp_1.

(; Theorem: |- ((Set.member x) u) ;)

(; dict ;)

def thm_1752 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_185 q_1 p_2 hyp_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) (hol.eq B (f_1 x_4) (f_1 y_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) hyp_1.

(; Theorem: |- ((Set.member x) u) ;)

(; dict ;)

def thm_1753 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (thm_1751 B A f_1 y_2 u_3 x_4 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) => thm_1752 B A f_1 y_2 u_3 x_4 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))) ;)

(; dict ;)

def thm_1754 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> y_4 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_3) (hol.eq B (f_2 x_1) (f_2 y_4)))) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_3) (hol.eq B (f_2 x_1) (f_2 y_4))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => y_4 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_3) (hol.eq B (f_2 x_1) (f_2 y_4)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_3) (hol.eq B (f_2 x_1) (f_2 y_4))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))) ;)

(; dict ;)

def thm_1755 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> y_4 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_3) (hol.eq B (f_2 x_1) (f_2 y_4)))) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_3) (hol.eq B (f_2 x_1) (f_2 y_4))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => y_4 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_3) (hol.eq B (f_2 x_1) (f_2 y_4)))) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_3) (hol.eq B (f_2 x_1) (f_2 y_4)))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_3) (hol.eq B (f_2 x_1) (f_2 y_4))) (thm_1751 B A f_2 y_4 u_3 x_1 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_3) (hol.eq B (f_2 x_1) (f_2 y_4)))) => thm_1754 B A x_1 f_2 u_3 y_4 hyp_2).

(; Theorem: |- ((Set.member x) u) ;)

(; dict ;)

def thm_1756 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))) ;)

(; dict ;)

def thm_1757 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> y_4 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_3) (hol.eq B (f_2 x_1) (f_2 y_4))) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_3) (hol.eq B (f_2 x_1) (f_2 y_4))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => y_4 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_3) (hol.eq B (f_2 x_1) (f_2 y_4))) => hyp_1.

(; Theorem: |- ((Set.member y) u) ;)

(; dict ;)

def thm_1758 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> y_4 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_3) (hol.eq B (f_2 x_1) (f_2 y_4))) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_3) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => y_4 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_3) (hol.eq B (f_2 x_1) (f_2 y_4))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_185 q_1 p_2 hyp_1) (hol.eq B (f_2 x_1) (f_2 y_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_3) hyp_1.

(; Theorem: |- ((Set.member y) u) ;)

(; dict ;)

def thm_1759 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> y_4 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_3) (hol.eq B (f_2 x_1) (f_2 y_4))) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_3) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => y_4 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_3) (hol.eq B (f_2 x_1) (f_2 y_4))) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_3) (hol.eq B (f_2 x_1) (f_2 y_4))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_3) (thm_1757 B A x_1 f_2 u_3 y_4 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_3) (hol.eq B (f_2 x_1) (f_2 y_4))) => thm_1758 B A x_1 f_2 u_3 y_4 hyp_2).

(; Theorem: |- ((= (f x)) (f y)) ;)

(; dict ;)

def thm_1760 : A : hol.type -> B : hol.type -> u_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) (hol.eq B (f_4 x_3) (f_4 y_2))) -> hol.proof (hol.eq B (f_4 x_3) (f_4 y_2)) :=
  A : hol.type => B : hol.type => u_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) (hol.eq B (f_4 x_3) (f_4 y_2))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) (hol.eq B (f_4 x_3) (f_4 y_2)) hyp_1.

(; Theorem: |- ((= (f x)) (f y)) ;)

(; dict ;)

def thm_1761 : A : hol.type -> B : hol.type -> u_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) (hol.eq B (f_4 x_3) (f_4 y_2))) -> hol.proof (hol.eq B (f_4 x_3) (f_4 y_2)) :=
  A : hol.type => B : hol.type => u_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) (hol.eq B (f_4 x_3) (f_4 y_2))) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) (hol.eq B (f_4 x_3) (f_4 y_2))) (hol.eq B (f_4 x_3) (f_4 y_2)) (thm_1757 B A x_3 f_4 u_1 y_2 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) (hol.eq B (f_4 x_3) (f_4 y_2))) => thm_1760 A B u_1 y_2 x_3 f_4 hyp_2).

(; Theorem: |- ((Set.member y) u) ;)

(; dict ;)

def thm_1762 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) => hyp_1.

(; Theorem: |- ((= ((= ((Set.member x) ((Set.insert y) Set.{}))) ((= x) y))) ((= ((Set.member x) ((Set.insert y) Set.{}))) ((= x) y))) ;)

(; dict ;)

def thm_1763 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_2 y_1)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_2 y_1))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_2 y_1)).

(; Theorem: |- ((= ((= ((Set.member x) ((Set.insert y) Set.{}))) ((= x) y))) ((= ((Set.member x) ((Set.insert y) Set.{}))) ((= x) y))) ;)

(; dict ;)

def thm_1764 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_2 y_1)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_2 y_1))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_2 y_1)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_2 y_1)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_2 y_1)) (thm_1763 A y_1 x_2) (thm_1763 A y_1 x_2).

(; Theorem: |- (Data.Bool.! \lambda y. ((= ((Set.member x) ((Set.insert y) Set.{}))) ((= x) y))) ;)

(; dict ;)

def thm_1765 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.forall A (y_2 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_1 y_2))) :=
  A : hol.type => x_1 : hol.term A => thm_34 A x_1.

(; Theorem: |- ((= ((Set.member x) ((Set.insert y) Set.{}))) ((= x) y)) ;)

(; dict ;)

def thm_1766 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_2 y_1)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => thm_1765 A x_2 y_1.

(; Theorem: |- ((= ((Set.member x') ((Set.insert x) Set.{}))) ((= x') x)) ;)

(; dict ;)

def thm_1767 : A : hol.type -> x_1 : hol.term A -> x_27_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_27_2 x_1)) :=
  A : hol.type => x_1 : hol.term A => x_27_2 : hol.term A => (A : hol.type => y_1 : hol.term A => x_2 : hol.term A => (A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_2 y_1)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_2 y_1)) (thm_1764 A y_1 x_2) (thm_1766 A y_1 x_2)) A y_1 x_2) A x_1 x_27_2.

(; Theorem: |- ((= (Data.Bool.==> ((Set.member x') ((Set.insert x) Set.{})))) (Data.Bool.==> ((= x') x))) ;)

(; dict ;)

def thm_1768 : A : hol.type -> x_1 : hol.term A -> x_27_2 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 (Set_2E_7B_7D (Set_2Eset A))))) (hol.imp (hol.eq A x_27_2 x_1))) :=
  A : hol.type => x_1 : hol.term A => x_27_2 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_27_2 x_1) thm_107 (thm_1767 A x_1 x_27_2).

(; Theorem: |- ((= ((Set.member x') u)) ((Set.member x') u)) ;)

(; dict ;)

def thm_1769 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> x_27_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 u_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 u_1)) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => x_27_2 : hol.term A => hol.REFL hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 u_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x') ((Set.insert x) Set.{}))) ((Set.member x') u))) ((Data.Bool.==> ((= x') x)) ((Set.member x') u))) ;)

(; dict ;)

def thm_1770 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> x_27_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1)) (hol.imp (hol.eq A x_27_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => x_27_3 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2E_7B_7D (Set_2Eset A))))) (hol.imp (hol.eq A x_27_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1) (thm_1768 A x_2 x_27_3) (thm_1769 A u_1 x_27_3).

(; Theorem: |- ((= \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) Set.{}))) ((Set.member x') u))) \lambda x'. ((Data.Bool.==> ((= x') x)) ((Set.member x') u))) ;)

(; dict ;)

def thm_1771 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (x_27_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1)) (x_27_3 : hol.term A => hol.imp (hol.eq A x_27_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.ABS_THM A hol.bool (x_27_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1)) (x_27_3 : hol.term A => hol.imp (hol.eq A x_27_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1)) (x_27_3 : hol.term A => thm_1770 A u_1 x_2 x_27_3).

(; Theorem: |- ((= (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) Set.{}))) ((Set.member x') u)))) (Data.Bool.! \lambda x'. ((Data.Bool.==> ((= x') x)) ((Set.member x') u)))) ;)

(; dict ;)

def thm_1772 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.forall A (x_27_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1))) (hol.forall A (x_27_3 : hol.term A => hol.imp (hol.eq A x_27_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1)))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_27_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1)) (x_27_3 : hol.term A => hol.imp (hol.eq A x_27_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1)) (thm_301 A) (thm_1771 A u_1 x_2).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) Set.{}))) ((Set.member x') u))))) (Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((= x') x)) ((Set.member x') u))))) ;)

(; dict ;)

def thm_1773 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.forall A (x_27_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1)))) (hol.and (hol.forall A (x_27_3 : hol.term A => hol.imp (hol.eq A x_27_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1))))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.forall A (x_27_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1))) (hol.forall A (x_27_3 : hol.term A => hol.imp (hol.eq A x_27_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1))) thm_298 (thm_1772 A u_1 x_2).

(; Theorem: |- ((= (Data.Bool.==> ((Set.member x) ((Set.insert y) Set.{})))) (Data.Bool.==> ((= x) y))) ;)

(; dict ;)

def thm_1774 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A))))) (hol.imp (hol.eq A x_2 y_1))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_2 y_1) thm_107 (thm_1766 A y_1 x_2).

(; Theorem: |- ((= ((Set.member x) u)) ((Set.member x) u)) ;)

(; dict ;)

def thm_1775 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1)) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.REFL hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) ((Set.insert y) Set.{}))) ((Set.member x) u))) ((Data.Bool.==> ((= x) y)) ((Set.member x) u))) ;)

(; dict ;)

def thm_1776 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)) (hol.imp (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => x_3 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A))))) (hol.imp (hol.eq A x_3 y_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1) (thm_1774 A y_2 x_3) (thm_1775 A u_1 x_3).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert y) Set.{}))) ((Set.member x) u))) \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) u))) ;)

(; dict ;)

def thm_1777 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)) (x_3 : hol.term A => hol.imp (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => hol.ABS_THM A hol.bool (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)) (x_3 : hol.term A => hol.imp (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)) (x_3 : hol.term A => thm_1776 A u_1 y_2 x_3).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert y) Set.{}))) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) u)))) ;)

(; dict ;)

def thm_1778 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1))) (hol.forall A (x_3 : hol.term A => hol.imp (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)) (x_3 : hol.term A => hol.imp (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)) (thm_301 A) (thm_1777 A u_1 y_2).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert y) Set.{}))) ((Set.member x) u))))) (Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) u))))) ;)

(; dict ;)

def thm_1779 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)))) (hol.and (hol.forall A (x_3 : hol.term A => hol.imp (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1))))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1))) (hol.forall A (x_3 : hol.term A => hol.imp (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1))) thm_298 (thm_1778 A u_1 y_2).

(; Theorem: |- ((= (Data.Bool./\ ((= x) (f x')))) (Data.Bool./\ ((= x) (f x')))) ;)

(; dict ;)

def thm_1780 : A : hol.type -> B : hol.type -> x_27_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq B x_3 (f_2 x_27_1))) (hol.and (hol.eq B x_3 (f_2 x_27_1)))) :=
  A : hol.type => B : hol.type => x_27_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (hol.eq B x_3 (f_2 x_27_1))).

(; Theorem: |- ((= ((Data.Bool./\ ((= x) (f x'))) ((Set.member x') ((Set.insert x) Set.{})))) ((Data.Bool./\ ((= x) (f x'))) ((= x') x))) ;)

(; dict ;)

def thm_1781 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> x_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B x_4 (f_3 x_27_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 (Set_2E_7B_7D (Set_2Eset A))))) (hol.and (hol.eq B x_4 (f_3 x_27_2)) (hol.eq A x_27_2 x_1))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => x_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq B x_4 (f_3 x_27_2))) (hol.and (hol.eq B x_4 (f_3 x_27_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_27_2 x_1) (thm_1780 A B x_27_2 f_3 x_4) (thm_1767 A x_1 x_27_2).

(; Theorem: |- ((= \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((Set.member x') ((Set.insert x) Set.{})))) \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x))) ;)

(; dict ;)

def thm_1782 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hol.proof (hol.eq (hol.arr A hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 (Set_2E_7B_7D (Set_2Eset A))))) (x_27_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_27_4)) (hol.eq A x_27_4 x_1))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => hol.ABS_THM A hol.bool (x_27_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 (Set_2E_7B_7D (Set_2Eset A))))) (x_27_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_27_4)) (hol.eq A x_27_4 x_1)) (x_27_4 : hol.term A => thm_1781 A B x_1 x_27_4 f_2 x_3).

(; Theorem: |- ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((Set.member x') ((Set.insert x) Set.{}))))) (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) ;)

(; dict ;)

def thm_1783 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 (Set_2E_7B_7D (Set_2Eset A)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_27_4)) (hol.eq A x_27_4 x_1)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (x_27_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 (Set_2E_7B_7D (Set_2Eset A))))) (x_27_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_27_4)) (hol.eq A x_27_4 x_1)) (thm_71 A) (thm_1782 B A x_1 f_2 x_3).

(; Theorem: |- ((= (= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((Set.member x') ((Set.insert x) Set.{})))))) (= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x))))) ;)

(; dict ;)

def thm_1784 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 (Set_2E_7B_7D (Set_2Eset A))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_27_4)) (hol.eq A x_27_4 x_1))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_27_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 (Set_2E_7B_7D (Set_2Eset A)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_27_4)) (hol.eq A x_27_4 x_1))) thm_64 (thm_1783 B A x_1 f_2 x_3).

(; Theorem: |- ((= ((Data.Bool./\ ((= x) (f x))) ((Set.member x) ((Set.insert y) Set.{})))) ((Data.Bool./\ ((= x) (f x))) ((= x) y))) ;)

(; dict ;)

def thm_1785 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B x_4 (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A))))) (hol.and (hol.eq B x_4 (f_3 x_2)) (hol.eq A x_2 y_1))) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq B x_4 (f_3 x_2))) (hol.and (hol.eq B x_4 (f_3 x_2))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_2 y_1) (thm_72 A B x_2 f_3 x_4) (thm_1766 A y_1 x_2).

(; Theorem: |- ((= \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) ((Set.insert y) Set.{})))) \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y))) ;)

(; dict ;)

def thm_1786 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hol.proof (hol.eq (hol.arr A hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A))))) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (hol.eq A x_4 y_1))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => hol.ABS_THM A hol.bool (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A))))) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (hol.eq A x_4 y_1)) (x_4 : hol.term A => thm_1785 A B y_1 x_4 f_2 x_3).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) ((Set.insert y) Set.{}))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y)))) ;)

(; dict ;)

def thm_1787 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (hol.eq A x_4 y_1)))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A))))) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (hol.eq A x_4 y_1)) (thm_71 A) (thm_1786 B A y_1 f_2 x_3).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((Set.member x') ((Set.insert x) Set.{}))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) ((Set.insert y) Set.{})))))) ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y))))) ;)

(; dict ;)

def thm_1788 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2E_7B_7D (Set_2Eset A)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_27_5)) (hol.eq A x_27_5 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.eq A x_5 y_1))))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2E_7B_7D (Set_2Eset A))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_27_5)) (hol.eq A x_27_5 x_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.eq A x_5 y_1))) (thm_1784 B A x_2 f_3 x_4) (thm_1787 B A y_1 f_3 x_4).

(; Theorem: |- ((= \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((Set.member x') ((Set.insert x) Set.{}))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) ((Set.insert y) Set.{})))))) \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y))))) ;)

(; dict ;)

def thm_1789 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2E_7B_7D (Set_2Eset A)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A))))))) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_27_5)) (hol.eq A x_27_5 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.eq A x_5 y_1))))) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hol.ABS_THM B hol.bool (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2E_7B_7D (Set_2Eset A)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A))))))) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_27_5)) (hol.eq A x_27_5 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.eq A x_5 y_1)))) (x_4 : hol.term B => thm_1788 B A y_1 x_2 f_3 x_4).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((Set.member x') ((Set.insert x) Set.{}))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) ((Set.insert y) Set.{}))))))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y)))))) ;)

(; dict ;)

def thm_1790 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2E_7B_7D (Set_2Eset A)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A)))))))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_27_5)) (hol.eq A x_27_5 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.eq A x_5 y_1)))))) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_27_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2E_7B_7D (Set_2Eset A)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A))))))) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_27_5)) (hol.eq A x_27_5 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.eq A x_5 y_1)))) (thm_63 B) (thm_1789 A B y_1 x_2 f_3).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert y) Set.{}))) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((Set.member x') ((Set.insert x) Set.{}))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) ((Set.insert y) Set.{})))))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y))))))) ;)

(; dict ;)

def thm_1791 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> y_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_4 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 (Set_2E_7B_7D (Set_2Eset A)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_4 (Set_2E_7B_7D (Set_2Eset A))))))))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_27_6)) (hol.eq A x_27_6 x_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (hol.eq A x_6 y_4))))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => y_4 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_4 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3)))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 (Set_2E_7B_7D (Set_2Eset A)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_4 (Set_2E_7B_7D (Set_2Eset A)))))))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_27_6)) (hol.eq A x_27_6 x_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (hol.eq A x_6 y_4))))) (thm_1779 A u_3 y_4) (thm_1790 A B y_4 x_1 f_2).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) Set.{}))) ((Set.member x') u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert y) Set.{}))) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((Set.member x') ((Set.insert x) Set.{}))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) ((Set.insert y) Set.{}))))))))) ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((= x') x)) ((Set.member x') u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y)))))))) ;)

(; dict ;)

def thm_1792 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))))))))) (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (hol.eq A x_27_6 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (hol.eq A x_6 y_2)))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3)))) (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A))))))))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (hol.eq A x_27_6 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (hol.eq A x_6 y_2)))))) (thm_1773 A u_3 x_4) (thm_1791 B A x_4 f_1 u_3 y_2).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) Set.{}))) ((Set.member x') u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert y) Set.{}))) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((Set.member x') ((Set.insert x) Set.{}))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) ((Set.insert y) Set.{})))))))))) (Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((= x') x)) ((Set.member x') u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y))))))))) ;)

(; dict ;)

def thm_1793 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A))))))))))) (hol.imp (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (hol.eq A x_27_6 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (hol.eq A x_6 y_2))))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))))))))) (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (hol.eq A x_27_6 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (hol.eq A x_6 y_2))))))) thm_107 (thm_1792 B A f_1 y_2 u_3 x_4).

(; Theorem: |- ((= (= ((Set.member x') ((Set.insert x) Set.{})))) (= ((= x') x))) ;)

(; dict ;)

def thm_1794 : A : hol.type -> x_1 : hol.term A -> x_27_2 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 (Set_2E_7B_7D (Set_2Eset A))))) (hol.eq hol.bool (hol.eq A x_27_2 x_1))) :=
  A : hol.type => x_1 : hol.term A => x_27_2 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_27_2 x_1) thm_64 (thm_1767 A x_1 x_27_2).

(; Theorem: |- ((= ((Set.member x') ((Set.insert y) Set.{}))) ((= x') y)) ;)

(; dict ;)

def thm_1795 : A : hol.type -> y_1 : hol.term A -> x_27_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_27_2 y_1)) :=
  A : hol.type => y_1 : hol.term A => x_27_2 : hol.term A => (A : hol.type => y_1 : hol.term A => x_2 : hol.term A => thm_1766 A y_1 x_2) A y_1 x_27_2.

(; Theorem: |- ((= ((= ((Set.member x') ((Set.insert x) Set.{}))) ((Set.member x') ((Set.insert y) Set.{})))) ((= ((= x') x)) ((= x') y))) ;)

(; dict ;)

def thm_1796 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> x_27_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A))))) (hol.eq hol.bool (hol.eq A x_27_3 x_2) (hol.eq A x_27_3 y_1))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => x_27_3 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2E_7B_7D (Set_2Eset A))))) (hol.eq hol.bool (hol.eq A x_27_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_27_3 y_1) (thm_1794 A x_2 x_27_3) (thm_1795 A y_1 x_27_3).

(; Theorem: |- ((= \lambda x'. ((= ((Set.member x') ((Set.insert x) Set.{}))) ((Set.member x') ((Set.insert y) Set.{})))) \lambda x'. ((= ((= x') x)) ((= x') y))) ;)

(; dict ;)

def thm_1797 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (x_27_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A))))) (x_27_3 : hol.term A => hol.eq hol.bool (hol.eq A x_27_3 x_2) (hol.eq A x_27_3 y_1))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.ABS_THM A hol.bool (x_27_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A))))) (x_27_3 : hol.term A => hol.eq hol.bool (hol.eq A x_27_3 x_2) (hol.eq A x_27_3 y_1)) (x_27_3 : hol.term A => thm_1796 A y_1 x_2 x_27_3).

(; Theorem: |- ((= (Data.Bool.! \lambda x'. ((= ((Set.member x') ((Set.insert x) Set.{}))) ((Set.member x') ((Set.insert y) Set.{}))))) (Data.Bool.! \lambda x'. ((= ((= x') x)) ((= x') y)))) ;)

(; dict ;)

def thm_1798 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.forall A (x_27_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A)))))) (hol.forall A (x_27_3 : hol.term A => hol.eq hol.bool (hol.eq A x_27_3 x_2) (hol.eq A x_27_3 y_1)))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_27_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A))))) (x_27_3 : hol.term A => hol.eq hol.bool (hol.eq A x_27_3 x_2) (hol.eq A x_27_3 y_1)) (thm_301 A) (thm_1797 A y_1 x_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) Set.{}))) ((Set.member x') u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert y) Set.{}))) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((Set.member x') ((Set.insert x) Set.{}))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) ((Set.insert y) Set.{}))))))))) (Data.Bool.! \lambda x'. ((= ((Set.member x') ((Set.insert x) Set.{}))) ((Set.member x') ((Set.insert y) Set.{})))))) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((= x') x)) ((Set.member x') u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y)))))))) (Data.Bool.! \lambda x'. ((= ((= x') x)) ((= x') y))))) ;)

(; dict ;)

def thm_1799 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))))))))) (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A))))))) (hol.imp (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (hol.eq A x_27_6 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (hol.eq A x_6 y_2))))))) (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (hol.eq A x_27_5 x_4) (hol.eq A x_27_5 y_2))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A))))))))))) (hol.imp (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (hol.eq A x_27_6 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (hol.eq A x_6 y_2)))))))) (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))))) (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (hol.eq A x_27_5 x_4) (hol.eq A x_27_5 y_2))) (thm_1793 B A f_1 y_2 u_3 x_4) (thm_1798 A y_2 x_4).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) Set.{}))) ((Set.member x') u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert y) Set.{}))) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((Set.member x') ((Set.insert x) Set.{}))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) ((Set.insert y) Set.{}))))))))) (Data.Bool.! \lambda x'. ((= ((Set.member x') ((Set.insert x) Set.{}))) ((Set.member x') ((Set.insert y) Set.{}))))))) (Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((= x') x)) ((Set.member x') u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y)))))))) (Data.Bool.! \lambda x'. ((= ((= x') x)) ((= x') y)))))) ;)

(; dict ;)

def thm_1800 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.imp (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))))))))) (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))))))) (hol.imp (hol.imp (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (hol.eq A x_27_6 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (hol.eq A x_6 y_2))))))) (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (hol.eq A x_27_5 x_4) (hol.eq A x_27_5 y_2)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.imp (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))))))))) (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A))))))) (hol.imp (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (hol.eq A x_27_6 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (hol.eq A x_6 y_2))))))) (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (hol.eq A x_27_5 x_4) (hol.eq A x_27_5 y_2)))) thm_107 (thm_1799 B A f_1 y_2 u_3 x_4).

(; Theorem: |- ((= ((= x) y)) ((= x) y)) ;)

(; dict ;)

def thm_1801 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A x_2 y_1)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.REFL hol.bool (hol.eq A x_2 y_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) Set.{}))) ((Set.member x') u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert y) Set.{}))) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((Set.member x') ((Set.insert x) Set.{}))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) ((Set.insert y) Set.{}))))))))) (Data.Bool.! \lambda x'. ((= ((Set.member x') ((Set.insert x) Set.{}))) ((Set.member x') ((Set.insert y) Set.{})))))) ((= x) y))) ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((= x') x)) ((Set.member x') u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y)))))))) (Data.Bool.! \lambda x'. ((= ((= x') x)) ((= x') y))))) ((= x) y))) ;)

(; dict ;)

def thm_1802 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))))))))) (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A))))))) (hol.eq A x_4 y_2)) (hol.imp (hol.imp (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (hol.eq A x_27_6 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (hol.eq A x_6 y_2))))))) (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (hol.eq A x_27_5 x_4) (hol.eq A x_27_5 y_2)))) (hol.eq A x_4 y_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (hol.imp (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))))))))) (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))))))) (hol.imp (hol.imp (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (hol.eq A x_27_6 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (hol.eq A x_6 y_2))))))) (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (hol.eq A x_27_5 x_4) (hol.eq A x_27_5 y_2))))) (hol.eq A x_4 y_2) (hol.eq A x_4 y_2) (thm_1800 B A f_1 y_2 u_3 x_4) (thm_1801 A y_2 x_4).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((= x') x)) ((Set.member x') u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y)))))))) (Data.Bool.! \lambda x'. ((= ((= x') x)) ((= x') y))))) ((= x) y))) ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) Set.{}))) ((Set.member x') u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert y) Set.{}))) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((Set.member x') ((Set.insert x) Set.{}))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) ((Set.insert y) Set.{}))))))))) (Data.Bool.! \lambda x'. ((= ((Set.member x') ((Set.insert x) Set.{}))) ((Set.member x') ((Set.insert y) Set.{})))))) ((= x) y))) ;)

(; dict ;)

def thm_1803 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (hol.eq A x_27_6 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (hol.eq A x_6 y_2))))))) (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (hol.eq A x_27_5 x_4) (hol.eq A x_27_5 y_2)))) (hol.eq A x_4 y_2)) (hol.imp (hol.imp (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))))))))) (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A))))))) (hol.eq A x_4 y_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.SYM hol.bool (hol.imp (hol.imp (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))))))))) (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A))))))) (hol.eq A x_4 y_2)) (hol.imp (hol.imp (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (hol.eq A x_27_6 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (hol.eq A x_6 y_2))))))) (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (hol.eq A x_27_5 x_4) (hol.eq A x_27_5 y_2)))) (hol.eq A x_4 y_2)) (thm_1802 B A f_1 y_2 u_3 x_4).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((= x') x)) ((Set.member x') u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y)))))))) ((Data.Bool.==> (Data.Bool.! \lambda x'. ((= ((= x') x)) ((= x') y)))) ((= x) y)))) ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((= x') x)) ((Set.member x') u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y)))))))) (Data.Bool.! \lambda x'. ((= ((= x') x)) ((= x') y))))) ((= x) y))) ;)

(; dict ;)

def thm_1804 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.imp (hol.and (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (hol.eq A x_27_6 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (hol.eq A x_6 y_2))))))) (hol.imp (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (hol.eq A x_27_5 x_4) (hol.eq A x_27_5 y_2))) (hol.eq A x_4 y_2))) (hol.imp (hol.imp (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (hol.eq A x_27_6 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (hol.eq A x_6 y_2))))))) (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (hol.eq A x_27_5 x_4) (hol.eq A x_27_5 y_2)))) (hol.eq A x_4 y_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => (z_1 : hol.term hol.bool => y_2 : hol.term hol.bool => x_3 : hol.term hol.bool => thm_779 z_1 y_2 x_3) (hol.eq A x_4 y_2) (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (hol.eq A x_27_5 x_4) (hol.eq A x_27_5 y_2))) (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (hol.eq A x_27_6 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (hol.eq A x_6 y_2))))))).

(; Theorem: |- ((= \lambda x'. ((Data.Bool.==> ((= x') x)) ((Set.member x') u))) \lambda x'. ((Data.Bool.==> ((= x') x)) ((Set.member x') u))) ;)

(; dict ;)

def thm_1805 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (x_27_3 : hol.term A => hol.imp (hol.eq A x_27_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1)) (x_27_3 : hol.term A => hol.imp (hol.eq A x_27_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.REFL (hol.arr A hol.bool) (x_27_3 : hol.term A => hol.imp (hol.eq A x_27_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1)).

(; Theorem: |- ((= \lambda x'. ((Data.Bool.==> ((= x') x)) ((Set.member x') u))) \lambda x'. ((Data.Bool.==> ((= x') x)) ((Set.member x') u))) ;)

(; dict ;)

def thm_1806 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (x_27_3 : hol.term A => hol.imp (hol.eq A x_27_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1)) (x_27_3 : hol.term A => hol.imp (hol.eq A x_27_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.TRANS (hol.arr A hol.bool) (x_27_3 : hol.term A => hol.imp (hol.eq A x_27_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1)) (x_27_3 : hol.term A => hol.imp (hol.eq A x_27_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1)) (x_27_3 : hol.term A => hol.imp (hol.eq A x_27_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1)) (thm_1805 A u_1 x_2) (thm_1805 A u_1 x_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x'. ((Data.Bool.==> ((= x') x)) ((Set.member x') u)))) (Data.Bool.! \lambda x'. ((Data.Bool.==> ((= x') x)) ((Set.member x') u)))) ;)

(; dict ;)

def thm_1807 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.forall A (x_27_3 : hol.term A => hol.imp (hol.eq A x_27_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1))) (hol.forall A (x_27_3 : hol.term A => hol.imp (hol.eq A x_27_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1)))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_27_3 : hol.term A => hol.imp (hol.eq A x_27_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1)) (x_27_3 : hol.term A => hol.imp (hol.eq A x_27_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1)) (thm_301 A) (thm_1806 A u_1 x_2).

(; Theorem: |- ((= x') x) ;)

(; dict ;)

def thm_1808 : A : hol.type -> x_1 : hol.term A -> x_27_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_27_2 x_1) -> hol.proof (hol.eq A x_27_2 x_1) :=
  A : hol.type => x_1 : hol.term A => x_27_2 : hol.term A => hyp_1 : hol.proof (hol.eq A x_27_2 x_1) => hyp_1.

(; Theorem: |- ((= (Set.member x')) (Set.member x)) ;)

(; dict ;)

def thm_1809 : A : hol.type -> x_1 : hol.term A -> x_27_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_27_2 x_1) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1)) :=
  A : hol.type => x_1 : hol.term A => x_27_2 : hol.term A => hyp_1 : hol.proof (hol.eq A x_27_2 x_1) => hol.APP_THM A (hol.arr (Set_2Eset A) hol.bool) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool))) x_27_2 x_1 (thm_1639 A) (thm_1808 A x_1 x_27_2 hyp_1).

(; Theorem: |- ((= u) u) ;)

(; dict ;)

def thm_1810 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (Set_2Eset A) u_1 u_1) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => hol.REFL (Set_2Eset A) u_1.

(; Theorem: |- ((= ((Set.member x') u)) ((Set.member x) u)) ;)

(; dict ;)

def thm_1811 : A : hol.type -> x_1 : hol.term A -> u_2 : hol.term (Set_2Eset A) -> x_27_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_27_3 x_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 u_2)) :=
  A : hol.type => x_1 : hol.term A => u_2 : hol.term (Set_2Eset A) => x_27_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_27_3 x_1) => hol.APP_THM (Set_2Eset A) hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1) u_2 u_2 (thm_1809 A x_1 x_27_3 hyp_1) (thm_1810 A u_2).

(; Theorem: |- ((= ((= ((Set.member x) u)) Data.Bool.T)) ((= ((Set.member x) u)) Data.Bool.T)) ;)

(; dict ;)

def thm_1812 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1) hol.true)) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1) hol.true).

(; Theorem: |- ((= ((= ((Set.member x) u)) Data.Bool.T)) ((= ((Set.member x) u)) Data.Bool.T)) ;)

(; dict ;)

def thm_1813 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1) hol.true)) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1) hol.true) (thm_1812 A u_1 x_2) (thm_1812 A u_1 x_2).

(; Theorem: |- ((= ((Set.member x) u)) ((= ((Set.member x) u)) Data.Bool.T)) ;)

(; dict ;)

def thm_1814 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1) hol.true)) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => (t_1 : hol.term hol.bool => thm_310 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1).

(; Theorem: |- ((= ((Set.member x) u)) Data.Bool.T) ;)

(; dict ;)

def thm_1815 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1) hol.true) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1) => hol.EQ_MP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1) hol.true) (thm_1814 A u_1 x_2) (thm_1756 A u_1 x_2 hyp_1).

(; Theorem: |- ((= ((Set.member x') u)) Data.Bool.T) ;)

(; dict ;)

def thm_1816 : A : hol.type -> x_1 : hol.term A -> u_2 : hol.term (Set_2Eset A) -> x_27_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_27_3 x_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 u_2) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_2) hol.true) :=
  A : hol.type => x_1 : hol.term A => u_2 : hol.term (Set_2Eset A) => x_27_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_27_3 x_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 u_2) => hol.TRANS hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 u_2) hol.true (thm_1811 A x_1 u_2 x_27_3 hyp_1) (hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 u_2) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 u_2) hol.true) (thm_1813 A u_2 x_1) (thm_1815 A u_2 x_1 hyp_2)).

(; Theorem: |- ((= Data.Bool.T) ((Set.member x') u)) ;)

(; dict ;)

def thm_1817 : A : hol.type -> x_1 : hol.term A -> u_2 : hol.term (Set_2Eset A) -> x_27_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_27_3 x_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 u_2) -> hol.proof (hol.eq hol.bool hol.true (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_2)) :=
  A : hol.type => x_1 : hol.term A => u_2 : hol.term (Set_2Eset A) => x_27_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_27_3 x_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 u_2) => hol.SYM hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_2) hol.true (thm_1816 A x_1 u_2 x_27_3 hyp_1 hyp_2).

(; Theorem: |- ((Set.member x') u) ;)

(; dict ;)

def thm_1818 : A : hol.type -> x_1 : hol.term A -> u_2 : hol.term (Set_2Eset A) -> x_27_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_27_3 x_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 u_2) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_2) :=
  A : hol.type => x_1 : hol.term A => u_2 : hol.term (Set_2Eset A) => x_27_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_27_3 x_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 u_2) => hol.EQ_MP hol.true (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_2) (thm_1817 A x_1 u_2 x_27_3 hyp_1 hyp_2) thm_15.

(; Theorem: |- ((Set.member x') u) ;)

(; dict ;)

def thm_1819 : A : hol.type -> x_1 : hol.term A -> u_2 : hol.term (Set_2Eset A) -> x_27_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_27_3 x_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 u_2) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_2) :=
  A : hol.type => x_1 : hol.term A => u_2 : hol.term (Set_2Eset A) => x_27_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_27_3 x_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 u_2) => hol.PROVE_HYP (hol.eq A x_27_3 x_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_2) (thm_1808 A x_1 x_27_3 hyp_1) (hyp_3 : hol.proof (hol.eq A x_27_3 x_1) => thm_1818 A x_1 u_2 x_27_3 hyp_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((= x') x)) ((Set.member x') u)) ;)

(; dict ;)

def thm_1820 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> x_27_3 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1) -> hol.proof (hol.imp (hol.eq A x_27_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1)) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => x_27_3 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1) => hyp_2 : hol.proof (hol.eq A x_27_3 x_2) => thm_1819 A x_2 u_1 x_27_3 hyp_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x'. ((Data.Bool.==> ((= x') x)) ((Set.member x') u))) ;)

(; dict ;)

def thm_1821 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1) -> hol.proof (hol.forall A (x_27_3 : hol.term A => hol.imp (hol.eq A x_27_3 x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1) => x_27_3 : hol.term A => thm_1820 A u_1 x_2 x_27_3 hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y))))))) ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((= x') x)) ((Set.member x') u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y)))))))) ;)

(; dict ;)

def thm_1822 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> y_4 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_27_6)) (hol.eq A x_27_6 x_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (hol.eq A x_6 y_4)))))) (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_27_6)) (hol.eq A x_27_6 x_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (hol.eq A x_6 y_4)))))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => y_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_27_6)) (hol.eq A x_27_6 x_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (hol.eq A x_6 y_4)))))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y))))))) ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((= x') x)) ((Set.member x') u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y)))))))) ;)

(; dict ;)

def thm_1823 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> y_4 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 u_3) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_27_6)) (hol.eq A x_27_6 x_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (hol.eq A x_6 y_4)))))) (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_27_6)) (hol.eq A x_27_6 x_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (hol.eq A x_6 y_4)))))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => y_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 u_3) => hol.PROVE_HYP (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.eq hol.bool (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_27_6)) (hol.eq A x_27_6 x_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (hol.eq A x_6 y_4)))))) (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_27_6)) (hol.eq A x_27_6 x_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (hol.eq A x_6 y_4)))))))) (hol.EQ_MP (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (thm_1807 A u_3 x_1) (thm_1821 A u_3 x_1 hyp_1)) (hyp_2 : hol.proof (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) => thm_1822 B A x_1 f_2 u_3 y_4 hyp_2).

(; Theorem: |- ((= \lambda x'. ((Data.Bool.==> ((= x') y)) ((Set.member x') u))) \lambda x'. ((Data.Bool.==> ((= x') y)) ((Set.member x') u))) ;)

(; dict ;)

def thm_1824 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (x_27_3 : hol.term A => hol.imp (hol.eq A x_27_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1)) (x_27_3 : hol.term A => hol.imp (hol.eq A x_27_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => hol.REFL (hol.arr A hol.bool) (x_27_3 : hol.term A => hol.imp (hol.eq A x_27_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1)).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) u))) \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) u))) ;)

(; dict ;)

def thm_1825 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.imp (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)) (x_3 : hol.term A => hol.imp (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => hol.REFL (hol.arr A hol.bool) (x_3 : hol.term A => hol.imp (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)).

(; Theorem: |- ((= \lambda x'. ((Data.Bool.==> ((= x') y)) ((Set.member x') u))) \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) u))) ;)

(; dict ;)

def thm_1826 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (x_27_3 : hol.term A => hol.imp (hol.eq A x_27_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1)) (x_3 : hol.term A => hol.imp (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => hol.TRANS (hol.arr A hol.bool) (x_27_3 : hol.term A => hol.imp (hol.eq A x_27_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1)) (x_27_3 : hol.term A => hol.imp (hol.eq A x_27_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1)) (x_3 : hol.term A => hol.imp (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)) (thm_1824 A u_1 y_2) (thm_1825 A u_1 y_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x'. ((Data.Bool.==> ((= x') y)) ((Set.member x') u)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) u)))) ;)

(; dict ;)

def thm_1827 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.forall A (x_27_3 : hol.term A => hol.imp (hol.eq A x_27_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1))) (hol.forall A (x_3 : hol.term A => hol.imp (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_27_3 : hol.term A => hol.imp (hol.eq A x_27_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1)) (x_3 : hol.term A => hol.imp (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)) (thm_301 A) (thm_1826 A u_1 y_2).

(; Theorem: |- ((= x') y) ;)

(; dict ;)

def thm_1828 : A : hol.type -> y_1 : hol.term A -> x_27_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_27_2 y_1) -> hol.proof (hol.eq A x_27_2 y_1) :=
  A : hol.type => y_1 : hol.term A => x_27_2 : hol.term A => hyp_1 : hol.proof (hol.eq A x_27_2 y_1) => hyp_1.

(; Theorem: |- ((= (Set.member x')) (Set.member y)) ;)

(; dict ;)

def thm_1829 : A : hol.type -> y_1 : hol.term A -> x_27_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_27_2 y_1) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1)) :=
  A : hol.type => y_1 : hol.term A => x_27_2 : hol.term A => hyp_1 : hol.proof (hol.eq A x_27_2 y_1) => hol.APP_THM A (hol.arr (Set_2Eset A) hol.bool) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool))) x_27_2 y_1 (thm_1639 A) (thm_1828 A y_1 x_27_2 hyp_1).

(; Theorem: |- ((= ((Set.member x') u)) ((Set.member y) u)) ;)

(; dict ;)

def thm_1830 : A : hol.type -> y_1 : hol.term A -> u_2 : hol.term (Set_2Eset A) -> x_27_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_27_3 y_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 u_2)) :=
  A : hol.type => y_1 : hol.term A => u_2 : hol.term (Set_2Eset A) => x_27_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_27_3 y_1) => hol.APP_THM (Set_2Eset A) hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1) u_2 u_2 (thm_1829 A y_1 x_27_3 hyp_1) (thm_1810 A u_2).

(; Theorem: |- ((= ((= ((Set.member y) u)) Data.Bool.T)) ((= ((Set.member y) u)) Data.Bool.T)) ;)

(; dict ;)

def thm_1831 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) hol.true)) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) hol.true).

(; Theorem: |- ((= ((= ((Set.member y) u)) Data.Bool.T)) ((= ((Set.member y) u)) Data.Bool.T)) ;)

(; dict ;)

def thm_1832 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) hol.true)) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) hol.true) (thm_1831 A u_1 y_2) (thm_1831 A u_1 y_2).

(; Theorem: |- ((= ((Set.member y) u)) ((= ((Set.member y) u)) Data.Bool.T)) ;)

(; dict ;)

def thm_1833 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) hol.true)) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => (t_1 : hol.term hol.bool => thm_310 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1).

(; Theorem: |- ((= ((Set.member y) u)) Data.Bool.T) ;)

(; dict ;)

def thm_1834 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) hol.true) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) => hol.EQ_MP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) hol.true) (thm_1833 A u_1 y_2) (thm_1762 A u_1 y_2 hyp_1).

(; Theorem: |- ((= ((Set.member x') u)) Data.Bool.T) ;)

(; dict ;)

def thm_1835 : A : hol.type -> y_1 : hol.term A -> u_2 : hol.term (Set_2Eset A) -> x_27_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_27_3 y_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 u_2) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_2) hol.true) :=
  A : hol.type => y_1 : hol.term A => u_2 : hol.term (Set_2Eset A) => x_27_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_27_3 y_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 u_2) => hol.TRANS hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 u_2) hol.true (thm_1830 A y_1 u_2 x_27_3 hyp_1) (hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 u_2) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 u_2) hol.true) (thm_1832 A u_2 y_1) (thm_1834 A u_2 y_1 hyp_2)).

(; Theorem: |- ((= Data.Bool.T) ((Set.member x') u)) ;)

(; dict ;)

def thm_1836 : A : hol.type -> y_1 : hol.term A -> u_2 : hol.term (Set_2Eset A) -> x_27_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_27_3 y_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 u_2) -> hol.proof (hol.eq hol.bool hol.true (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_2)) :=
  A : hol.type => y_1 : hol.term A => u_2 : hol.term (Set_2Eset A) => x_27_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_27_3 y_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 u_2) => hol.SYM hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_2) hol.true (thm_1835 A y_1 u_2 x_27_3 hyp_1 hyp_2).

(; Theorem: |- ((Set.member x') u) ;)

(; dict ;)

def thm_1837 : A : hol.type -> y_1 : hol.term A -> u_2 : hol.term (Set_2Eset A) -> x_27_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_27_3 y_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 u_2) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_2) :=
  A : hol.type => y_1 : hol.term A => u_2 : hol.term (Set_2Eset A) => x_27_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_27_3 y_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 u_2) => hol.EQ_MP hol.true (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_2) (thm_1836 A y_1 u_2 x_27_3 hyp_1 hyp_2) thm_15.

(; Theorem: |- ((Set.member x') u) ;)

(; dict ;)

def thm_1838 : A : hol.type -> y_1 : hol.term A -> u_2 : hol.term (Set_2Eset A) -> x_27_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_27_3 y_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 u_2) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_2) :=
  A : hol.type => y_1 : hol.term A => u_2 : hol.term (Set_2Eset A) => x_27_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_27_3 y_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 u_2) => hol.PROVE_HYP (hol.eq A x_27_3 y_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_2) (thm_1828 A y_1 x_27_3 hyp_1) (hyp_3 : hol.proof (hol.eq A x_27_3 y_1) => thm_1837 A y_1 u_2 x_27_3 hyp_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((= x') y)) ((Set.member x') u)) ;)

(; dict ;)

def thm_1839 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> x_27_3 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) -> hol.proof (hol.imp (hol.eq A x_27_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1)) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => x_27_3 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) => hyp_2 : hol.proof (hol.eq A x_27_3 y_2) => thm_1838 A y_2 u_1 x_27_3 hyp_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x'. ((Data.Bool.==> ((= x') y)) ((Set.member x') u))) ;)

(; dict ;)

def thm_1840 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) -> hol.proof (hol.forall A (x_27_3 : hol.term A => hol.imp (hol.eq A x_27_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) => x_27_3 : hol.term A => thm_1839 A u_1 y_2 x_27_3 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) u))) ;)

(; dict ;)

def thm_1841 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) => hol.EQ_MP (hol.forall A (x_27_3 : hol.term A => hol.imp (hol.eq A x_27_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_3 u_1))) (hol.forall A (x_3 : hol.term A => hol.imp (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1))) (thm_1827 A u_1 y_2) (thm_1840 A u_1 y_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y)))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y))))))) ;)

(; dict ;)

def thm_1842 : A : hol.type -> B : hol.type -> u_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1))) -> hol.proof (hol.eq hol.bool (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_27_6)) (hol.eq A x_27_6 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.eq A x_6 y_2))))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_27_6)) (hol.eq A x_27_6 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.eq A x_6 y_2))))))) :=
  A : hol.type => B : hol.type => u_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_27_6)) (hol.eq A x_27_6 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.eq A x_6 y_2))))) hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y)))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y))))))) ;)

(; dict ;)

def thm_1843 : A : hol.type -> B : hol.type -> u_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) -> hol.proof (hol.eq hol.bool (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_27_6)) (hol.eq A x_27_6 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.eq A x_6 y_2))))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_27_6)) (hol.eq A x_27_6 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.eq A x_6 y_2))))))) :=
  A : hol.type => B : hol.type => u_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_1) => hol.PROVE_HYP (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1))) (hol.eq hol.bool (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_27_6)) (hol.eq A x_27_6 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.eq A x_6 y_2))))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_27_6)) (hol.eq A x_27_6 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.eq A x_6 y_2))))))) (thm_1841 A u_1 y_2 hyp_1) (hyp_2 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1))) => thm_1842 A B u_1 y_2 x_3 f_4 hyp_2).

(; Theorem: |- ((= \lambda x'. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x') (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (f x))) ((= x) y))))) \lambda x'. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x') (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (f x))) ((= x) y))))) ;)

(; dict ;)

def thm_1844 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (x_27_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_27_5)) (hol.eq A x_27_5 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_5)) (hol.eq A x_5 y_1)))) (x_27_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_27_5)) (hol.eq A x_27_5 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_5)) (hol.eq A x_5 y_1))))) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hol.REFL (hol.arr B hol.bool) (x_27_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_27_5)) (hol.eq A x_27_5 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_5)) (hol.eq A x_5 y_1)))).

(; Theorem: |- ((= \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y))))) \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y))))) ;)

(; dict ;)

def thm_1845 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_27_5)) (hol.eq A x_27_5 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.eq A x_5 y_1)))) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_27_5)) (hol.eq A x_27_5 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.eq A x_5 y_1))))) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hol.REFL (hol.arr B hol.bool) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_27_5)) (hol.eq A x_27_5 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.eq A x_5 y_1)))).

(; Theorem: |- ((= \lambda x'. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x') (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (f x))) ((= x) y))))) \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y))))) ;)

(; dict ;)

def thm_1846 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (x_27_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_27_5)) (hol.eq A x_27_5 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_5)) (hol.eq A x_5 y_1)))) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_27_5)) (hol.eq A x_27_5 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.eq A x_5 y_1))))) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hol.TRANS (hol.arr B hol.bool) (x_27_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_27_5)) (hol.eq A x_27_5 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_5)) (hol.eq A x_5 y_1)))) (x_27_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_27_5)) (hol.eq A x_27_5 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_5)) (hol.eq A x_5 y_1)))) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_27_5)) (hol.eq A x_27_5 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.eq A x_5 y_1)))) (thm_1844 A B y_1 x_2 f_3) (thm_1845 A B y_1 x_2 f_3).

(; Theorem: |- ((= (Data.Bool.! \lambda x'. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x') (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (f x))) ((= x) y)))))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y)))))) ;)

(; dict ;)

def thm_1847 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (x_27_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_27_5)) (hol.eq A x_27_5 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_5)) (hol.eq A x_5 y_1))))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_27_5)) (hol.eq A x_27_5 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.eq A x_5 y_1)))))) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (x_27_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_27_5)) (hol.eq A x_27_5 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_5)) (hol.eq A x_5 y_1)))) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_27_5)) (hol.eq A x_27_5 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.eq A x_5 y_1)))) (thm_63 B) (thm_1846 A B y_1 x_2 f_3).

(; Theorem: |- ((= ((Data.Bool./\ ((= x') (f x'))) ((= x') x))) ((Data.Bool./\ ((= x') x)) ((= x') (f x')))) ;)

(; dict ;)

def thm_1848 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> x_27_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> x_27_4 : hol.term B -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B x_27_4 (f_3 x_27_2)) (hol.eq A x_27_2 x_1)) (hol.and (hol.eq A x_27_2 x_1) (hol.eq B x_27_4 (f_3 x_27_2)))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => x_27_2 : hol.term A => f_3 : hol.term (hol.arr A B) => x_27_4 : hol.term B => (t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => thm_423 t2_1 t1_2) (hol.eq A x_27_2 x_1) (hol.eq B x_27_4 (f_3 x_27_2)).

(; Theorem: |- ((= \lambda x'. ((Data.Bool./\ ((= x') (f x'))) ((= x') x))) \lambda x'. ((Data.Bool./\ ((= x') x)) ((= x') (f x')))) ;)

(; dict ;)

def thm_1849 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_27_3 : hol.term B -> hol.proof (hol.eq (hol.arr A hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x_27_4)) (hol.eq A x_27_4 x_1)) (x_27_4 : hol.term A => hol.and (hol.eq A x_27_4 x_1) (hol.eq B x_27_3 (f_2 x_27_4)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_27_3 : hol.term B => hol.ABS_THM A hol.bool (x_27_4 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x_27_4)) (hol.eq A x_27_4 x_1)) (x_27_4 : hol.term A => hol.and (hol.eq A x_27_4 x_1) (hol.eq B x_27_3 (f_2 x_27_4))) (x_27_4 : hol.term A => thm_1848 A B x_1 x_27_4 f_2 x_27_3).

(; Theorem: |- ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x') (f x'))) ((= x') x)))) (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x') x)) ((= x') (f x'))))) ;)

(; dict ;)

def thm_1850 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_27_3 : hol.term B -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x_27_4)) (hol.eq A x_27_4 x_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq A x_27_4 x_1) (hol.eq B x_27_3 (f_2 x_27_4))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_27_3 : hol.term B => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (x_27_4 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x_27_4)) (hol.eq A x_27_4 x_1)) (x_27_4 : hol.term A => hol.and (hol.eq A x_27_4 x_1) (hol.eq B x_27_3 (f_2 x_27_4))) (thm_71 A) (thm_1849 B A x_1 f_2 x_27_3).

(; Theorem: |- ((= (= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x') (f x'))) ((= x') x))))) (= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x') x)) ((= x') (f x')))))) ;)

(; dict ;)

def thm_1851 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_27_3 : hol.term B -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x_27_4)) (hol.eq A x_27_4 x_1)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq A x_27_4 x_1) (hol.eq B x_27_3 (f_2 x_27_4)))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_27_3 : hol.term B => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x_27_4)) (hol.eq A x_27_4 x_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq A x_27_4 x_1) (hol.eq B x_27_3 (f_2 x_27_4)))) thm_64 (thm_1850 B A x_1 f_2 x_27_3).

(; Theorem: |- ((= ((Data.Bool./\ ((= x') (f x))) ((= x) y))) ((Data.Bool./\ ((= x) y)) ((= x') (f x)))) ;)

(; dict ;)

def thm_1852 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> x_27_4 : hol.term B -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B x_27_4 (f_3 x_2)) (hol.eq A x_2 y_1)) (hol.and (hol.eq A x_2 y_1) (hol.eq B x_27_4 (f_3 x_2)))) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => x_27_4 : hol.term B => (t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => thm_423 t2_1 t1_2) (hol.eq A x_2 y_1) (hol.eq B x_27_4 (f_3 x_2)).

(; Theorem: |- ((= \lambda x. ((Data.Bool./\ ((= x') (f x))) ((= x) y))) \lambda x. ((Data.Bool./\ ((= x) y)) ((= x') (f x)))) ;)

(; dict ;)

def thm_1853 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_27_3 : hol.term B -> hol.proof (hol.eq (hol.arr A hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x_4)) (hol.eq A x_4 y_1)) (x_4 : hol.term A => hol.and (hol.eq A x_4 y_1) (hol.eq B x_27_3 (f_2 x_4)))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_27_3 : hol.term B => hol.ABS_THM A hol.bool (x_4 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x_4)) (hol.eq A x_4 y_1)) (x_4 : hol.term A => hol.and (hol.eq A x_4 y_1) (hol.eq B x_27_3 (f_2 x_4))) (x_4 : hol.term A => thm_1852 A B y_1 x_4 f_2 x_27_3).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (f x))) ((= x) y)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) y)) ((= x') (f x))))) ;)

(; dict ;)

def thm_1854 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_27_3 : hol.term B -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x_4)) (hol.eq A x_4 y_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A x_4 y_1) (hol.eq B x_27_3 (f_2 x_4))))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_27_3 : hol.term B => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (x_4 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x_4)) (hol.eq A x_4 y_1)) (x_4 : hol.term A => hol.and (hol.eq A x_4 y_1) (hol.eq B x_27_3 (f_2 x_4))) (thm_71 A) (thm_1853 B A y_1 f_2 x_27_3).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x') (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (f x))) ((= x) y))))) ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x') x)) ((= x') (f x'))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) y)) ((= x') (f x)))))) ;)

(; dict ;)

def thm_1855 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> x_27_4 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_27_5)) (hol.eq A x_27_5 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_5)) (hol.eq A x_5 y_1)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq A x_27_5 x_2) (hol.eq B x_27_4 (f_3 x_27_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A x_5 y_1) (hol.eq B x_27_4 (f_3 x_5)))))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => x_27_4 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_27_5)) (hol.eq A x_27_5 x_2)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq A x_27_5 x_2) (hol.eq B x_27_4 (f_3 x_27_5))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_5)) (hol.eq A x_5 y_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A x_5 y_1) (hol.eq B x_27_4 (f_3 x_5)))) (thm_1851 B A x_2 f_3 x_27_4) (thm_1854 B A y_1 f_3 x_27_4).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x') x)) ((= x') (f x'))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) y)) ((= x') (f x)))))) ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x') (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (f x))) ((= x) y))))) ;)

(; dict ;)

def thm_1856 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_27_3 : hol.term B -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq A x_27_5 x_4) (hol.eq B x_27_3 (f_2 x_27_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A x_5 y_1) (hol.eq B x_27_3 (f_2 x_5))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x_27_5)) (hol.eq A x_27_5 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x_5)) (hol.eq A x_5 y_1))))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_27_3 : hol.term B => x_4 : hol.term A => hol.SYM hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x_27_5)) (hol.eq A x_27_5 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_27_3 (f_2 x_5)) (hol.eq A x_5 y_1)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq A x_27_5 x_4) (hol.eq B x_27_3 (f_2 x_27_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A x_5 y_1) (hol.eq B x_27_3 (f_2 x_5))))) (thm_1855 B A y_1 x_4 f_2 x_27_3).

(; Theorem: |- ((= (Data.Bool./\ ((= x') x))) (Data.Bool./\ ((= x') x))) ;)

(; dict ;)

def thm_1857 : A : hol.type -> x_1 : hol.term A -> x_27_2 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq A x_27_2 x_1)) (hol.and (hol.eq A x_27_2 x_1))) :=
  A : hol.type => x_1 : hol.term A => x_27_2 : hol.term A => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (hol.eq A x_27_2 x_1)).

(; Theorem: |- ((= (\lambda x'. ((= x') (f x')) x')) ((= x') (f x'))) ;)

(; dict ;)

def thm_1858 : B : hol.type -> A : hol.type -> x_27_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_27_3 : hol.term B -> hol.proof (hol.eq hol.bool ((x_27_4 : hol.term A => hol.eq B x_27_3 (f_2 x_27_4)) x_27_1) (hol.eq B x_27_3 (f_2 x_27_1))) :=
  B : hol.type => A : hol.type => x_27_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_27_3 : hol.term B => hol.BETA_CONV A hol.bool (x_27_4 : hol.term A => hol.eq B x_27_3 (f_2 x_27_4)) x_27_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= x') x)) (\lambda x'. ((= x') (f x')) x'))) ((Data.Bool./\ ((= x') x)) ((= x') (f x')))) ;)

(; dict ;)

def thm_1859 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_27_2 : hol.term B -> x_3 : hol.term A -> x_27_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (hol.eq A x_27_4 x_3) ((x_27_5 : hol.term A => hol.eq B x_27_2 (f_1 x_27_5)) x_27_4)) (hol.and (hol.eq A x_27_4 x_3) (hol.eq B x_27_2 (f_1 x_27_4)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_27_2 : hol.term B => x_3 : hol.term A => x_27_4 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq A x_27_4 x_3)) (hol.and (hol.eq A x_27_4 x_3)) ((x_27_5 : hol.term A => hol.eq B x_27_2 (f_1 x_27_5)) x_27_4) (hol.eq B x_27_2 (f_1 x_27_4)) (thm_1857 A x_3 x_27_4) (thm_1858 B A x_27_4 f_1 x_27_2).

(; Theorem: |- ((= \lambda x'. ((Data.Bool./\ ((= x') x)) (\lambda x'. ((= x') (f x')) x'))) \lambda x'. ((Data.Bool./\ ((= x') x)) ((= x') (f x')))) ;)

(; dict ;)

def thm_1860 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_27_2 : hol.term B -> x_3 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq A x_27_4 x_3) ((x_27_5 : hol.term A => hol.eq B x_27_2 (f_1 x_27_5)) x_27_4)) (x_27_4 : hol.term A => hol.and (hol.eq A x_27_4 x_3) (hol.eq B x_27_2 (f_1 x_27_4)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_27_2 : hol.term B => x_3 : hol.term A => hol.ABS_THM A hol.bool (x_27_4 : hol.term A => hol.and (hol.eq A x_27_4 x_3) ((x_27_5 : hol.term A => hol.eq B x_27_2 (f_1 x_27_5)) x_27_4)) (x_27_4 : hol.term A => hol.and (hol.eq A x_27_4 x_3) (hol.eq B x_27_2 (f_1 x_27_4))) (x_27_4 : hol.term A => thm_1859 B A f_1 x_27_2 x_3 x_27_4).

(; Theorem: |- ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x') x)) (\lambda x'. ((= x') (f x')) x')))) (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x') x)) ((= x') (f x'))))) ;)

(; dict ;)

def thm_1861 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_27_2 : hol.term B -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq A x_27_4 x_3) ((x_27_5 : hol.term A => hol.eq B x_27_2 (f_1 x_27_5)) x_27_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq A x_27_4 x_3) (hol.eq B x_27_2 (f_1 x_27_4))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_27_2 : hol.term B => x_3 : hol.term A => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (x_27_4 : hol.term A => hol.and (hol.eq A x_27_4 x_3) ((x_27_5 : hol.term A => hol.eq B x_27_2 (f_1 x_27_5)) x_27_4)) (x_27_4 : hol.term A => hol.and (hol.eq A x_27_4 x_3) (hol.eq B x_27_2 (f_1 x_27_4))) (thm_71 A) (thm_1860 B A f_1 x_27_2 x_3).

(; Theorem: |- ((= (= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x') x)) (\lambda x'. ((= x') (f x')) x'))))) (= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x') x)) ((= x') (f x')))))) ;)

(; dict ;)

def thm_1862 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_27_2 : hol.term B -> x_3 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq A x_27_4 x_3) ((x_27_5 : hol.term A => hol.eq B x_27_2 (f_1 x_27_5)) x_27_4)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq A x_27_4 x_3) (hol.eq B x_27_2 (f_1 x_27_4)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_27_2 : hol.term B => x_3 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq A x_27_4 x_3) ((x_27_5 : hol.term A => hol.eq B x_27_2 (f_1 x_27_5)) x_27_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq A x_27_4 x_3) (hol.eq B x_27_2 (f_1 x_27_4)))) thm_64 (thm_1861 B A f_1 x_27_2 x_3).

(; Theorem: |- ((= (\lambda x'. ((= x') (f x')) x)) ((= x') (f x))) ;)

(; dict ;)

def thm_1863 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_27_3 : hol.term B -> hol.proof (hol.eq hol.bool ((x_27_4 : hol.term A => hol.eq B x_27_3 (f_2 x_27_4)) x_1) (hol.eq B x_27_3 (f_2 x_1))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_27_3 : hol.term B => hol.BETA_CONV A hol.bool (x_27_4 : hol.term A => hol.eq B x_27_3 (f_2 x_27_4)) x_1.

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x') x)) (\lambda x'. ((= x') (f x')) x')))) (\lambda x'. ((= x') (f x')) x))) ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x') x)) ((= x') (f x'))))) ((= x') (f x)))) ;)

(; dict ;)

def thm_1864 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_27_2 : hol.term B -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq A x_27_4 x_3) ((x_27_5 : hol.term A => hol.eq B x_27_2 (f_1 x_27_5)) x_27_4))) ((x_27_4 : hol.term A => hol.eq B x_27_2 (f_1 x_27_4)) x_3)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq A x_27_4 x_3) (hol.eq B x_27_2 (f_1 x_27_4)))) (hol.eq B x_27_2 (f_1 x_3)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_27_2 : hol.term B => x_3 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq A x_27_4 x_3) ((x_27_5 : hol.term A => hol.eq B x_27_2 (f_1 x_27_5)) x_27_4)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq A x_27_4 x_3) (hol.eq B x_27_2 (f_1 x_27_4))))) ((x_27_4 : hol.term A => hol.eq B x_27_2 (f_1 x_27_4)) x_3) (hol.eq B x_27_2 (f_1 x_3)) (thm_1862 B A f_1 x_27_2 x_3) (thm_1863 B A x_3 f_1 x_27_2).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) a)) (p x)))) (p a))) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) a)) (p x)))) (p a))) ;)

(; dict ;)

def thm_1865 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq A x_3 a_2) (p_1 x_3))) (p_1 a_2)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq A x_3 a_2) (p_1 x_3))) (p_1 a_2))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => a_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq A x_3 a_2) (p_1 x_3))) (p_1 a_2)).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x') a)) (p x')))) (p a))) ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x') a)) (p x')))) (p a))) ;)

(; dict ;)

def thm_1866 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_3 : hol.term A => hol.and (hol.eq A x_27_3 a_2) (p_1 x_27_3))) (p_1 a_2)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_3 : hol.term A => hol.and (hol.eq A x_27_3 a_2) (p_1 x_27_3))) (p_1 a_2))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => a_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_3 : hol.term A => hol.and (hol.eq A x_27_3 a_2) (p_1 x_27_3))) (p_1 a_2)).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) a)) (p x)))) (p a))) ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x') a)) (p x')))) (p a))) ;)

(; dict ;)

def thm_1867 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq A x_3 a_2) (p_1 x_3))) (p_1 a_2)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_3 : hol.term A => hol.and (hol.eq A x_27_3 a_2) (p_1 x_27_3))) (p_1 a_2))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => a_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq A x_3 a_2) (p_1 x_3))) (p_1 a_2)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq A x_3 a_2) (p_1 x_3))) (p_1 a_2)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_3 : hol.term A => hol.and (hol.eq A x_27_3 a_2) (p_1 x_27_3))) (p_1 a_2)) (thm_1865 A p_1 a_2) (thm_1866 A p_1 a_2).

(; Theorem: |- (Data.Bool.! \lambda a. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) a)) (p x)))) (p a))) ;)

(; dict ;)

def thm_1868 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq A x_3 a_2) (p_1 x_3))) (p_1 a_2))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_35 A p_1.

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) a)) (p x)))) (p a)) ;)

(; dict ;)

def thm_1869 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq A x_3 a_2) (p_1 x_3))) (p_1 a_2)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => a_2 : hol.term A => thm_1868 A p_1 a_2.

(; Theorem: |- ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x') a)) (p x')))) (p a)) ;)

(; dict ;)

def thm_1870 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_3 : hol.term A => hol.and (hol.eq A x_27_3 a_2) (p_1 x_27_3))) (p_1 a_2)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => a_2 : hol.term A => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq A x_3 a_2) (p_1 x_3))) (p_1 a_2)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_3 : hol.term A => hol.and (hol.eq A x_27_3 a_2) (p_1 x_27_3))) (p_1 a_2)) (thm_1867 A p_1 a_2) (thm_1869 A p_1 a_2).

(; Theorem: |- ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x') x)) (\lambda x'. ((= x') (f x')) x')))) (\lambda x'. ((= x') (f x')) x)) ;)

(; dict ;)

def thm_1871 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_27_2 : hol.term B -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq A x_27_4 x_3) ((x_27_5 : hol.term A => hol.eq B x_27_2 (f_1 x_27_5)) x_27_4))) ((x_27_4 : hol.term A => hol.eq B x_27_2 (f_1 x_27_4)) x_3)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_27_2 : hol.term B => x_3 : hol.term A => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => a_2 : hol.term A => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => a_2 : hol.term A => thm_1870 A p_1 a_2) A p_1 a_2) A (x_27_4 : hol.term A => hol.eq B x_27_2 (f_1 x_27_4)) x_3.

(; Theorem: |- ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x') x)) ((= x') (f x'))))) ((= x') (f x))) ;)

(; dict ;)

def thm_1872 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_27_2 : hol.term B -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq A x_27_4 x_3) (hol.eq B x_27_2 (f_1 x_27_4)))) (hol.eq B x_27_2 (f_1 x_3))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_27_2 : hol.term B => x_3 : hol.term A => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq A x_27_4 x_3) ((x_27_5 : hol.term A => hol.eq B x_27_2 (f_1 x_27_5)) x_27_4))) ((x_27_4 : hol.term A => hol.eq B x_27_2 (f_1 x_27_4)) x_3)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq A x_27_4 x_3) (hol.eq B x_27_2 (f_1 x_27_4)))) (hol.eq B x_27_2 (f_1 x_3))) (thm_1864 B A f_1 x_27_2 x_3) (thm_1871 B A f_1 x_27_2 x_3).

(; Theorem: |- ((= (= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x') x)) ((= x') (f x')))))) (= ((= x') (f x)))) ;)

(; dict ;)

def thm_1873 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_27_2 : hol.term B -> x_3 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq A x_27_4 x_3) (hol.eq B x_27_2 (f_1 x_27_4))))) (hol.eq hol.bool (hol.eq B x_27_2 (f_1 x_3)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_27_2 : hol.term B => x_3 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_4 : hol.term A => hol.and (hol.eq A x_27_4 x_3) (hol.eq B x_27_2 (f_1 x_27_4)))) (hol.eq B x_27_2 (f_1 x_3)) thm_64 (thm_1872 B A f_1 x_27_2 x_3).

(; Theorem: |- ((= (Data.Bool./\ ((= x) y))) (Data.Bool./\ ((= x) y))) ;)

(; dict ;)

def thm_1874 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq A x_2 y_1)) (hol.and (hol.eq A x_2 y_1))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (hol.eq A x_2 y_1)).

(; Theorem: |- ((= (\lambda x. ((= x') (f x)) x)) ((= x') (f x))) ;)

(; dict ;)

def thm_1875 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_27_3 : hol.term B -> hol.proof (hol.eq hol.bool ((x_4 : hol.term A => hol.eq B x_27_3 (f_2 x_4)) x_1) (hol.eq B x_27_3 (f_2 x_1))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_27_3 : hol.term B => hol.BETA_CONV A hol.bool (x_4 : hol.term A => hol.eq B x_27_3 (f_2 x_4)) x_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= x) y)) (\lambda x. ((= x') (f x)) x))) ((Data.Bool./\ ((= x) y)) ((= x') (f x)))) ;)

(; dict ;)

def thm_1876 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_27_2 : hol.term B -> y_3 : hol.term A -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (hol.eq A x_4 y_3) ((x_5 : hol.term A => hol.eq B x_27_2 (f_1 x_5)) x_4)) (hol.and (hol.eq A x_4 y_3) (hol.eq B x_27_2 (f_1 x_4)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_27_2 : hol.term B => y_3 : hol.term A => x_4 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq A x_4 y_3)) (hol.and (hol.eq A x_4 y_3)) ((x_5 : hol.term A => hol.eq B x_27_2 (f_1 x_5)) x_4) (hol.eq B x_27_2 (f_1 x_4)) (thm_1874 A y_3 x_4) (thm_1875 B A x_4 f_1 x_27_2).

(; Theorem: |- ((= \lambda x. ((Data.Bool./\ ((= x) y)) (\lambda x. ((= x') (f x)) x))) \lambda x. ((Data.Bool./\ ((= x) y)) ((= x') (f x)))) ;)

(; dict ;)

def thm_1877 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_27_2 : hol.term B -> y_3 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (x_4 : hol.term A => hol.and (hol.eq A x_4 y_3) ((x_5 : hol.term A => hol.eq B x_27_2 (f_1 x_5)) x_4)) (x_4 : hol.term A => hol.and (hol.eq A x_4 y_3) (hol.eq B x_27_2 (f_1 x_4)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_27_2 : hol.term B => y_3 : hol.term A => hol.ABS_THM A hol.bool (x_4 : hol.term A => hol.and (hol.eq A x_4 y_3) ((x_5 : hol.term A => hol.eq B x_27_2 (f_1 x_5)) x_4)) (x_4 : hol.term A => hol.and (hol.eq A x_4 y_3) (hol.eq B x_27_2 (f_1 x_4))) (x_4 : hol.term A => thm_1876 B A f_1 x_27_2 y_3 x_4).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) y)) (\lambda x. ((= x') (f x)) x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) y)) ((= x') (f x))))) ;)

(; dict ;)

def thm_1878 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_27_2 : hol.term B -> y_3 : hol.term A -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A x_4 y_3) ((x_5 : hol.term A => hol.eq B x_27_2 (f_1 x_5)) x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A x_4 y_3) (hol.eq B x_27_2 (f_1 x_4))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_27_2 : hol.term B => y_3 : hol.term A => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (x_4 : hol.term A => hol.and (hol.eq A x_4 y_3) ((x_5 : hol.term A => hol.eq B x_27_2 (f_1 x_5)) x_4)) (x_4 : hol.term A => hol.and (hol.eq A x_4 y_3) (hol.eq B x_27_2 (f_1 x_4))) (thm_71 A) (thm_1877 B A f_1 x_27_2 y_3).

(; Theorem: |- ((= (= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) y)) (\lambda x. ((= x') (f x)) x))))) (= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) y)) ((= x') (f x)))))) ;)

(; dict ;)

def thm_1879 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_27_2 : hol.term B -> y_3 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A x_4 y_3) ((x_5 : hol.term A => hol.eq B x_27_2 (f_1 x_5)) x_4)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A x_4 y_3) (hol.eq B x_27_2 (f_1 x_4)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_27_2 : hol.term B => y_3 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A x_4 y_3) ((x_5 : hol.term A => hol.eq B x_27_2 (f_1 x_5)) x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A x_4 y_3) (hol.eq B x_27_2 (f_1 x_4)))) thm_64 (thm_1878 B A f_1 x_27_2 y_3).

(; Theorem: |- ((= (\lambda x. ((= x') (f x)) y)) ((= x') (f y))) ;)

(; dict ;)

def thm_1880 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_27_3 : hol.term B -> hol.proof (hol.eq hol.bool ((x_4 : hol.term A => hol.eq B x_27_3 (f_2 x_4)) y_1) (hol.eq B x_27_3 (f_2 y_1))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_27_3 : hol.term B => hol.BETA_CONV A hol.bool (x_4 : hol.term A => hol.eq B x_27_3 (f_2 x_4)) y_1.

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) y)) (\lambda x. ((= x') (f x)) x)))) (\lambda x. ((= x') (f x)) y))) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) y)) ((= x') (f x))))) ((= x') (f y)))) ;)

(; dict ;)

def thm_1881 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_27_2 : hol.term B -> y_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A x_4 y_3) ((x_5 : hol.term A => hol.eq B x_27_2 (f_1 x_5)) x_4))) ((x_4 : hol.term A => hol.eq B x_27_2 (f_1 x_4)) y_3)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A x_4 y_3) (hol.eq B x_27_2 (f_1 x_4)))) (hol.eq B x_27_2 (f_1 y_3)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_27_2 : hol.term B => y_3 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A x_4 y_3) ((x_5 : hol.term A => hol.eq B x_27_2 (f_1 x_5)) x_4)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A x_4 y_3) (hol.eq B x_27_2 (f_1 x_4))))) ((x_4 : hol.term A => hol.eq B x_27_2 (f_1 x_4)) y_3) (hol.eq B x_27_2 (f_1 y_3)) (thm_1879 B A f_1 x_27_2 y_3) (thm_1880 B A y_3 f_1 x_27_2).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) y)) (\lambda x. ((= x') (f x)) x)))) (\lambda x. ((= x') (f x)) y)) ;)

(; dict ;)

def thm_1882 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_27_2 : hol.term B -> y_3 : hol.term A -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A x_4 y_3) ((x_5 : hol.term A => hol.eq B x_27_2 (f_1 x_5)) x_4))) ((x_4 : hol.term A => hol.eq B x_27_2 (f_1 x_4)) y_3)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_27_2 : hol.term B => y_3 : hol.term A => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => a_2 : hol.term A => thm_1869 A p_1 a_2) A (x_4 : hol.term A => hol.eq B x_27_2 (f_1 x_4)) y_3.

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) y)) ((= x') (f x))))) ((= x') (f y))) ;)

(; dict ;)

def thm_1883 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_27_2 : hol.term B -> y_3 : hol.term A -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A x_4 y_3) (hol.eq B x_27_2 (f_1 x_4)))) (hol.eq B x_27_2 (f_1 y_3))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_27_2 : hol.term B => y_3 : hol.term A => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A x_4 y_3) ((x_5 : hol.term A => hol.eq B x_27_2 (f_1 x_5)) x_4))) ((x_4 : hol.term A => hol.eq B x_27_2 (f_1 x_4)) y_3)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq A x_4 y_3) (hol.eq B x_27_2 (f_1 x_4)))) (hol.eq B x_27_2 (f_1 y_3))) (thm_1881 B A f_1 x_27_2 y_3) (thm_1882 B A f_1 x_27_2 y_3).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x') x)) ((= x') (f x'))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) y)) ((= x') (f x)))))) ((= ((= x') (f x))) ((= x') (f y)))) ;)

(; dict ;)

def thm_1884 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_27_3 : hol.term B -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq A x_27_5 x_4) (hol.eq B x_27_3 (f_2 x_27_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A x_5 y_1) (hol.eq B x_27_3 (f_2 x_5))))) (hol.eq hol.bool (hol.eq B x_27_3 (f_2 x_4)) (hol.eq B x_27_3 (f_2 y_1)))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_27_3 : hol.term B => x_4 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq A x_27_5 x_4) (hol.eq B x_27_3 (f_2 x_27_5))))) (hol.eq hol.bool (hol.eq B x_27_3 (f_2 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A x_5 y_1) (hol.eq B x_27_3 (f_2 x_5)))) (hol.eq B x_27_3 (f_2 y_1)) (thm_1873 B A f_2 x_27_3 x_4) (thm_1883 B A f_2 x_27_3 y_1).

(; Theorem: |- ((= ((= ((= x') (f x))) ((= x') (f y)))) ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x') x)) ((= x') (f x'))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) y)) ((= x') (f x)))))) ;)

(; dict ;)

def thm_1885 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> x_27_4 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq B x_27_4 (f_3 x_2)) (hol.eq B x_27_4 (f_3 y_1))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq A x_27_5 x_2) (hol.eq B x_27_4 (f_3 x_27_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A x_5 y_1) (hol.eq B x_27_4 (f_3 x_5)))))) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => x_27_4 : hol.term B => hol.SYM hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq A x_27_5 x_2) (hol.eq B x_27_4 (f_3 x_27_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A x_5 y_1) (hol.eq B x_27_4 (f_3 x_5))))) (hol.eq hol.bool (hol.eq B x_27_4 (f_3 x_2)) (hol.eq B x_27_4 (f_3 y_1))) (thm_1884 B A y_1 f_3 x_27_4 x_2).

(; Theorem: |- ((= (= x')) (= x')) ;)

(; dict ;)

def thm_1886 : B : hol.type -> x_27_1 : hol.term B -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B x_27_1) (hol.eq B x_27_1)) :=
  B : hol.type => x_27_1 : hol.term B => hol.REFL (hol.arr B hol.bool) (hol.eq B x_27_1).

(; Theorem: |- ((= ((= x') (f x))) ((= x') (f y))) ;)

(; dict ;)

def thm_1887 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> x_27_4 : hol.term B -> hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) -> hol.proof (hol.eq hol.bool (hol.eq B x_27_4 (f_3 x_2)) (hol.eq B x_27_4 (f_3 y_1))) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => x_27_4 : hol.term B => hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) => hol.APP_THM B hol.bool (hol.eq B x_27_4) (hol.eq B x_27_4) (f_3 x_2) (f_3 y_1) (thm_1886 B x_27_4) (thm_973 A B y_1 x_2 f_3 hyp_1).

(; Theorem: |- ((= (= ((= x') (f x)))) (= ((= x') (f y)))) ;)

(; dict ;)

def thm_1888 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> x_27_4 : hol.term B -> hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.eq B x_27_4 (f_3 x_2))) (hol.eq hol.bool (hol.eq B x_27_4 (f_3 y_1)))) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => x_27_4 : hol.term B => hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.eq B x_27_4 (f_3 x_2)) (hol.eq B x_27_4 (f_3 y_1)) thm_64 (thm_1887 A B y_1 x_2 f_3 x_27_4 hyp_1).

(; Theorem: |- ((= ((= x') (f y))) ((= x') (f y))) ;)

(; dict ;)

def thm_1889 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_27_3 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq B x_27_3 (f_2 y_1)) (hol.eq B x_27_3 (f_2 y_1))) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_27_3 : hol.term B => hol.REFL hol.bool (hol.eq B x_27_3 (f_2 y_1)).

(; Theorem: |- ((= ((= ((= x') (f x))) ((= x') (f y)))) ((= ((= x') (f y))) ((= x') (f y)))) ;)

(; dict ;)

def thm_1890 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> x_27_4 : hol.term B -> hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq B x_27_4 (f_3 x_2)) (hol.eq B x_27_4 (f_3 y_1))) (hol.eq hol.bool (hol.eq B x_27_4 (f_3 y_1)) (hol.eq B x_27_4 (f_3 y_1)))) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => x_27_4 : hol.term B => hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.eq B x_27_4 (f_3 x_2))) (hol.eq hol.bool (hol.eq B x_27_4 (f_3 y_1))) (hol.eq B x_27_4 (f_3 y_1)) (hol.eq B x_27_4 (f_3 y_1)) (thm_1888 A B y_1 x_2 f_3 x_27_4 hyp_1) (thm_1889 A B y_1 f_3 x_27_4).

(; Theorem: |- ((= ((= x) x)) Data.Bool.T) ;)

(; dict ;)

def thm_1891 : x_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool x_1 x_1) hol.true) :=
  x_1 : hol.term hol.bool => (A : hol.type => x_1 : hol.term A => thm_313 A x_1) hol.bool x_1.

(; Theorem: |- ((= ((= ((= x') (f y))) ((= x') (f y)))) Data.Bool.T) ;)

(; dict ;)

def thm_1892 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_27_3 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq B x_27_3 (f_2 y_1)) (hol.eq B x_27_3 (f_2 y_1))) hol.true) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_27_3 : hol.term B => (x_1 : hol.term hol.bool => thm_1891 x_1) (hol.eq B x_27_3 (f_2 y_1)).

(; Theorem: |- ((= ((= ((= x') (f x))) ((= x') (f y)))) Data.Bool.T) ;)

(; dict ;)

def thm_1893 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> x_27_4 : hol.term B -> hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq B x_27_4 (f_3 x_2)) (hol.eq B x_27_4 (f_3 y_1))) hol.true) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => x_27_4 : hol.term B => hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq B x_27_4 (f_3 x_2)) (hol.eq B x_27_4 (f_3 y_1))) (hol.eq hol.bool (hol.eq B x_27_4 (f_3 y_1)) (hol.eq B x_27_4 (f_3 y_1))) hol.true (thm_1890 A B y_1 x_2 f_3 x_27_4 hyp_1) (thm_1892 A B y_1 f_3 x_27_4).

(; Theorem: |- ((= Data.Bool.T) ((= ((= x') (f x))) ((= x') (f y)))) ;)

(; dict ;)

def thm_1894 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> x_27_4 : hol.term B -> hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.eq B x_27_4 (f_3 x_2)) (hol.eq B x_27_4 (f_3 y_1)))) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => x_27_4 : hol.term B => hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) => hol.SYM hol.bool (hol.eq hol.bool (hol.eq B x_27_4 (f_3 x_2)) (hol.eq B x_27_4 (f_3 y_1))) hol.true (thm_1893 A B y_1 x_2 f_3 x_27_4 hyp_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x') x)) ((= x') (f x'))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) y)) ((= x') (f x))))) ;)

(; dict ;)

def thm_1895 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_27_3 : hol.term B -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.eq B (f_2 x_4) (f_2 y_1)) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq A x_27_5 x_4) (hol.eq B x_27_3 (f_2 x_27_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A x_5 y_1) (hol.eq B x_27_3 (f_2 x_5))))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_27_3 : hol.term B => x_4 : hol.term A => hyp_1 : hol.proof (hol.eq B (f_2 x_4) (f_2 y_1)) => hol.EQ_MP (hol.eq hol.bool (hol.eq B x_27_3 (f_2 x_4)) (hol.eq B x_27_3 (f_2 y_1))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq A x_27_5 x_4) (hol.eq B x_27_3 (f_2 x_27_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A x_5 y_1) (hol.eq B x_27_3 (f_2 x_5))))) (thm_1885 A B y_1 x_4 f_2 x_27_3) (hol.EQ_MP hol.true (hol.eq hol.bool (hol.eq B x_27_3 (f_2 x_4)) (hol.eq B x_27_3 (f_2 y_1))) (thm_1894 A B y_1 x_4 f_2 x_27_3 hyp_1) thm_15).

(; Theorem: |- ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x') (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (f x))) ((= x) y)))) ;)

(; dict ;)

def thm_1896 : B : hol.type -> A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> x_27_4 : hol.term B -> hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_27_5)) (hol.eq A x_27_5 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_5)) (hol.eq A x_5 y_1)))) :=
  B : hol.type => A : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => x_27_4 : hol.term B => hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq A x_27_5 x_2) (hol.eq B x_27_4 (f_3 x_27_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A x_5 y_1) (hol.eq B x_27_4 (f_3 x_5))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_27_5)) (hol.eq A x_27_5 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_5)) (hol.eq A x_5 y_1)))) (thm_1856 B A y_1 f_3 x_27_4 x_2) (thm_1895 B A y_1 f_3 x_27_4 x_2 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda x'. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x') (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x') (f x))) ((= x) y))))) ;)

(; dict ;)

def thm_1897 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) -> hol.proof (hol.forall B (x_27_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_27_5)) (hol.eq A x_27_5 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_5)) (hol.eq A x_5 y_1))))) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) => x_27_4 : hol.term B => thm_1896 B A y_1 x_2 f_3 x_27_4 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y))))) ;)

(; dict ;)

def thm_1898 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) -> hol.proof (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_27_5)) (hol.eq A x_27_5 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.eq A x_5 y_1))))) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq B (f_3 x_2) (f_3 y_1)) => hol.EQ_MP (hol.forall B (x_27_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_27_5)) (hol.eq A x_27_5 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_27_4 (f_3 x_5)) (hol.eq A x_5 y_1))))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_27_5)) (hol.eq A x_27_5 x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.eq A x_5 y_1))))) (thm_1847 A B y_1 x_2 f_3) (thm_1897 A B y_1 x_2 f_3 hyp_1).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y)))))) ;)

(; dict ;)

def thm_1899 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> y_4 : hol.term A -> hyp_1 : hol.proof (hol.eq B (f_2 x_1) (f_2 y_4)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_3) -> hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_27_6)) (hol.eq A x_27_6 x_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (hol.eq A x_6 y_4)))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => y_4 : hol.term A => hyp_1 : hol.proof (hol.eq B (f_2 x_1) (f_2 y_4)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_3) => hol.EQ_MP (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_27_6)) (hol.eq A x_27_6 x_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (hol.eq A x_6 y_4))))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_27_6)) (hol.eq A x_27_6 x_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (hol.eq A x_6 y_4)))))) (thm_1843 A B u_3 y_4 x_1 f_2 hyp_2) (thm_1898 A B y_4 x_1 f_2 hyp_1).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((= x') x)) ((Set.member x') u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y))))))) ;)

(; dict ;)

def thm_1900 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.eq B (f_1 x_4) (f_1 y_2)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) -> hol.proof (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (hol.eq A x_27_6 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (hol.eq A x_6 y_2))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.eq B (f_1 x_4) (f_1 y_2)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) => hol.EQ_MP (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (hol.eq A x_27_6 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (hol.eq A x_6 y_2)))))) (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (hol.eq A x_27_6 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (hol.eq A x_6 y_2))))))) (thm_1823 B A x_4 f_1 u_3 y_2 hyp_2) (thm_1899 B A x_4 f_1 u_3 y_2 hyp_1 hyp_3).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda x'. ((= ((= x') x)) ((= x') y)))) ((= x) y))) ((Data.Bool./\ ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((= x') x)) ((Set.member x') u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y)))))))) ((Data.Bool.==> (Data.Bool.! \lambda x'. ((= ((= x') x)) ((= x') y)))) ((= x) y)))) ;)

(; dict ;)

def thm_1901 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> y_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (hol.eq A x_27_6 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (hol.eq A x_6 y_3))))))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (hol.eq A x_27_5 x_4) (hol.eq A x_27_5 y_3))) (hol.eq A x_4 y_3)) (hol.and (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (hol.eq A x_27_6 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (hol.eq A x_6 y_3))))))) (hol.imp (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (hol.eq A x_27_5 x_4) (hol.eq A x_27_5 y_3))) (hol.eq A x_4 y_3)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => y_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (hol.eq A x_27_6 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (hol.eq A x_6 y_3))))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (hol.eq A x_27_6 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (hol.eq A x_6 y_3))))))) (hol.imp (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (hol.eq A x_27_5 x_4) (hol.eq A x_27_5 y_3))) (hol.eq A x_4 y_3)) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda x'. ((= ((= x') x)) ((= x') y)))) ((= x) y))) ((Data.Bool./\ ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((= x') x)) ((Set.member x') u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y)))))))) ((Data.Bool.==> (Data.Bool.! \lambda x'. ((= ((= x') x)) ((= x') y)))) ((= x) y)))) ;)

(; dict ;)

def thm_1902 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> y_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.eq B (f_1 x_4) (f_1 y_3)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 u_2) -> hol.proof (hol.eq hol.bool (hol.imp (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (hol.eq A x_27_5 x_4) (hol.eq A x_27_5 y_3))) (hol.eq A x_4 y_3)) (hol.and (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (hol.eq A x_27_6 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (hol.eq A x_6 y_3))))))) (hol.imp (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (hol.eq A x_27_5 x_4) (hol.eq A x_27_5 y_3))) (hol.eq A x_4 y_3)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => y_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.eq B (f_1 x_4) (f_1 y_3)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 u_2) => hol.PROVE_HYP (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (hol.eq A x_27_6 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (hol.eq A x_6 y_3))))))) (hol.eq hol.bool (hol.imp (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (hol.eq A x_27_5 x_4) (hol.eq A x_27_5 y_3))) (hol.eq A x_4 y_3)) (hol.and (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (hol.eq A x_27_6 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (hol.eq A x_6 y_3))))))) (hol.imp (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (hol.eq A x_27_5 x_4) (hol.eq A x_27_5 y_3))) (hol.eq A x_4 y_3)))) (thm_1900 B A f_1 y_3 u_2 x_4 hyp_1 hyp_2 hyp_3) (hyp_4 : hol.proof (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (hol.eq A x_27_6 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (hol.eq A x_6 y_3))))))) => thm_1901 B A f_1 u_2 y_3 x_4 hyp_4).

(; Theorem: |- (Data.Bool.! \lambda x'. ((= ((= x') x)) ((= x') y))) ;)

(; dict ;)

def thm_1903 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_27_3 : hol.term A => hol.eq hol.bool (hol.eq A x_27_3 x_2) (hol.eq A x_27_3 y_1))) -> hol.proof (hol.forall A (x_27_3 : hol.term A => hol.eq hol.bool (hol.eq A x_27_3 x_2) (hol.eq A x_27_3 y_1))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_27_3 : hol.term A => hol.eq hol.bool (hol.eq A x_27_3 x_2) (hol.eq A x_27_3 y_1))) => hyp_1.

(; Theorem: |- ((= (= ((= x) x))) (= Data.Bool.T)) ;)

(; dict ;)

def thm_1904 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.eq A x_1 x_1)) (hol.eq hol.bool hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.eq A x_1 x_1) hol.true thm_64 (thm_313 A x_1).

(; Theorem: |- ((= ((= ((= x) x)) ((= x) y))) ((= Data.Bool.T) ((= x) y))) ;)

(; dict ;)

def thm_1905 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_2 x_2) (hol.eq A x_2 y_1)) (hol.eq hol.bool hol.true (hol.eq A x_2 y_1))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.eq A x_2 x_2)) (hol.eq hol.bool hol.true) (hol.eq A x_2 y_1) (hol.eq A x_2 y_1) (thm_1904 A x_2) (thm_1801 A y_1 x_2).

(; Theorem: |- ((= ((= Data.Bool.T) ((= x) y))) ((= x) y)) ;)

(; dict ;)

def thm_1906 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true (hol.eq A x_2 y_1)) (hol.eq A x_2 y_1)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => (t_1 : hol.term hol.bool => thm_206 t_1) (hol.eq A x_2 y_1).

(; Theorem: |- ((= ((= ((= x) x)) ((= x) y))) ((= x) y)) ;)

(; dict ;)

def thm_1907 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_2 x_2) (hol.eq A x_2 y_1)) (hol.eq A x_2 y_1)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq A x_2 x_2) (hol.eq A x_2 y_1)) (hol.eq hol.bool hol.true (hol.eq A x_2 y_1)) (hol.eq A x_2 y_1) (thm_1905 A y_1 x_2) (thm_1906 A y_1 x_2).

(; Theorem: |- ((= (Data.Bool.==> ((= ((= x) x)) ((= x) y)))) (Data.Bool.==> ((= x) y))) ;)

(; dict ;)

def thm_1908 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.eq hol.bool (hol.eq A x_2 x_2) (hol.eq A x_2 y_1))) (hol.imp (hol.eq A x_2 y_1))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.eq hol.bool (hol.eq A x_2 x_2) (hol.eq A x_2 y_1)) (hol.eq A x_2 y_1) thm_107 (thm_1907 A y_1 x_2).

(; Theorem: |- ((= ((Data.Bool.==> ((= ((= x) x)) ((= x) y))) ((= x) y))) ((Data.Bool.==> ((= x) y)) ((= x) y))) ;)

(; dict ;)

def thm_1909 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool (hol.eq A x_2 x_2) (hol.eq A x_2 y_1)) (hol.eq A x_2 y_1)) (hol.imp (hol.eq A x_2 y_1) (hol.eq A x_2 y_1))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (hol.eq hol.bool (hol.eq A x_2 x_2) (hol.eq A x_2 y_1))) (hol.imp (hol.eq A x_2 y_1)) (hol.eq A x_2 y_1) (hol.eq A x_2 y_1) (thm_1908 A y_1 x_2) (thm_1801 A y_1 x_2).

(; Theorem: |- ((= ((Data.Bool.==> ((= x) y)) ((= x) y))) Data.Bool.T) ;)

(; dict ;)

def thm_1910 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq A x_2 y_1) (hol.eq A x_2 y_1)) hol.true) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => (t_1 : hol.term hol.bool => thm_468 t_1) (hol.eq A x_2 y_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= ((= x) x)) ((= x) y))) ((= x) y))) Data.Bool.T) ;)

(; dict ;)

def thm_1911 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool (hol.eq A x_2 x_2) (hol.eq A x_2 y_1)) (hol.eq A x_2 y_1)) hol.true) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.TRANS hol.bool (hol.imp (hol.eq hol.bool (hol.eq A x_2 x_2) (hol.eq A x_2 y_1)) (hol.eq A x_2 y_1)) (hol.imp (hol.eq A x_2 y_1) (hol.eq A x_2 y_1)) hol.true (thm_1909 A y_1 x_2) (thm_1910 A y_1 x_2).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> ((= ((= x) x)) ((= x) y))) ((= x) y))) ;)

(; dict ;)

def thm_1912 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool hol.true (hol.imp (hol.eq hol.bool (hol.eq A x_2 x_2) (hol.eq A x_2 y_1)) (hol.eq A x_2 y_1))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.SYM hol.bool (hol.imp (hol.eq hol.bool (hol.eq A x_2 x_2) (hol.eq A x_2 y_1)) (hol.eq A x_2 y_1)) hol.true (thm_1911 A y_1 x_2).

(; Theorem: |- ((Data.Bool.==> ((= ((= x) x)) ((= x) y))) ((= x) y)) ;)

(; dict ;)

def thm_1913 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.imp (hol.eq hol.bool (hol.eq A x_2 x_2) (hol.eq A x_2 y_1)) (hol.eq A x_2 y_1)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.EQ_MP hol.true (hol.imp (hol.eq hol.bool (hol.eq A x_2 x_2) (hol.eq A x_2 y_1)) (hol.eq A x_2 y_1)) (thm_1912 A y_1 x_2) thm_15.

(; Theorem: |- ((= ((= x) x)) ((= x) y)) ;)

(; dict ;)

def thm_1914 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_27_3 : hol.term A => hol.eq hol.bool (hol.eq A x_27_3 x_2) (hol.eq A x_27_3 y_1))) -> hol.proof (hol.eq hol.bool (hol.eq A x_2 x_2) (hol.eq A x_2 y_1)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_27_3 : hol.term A => hol.eq hol.bool (hol.eq A x_27_3 x_2) (hol.eq A x_27_3 y_1))) => thm_1903 A y_1 x_2 hyp_1 x_2.

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_1915 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_27_3 : hol.term A => hol.eq hol.bool (hol.eq A x_27_3 x_2) (hol.eq A x_27_3 y_1))) -> hol.proof (hol.eq A x_2 y_1) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_27_3 : hol.term A => hol.eq hol.bool (hol.eq A x_27_3 x_2) (hol.eq A x_27_3 y_1))) => thm_1913 A y_1 x_2 (thm_1914 A y_1 x_2 hyp_1).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_1916 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_27_3 : hol.term A => hol.eq hol.bool (hol.eq A x_27_3 x_2) (hol.eq A x_27_3 y_1))) -> hol.proof (hol.eq A x_2 y_1) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_27_3 : hol.term A => hol.eq hol.bool (hol.eq A x_27_3 x_2) (hol.eq A x_27_3 y_1))) => hol.PROVE_HYP (hol.forall A (x_27_3 : hol.term A => hol.eq hol.bool (hol.eq A x_27_3 x_2) (hol.eq A x_27_3 y_1))) (hol.eq A x_2 y_1) (thm_1903 A y_1 x_2 hyp_1) (hyp_2 : hol.proof (hol.forall A (x_27_3 : hol.term A => hol.eq hol.bool (hol.eq A x_27_3 x_2) (hol.eq A x_27_3 y_1))) => thm_1915 A y_1 x_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x'. ((= ((= x') x)) ((= x') y)))) ((= x) y)) ;)

(; dict ;)

def thm_1917 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.imp (hol.forall A (x_27_3 : hol.term A => hol.eq hol.bool (hol.eq A x_27_3 x_2) (hol.eq A x_27_3 y_1))) (hol.eq A x_2 y_1)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_27_3 : hol.term A => hol.eq hol.bool (hol.eq A x_27_3 x_2) (hol.eq A x_27_3 y_1))) => thm_1916 A y_1 x_2 hyp_1.

(; Theorem: |- ((Data.Bool./\ ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((= x') x)) ((Set.member x') u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y)))))))) ((Data.Bool.==> (Data.Bool.! \lambda x'. ((= ((= x') x)) ((= x') y)))) ((= x) y))) ;)

(; dict ;)

def thm_1918 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.eq B (f_1 x_4) (f_1 y_2)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) -> hol.proof (hol.and (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (hol.eq A x_27_6 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (hol.eq A x_6 y_2))))))) (hol.imp (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (hol.eq A x_27_5 x_4) (hol.eq A x_27_5 y_2))) (hol.eq A x_4 y_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.eq B (f_1 x_4) (f_1 y_2)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) => hol.EQ_MP (hol.imp (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (hol.eq A x_27_5 x_4) (hol.eq A x_27_5 y_2))) (hol.eq A x_4 y_2)) (hol.and (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (hol.eq A x_27_6 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (hol.eq A x_6 y_2))))))) (hol.imp (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (hol.eq A x_27_5 x_4) (hol.eq A x_27_5 y_2))) (hol.eq A x_4 y_2))) (thm_1902 B A f_1 u_3 y_2 x_4 hyp_1 hyp_2 hyp_3) (thm_1917 A y_2 x_4).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((= x') x)) ((Set.member x') u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((= x') x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((= x) y)))))))) (Data.Bool.! \lambda x'. ((= ((= x') x)) ((= x') y))))) ((= x) y)) ;)

(; dict ;)

def thm_1919 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.eq B (f_1 x_4) (f_1 y_2)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) -> hol.proof (hol.imp (hol.imp (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (hol.eq A x_27_6 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (hol.eq A x_6 y_2))))))) (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (hol.eq A x_27_5 x_4) (hol.eq A x_27_5 y_2)))) (hol.eq A x_4 y_2)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.eq B (f_1 x_4) (f_1 y_2)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) => thm_1804 B A f_1 y_2 u_3 x_4 (thm_1918 B A f_1 y_2 u_3 x_4 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x'. ((Data.Bool.==> ((Set.member x') ((Set.insert x) Set.{}))) ((Set.member x') u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert y) Set.{}))) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x'. ((Data.Bool./\ ((= x) (f x'))) ((Set.member x') ((Set.insert x) Set.{}))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) ((Set.insert y) Set.{}))))))))) (Data.Bool.! \lambda x'. ((= ((Set.member x') ((Set.insert x) Set.{}))) ((Set.member x') ((Set.insert y) Set.{})))))) ((= x) y)) ;)

(; dict ;)

def thm_1920 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.eq B (f_1 x_4) (f_1 y_2)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) -> hol.proof (hol.imp (hol.imp (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))))))))) (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A))))))) (hol.eq A x_4 y_2)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.eq B (f_1 x_4) (f_1 y_2)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) => hol.EQ_MP (hol.imp (hol.imp (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (hol.eq A x_27_5 x_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.eq A x_5 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (hol.eq A x_27_6 x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (hol.eq A x_6 y_2))))))) (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (hol.eq A x_27_5 x_4) (hol.eq A x_27_5 y_2)))) (hol.eq A x_4 y_2)) (hol.imp (hol.imp (hol.and (hol.forall A (x_27_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 u_3))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_27_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_27_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))))))))) (hol.forall A (x_27_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_27_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A))))))) (hol.eq A x_4 y_2)) (thm_1803 B A f_1 y_2 u_3 x_4) (thm_1919 B A f_1 y_2 u_3 x_4 hyp_1 hyp_2 hyp_3).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x_1. ((Data.Bool.==> ((Set.member x_1) ((Set.insert x) Set.{}))) ((Set.member x_1) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x_1. ((Data.Bool.==> ((Set.member x_1) t)) ((Set.member x_1) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= x) (f x_1))) ((Set.member x_1) ((Set.insert x) Set.{}))))) (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= x) (f x_1))) ((Set.member x_1) t)))))))) (Data.Bool.! \lambda x_1. ((= ((Set.member x_1) ((Set.insert x) Set.{}))) ((Set.member x_1) t))))) ;)

(; dict ;)

def thm_1921 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_5 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_5))))))) (hol.forall A (x_6 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_5)))))) -> hol.proof (hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x__1_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 u_2))) (hol.and (hol.forall A (x__1_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x__1_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 (Set_2E_7B_7D (Set_2Eset A)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x__1_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 t_4))))))) (hol.forall A (x__1_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 t_4))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_5 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_5))))))) (hol.forall A (x_6 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_5)))))) => thm_1747 B A f_1 u_2 hyp_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_3 (Set_2E_7B_7D (Set_2Eset A))).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x_1. ((Data.Bool.==> ((Set.member x_1) ((Set.insert x) Set.{}))) ((Set.member x_1) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x_1. ((Data.Bool.==> ((Set.member x_1) ((Set.insert y) Set.{}))) ((Set.member x_1) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= x) (f x_1))) ((Set.member x_1) ((Set.insert x) Set.{}))))) (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= x) (f x_1))) ((Set.member x_1) ((Set.insert y) Set.{}))))))))) (Data.Bool.! \lambda x_1. ((= ((Set.member x_1) ((Set.insert x) Set.{}))) ((Set.member x_1) ((Set.insert y) Set.{}))))) ;)

(; dict ;)

def thm_1922 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3))) (hol.forall B (x_7 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 t_6))))))) (hol.forall A (x_7 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6)))))) -> hol.proof (hol.imp (hol.and (hol.forall A (x__1_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 u_3))) (hol.and (hol.forall A (x__1_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x__1_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x__1_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))))))))) (hol.forall A (x__1_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_4 (Set_2E_7B_7D (Set_2Eset A)))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x__1_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3))) (hol.forall B (x_7 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 t_6))))))) (hol.forall A (x_7 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6)))))) => thm_1921 B A f_1 u_3 x_4 hyp_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A))).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_1923 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> y_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.forall B (x_7 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 t_6))))))) (hol.forall A (x_7 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6)))))) -> hyp_2 : hol.proof (hol.eq B (f_1 x_4) (f_1 y_3)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 u_2) -> hol.proof (hol.eq A x_4 y_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => y_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.forall B (x_7 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 t_6))))))) (hol.forall A (x_7 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6)))))) => hyp_2 : hol.proof (hol.eq B (f_1 x_4) (f_1 y_3)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 u_2) => thm_1920 B A f_1 y_3 u_2 x_4 hyp_2 hyp_3 hyp_4 (thm_1922 B A f_1 y_3 u_2 x_4 hyp_1).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_1924 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> y_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.forall B (x_7 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 t_6))))))) (hol.forall A (x_7 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6)))))) -> hyp_2 : hol.proof (hol.eq B (f_1 x_4) (f_1 y_3)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 u_2) -> hol.proof (hol.eq A x_4 y_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => y_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.forall B (x_7 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 t_6))))))) (hol.forall A (x_7 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6)))))) => hyp_2 : hol.proof (hol.eq B (f_1 x_4) (f_1 y_3)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 u_2) => hol.PROVE_HYP (hol.eq B (f_1 x_4) (f_1 y_3)) (hol.eq A x_4 y_3) (thm_973 A B y_3 x_4 f_1 hyp_2) (hyp_5 : hol.proof (hol.eq B (f_1 x_4) (f_1 y_3)) => thm_1923 B A f_1 u_2 y_3 x_4 hyp_1 hyp_5 hyp_3 hyp_4).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_1925 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> y_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.forall B (x_7 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 t_6))))))) (hol.forall A (x_7 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6)))))) -> hyp_2 : hol.proof (hol.eq B (f_1 x_4) (f_1 y_3)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 u_2) -> hol.proof (hol.eq A x_4 y_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => y_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.forall B (x_7 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 t_6))))))) (hol.forall A (x_7 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6)))))) => hyp_2 : hol.proof (hol.eq B (f_1 x_4) (f_1 y_3)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 u_2) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 u_2) (hol.eq A x_4 y_3) (thm_1762 A u_2 y_3 hyp_4) (hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 u_2) => thm_1924 B A f_1 u_2 y_3 x_4 hyp_1 hyp_2 hyp_3 hyp_5).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_1926 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> y_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.forall B (x_7 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 t_6))))))) (hol.forall A (x_7 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6)))))) -> hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 u_2) (hol.eq B (f_1 x_4) (f_1 y_3))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 u_2) -> hol.proof (hol.eq A x_4 y_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => y_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.forall B (x_7 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 t_6))))))) (hol.forall A (x_7 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6)))))) => hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 u_2) (hol.eq B (f_1 x_4) (f_1 y_3))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 u_2) => hol.PROVE_HYP (hol.eq B (f_1 x_4) (f_1 y_3)) (hol.eq A x_4 y_3) (thm_1761 A B u_2 y_3 x_4 f_1 hyp_2) (hyp_5 : hol.proof (hol.eq B (f_1 x_4) (f_1 y_3)) => thm_1925 B A f_1 u_2 y_3 x_4 hyp_1 hyp_5 hyp_3 hyp_4).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_1927 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> y_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.forall B (x_7 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 t_6))))))) (hol.forall A (x_7 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6)))))) -> hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 u_2) (hol.eq B (f_1 x_4) (f_1 y_3))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) -> hol.proof (hol.eq A x_4 y_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => y_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.forall B (x_7 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 t_6))))))) (hol.forall A (x_7 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6)))))) => hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 u_2) (hol.eq B (f_1 x_4) (f_1 y_3))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 u_2) (hol.eq A x_4 y_3) (thm_1759 B A x_4 f_1 u_2 y_3 hyp_2) (hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 u_2) => thm_1926 B A f_1 u_2 y_3 x_4 hyp_1 hyp_2 hyp_3 hyp_4).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_1928 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> y_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.forall B (x_7 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 t_6))))))) (hol.forall A (x_7 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6)))))) -> hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 u_2) (hol.eq B (f_1 x_4) (f_1 y_3))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) -> hol.proof (hol.eq A x_4 y_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => y_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.forall B (x_7 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 t_6))))))) (hol.forall A (x_7 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6)))))) => hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 u_2) (hol.eq B (f_1 x_4) (f_1 y_3))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) (hol.eq A x_4 y_3) (thm_1756 A u_2 x_4 hyp_3) (hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) => thm_1927 B A f_1 u_2 y_3 x_4 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_1929 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> y_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.forall B (x_7 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 t_6))))))) (hol.forall A (x_7 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6)))))) -> hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 u_2) (hol.eq B (f_1 x_4) (f_1 y_3)))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) -> hol.proof (hol.eq A x_4 y_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => y_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.forall B (x_7 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 t_6))))))) (hol.forall A (x_7 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6)))))) => hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 u_2) (hol.eq B (f_1 x_4) (f_1 y_3)))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 u_2) (hol.eq B (f_1 x_4) (f_1 y_3))) (hol.eq A x_4 y_3) (thm_1755 B A x_4 f_1 u_2 y_3 hyp_2) (hyp_4 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 u_2) (hol.eq B (f_1 x_4) (f_1 y_3))) => thm_1928 B A f_1 u_2 y_3 x_4 hyp_1 hyp_4 hyp_3).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_1930 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> y_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.forall B (x_7 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 t_6))))))) (hol.forall A (x_7 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6)))))) -> hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 u_2) (hol.eq B (f_1 x_4) (f_1 y_3)))) -> hol.proof (hol.eq A x_4 y_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => y_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.forall B (x_7 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 t_6))))))) (hol.forall A (x_7 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6)))))) => hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 u_2) (hol.eq B (f_1 x_4) (f_1 y_3)))) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) (hol.eq A x_4 y_3) (thm_1753 B A f_1 y_3 u_2 x_4 hyp_2) (hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) => thm_1929 B A f_1 u_2 y_3 x_4 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y)) ;)

(; dict ;)

def thm_1931 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3))) (hol.forall B (x_7 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 t_6))))))) (hol.forall A (x_7 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6)))))) -> hol.proof (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) (hol.eq A x_4 y_2)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_5 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_6 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3))) (hol.forall B (x_7 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 t_6))))))) (hol.forall A (x_7 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_6)))))) => hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 u_3) (hol.eq B (f_1 x_4) (f_1 y_2)))) => thm_1930 B A f_1 u_3 y_2 x_4 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y))) ;)

(; dict ;)

def thm_1932 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_5 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_5))))))) (hol.forall A (x_6 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_5)))))) -> hol.proof (hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_5 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 t_5))))))) (hol.forall A (x_6 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_5)))))) => y_4 : hol.term A => thm_1931 B A f_1 y_4 u_2 x_3 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y)))) ;)

(; dict ;)

def thm_1933 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))) => x_3 : hol.term A => hol.EQ_MP (hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))) (hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))) (thm_1750 B A f_1 u_2 x_3) (thm_1932 B A f_1 u_2 x_3 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y)))) ;)

(; dict ;)

def thm_1934 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))) => hol.PROVE_HYP (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (thm_1747 B A f_1 u_2 hyp_1) (hyp_2 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))) => hol.EQ_MP (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (thm_1253 B A f_1 u_2) (thm_1933 B A f_1 u_2 hyp_2)).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))))) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y))))) ;)

(; dict ;)

def thm_1935 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))) => thm_1934 B A f_1 u_2 hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) t)))))))) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y))))) ;)

(; dict ;)

def thm_1936 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => hol.PROP_EXT (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) (hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))) => thm_1746 B A f_1 u_2 (thm_1256 B A f_1 u_2 hyp_1)) (hyp_1 : hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))) => thm_1935 B A f_1 u_2 (thm_1747 B A f_1 u_2 hyp_1)).

(; Theorem: |- ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) u)) ((Data.Bool./\ ((Set.subset t) u)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y))))) ;)

(; dict ;)

def thm_1937 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_1 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 t_4))))))) (hol.forall A (x_5 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 t_4)))))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))) (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))) (thm_1255 B A f_1 u_2) (thm_1936 B A f_1 u_2).

(; Theorem: |- (Data.Bool.! \lambda u. ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) u)) ((Data.Bool./\ ((Set.subset t) u)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y)))))) ;)

(; dict ;)

def thm_1938 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => thm_1937 B A f_1 u_2.

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda u. ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) u)) ((Data.Bool./\ ((Set.subset t) u)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y))))))) ;)

(; dict ;)

def thm_1939 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.EQ_MP (hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))))) (hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4)))))) (thm_1233 B A f_1) (thm_1938 B A f_1).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda u. ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) u)) ((Data.Bool./\ ((Set.subset t) u)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Data.Bool./\ ((Set.member y) u)) ((= (f x)) (f y))))) ((= x) y))))))) ;)

(; thm ;)

def thm_1940 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))))) :=
  B : hol.type => A : hol.type => hol.EQ_MP (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_4 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 u_2) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_4 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_4)))) (hol.eq (Set_2Eset A) s_3 t_4)))) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_4 u_2) (hol.eq B (f_1 x_3) (f_1 y_4)))) (hol.eq A x_3 y_4))))))) (thm_1230 B A) (thm_1939 B A).

(; Theorem: |- ((= \lambda f. ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((= ((Set.image f) s)) ((Set.image f) t))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y)))))) \lambda f. ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((= ((Set.image f) s)) ((Set.image f) t))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y)))))) ;)

(; dict ;)

def thm_1941 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))))) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))))).

(; Theorem: |- ((= \lambda f. ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((= ((Set.image f) s)) ((Set.image f) t))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y)))))) \lambda f. ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((= ((Set.image f) s)) ((Set.image f) t))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y)))))) ;)

(; dict ;)

def thm_1942 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))))) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))))) :=
  B : hol.type => A : hol.type => hol.TRANS (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))))) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))))) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))))) (thm_1941 B A) (thm_1941 B A).

(; Theorem: |- ((= (Data.Bool.! \lambda f. ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((= ((Set.image f) s)) ((Set.image f) t))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))))) (Data.Bool.! \lambda f. ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((= ((Set.image f) s)) ((Set.image f) t))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))))) ;)

(; dict ;)

def thm_1943 : B : hol.type -> A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))))))) :=
  B : hol.type => A : hol.type => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B)) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))))) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))))) (thm_38 B A) (thm_1942 B A).

(; Theorem: |- ((= ((= ((Set.subset s) Set.universe)) Data.Bool.T)) ((= ((Set.subset s) Set.universe)) Data.Bool.T)) ;)

(; dict ;)

def thm_1944 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 (Set_2Euniverse (Set_2Eset A))) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 (Set_2Euniverse (Set_2Eset A))) hol.true).

(; Theorem: |- ((= ((= ((Set.subset s) Set.universe)) Data.Bool.T)) ((= ((Set.subset s) Set.universe)) Data.Bool.T)) ;)

(; dict ;)

def thm_1945 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 (Set_2Euniverse (Set_2Eset A))) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (thm_1944 A s_1) (thm_1944 A s_1).

(; Theorem: |- ((= ((Set.subset s) Set.universe)) ((= ((Set.subset s) Set.universe)) Data.Bool.T)) ;)

(; dict ;)

def thm_1946 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 (Set_2Euniverse (Set_2Eset A))) (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 (Set_2Euniverse (Set_2Eset A))) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => (t_1 : hol.term hol.bool => thm_310 t_1) (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 (Set_2Euniverse (Set_2Eset A))).

(; Theorem: |- ((Set.subset s) Set.universe) ;)

(; dict ;)

def thm_1947 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 (Set_2Euniverse (Set_2Eset A))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => thm_36 A s_1.

(; Theorem: |- ((= ((Set.subset s) Set.universe)) Data.Bool.T) ;)

(; dict ;)

def thm_1948 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 (Set_2Euniverse (Set_2Eset A))) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.EQ_MP (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 (Set_2Euniverse (Set_2Eset A))) (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (thm_1946 A s_1) (thm_1947 A s_1).

(; Theorem: |- ((= (Data.Bool./\ ((Set.subset s) Set.universe))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_1949 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 (Set_2Euniverse (Set_2Eset A)))) (hol.and hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 (Set_2Euniverse (Set_2Eset A))) hol.true thm_298 ((A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (thm_1945 A s_1) (thm_1948 A s_1)) A s_1).

(; Theorem: |- ((= ((Set.subset t) Set.universe)) Data.Bool.T) ;)

(; dict ;)

def thm_1950 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_1 (Set_2Euniverse (Set_2Eset A))) hol.true) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => (A : hol.type => s_1 : hol.term (Set_2Eset A) => thm_1948 A s_1) A t_1.

(; Theorem: |- ((= (Data.Bool./\ ((Set.subset t) Set.universe))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_1951 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_1 (Set_2Euniverse (Set_2Eset A)))) (hol.and hol.true)) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_1 (Set_2Euniverse (Set_2Eset A))) hol.true thm_298 (thm_1950 A t_1).

(; Theorem: |- ((= ((= ((Set.image f) s)) ((Set.image f) t))) ((= ((Set.image f) s)) ((Set.image f) t))) ;)

(; dict ;)

def thm_1952 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 t_1)) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 t_1))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 t_1)).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.subset t) Set.universe)) ((= ((Set.image f) s)) ((Set.image f) t)))) ((Data.Bool./\ Data.Bool.T) ((= ((Set.image f) s)) ((Set.image f) t)))) ;)

(; dict ;)

def thm_1953 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> t_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_3))) (hol.and hol.true (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_3)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => t_3 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2Euniverse (Set_2Eset A)))) (hol.and hol.true) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_3)) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_3)) (thm_1951 A t_3) (thm_1952 A B t_3 s_1 f_2).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) ((= ((Set.image f) s)) ((Set.image f) t)))) ((= ((Set.image f) s)) ((Set.image f) t))) ;)

(; dict ;)

def thm_1954 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and hol.true (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 t_1))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 t_1))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => (t_1 : hol.term hol.bool => thm_124 t_1) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 t_1)).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.subset t) Set.universe)) ((= ((Set.image f) s)) ((Set.image f) t)))) ((= ((Set.image f) s)) ((Set.image f) t))) ;)

(; dict ;)

def thm_1955 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> t_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_3))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_3))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => t_3 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_3))) (hol.and hol.true (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_3))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 t_3)) (thm_1953 B A s_1 f_2 t_3) (thm_1954 A B t_3 s_1 f_2).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.subset s) Set.universe)) ((Data.Bool./\ ((Set.subset t) Set.universe)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((Data.Bool./\ Data.Bool.T) ((= ((Set.image f) s)) ((Set.image f) t)))) ;)

(; dict ;)

def thm_1956 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> t_2 : hol.term (Set_2Eset A) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_2)))) (hol.and hol.true (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_2)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => t_2 : hol.term (Set_2Eset A) => s_3 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A)))) (hol.and hol.true) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_2))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_2)) (thm_1949 A s_3) (thm_1955 B A s_3 f_1 t_2).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.subset s) Set.universe)) ((Data.Bool./\ ((Set.subset t) Set.universe)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= ((Set.image f) s)) ((Set.image f) t))) ;)

(; dict ;)

def thm_1957 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> t_2 : hol.term (Set_2Eset A) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_2)))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => t_2 : hol.term (Set_2Eset A) => s_3 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_2)))) (hol.and hol.true (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_2))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_2)) (thm_1956 B A f_1 t_2 s_3) (thm_1954 A B t_2 s_3 f_1).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ ((Set.subset s) Set.universe)) ((Data.Bool./\ ((Set.subset t) Set.universe)) ((= ((Set.image f) s)) ((Set.image f) t)))))) (Data.Bool.==> ((= ((Set.image f) s)) ((Set.image f) t)))) ;)

(; dict ;)

def thm_1958 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> t_2 : hol.term (Set_2Eset A) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_2))))) (hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_2)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => t_2 : hol.term (Set_2Eset A) => s_3 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_2)))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_2)) thm_107 (thm_1957 B A f_1 t_2 s_3).

(; Theorem: |- ((= ((= s) t)) ((= s) t)) ;)

(; dict ;)

def thm_1959 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset A) s_2 t_1) (hol.eq (Set_2Eset A) s_2 t_1)) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.eq (Set_2Eset A) s_2 t_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) Set.universe)) ((Data.Bool./\ ((Set.subset t) Set.universe)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))) ((Data.Bool.==> ((= ((Set.image f) s)) ((Set.image f) t))) ((= s) t))) ;)

(; dict ;)

def thm_1960 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> t_2 : hol.term (Set_2Eset A) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_2)))) (hol.eq (Set_2Eset A) s_3 t_2)) (hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_2)) (hol.eq (Set_2Eset A) s_3 t_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => t_2 : hol.term (Set_2Eset A) => s_3 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_2))))) (hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_2))) (hol.eq (Set_2Eset A) s_3 t_2) (hol.eq (Set_2Eset A) s_3 t_2) (thm_1958 B A f_1 t_2 s_3) (thm_1959 A t_2 s_3).

(; Theorem: |- ((= \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) Set.universe)) ((Data.Bool./\ ((Set.subset t) Set.universe)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))) \lambda t. ((Data.Bool.==> ((= ((Set.image f) s)) ((Set.image f) t))) ((= s) t))) ;)

(; dict ;)

def thm_1961 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)))) (hol.eq (Set_2Eset A) s_2 t_3)) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.ABS_THM (Set_2Eset A) hol.bool (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)))) (hol.eq (Set_2Eset A) s_2 t_3)) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)) (t_3 : hol.term (Set_2Eset A) => thm_1960 B A f_1 t_3 s_2).

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) Set.universe)) ((Data.Bool./\ ((Set.subset t) Set.universe)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t)))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((= ((Set.image f) s)) ((Set.image f) t))) ((= s) t)))) ;)

(; dict ;)

def thm_1962 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)))) (hol.eq (Set_2Eset A) s_2 t_3))) (hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => s_2 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)))) (hol.eq (Set_2Eset A) s_2 t_3)) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)) (thm_46 A) (thm_1961 B A f_1 s_2).

(; Theorem: |- ((= \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) Set.universe)) ((Data.Bool./\ ((Set.subset t) Set.universe)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t)))) \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((= ((Set.image f) s)) ((Set.image f) t))) ((= s) t)))) ;)

(; dict ;)

def thm_1963 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)))) (hol.eq (Set_2Eset A) s_2 t_3))) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.ABS_THM (Set_2Eset A) hol.bool (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)))) (hol.eq (Set_2Eset A) s_2 t_3))) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3))) (s_2 : hol.term (Set_2Eset A) => thm_1962 B A f_1 s_2).

(; Theorem: |- ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) Set.universe)) ((Data.Bool./\ ((Set.subset t) Set.universe)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))))) (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((= ((Set.image f) s)) ((Set.image f) t))) ((= s) t))))) ;)

(; dict ;)

def thm_1964 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)))) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)))) (hol.eq (Set_2Eset A) s_2 t_3))) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3))) (thm_46 A) (thm_1963 B A f_1).

(; Theorem: |- ((= (= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) Set.universe)) ((Data.Bool./\ ((Set.subset t) Set.universe)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t)))))) (= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((= ((Set.image f) s)) ((Set.image f) t))) ((= s) t)))))) ;)

(; dict ;)

def thm_1965 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)))) (hol.eq (Set_2Eset A) s_2 t_3))))) (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)))) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) thm_64 (thm_1964 B A f_1).

(; Theorem: |- ((= ((= ((Set.member x) Set.universe)) Data.Bool.T)) ((= ((Set.member x) Set.universe)) Data.Bool.T)) ;)

(; dict ;)

def thm_1966 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true).

(; Theorem: |- ((= ((= ((Set.member x) Set.universe)) Data.Bool.T)) ((= ((Set.member x) Set.universe)) Data.Bool.T)) ;)

(; dict ;)

def thm_1967 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (thm_1966 A x_1) (thm_1966 A x_1).

(; Theorem: |- ((= ((Set.member x) Set.universe)) ((= ((Set.member x) Set.universe)) Data.Bool.T)) ;)

(; dict ;)

def thm_1968 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true)) :=
  A : hol.type => x_1 : hol.term A => (t_1 : hol.term hol.bool => thm_310 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))).

(; Theorem: |- ((Set.member x) Set.universe) ;)

(; dict ;)

def thm_1969 : A : hol.type -> x_1 : hol.term A -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) :=
  A : hol.type => x_1 : hol.term A => thm_37 A x_1.

(; Theorem: |- ((= ((Set.member x) Set.universe)) Data.Bool.T) ;)

(; dict ;)

def thm_1970 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true) :=
  A : hol.type => x_1 : hol.term A => hol.EQ_MP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (thm_1968 A x_1) (thm_1969 A x_1).

(; Theorem: |- ((= (Data.Bool./\ ((Set.member x) Set.universe))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_1971 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A)))) (hol.and hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true thm_298 ((A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset A))) hol.true) (thm_1967 A x_1) (thm_1970 A x_1)) A x_1).

(; Theorem: |- ((= ((Set.member y) Set.universe)) Data.Bool.T) ;)

(; dict ;)

def thm_1972 : A : hol.type -> y_1 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 (Set_2Euniverse (Set_2Eset A))) hol.true) :=
  A : hol.type => y_1 : hol.term A => (A : hol.type => x_1 : hol.term A => thm_1970 A x_1) A y_1.

(; Theorem: |- ((= (Data.Bool./\ ((Set.member y) Set.universe))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_1973 : A : hol.type -> y_1 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 (Set_2Euniverse (Set_2Eset A)))) (hol.and hol.true)) :=
  A : hol.type => y_1 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_1 (Set_2Euniverse (Set_2Eset A))) hol.true thm_298 (thm_1972 A y_1).

(; Theorem: |- ((= ((= (f x)) (f y))) ((= (f x)) (f y))) ;)

(; dict ;)

def thm_1974 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B (f_3 x_2) (f_3 y_1)) (hol.eq B (f_3 x_2) (f_3 y_1))) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.eq B (f_3 x_2) (f_3 y_1)).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y)))) ((Data.Bool./\ Data.Bool.T) ((= (f x)) (f y)))) ;)

(; dict ;)

def thm_1975 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_2 x_1) (f_2 y_3))) (hol.and hol.true (hol.eq B (f_2 x_1) (f_2 y_3)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => y_3 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A)))) (hol.and hol.true) (hol.eq B (f_2 x_1) (f_2 y_3)) (hol.eq B (f_2 x_1) (f_2 y_3)) (thm_1973 A y_3) (thm_1974 A B y_3 x_1 f_2).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) ((= (f x)) (f y)))) ((= (f x)) (f y))) ;)

(; dict ;)

def thm_1976 : A : hol.type -> B : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and hol.true (hol.eq B (f_3 x_2) (f_3 y_1))) (hol.eq B (f_3 x_2) (f_3 y_1))) :=
  A : hol.type => B : hol.type => y_1 : hol.term A => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => (t_1 : hol.term hol.bool => thm_124 t_1) (hol.eq B (f_3 x_2) (f_3 y_1)).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y)))) ((= (f x)) (f y))) ;)

(; dict ;)

def thm_1977 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_2 x_1) (f_2 y_3))) (hol.eq B (f_2 x_1) (f_2 y_3))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => y_3 : hol.term A => hol.TRANS hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_2 x_1) (f_2 y_3))) (hol.and hol.true (hol.eq B (f_2 x_1) (f_2 y_3))) (hol.eq B (f_2 x_1) (f_2 y_3)) (thm_1975 B A x_1 f_2 y_3) (thm_1976 A B y_3 x_1 f_2).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((Data.Bool./\ Data.Bool.T) ((= (f x)) (f y)))) ;)

(; dict ;)

def thm_1978 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) (f_1 y_2)))) (hol.and hol.true (hol.eq B (f_1 x_3) (f_1 y_2)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => x_3 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A)))) (hol.and hol.true) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) (f_1 y_2))) (hol.eq B (f_1 x_3) (f_1 y_2)) (thm_1971 A x_3) (thm_1977 B A x_3 f_1 y_2).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= (f x)) (f y))) ;)

(; dict ;)

def thm_1979 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) (f_1 y_2)))) (hol.eq B (f_1 x_3) (f_1 y_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => x_3 : hol.term A => hol.TRANS hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) (f_1 y_2)))) (hol.and hol.true (hol.eq B (f_1 x_3) (f_1 y_2))) (hol.eq B (f_1 x_3) (f_1 y_2)) (thm_1978 B A f_1 y_2 x_3) (thm_1976 A B y_2 x_3 f_1).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y)))))) (Data.Bool.==> ((= (f x)) (f y)))) ;)

(; dict ;)

def thm_1980 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) (f_1 y_2))))) (hol.imp (hol.eq B (f_1 x_3) (f_1 y_2)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => x_3 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) (f_1 y_2)))) (hol.eq B (f_1 x_3) (f_1 y_2)) thm_107 (thm_1979 B A f_1 y_2 x_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y))) ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))) ;)

(; dict ;)

def thm_1981 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) (f_1 y_2)))) (hol.eq A x_3 y_2)) (hol.imp (hol.eq B (f_1 x_3) (f_1 y_2)) (hol.eq A x_3 y_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term A => x_3 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) (f_1 y_2))))) (hol.imp (hol.eq B (f_1 x_3) (f_1 y_2))) (hol.eq A x_3 y_2) (hol.eq A x_3 y_2) (thm_1980 B A f_1 y_2 x_3) (thm_1801 A y_2 x_3).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y))) \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))) ;)

(; dict ;)

def thm_1982 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_2 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)) (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_2 : hol.term A => hol.ABS_THM A hol.bool (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)) (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)) (y_3 : hol.term A => thm_1981 B A f_1 y_3 x_2).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y)))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y)))) ;)

(; dict ;)

def thm_1983 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3))) (hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_2 : hol.term A => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)) (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)) (thm_301 A) (thm_1982 B A f_1 x_2).

(; Theorem: |- ((= \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y)))) \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y)))) ;)

(; dict ;)

def thm_1984 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3))) (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.ABS_THM A hol.bool (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3))) (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))) (x_2 : hol.term A => thm_1983 B A f_1 x_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) ;)

(; dict ;)

def thm_1985 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3))) (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))) (thm_301 A) (thm_1984 B A f_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) Set.universe)) ((Data.Bool./\ ((Set.subset t) Set.universe)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y)))))) ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((= ((Set.image f) s)) ((Set.image f) t))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y)))))) ;)

(; dict ;)

def thm_1986 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)))) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3))))) (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)))) (hol.eq (Set_2Eset A) s_2 t_3))))) (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3))))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))) (thm_1965 B A f_1) (thm_1985 B A f_1).

(; Theorem: |- ((= (Data.Bool.==> ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) Set.universe)) ((Data.Bool./\ ((Set.subset t) Set.universe)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y))))))) (Data.Bool.==> ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((= ((Set.image f) s)) ((Set.image f) t))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))))) ;)

(; dict ;)

def thm_1987 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)))) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))))) (hol.imp (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)))) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3))))) (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))))) thm_107 (thm_1986 B A f_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((= ((Set.image f) s)) ((Set.image f) t))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y)))))) ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((= ((Set.image f) s)) ((Set.image f) t))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y)))))) ;)

(; dict ;)

def thm_1988 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))))) (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))))).

(; Theorem: |- ((= ((Data.Bool.==> ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) Set.universe)) ((Data.Bool./\ ((Set.subset t) Set.universe)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y)))))) ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((= ((Set.image f) s)) ((Set.image f) t))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))))) ((Data.Bool.==> ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((= ((Set.image f) s)) ((Set.image f) t))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y)))))) ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((= ((Set.image f) s)) ((Set.image f) t))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))))) ;)

(; dict ;)

def thm_1989 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)))) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3))))) (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))))) (hol.imp (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))))) (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)))) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3)))))) (hol.imp (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))))) (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))))) (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))))) (thm_1987 B A f_1) (thm_1988 B A f_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((= ((Set.image f) s)) ((Set.image f) t))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y)))))) ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((= ((Set.image f) s)) ((Set.image f) t))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))))) Data.Bool.T) ;)

(; dict ;)

def thm_1990 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))))) (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))))) hol.true) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => (t_1 : hol.term hol.bool => thm_468 t_1) (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))))).

(; Theorem: |- ((= ((Data.Bool.==> ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) Set.universe)) ((Data.Bool./\ ((Set.subset t) Set.universe)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y)))))) ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((= ((Set.image f) s)) ((Set.image f) t))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))))) Data.Bool.T) ;)

(; dict ;)

def thm_1991 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)))) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3))))) (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))))) hol.true) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.imp (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)))) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3))))) (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))))) (hol.imp (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))))) (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))))) hol.true (thm_1989 B A f_1) (thm_1990 B A f_1).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) Set.universe)) ((Data.Bool./\ ((Set.subset t) Set.universe)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y)))))) ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((= ((Set.image f) s)) ((Set.image f) t))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))))) ;)

(; dict ;)

def thm_1992 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool hol.true (hol.imp (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)))) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3))))) (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.SYM hol.bool (hol.imp (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)))) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3))))) (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))))) hol.true (thm_1991 B A f_1).

(; Theorem: |- ((Data.Bool.==> ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) Set.universe)) ((Data.Bool./\ ((Set.subset t) Set.universe)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y)))))) ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((= ((Set.image f) s)) ((Set.image f) t))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y)))))) ;)

(; dict ;)

def thm_1993 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.imp (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)))) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3))))) (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.EQ_MP hol.true (hol.imp (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)))) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3))))) (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))))) (thm_1992 B A f_1) thm_15.

(; Theorem: |- ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) Set.universe)) ((Data.Bool./\ ((Set.subset t) Set.universe)) ((= ((Set.image f) s)) ((Set.image f) t))))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) Set.universe)) ((Data.Bool./\ ((Set.member y) Set.universe)) ((= (f x)) (f y))))) ((= x) y))))) ;)

(; dict ;)

def thm_1994 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) t_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)))) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Euniverse (Set_2Eset A))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) y_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_2) (f_1 y_3)))) (hol.eq A x_2 y_3))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => thm_1938 B A f_1 (Set_2Euniverse (Set_2Eset A)).

(; Theorem: |- ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((= ((Set.image f) s)) ((Set.image f) t))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) ;)

(; dict ;)

def thm_1995 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => thm_1993 B A f_1 (thm_1994 B A f_1).

(; Theorem: |- (Data.Bool.! \lambda f. ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((= ((Set.image f) s)) ((Set.image f) t))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y)))))) ;)

(; dict ;)

def thm_1996 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => thm_1995 B A f_1.

(; Theorem: |- (Data.Bool.! \lambda f. ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((= ((Set.image f) s)) ((Set.image f) t))) ((= s) t))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y)))))) ;)

(; thm ;)

def thm_1997 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))))) :=
  B : hol.type => A : hol.type => hol.EQ_MP (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_3 : hol.term (Set_2Eset A) => hol.imp (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_2) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 t_3)) (hol.eq (Set_2Eset A) s_2 t_3)))) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.eq B (f_1 x_2) (f_1 y_3)) (hol.eq A x_2 y_3)))))) (thm_1943 B A) (thm_1996 B A).

(; Theorem: |- ((= \lambda f. (Data.Bool.! \lambda u. (Data.Bool.! \lambda v. ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) v)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))))))) \lambda f. (Data.Bool.! \lambda u. (Data.Bool.! \lambda v. ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) v)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))))))) ;)

(; dict ;)

def thm_1998 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))))) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))))))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))))).

(; Theorem: |- ((= \lambda f. (Data.Bool.! \lambda u. (Data.Bool.! \lambda v. ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) v)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))))))) \lambda f. (Data.Bool.! \lambda u. (Data.Bool.! \lambda v. ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) v)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))))))) ;)

(; dict ;)

def thm_1999 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))))) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))))))) :=
  B : hol.type => A : hol.type => hol.TRANS (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))))) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))))) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))))) (thm_1998 B A) (thm_1998 B A).

(; Theorem: |- ((= (Data.Bool.! \lambda f. (Data.Bool.! \lambda u. (Data.Bool.! \lambda v. ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) v)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))))))))) (Data.Bool.! \lambda f. (Data.Bool.! \lambda u. (Data.Bool.! \lambda v. ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) v)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))))))))) ;)

(; dict ;)

def thm_2000 : B : hol.type -> A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))))))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))))))) :=
  B : hol.type => A : hol.type => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B)) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))))) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))))) (thm_38 B A) (thm_1999 B A).

(; Theorem: |- ((= \lambda u. (Data.Bool.! \lambda v. ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) v)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))))))) \lambda u. (Data.Bool.! \lambda v. ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) v)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))))))) ;)

(; dict ;)

def thm_2001 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))))) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.REFL (hol.arr (Set_2Eset A) hol.bool) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))))).

(; Theorem: |- ((= \lambda u. (Data.Bool.! \lambda v. ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) v)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))))))) \lambda u. (Data.Bool.! \lambda v. ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) v)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))))))) ;)

(; dict ;)

def thm_2002 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))))) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.TRANS (hol.arr (Set_2Eset A) hol.bool) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))))) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))))) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))))) (thm_2001 B A f_1) (thm_2001 B A f_1).

(; Theorem: |- ((= (Data.Bool.! \lambda u. (Data.Bool.! \lambda v. ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) v)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))))))) (Data.Bool.! \lambda u. (Data.Bool.! \lambda v. ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) v)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))))))) ;)

(; dict ;)

def thm_2003 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))))) (hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))))) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))))) (thm_46 A) (thm_2002 B A f_1).

(; Theorem: |- ((= \lambda v. ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) v)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))))) \lambda v. ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) v)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))))) ;)

(; dict ;)

def thm_2004 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (Set_2Eset B) hol.bool) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => hol.REFL (hol.arr (Set_2Eset B) hol.bool) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))).

(; Theorem: |- ((= \lambda v. ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) v)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))))) \lambda v. ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) v)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))))) ;)

(; dict ;)

def thm_2005 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (Set_2Eset B) hol.bool) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => hol.TRANS (hol.arr (Set_2Eset B) hol.bool) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))) (thm_2004 A B f_1 u_2) (thm_2004 A B f_1 u_2).

(; Theorem: |- ((= (Data.Bool.! \lambda v. ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) v)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))))))) (Data.Bool.! \lambda v. ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) v)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))))))) ;)

(; dict ;)

def thm_2006 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))))) (hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr (Set_2Eset B) hol.bool) hol.bool (hol.forall (Set_2Eset B)) (hol.forall (Set_2Eset B)) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))) (thm_401 B) (thm_2005 A B f_1 u_2).

(; Theorem: |- ((= ((Set.subset s) t)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) t)))) ;)

(; dict ;)

def thm_2007 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) s_2 t_1) (hol.forall B (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_1)))) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset B) => (A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => thm_516 A t_1 s_2) B t_1 s_2.

(; Theorem: |- ((= ((Set.subset t) v)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) v)))) ;)

(; dict ;)

def thm_2008 : B : hol.type -> v_1 : hol.term (Set_2Eset B) -> t_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 v_1) (hol.forall B (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1)))) :=
  B : hol.type => v_1 : hol.term (Set_2Eset B) => t_2 : hol.term (Set_2Eset B) => (B : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset B) => thm_2007 B t_1 s_2) B v_1 t_2.

(; Theorem: |- ((= (Data.Bool.==> ((Set.subset t) v))) (Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) v))))) ;)

(; dict ;)

def thm_2009 : B : hol.type -> v_1 : hol.term (Set_2Eset B) -> t_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 v_1)) (hol.imp (hol.forall B (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1))))) :=
  B : hol.type => v_1 : hol.term (Set_2Eset B) => t_2 : hol.term (Set_2Eset B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 v_1) (hol.forall B (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1))) thm_107 (thm_2008 B v_1 t_2).

(; Theorem: |- ((= Data.Bool.?) Data.Bool.?) ;)

(; dict ;)

def thm_2010 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool)).

(; Theorem: |- ((= ((= ((Set.image f) s)) t)) (Data.Bool.! \lambda x. ((= ((Set.member x) ((Set.image f) s))) ((Set.member x) t)))) ;)

(; dict ;)

def thm_2011 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) t_1) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => (B : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset B) => thm_61 B t_1 s_2) B t_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2).

(; Theorem: |- ((= ((Set.member x) t)) ((Set.member x) t)) ;)

(; dict ;)

def thm_2012 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> x_2 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => x_2 : hol.term B => hol.REFL hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1).

(; Theorem: |- ((= ((= ((Set.member x) ((Set.image f) s))) ((Set.member x) t))) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) t))) ;)

(; dict ;)

def thm_2013 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1) (thm_593 A B s_2 f_3 x_4) (thm_2012 B t_1 x_4).

(; Theorem: |- ((= \lambda x. ((= ((Set.member x) ((Set.image f) s))) ((Set.member x) t))) \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) t))) ;)

(; dict ;)

def thm_2014 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (x_4 : hol.term B => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.ABS_THM B hol.bool (x_4 : hol.term B => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)) (x_4 : hol.term B => thm_2013 A B t_1 s_2 f_3 x_4).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= ((Set.member x) ((Set.image f) s))) ((Set.member x) t)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) t)))) ;)

(; dict ;)

def thm_2015 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (x_4 : hol.term B => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)) (thm_63 B) (thm_2014 A B t_1 s_2 f_3).

(; Theorem: |- ((= ((= ((Set.image f) s)) t)) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) t)))) ;)

(; dict ;)

def thm_2016 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) t_1) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) t_1) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1))) (thm_2011 A B t_1 s_2 f_3) (thm_2015 A B t_1 s_2 f_3).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) t))))) ;)

(; dict ;)

def thm_2017 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_4 u_3) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_4) t_1)) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => s_4 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_4 u_3)) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3)))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_4) t_1) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1))) (thm_1235 A u_3 s_4) (thm_2016 A B t_1 s_4 f_2).

(; Theorem: |- ((= \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t))) \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) t))))) ;)

(; dict ;)

def thm_2018 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_4 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_4 u_3) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_4) t_1)) (s_4 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => hol.ABS_THM (Set_2Eset A) hol.bool (s_4 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_4 u_3) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_4) t_1)) (s_4 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1)))) (s_4 : hol.term (Set_2Eset A) => thm_2017 B A t_1 f_2 u_3 s_4).

(; Theorem: |- ((= (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) t)))))) ;)

(; dict ;)

def thm_2019 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_4 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_4 u_3) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_4) t_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_4 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1)))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool)) (s_4 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_4 u_3) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_4) t_1)) (s_4 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1)))) (thm_2010 A) (thm_2018 B A t_1 f_2 u_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.subset t) v)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t))))) ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) v)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) t))))))) ;)

(; dict ;)

def thm_2020 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> t_4 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4)))) (hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => t_4 : hol.term (Set_2Eset B) => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3)) (hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4))))) (thm_2009 B v_3 t_4) (thm_2019 B A t_4 f_1 u_2).

(; Theorem: |- ((= \lambda t. ((Data.Bool.==> ((Set.subset t) v)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t))))) \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) v)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) t))))))) ;)

(; dict ;)

def thm_2021 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (hol.arr (Set_2Eset B) hol.bool) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4)))) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => hol.ABS_THM (Set_2Eset B) hol.bool (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4)))) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4)))))) (t_4 : hol.term (Set_2Eset B) => thm_2020 A B f_1 u_2 v_3 t_4).

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) v)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) v)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) t)))))))) ;)

(; dict ;)

def thm_2022 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4)))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => hol.APP_THM (hol.arr (Set_2Eset B) hol.bool) hol.bool (hol.forall (Set_2Eset B)) (hol.forall (Set_2Eset B)) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4)))) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4)))))) (thm_401 B) (thm_2021 A B f_1 u_2 v_3).

(; Theorem: |- ((= (= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) v)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t))))))) (= (Data.Bool.! \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) v)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) t))))))))) ;)

(; dict ;)

def thm_2023 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4)))))) (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4))))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4))))))) thm_64 (thm_2022 A B f_1 u_2 v_3).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))))) ;)

(; dict ;)

def thm_2024 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => hol.REFL hol.bool (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) v)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))))) ((= (Data.Bool.! \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) v)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) t)))))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))))) ;)

(; dict ;)

def thm_2025 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))) (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4))))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4)))))) (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4)))))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))) (thm_2023 A B f_1 u_2 v_3) (thm_2024 A B f_1 u_2 v_3).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) v)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) t)))))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))))) ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) v)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))))) ;)

(; dict ;)

def thm_2026 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4))))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))) (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => hol.SYM hol.bool (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))) (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4))))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))) (thm_2025 A B f_1 u_2 v_3).

(; Theorem: |- ((= \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) v)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) t))))))) \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) v)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) t))))))) ;)

(; dict ;)

def thm_2027 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (hol.arr (Set_2Eset B) hol.bool) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4)))))) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => hol.REFL (hol.arr (Set_2Eset B) hol.bool) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4)))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) v)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) t))))))) \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) v)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) t))))))) ;)

(; dict ;)

def thm_2028 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (hol.arr (Set_2Eset B) hol.bool) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4)))))) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => hol.TRANS (hol.arr (Set_2Eset B) hol.bool) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4)))))) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4)))))) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4)))))) (thm_2027 A B f_1 u_2 v_3) (thm_2027 A B f_1 u_2 v_3).

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) v)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) t)))))))) (Data.Bool.! \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) v)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) t)))))))) ;)

(; dict ;)

def thm_2029 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4))))))) (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4)))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => hol.APP_THM (hol.arr (Set_2Eset B) hol.bool) hol.bool (hol.forall (Set_2Eset B)) (hol.forall (Set_2Eset B)) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4)))))) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4)))))) (thm_401 B) (thm_2028 A B f_1 u_2 v_3).

(; Theorem: |- ((= (\lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) t)))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))))) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))))))) ((Set.member x) t))))) ;)

(; dict ;)

def thm_2030 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((s_4 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1)))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)))))) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)))))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_2 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_6 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq A v_6 x_7) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_7) t_1)))))))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => hol.BETA_CONV (Set_2Eset A) hol.bool (s_4 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1)))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1))))).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))))) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))))))) ((Set.member x) t))))) (\lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) t)))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))))) ;)

(; dict ;)

def thm_2031 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)))))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_2 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_6 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq A v_6 x_7) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_7) t_1)))))))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)))) ((s_4 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1)))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1))))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => hol.SYM hol.bool ((s_4 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1)))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)))))) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)))))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_2 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_6 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq A v_6 x_7) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_7) t_1)))))))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)))) (thm_2030 B A t_1 f_2 u_3).

(; Theorem: |- ((= (\lambda x. ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))) ;)

(; dict ;)

def thm_2032 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_2)) x_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_1) t_2))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => hol.BETA_CONV A hol.bool (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_2)) x_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= v) x)) (\lambda x. ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)) x))) ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))) ;)

(; dict ;)

def thm_2033 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> v_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (hol.eq A v_5 x_4) ((x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)) x_4)) (hol.and (hol.eq A v_5 x_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => v_5 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq A v_5 x_4)) (hol.and (hol.eq A v_5 x_4)) ((x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)) x_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (thm_75 A x_4 v_5) (thm_2032 B A x_4 t_1 f_2 u_3).

(; Theorem: |- ((= \lambda x. ((Data.Bool./\ ((= v) x)) (\lambda x. ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)) x))) \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))) ;)

(; dict ;)

def thm_2034 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> v_4 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) ((x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)) x_5)) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => v_4 : hol.term A => hol.ABS_THM A hol.bool (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) ((x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)) x_5)) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1))) (x_5 : hol.term A => thm_2033 B A t_1 f_2 u_3 x_5 v_4).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (\lambda x. ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)) x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ;)

(; dict ;)

def thm_2035 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> v_4 : hol.term A -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) ((x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)) x_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => v_4 : hol.term A => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) ((x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)) x_5)) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1))) (thm_71 A) (thm_2034 B A t_1 f_2 u_3 v_4).

(; Theorem: |- ((= \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (\lambda x. ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)) x)))) \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ;)

(; dict ;)

def thm_2036 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) ((x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)) x_5))) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => hol.ABS_THM A hol.bool (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) ((x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)) x_5))) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)))) (v_4 : hol.term A => thm_2035 B A t_1 f_2 u_3 v_4).

(; Theorem: |- ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (\lambda x. ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)) x))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))))) ;)

(; dict ;)

def thm_2037 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (Set_2Eset A) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) ((x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)) x_5)))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr A hol.bool) (Set_2Eset A) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A))) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) ((x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)) x_5))) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)))) (thm_74 A) (thm_2036 B A t_1 f_2 u_3).

(; Theorem: |- ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (\lambda x. ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)) x)))))) ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))))) ;)

(; dict ;)

def thm_2038 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) ((x_7 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_7) t_1)) x_6))))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1))))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.APP_THM (Set_2Eset A) hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) ((x_7 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_7) t_1)) x_6)))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1))))) (thm_73 A x_4) (thm_2037 B A t_1 f_2 u_3).

(; Theorem: |- ((= (= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (\lambda x. ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)) x))))))) (= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))))))) ;)

(; dict ;)

def thm_2039 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) ((x_7 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_7) t_1)) x_6)))))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)))))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) ((x_7 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_7) t_1)) x_6))))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)))))) thm_64 (thm_2038 B A t_1 f_2 u_3 x_4).

(; Theorem: |- ((= ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (\lambda x. ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)) x)))))) (\lambda x. ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)) x))) ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))) ;)

(; dict ;)

def thm_2040 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) ((x_7 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_7) t_1)) x_6))))) ((x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)) x_4)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)))))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) ((x_7 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_7) t_1)) x_6)))))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1))))))) ((x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)) x_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (thm_2039 B A t_1 f_2 u_3 x_4) (thm_2032 B A x_4 t_1 f_2 u_3).

(; Theorem: |- ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x_1. ((Data.Bool./\ ((= v) x_1)) (\lambda x. ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)) x_1)))))) (\lambda x. ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)) x)) ;)

(; dict ;)

def thm_2041 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_6 : hol.term A => hol.and (hol.eq A v_5 x__1_6) ((x_7 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_7) t_1)) x__1_6))))) ((x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)) x_4)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => x_2 : hol.term A => thm_90 A p_1 x_2) A (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)) x_4.

(; Theorem: |- ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))) ;)

(; dict ;)

def thm_2042 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)))))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_6 : hol.term A => hol.and (hol.eq A v_5 x__1_6) ((x_7 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_7) t_1)) x__1_6))))) ((x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)) x_4)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)))))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1))) (thm_2040 B A t_1 f_2 u_3 x_4) (thm_2041 B A t_1 f_2 u_3 x_4).

(; Theorem: |- ((= (Data.Bool.==> ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))))))) (Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))) ;)

(; dict ;)

def thm_2043 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1))))))) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)))))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) thm_107 (thm_2042 B A t_1 f_2 u_3 x_4).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))))) ((Set.member x) u))) ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))) ((Set.member x) u))) ;)

(; dict ;)

def thm_2044 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)))))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3)) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1))))))) (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (thm_2043 B A t_1 f_2 u_3 x_4) (thm_1775 A u_3 x_4).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))))) ((Set.member x) u))) \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))) ((Set.member x) u))) ;)

(; dict ;)

def thm_2045 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)))))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3)) (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => hol.ABS_THM A hol.bool (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)))))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3)) (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3)) (x_4 : hol.term A => thm_2044 B A t_1 f_2 u_3 x_4).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))))) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))) ((Set.member x) u)))) ;)

(; dict ;)

def thm_2046 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)))))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)))))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3)) (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3)) (thm_301 A) (thm_2045 B A t_1 f_2 u_3).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))))) ((Set.member x) u))))) (Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))) ((Set.member x) u))))) ;)

(; dict ;)

def thm_2047 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)))))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)))))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3))) thm_298 (thm_2046 B A t_1 f_2 u_3).

(; Theorem: |- ((= ((Data.Bool./\ ((= x) (f x))) ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))))))) ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))) ;)

(; dict ;)

def thm_2048 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B x_5 (f_4 x_3)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_6 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq A v_6 x_7) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_7) t_1))))))) (hol.and (hol.eq B x_5 (f_4 x_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_3) t_1)))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq B x_5 (f_4 x_3))) (hol.and (hol.eq B x_5 (f_4 x_3))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_6 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq A v_6 x_7) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_7) t_1)))))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_3) t_1)) (thm_72 A B x_3 f_4 x_5) (thm_2042 B A t_1 f_4 u_2 x_3).

(; Theorem: |- ((= \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))))))) \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))) ;)

(; dict ;)

def thm_2049 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hol.proof (hol.eq (hol.arr A hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_6 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq A v_6 x_7) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_7) t_1))))))) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => hol.ABS_THM A hol.bool (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_6 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq A v_6 x_7) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_7) t_1))))))) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1))) (x_5 : hol.term A => thm_2048 A B t_1 u_2 x_5 f_3 x_4).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ;)

(; dict ;)

def thm_2050 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_6 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq A v_6 x_7) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_7) t_1)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_6 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq A v_6 x_7) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_7) t_1))))))) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1))) (thm_71 A) (thm_2049 B A t_1 u_2 f_3 x_4).

(; Theorem: |- ((= (= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))))))))) (= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))))) ;)

(; dict ;)

def thm_2051 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_6 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq A v_6 x_7) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_7) t_1))))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_6 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq A v_6 x_7) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_7) t_1)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) thm_64 (thm_2050 B A t_1 u_2 f_3 x_4).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))))))) ((Set.member x) t))) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ((Set.member x) t))) ;)

(; dict ;)

def thm_2052 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_6 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq A v_6 x_7) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_7) t_1)))))))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_6 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq A v_6 x_7) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_7) t_1))))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1))))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1) (thm_2051 B A t_1 u_2 f_3 x_4) (thm_2012 B t_1 x_4).

(; Theorem: |- ((= \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))))))) ((Set.member x) t))) \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ((Set.member x) t))) ;)

(; dict ;)

def thm_2053 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_6 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq A v_6 x_7) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_7) t_1)))))))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.ABS_THM B hol.bool (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_6 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq A v_6 x_7) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_7) t_1)))))))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)) (x_4 : hol.term B => thm_2052 B A t_1 u_2 f_3 x_4).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))))))) ((Set.member x) t)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ((Set.member x) t)))) ;)

(; dict ;)

def thm_2054 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_6 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq A v_6 x_7) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_7) t_1)))))))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_6 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq A v_6 x_7) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_7) t_1)))))))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)) (thm_63 B) (thm_2053 A B t_1 u_2 f_3).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))))) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))))))) ((Set.member x) t))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ((Set.member x) t))))) ;)

(; dict ;)

def thm_2055 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)))))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_2 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_6 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq A v_6 x_7) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_7) t_1)))))))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_2 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)))))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3)))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_2 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_6 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq A v_6 x_7) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_7) t_1)))))))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_2 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1))) (thm_2047 B A t_1 f_2 u_3) (thm_2054 A B t_1 u_3 f_2).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ((Set.member x) t))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))))) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))))))) ((Set.member x) t))))) ;)

(; dict ;)

def thm_2056 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_2 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)))))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_2 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_6 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq A v_6 x_7) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_7) t_1)))))))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => hol.SYM hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)))))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_2 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_6 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq A v_6 x_7) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_7) t_1)))))))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)))) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_2 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)))) (thm_2055 B A t_1 f_2 u_3).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))) ((Set.member x) u))) \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))) ((Set.member x) u))) ;)

(; dict ;)

def thm_2057 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3)) (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => hol.REFL (hol.arr A hol.bool) (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3)).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))) ((Set.member x) u))) \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))) ((Set.member x) u))) ;)

(; dict ;)

def thm_2058 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3)) (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => hol.TRANS (hol.arr A hol.bool) (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3)) (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3)) (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3)) (thm_2057 B A t_1 f_2 u_3) (thm_2057 B A t_1 f_2 u_3).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))) ((Set.member x) u)))) ;)

(; dict ;)

def thm_2059 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3)) (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3)) (thm_301 A) (thm_2058 B A t_1 f_2 u_3).

(; Theorem: |- ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)) ;)

(; dict ;)

def thm_2060 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) => hyp_1.

(; Theorem: |- ((Set.member x) u) ;)

(; dict ;)

def thm_2061 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_185 q_1 p_2 hyp_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) hyp_1.

(; Theorem: |- ((Set.member x) u) ;)

(; dict ;)

def thm_2062 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (thm_2060 B A t_1 f_2 u_3 x_4 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) => thm_2061 B A t_1 f_2 u_3 x_4 hyp_2).

(; Theorem: |- ((Set.member x) u) ;)

(; dict ;)

def thm_2063 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (thm_2062 B A t_1 f_2 u_3 x_4 hyp_1) (hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) => thm_1756 A u_3 x_4 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))) ((Set.member x) u)) ;)

(; dict ;)

def thm_2064 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) => thm_2063 B A t_1 f_2 u_3 x_4 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))) ((Set.member x) u))) ;)

(; dict ;)

def thm_2065 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => thm_2064 B A t_1 f_2 u_3 x_4.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ((Set.member x) t)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ((Set.member x) t))))) ;)

(; dict ;)

def thm_2066 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2))) -> hol.proof (hol.eq hol.bool (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1))) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1))))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (hol.forall A (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1))) hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ((Set.member x) t)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ((Set.member x) t))))) ;)

(; dict ;)

def thm_2067 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1))) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1))))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.PROVE_HYP (hol.forall A (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2))) (hol.eq hol.bool (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1))) (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1))))) (hol.EQ_MP (hol.forall A (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2))) (thm_2059 B A t_1 f_3 u_2) (thm_2065 B A t_1 f_3 u_2)) (hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_4) t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_2))) => thm_2066 A B t_1 u_2 f_3 hyp_1).

(; Theorem: |- ((= \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ((Set.member x) t))) \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ((Set.member x) t))) ;)

(; dict ;)

def thm_2068 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.REFL (hol.arr B hol.bool) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)).

(; Theorem: |- ((= \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ((Set.member x) t))) \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ((Set.member x) t))) ;)

(; dict ;)

def thm_2069 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.TRANS (hol.arr B hol.bool) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)) (thm_2068 A B t_1 u_2 f_3) (thm_2068 A B t_1 u_2 f_3).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ((Set.member x) t)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ((Set.member x) t)))) ;)

(; dict ;)

def thm_2070 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)) (thm_63 B) (thm_2069 A B t_1 u_2 f_3).

(; Theorem: |- ((Set.member x) t) ;)

(; dict ;)

def thm_2071 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> x_2 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => x_2 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1) => hyp_1.

(; Theorem: |- ((= ((= ((Set.member x) t)) Data.Bool.T)) ((= ((Set.member x) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_2072 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> x_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1) hol.true)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => x_2 : hol.term B => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1) hol.true).

(; Theorem: |- ((= ((= ((Set.member x) t)) Data.Bool.T)) ((= ((Set.member x) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_2073 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> x_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1) hol.true)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => x_2 : hol.term B => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1) hol.true) (thm_2072 B t_1 x_2) (thm_2072 B t_1 x_2).

(; Theorem: |- ((= ((Set.member x) t)) ((= ((Set.member x) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_2074 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> x_2 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1) hol.true)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => x_2 : hol.term B => (t_1 : hol.term hol.bool => thm_310 t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1).

(; Theorem: |- ((= ((Set.member x) t)) Data.Bool.T) ;)

(; dict ;)

def thm_2075 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> x_2 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1) hol.true) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => x_2 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1) => hol.EQ_MP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1) hol.true) (thm_2074 B t_1 x_2) (thm_2071 B t_1 x_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.==> ((Set.member x) t))) (Data.Bool.==> Data.Bool.T)) ;)

(; dict ;)

def thm_2076 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> x_2 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1)) (hol.imp hol.true)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => x_2 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1) hol.true thm_107 (hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1) hol.true) (thm_2073 B t_1 x_2) (thm_2075 B t_1 x_2 hyp_1)).

(; Theorem: |- ((= ((Set.member x) v)) ((Set.member x) v)) ;)

(; dict ;)

def thm_2077 : B : hol.type -> v_1 : hol.term (Set_2Eset B) -> x_2 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1)) :=
  B : hol.type => v_1 : hol.term (Set_2Eset B) => x_2 : hol.term B => hol.REFL hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) v))) ((Data.Bool.==> Data.Bool.T) ((Set.member x) v))) ;)

(; dict ;)

def thm_2078 : B : hol.type -> v_1 : hol.term (Set_2Eset B) -> t_2 : hol.term (Set_2Eset B) -> x_3 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1)) (hol.imp hol.true (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1))) :=
  B : hol.type => v_1 : hol.term (Set_2Eset B) => t_2 : hol.term (Set_2Eset B) => x_3 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2)) (hol.imp hol.true) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1) (thm_2076 B t_2 x_3 hyp_1) (thm_2077 B v_1 x_3).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) ((Set.member x) v))) ((Set.member x) v)) ;)

(; dict ;)

def thm_2079 : B : hol.type -> v_1 : hol.term (Set_2Eset B) -> x_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.imp hol.true (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1)) :=
  B : hol.type => v_1 : hol.term (Set_2Eset B) => x_2 : hol.term B => (t_1 : hol.term hol.bool => thm_450 t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) v))) ((Set.member x) v)) ;)

(; dict ;)

def thm_2080 : B : hol.type -> v_1 : hol.term (Set_2Eset B) -> t_2 : hol.term (Set_2Eset B) -> x_3 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1)) :=
  B : hol.type => v_1 : hol.term (Set_2Eset B) => t_2 : hol.term (Set_2Eset B) => x_3 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) => hol.TRANS hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1)) (hol.imp hol.true (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1) (thm_2078 B v_1 t_2 x_3 hyp_1) (thm_2079 B v_1 x_3).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) v)))) (Data.Bool.==> ((Set.member x) v))) ;)

(; dict ;)

def thm_2081 : B : hol.type -> v_1 : hol.term (Set_2Eset B) -> t_2 : hol.term (Set_2Eset B) -> x_3 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1))) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1))) :=
  B : hol.type => v_1 : hol.term (Set_2Eset B) => t_2 : hol.term (Set_2Eset B) => x_3 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1) thm_107 (thm_2080 B v_1 t_2 x_3 hyp_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ;)

(; dict ;)

def thm_2082 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => hol.REFL hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) v))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))))) ((Data.Bool.==> ((Set.member x) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))))) ;)

(; dict ;)

def thm_2083 : A : hol.type -> B : hol.type -> u_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> v_3 : hol.term (Set_2Eset B) -> t_4 : hol.term (Set_2Eset B) -> x_5 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_4))))) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_4)))))) :=
  A : hol.type => B : hol.type => u_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => v_3 : hol.term (Set_2Eset B) => t_4 : hol.term (Set_2Eset B) => x_5 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_4)))) (thm_2081 B v_3 t_4 x_5 hyp_1) (thm_2082 B A t_4 u_1 f_2 x_5).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))))) ((Data.Bool.==> ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) v))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))))) ;)

(; dict ;)

def thm_2084 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> v_4 : hol.term (Set_2Eset B) -> x_5 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_4) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_1))))) (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_1)))))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => v_4 : hol.term (Set_2Eset B) => x_5 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1) => hol.SYM hol.bool (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_1))))) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_4) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_1))))) (thm_2083 A B u_2 f_3 v_4 t_1 x_5 hyp_1).

(; Theorem: |- ((Set.member x) v) ;)

(; dict ;)

def thm_2085 : B : hol.type -> v_1 : hol.term (Set_2Eset B) -> x_2 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1) :=
  B : hol.type => v_1 : hol.term (Set_2Eset B) => x_2 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1) => hyp_1.

(; Theorem: |- ((= ((= ((Set.member x) v)) Data.Bool.T)) ((= ((Set.member x) v)) Data.Bool.T)) ;)

(; dict ;)

def thm_2086 : B : hol.type -> v_1 : hol.term (Set_2Eset B) -> x_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1) hol.true)) :=
  B : hol.type => v_1 : hol.term (Set_2Eset B) => x_2 : hol.term B => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1) hol.true).

(; Theorem: |- ((= ((= ((Set.member x) v)) Data.Bool.T)) ((= ((Set.member x) v)) Data.Bool.T)) ;)

(; dict ;)

def thm_2087 : B : hol.type -> v_1 : hol.term (Set_2Eset B) -> x_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1) hol.true)) :=
  B : hol.type => v_1 : hol.term (Set_2Eset B) => x_2 : hol.term B => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1) hol.true) (thm_2086 B v_1 x_2) (thm_2086 B v_1 x_2).

(; Theorem: |- ((= ((Set.member x) v)) ((= ((Set.member x) v)) Data.Bool.T)) ;)

(; dict ;)

def thm_2088 : B : hol.type -> v_1 : hol.term (Set_2Eset B) -> x_2 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1) hol.true)) :=
  B : hol.type => v_1 : hol.term (Set_2Eset B) => x_2 : hol.term B => (t_1 : hol.term hol.bool => thm_310 t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1).

(; Theorem: |- ((= ((Set.member x) v)) Data.Bool.T) ;)

(; dict ;)

def thm_2089 : B : hol.type -> v_1 : hol.term (Set_2Eset B) -> x_2 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1) hol.true) :=
  B : hol.type => v_1 : hol.term (Set_2Eset B) => x_2 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1) => hol.EQ_MP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1) hol.true) (thm_2088 B v_1 x_2) (thm_2085 B v_1 x_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.==> ((Set.member x) v))) (Data.Bool.==> Data.Bool.T)) ;)

(; dict ;)

def thm_2090 : B : hol.type -> v_1 : hol.term (Set_2Eset B) -> x_2 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1)) (hol.imp hol.true)) :=
  B : hol.type => v_1 : hol.term (Set_2Eset B) => x_2 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1) hol.true thm_107 (hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_1) hol.true) (thm_2087 B v_1 x_2) (thm_2089 B v_1 x_2 hyp_1)).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) x)))) ;)

(; dict ;)

def thm_2091 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.eq B (f_2 x_4) x_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.eq B (f_2 x_4) x_1)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => hol.REFL hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.eq B (f_2 x_4) x_1))).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) x))))) ((Data.Bool.==> Data.Bool.T) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) x))))) ;)

(; dict ;)

def thm_2092 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> x_4 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 v_3) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) x_4)))) (hol.imp hol.true (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) x_4))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => x_4 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 v_3) => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 v_3)) (hol.imp hol.true) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) x_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) x_4))) (thm_2090 B v_3 x_4 hyp_1) (thm_2091 B A x_4 f_1 u_2).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) x))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) x)))) ;)

(; dict ;)

def thm_2093 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.imp hol.true (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.eq B (f_2 x_4) x_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.eq B (f_2 x_4) x_1)))) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => (t_1 : hol.term hol.bool => thm_450 t_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.eq B (f_2 x_4) x_1))).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) x))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) x)))) ;)

(; dict ;)

def thm_2094 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> x_4 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 v_3) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) x_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) x_4)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => x_4 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 v_3) => hol.TRANS hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) x_4)))) (hol.imp hol.true (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) x_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) x_4))) (thm_2092 A B f_1 u_2 v_3 x_4 hyp_1) (thm_2093 B A x_4 f_1 u_2).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool.==> ((Set.member x) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) x)))))) (Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) x))))) ;)

(; dict ;)

def thm_2095 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> x_4 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 v_3) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) x_4))))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) x_4))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => x_4 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 v_3) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) x_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) x_4))) thm_107 (thm_2094 A B f_1 u_2 v_3 x_4 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> ((Set.member x) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) x))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))))) ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))))) ;)

(; dict ;)

def thm_2096 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> v_4 : hol.term (Set_2Eset B) -> x_5 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_4) -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_4) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (hol.eq B (f_2 x_6) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1))))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (hol.eq B (f_2 x_6) x_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)))))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => v_4 : hol.term (Set_2Eset B) => x_5 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_4) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_4) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (hol.eq B (f_2 x_6) x_5))))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (hol.eq B (f_2 x_6) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1)))) (thm_2095 A B f_2 u_3 v_4 x_5 hyp_1) (thm_2082 B A t_1 u_3 f_2 x_5).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))))) ((Data.Bool.==> ((Data.Bool.==> ((Set.member x) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) x))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))))) ;)

(; dict ;)

def thm_2097 : B : hol.type -> A : hol.type -> v_1 : hol.term (Set_2Eset B) -> t_2 : hol.term (Set_2Eset B) -> x_3 : hol.term B -> f_4 : hol.term (hol.arr A B) -> u_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (hol.eq B (f_4 x_6) x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_3 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2))))) (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (hol.eq B (f_4 x_6) x_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_3 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2)))))) :=
  B : hol.type => A : hol.type => v_1 : hol.term (Set_2Eset B) => t_2 : hol.term (Set_2Eset B) => x_3 : hol.term B => f_4 : hol.term (hol.arr A B) => u_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1) => hol.SYM hol.bool (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (hol.eq B (f_4 x_6) x_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_3 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2))))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (hol.eq B (f_4 x_6) x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_3 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2))))) (thm_2096 A B t_2 f_4 u_5 v_1 x_3 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) x)) x)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))))) ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))))) ;)

(; dict ;)

def thm_2098 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> x_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.forall A (x_5 : hol.term A => hol.imp ((x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4) (hol.eq B (f_3 x_6) x_2)) x_5) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_2 (f_3 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_1)))))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_2 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => x_2 : hol.term B => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_279 A Q_1 P_2) A (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_2 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) x_2)).

(; Theorem: |- ((Data.Bool./\ ((Set.member z) u)) ((= (f z)) x)) ;)

(; dict ;)

def thm_2099 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> z_4 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3) (hol.eq B (f_2 z_4) x_1)) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3) (hol.eq B (f_2 z_4) x_1)) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => z_4 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3) (hol.eq B (f_2 z_4) x_1)) => hyp_1.

(; Theorem: |- ((Set.member z) u) ;)

(; dict ;)

def thm_2100 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> z_4 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3) (hol.eq B (f_2 z_4) x_1)) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => z_4 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3) (hol.eq B (f_2 z_4) x_1)) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_185 q_1 p_2 hyp_1) (hol.eq B (f_2 z_4) x_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3) hyp_1.

(; Theorem: |- ((Set.member z) u) ;)

(; dict ;)

def thm_2101 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> z_4 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3) (hol.eq B (f_2 z_4) x_1)) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => z_4 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3) (hol.eq B (f_2 z_4) x_1)) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3) (hol.eq B (f_2 z_4) x_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3) (thm_2099 B A x_1 f_2 u_3 z_4 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3) (hol.eq B (f_2 z_4) x_1)) => thm_2100 B A x_1 f_2 u_3 z_4 hyp_2).

(; Theorem: |- ((= (f z)) x) ;)

(; dict ;)

def thm_2102 : A : hol.type -> B : hol.type -> u_1 : hol.term (Set_2Eset A) -> x_2 : hol.term B -> z_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_1) (hol.eq B (f_4 z_3) x_2)) -> hol.proof (hol.eq B (f_4 z_3) x_2) :=
  A : hol.type => B : hol.type => u_1 : hol.term (Set_2Eset A) => x_2 : hol.term B => z_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_1) (hol.eq B (f_4 z_3) x_2)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_1) (hol.eq B (f_4 z_3) x_2) hyp_1.

(; Theorem: |- ((= (f z)) x) ;)

(; dict ;)

def thm_2103 : A : hol.type -> B : hol.type -> u_1 : hol.term (Set_2Eset A) -> x_2 : hol.term B -> z_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_1) (hol.eq B (f_4 z_3) x_2)) -> hol.proof (hol.eq B (f_4 z_3) x_2) :=
  A : hol.type => B : hol.type => u_1 : hol.term (Set_2Eset A) => x_2 : hol.term B => z_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_1) (hol.eq B (f_4 z_3) x_2)) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_1) (hol.eq B (f_4 z_3) x_2)) (hol.eq B (f_4 z_3) x_2) (thm_2099 B A x_2 f_4 u_1 z_3 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_1) (hol.eq B (f_4 z_3) x_2)) => thm_2102 A B u_1 x_2 z_3 f_4 hyp_2).

(; Theorem: |- ((Set.member z) u) ;)

(; dict ;)

def thm_2104 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) => hyp_1.

(; Theorem: |- ((= (f z)) x) ;)

(; dict ;)

def thm_2105 : A : hol.type -> B : hol.type -> x_1 : hol.term B -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq B (f_3 z_2) x_1) -> hol.proof (hol.eq B (f_3 z_2) x_1) :=
  A : hol.type => B : hol.type => x_1 : hol.term B => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq B (f_3 z_2) x_1) => hyp_1.

(; Theorem: |- ((= (\lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))) z)) ((Data.Bool./\ ((= x) (f z))) ((Data.Bool./\ ((Set.member z) u)) ((Set.member (f z)) t)))) ;)

(; dict ;)

def thm_2106 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> t_2 : hol.term (Set_2Eset B) -> u_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hol.proof (hol.eq hol.bool ((x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2))) z_1) (hol.and (hol.eq B x_5 (f_4 z_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_1) t_2)))) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => t_2 : hol.term (Set_2Eset B) => u_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hol.BETA_CONV A hol.bool (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2))) z_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= x) (f z))) ((Data.Bool./\ ((Set.member z) u)) ((Set.member (f z)) t)))) (\lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))) z)) ;)

(; dict ;)

def thm_2107 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> z_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B x_5 (f_4 z_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_1))) ((x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_1))) z_3)) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => z_3 : hol.term A => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hol.SYM hol.bool ((x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_1))) z_3) (hol.and (hol.eq B x_5 (f_4 z_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_1))) (thm_2106 B A z_3 t_1 u_2 f_4 x_5).

(; Theorem: |- ((= (= x)) (= x)) ;)

(; dict ;)

def thm_2108 : B : hol.type -> x_1 : hol.term B -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B x_1) (hol.eq B x_1)) :=
  B : hol.type => x_1 : hol.term B => hol.REFL (hol.arr B hol.bool) (hol.eq B x_1).

(; Theorem: |- ((= ((= x) (f z))) ((= x) x)) ;)

(; dict ;)

def thm_2109 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hyp_1 : hol.proof (hol.eq B (f_2 z_1) x_3) -> hol.proof (hol.eq hol.bool (hol.eq B x_3 (f_2 z_1)) (hol.eq B x_3 x_3)) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => hyp_1 : hol.proof (hol.eq B (f_2 z_1) x_3) => hol.APP_THM B hol.bool (hol.eq B x_3) (hol.eq B x_3) (f_2 z_1) x_3 (thm_2108 B x_3) (thm_2105 A B x_3 z_1 f_2 hyp_1).

(; Theorem: |- ((= ((= x) (f z))) Data.Bool.T) ;)

(; dict ;)

def thm_2110 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hyp_1 : hol.proof (hol.eq B (f_2 z_1) x_3) -> hol.proof (hol.eq hol.bool (hol.eq B x_3 (f_2 z_1)) hol.true) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => hyp_1 : hol.proof (hol.eq B (f_2 z_1) x_3) => hol.TRANS hol.bool (hol.eq B x_3 (f_2 z_1)) (hol.eq B x_3 x_3) hol.true (thm_2109 A B z_1 f_2 x_3 hyp_1) (thm_315 B x_3).

(; Theorem: |- ((= (Data.Bool./\ ((= x) (f z)))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_2111 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hyp_1 : hol.proof (hol.eq B (f_2 z_1) x_3) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq B x_3 (f_2 z_1))) (hol.and hol.true)) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => hyp_1 : hol.proof (hol.eq B (f_2 z_1) x_3) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.eq B x_3 (f_2 z_1)) hol.true thm_298 (thm_2110 A B z_1 f_2 x_3 hyp_1).

(; Theorem: |- ((= ((= ((Set.member z) u)) Data.Bool.T)) ((= ((Set.member z) u)) Data.Bool.T)) ;)

(; dict ;)

def thm_2112 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) hol.true)) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) hol.true).

(; Theorem: |- ((= ((= ((Set.member z) u)) Data.Bool.T)) ((= ((Set.member z) u)) Data.Bool.T)) ;)

(; dict ;)

def thm_2113 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) hol.true)) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) hol.true) (thm_2112 A u_1 z_2) (thm_2112 A u_1 z_2).

(; Theorem: |- ((= ((Set.member z) u)) ((= ((Set.member z) u)) Data.Bool.T)) ;)

(; dict ;)

def thm_2114 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) hol.true)) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => (t_1 : hol.term hol.bool => thm_310 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1).

(; Theorem: |- ((= ((Set.member z) u)) Data.Bool.T) ;)

(; dict ;)

def thm_2115 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) hol.true) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) => hol.EQ_MP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) hol.true) (thm_2114 A u_1 z_2) (thm_2104 A u_1 z_2 hyp_1).

(; Theorem: |- ((= (Data.Bool./\ ((Set.member z) u))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_2116 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1)) (hol.and hol.true)) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) hol.true thm_298 (hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) hol.true) (thm_2113 A u_1 z_2) (thm_2115 A u_1 z_2 hyp_1)).

(; Theorem: |- ((= Set.member) Set.member) ;)

(; dict ;)

def thm_2117 : B : hol.type -> hol.proof (hol.eq (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)))) :=
  B : hol.type => hol.REFL (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool))).

(; Theorem: |- ((= (Set.member (f z))) (Set.member x)) ;)

(; dict ;)

def thm_2118 : A : hol.type -> B : hol.type -> x_1 : hol.term B -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq B (f_3 z_2) x_1) -> hol.proof (hol.eq (hol.arr (Set_2Eset B) hol.bool) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1)) :=
  A : hol.type => B : hol.type => x_1 : hol.term B => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq B (f_3 z_2) x_1) => hol.APP_THM B (hol.arr (Set_2Eset B) hol.bool) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool))) (f_3 z_2) x_1 (thm_2117 B) (thm_2105 A B x_1 z_2 f_3 hyp_1).

(; Theorem: |- ((= t) t) ;)

(; dict ;)

def thm_2119 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (Set_2Eset B) t_1 t_1) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => hol.REFL (Set_2Eset B) t_1.

(; Theorem: |- ((= ((Set.member (f z)) t)) ((Set.member x) t)) ;)

(; dict ;)

def thm_2120 : A : hol.type -> B : hol.type -> x_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> z_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq B (f_4 z_3) x_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1 t_2)) :=
  A : hol.type => B : hol.type => x_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => z_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq B (f_4 z_3) x_1) => hol.APP_THM (Set_2Eset B) hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1) t_2 t_2 (thm_2118 A B x_1 z_3 f_4 hyp_1) (thm_2119 B t_2).

(; Theorem: |- ((= ((Set.member (f z)) t)) Data.Bool.T) ;)

(; dict ;)

def thm_2121 : A : hol.type -> B : hol.type -> x_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> z_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq B (f_4 z_3) x_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1 t_2) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_2) hol.true) :=
  A : hol.type => B : hol.type => x_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => z_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq B (f_4 z_3) x_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1 t_2) => hol.TRANS hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1 t_2) hol.true (thm_2120 A B x_1 t_2 z_3 f_4 hyp_1) (thm_2075 B t_2 x_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member z) u)) ((Set.member (f z)) t))) ((Data.Bool./\ Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_2122 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> z_5 : hol.term A -> hyp_1 : hol.proof (hol.eq B (f_3 z_5) x_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 u_4) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1 t_2) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_5) t_2)) (hol.and hol.true hol.true)) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => z_5 : hol.term A => hyp_1 : hol.proof (hol.eq B (f_3 z_5) x_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 u_4) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1 t_2) => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 u_4)) (hol.and hol.true) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_5) t_2) hol.true (thm_2116 A u_4 z_5 hyp_2) (thm_2121 A B x_1 t_2 z_5 f_3 hyp_1 hyp_3).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member z) u)) ((Set.member (f z)) t))) Data.Bool.T) ;)

(; dict ;)

def thm_2123 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> z_5 : hol.term A -> hyp_1 : hol.proof (hol.eq B (f_3 z_5) x_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 u_4) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1 t_2) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_5) t_2)) hol.true) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => z_5 : hol.term A => hyp_1 : hol.proof (hol.eq B (f_3 z_5) x_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 u_4) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1 t_2) => hol.TRANS hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_5) t_2)) (hol.and hol.true hol.true) hol.true (thm_2122 B A x_1 t_2 f_3 u_4 z_5 hyp_1 hyp_2 hyp_3) thm_323.

(; Theorem: |- ((= ((Data.Bool./\ ((= x) (f z))) ((Data.Bool./\ ((Set.member z) u)) ((Set.member (f z)) t)))) ((Data.Bool./\ Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_2124 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> z_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.eq B (f_4 z_3) x_5) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B x_5 (f_4 z_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_1))) (hol.and hol.true hol.true)) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => z_3 : hol.term A => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.eq B (f_4 z_3) x_5) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1) => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq B x_5 (f_4 z_3))) (hol.and hol.true) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_1)) hol.true (thm_2111 A B z_3 f_4 x_5 hyp_1) (thm_2123 B A x_5 t_1 f_4 u_2 z_3 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= ((Data.Bool./\ ((= x) (f z))) ((Data.Bool./\ ((Set.member z) u)) ((Set.member (f z)) t)))) Data.Bool.T) ;)

(; dict ;)

def thm_2125 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> z_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.eq B (f_4 z_3) x_5) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq B x_5 (f_4 z_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_1))) hol.true) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => z_3 : hol.term A => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.eq B (f_4 z_3) x_5) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1) => hol.TRANS hol.bool (hol.and (hol.eq B x_5 (f_4 z_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_1))) (hol.and hol.true hol.true) hol.true (thm_2124 A B t_1 u_2 z_3 f_4 x_5 hyp_1 hyp_2 hyp_3) thm_323.

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool./\ ((= x) (f z))) ((Data.Bool./\ ((Set.member z) u)) ((Set.member (f z)) t)))) ;)

(; dict ;)

def thm_2126 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> z_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.eq B (f_4 z_3) x_5) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1) -> hol.proof (hol.eq hol.bool hol.true (hol.and (hol.eq B x_5 (f_4 z_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_1)))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => z_3 : hol.term A => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.eq B (f_4 z_3) x_5) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1) => hol.SYM hol.bool (hol.and (hol.eq B x_5 (f_4 z_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_1))) hol.true (thm_2125 A B t_1 u_2 z_3 f_4 x_5 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool./\ ((= x) (f z))) ((Data.Bool./\ ((Set.member z) u)) ((Set.member (f z)) t))) ;)

(; dict ;)

def thm_2127 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> z_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.eq B (f_4 z_3) x_5) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1) -> hol.proof (hol.and (hol.eq B x_5 (f_4 z_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_1))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => z_3 : hol.term A => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.eq B (f_4 z_3) x_5) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1) => hol.EQ_MP hol.true (hol.and (hol.eq B x_5 (f_4 z_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_1))) (thm_2126 A B t_1 u_2 z_3 f_4 x_5 hyp_1 hyp_2 hyp_3) thm_15.

(; Theorem: |- (\lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))) z) ;)

(; dict ;)

def thm_2128 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> t_2 : hol.term (Set_2Eset B) -> u_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.eq B (f_4 z_1) x_5) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 u_3) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) -> hol.proof ((x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2))) z_1) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => t_2 : hol.term (Set_2Eset B) => u_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.eq B (f_4 z_1) x_5) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 u_3) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) => hol.EQ_MP (hol.and (hol.eq B x_5 (f_4 z_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_1) t_2))) ((x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2))) z_1) (thm_2107 A B t_2 u_3 z_1 f_4 x_5) (thm_2127 A B t_2 u_3 z_1 f_4 x_5 hyp_1 hyp_2 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))) ;)

(; dict ;)

def thm_2129 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> t_2 : hol.term (Set_2Eset B) -> u_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hyp_1 : hol.proof ((x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2))) z_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2)))) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => t_2 : hol.term (Set_2Eset B) => u_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hyp_1 : hol.proof ((x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2))) z_1) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_334 A x_1 P_2 hyp_1) A z_1 (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2))) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))) ;)

(; dict ;)

def thm_2130 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> t_2 : hol.term (Set_2Eset B) -> u_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.eq B (f_4 z_1) x_5) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 u_3) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2)))) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => t_2 : hol.term (Set_2Eset B) => u_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.eq B (f_4 z_1) x_5) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 u_3) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) => hol.PROVE_HYP ((x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2))) z_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2)))) (thm_2128 B A z_1 t_2 u_3 f_4 x_5 hyp_1 hyp_2 hyp_3) (hyp_4 : hol.proof ((x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2))) z_1) => thm_2129 B A z_1 t_2 u_3 f_4 x_5 hyp_4).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))) ;)

(; dict ;)

def thm_2131 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> t_2 : hol.term (Set_2Eset B) -> u_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.eq B (f_4 z_1) x_5) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 u_3) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2)))) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => t_2 : hol.term (Set_2Eset B) => u_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.eq B (f_4 z_1) x_5) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 u_3) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) => hol.PROVE_HYP (hol.eq B (f_4 z_1) x_5) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2)))) (thm_2105 A B x_5 z_1 f_4 hyp_1) (hyp_4 : hol.proof (hol.eq B (f_4 z_1) x_5) => thm_2130 B A z_1 t_2 u_3 f_4 x_5 hyp_4 hyp_2 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))) ;)

(; dict ;)

def thm_2132 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> t_2 : hol.term (Set_2Eset B) -> u_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.eq B (f_4 z_1) x_5) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 u_3) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2)))) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => t_2 : hol.term (Set_2Eset B) => u_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.eq B (f_4 z_1) x_5) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 u_3) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 u_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2)))) (thm_2104 A u_3 z_1 hyp_2) (hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 u_3) => thm_2131 B A z_1 t_2 u_3 f_4 x_5 hyp_1 hyp_4 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))) ;)

(; dict ;)

def thm_2133 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> t_2 : hol.term (Set_2Eset B) -> u_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 u_3) (hol.eq B (f_4 z_1) x_5)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 u_3) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2)))) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => t_2 : hol.term (Set_2Eset B) => u_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 u_3) (hol.eq B (f_4 z_1) x_5)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 u_3) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) => hol.PROVE_HYP (hol.eq B (f_4 z_1) x_5) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2)))) (thm_2103 A B u_3 x_5 z_1 f_4 hyp_1) (hyp_4 : hol.proof (hol.eq B (f_4 z_1) x_5) => thm_2132 B A z_1 t_2 u_3 f_4 x_5 hyp_4 hyp_2 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))) ;)

(; dict ;)

def thm_2134 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> t_2 : hol.term (Set_2Eset B) -> u_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 u_3) (hol.eq B (f_4 z_1) x_5)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2)))) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => t_2 : hol.term (Set_2Eset B) => u_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 u_3) (hol.eq B (f_4 z_1) x_5)) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 u_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2)))) (thm_2101 B A x_5 f_4 u_3 z_1 hyp_1) (hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 u_3) => thm_2133 B A z_1 t_2 u_3 f_4 x_5 hyp_1 hyp_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((Set.member z) u)) ((= (f z)) x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ;)

(; dict ;)

def thm_2135 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> x_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> z_5 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1) -> hol.proof (hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 u_4) (hol.eq B (f_3 z_5) x_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_2 (f_3 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => x_2 : hol.term B => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => z_5 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1) => hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 u_4) (hol.eq B (f_3 z_5) x_2)) => thm_2134 B A z_5 t_1 u_4 f_3 x_2 hyp_2 hyp_1.

(; Theorem: |- ((= (\lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) x)) z)) ((Data.Bool./\ ((Set.member z) u)) ((= (f z)) x))) ;)

(; dict ;)

def thm_2136 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> x_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) x_2)) z_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_1 u_4) (hol.eq B (f_3 z_1) x_2))) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => x_2 : hol.term B => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => hol.BETA_CONV A hol.bool (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) x_2)) z_1.

(; Theorem: |- (\lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) x)) z) ;)

(; dict ;)

def thm_2137 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> x_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) x_2)) z_1) -> hol.proof ((x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) x_2)) z_1) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => x_2 : hol.term B => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) x_2)) z_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((Set.member z) u)) ((= (f z)) x)) ;)

(; dict ;)

def thm_2138 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> z_4 : hol.term A -> hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (hol.eq B (f_2 x_5) x_1)) z_4) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3) (hol.eq B (f_2 z_4) x_1)) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => z_4 : hol.term A => hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (hol.eq B (f_2 x_5) x_1)) z_4) => hol.EQ_MP ((x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (hol.eq B (f_2 x_5) x_1)) z_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3) (hol.eq B (f_2 z_4) x_1)) (thm_2136 B A z_4 x_1 f_2 u_3) (thm_2137 B A z_4 x_1 f_2 u_3 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))) ;)

(; dict ;)

def thm_2139 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> t_2 : hol.term (Set_2Eset B) -> u_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hyp_1 : hol.proof ((x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (hol.eq B (f_4 x_6) x_5)) z_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2)))) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => t_2 : hol.term (Set_2Eset B) => u_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hyp_1 : hol.proof ((x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (hol.eq B (f_4 x_6) x_5)) z_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) => thm_2135 B A t_2 x_5 f_4 u_3 z_1 hyp_2 (thm_2138 B A x_5 f_4 u_3 z_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) x)) z)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ;)

(; dict ;)

def thm_2140 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> z_2 : hol.term A -> x_3 : hol.term B -> f_4 : hol.term (hol.arr A B) -> u_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_1) -> hol.proof (hol.imp ((x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (hol.eq B (f_4 x_6) x_3)) z_2) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_3 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => z_2 : hol.term A => x_3 : hol.term B => f_4 : hol.term (hol.arr A B) => u_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_1) => hyp_2 : hol.proof ((x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (hol.eq B (f_4 x_6) x_3)) z_2) => thm_2139 B A z_2 t_1 u_5 f_4 x_3 hyp_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda z. ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) x)) z)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))))) ;)

(; dict ;)

def thm_2141 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> x_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1) -> hol.proof (hol.forall A (z_5 : hol.term A => hol.imp ((x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4) (hol.eq B (f_3 x_6) x_2)) z_5) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_2 (f_3 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_1)))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => x_2 : hol.term B => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1) => z_5 : hol.term A => thm_2140 B A t_1 z_5 x_2 f_3 u_4 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) x)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ;)

(; dict ;)

def thm_2142 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> x_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) x_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_2 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => x_2 : hol.term B => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 t_1) => thm_2098 B A t_1 x_2 f_3 u_4 (thm_2141 B A t_1 x_2 f_3 u_4 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) x))) ;)

(; dict ;)

def thm_2143 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.eq B (f_2 x_4) x_1))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.eq B (f_2 x_4) x_1))) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.eq B (f_2 x_4) x_1))) => hyp_1.

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))) ;)

(; dict ;)

def thm_2144 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_3 x_5) x_4))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_3 x_5) x_4))) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1) => thm_2142 B A t_1 x_4 f_3 u_2 hyp_2 (thm_2143 B A x_4 f_3 u_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Set.member x) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) x))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ;)

(; dict ;)

def thm_2145 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> v_4 : hol.term (Set_2Eset B) -> x_5 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_4) -> hol.proof (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_4) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (hol.eq B (f_2 x_6) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1))))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => v_4 : hol.term (Set_2Eset B) => x_5 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_4) => hol.EQ_MP (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (hol.eq B (f_2 x_6) x_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1))))) (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_4) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (hol.eq B (f_2 x_6) x_5)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_1))))) (thm_2097 B A v_4 t_1 x_5 f_2 u_3 hyp_2) (hyp_3 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (hol.eq B (f_2 x_6) x_5))) => thm_2144 B A t_1 u_3 f_2 x_5 hyp_3 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))) ;)

(; dict ;)

def thm_2146 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))) -> hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Set.member x) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) x)))) ;)

(; dict ;)

def thm_2147 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> x_4 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2) (hol.eq B (f_1 x_6) y_5))))) -> hol.proof (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) x_4)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => x_4 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2) (hol.eq B (f_1 x_6) y_5))))) => thm_2146 A B f_1 u_2 v_3 hyp_1 x_4.

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))) ;)

(; dict ;)

def thm_2148 : B : hol.type -> A : hol.type -> v_1 : hol.term (Set_2Eset B) -> t_2 : hol.term (Set_2Eset B) -> u_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 v_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3) (hol.eq B (f_4 x_7) y_6))))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2)))) :=
  B : hol.type => A : hol.type => v_1 : hol.term (Set_2Eset B) => t_2 : hol.term (Set_2Eset B) => u_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 v_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3) (hol.eq B (f_4 x_7) y_6))))) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_1) => thm_2145 A B t_2 f_4 u_3 v_1 x_5 hyp_2 hyp_3 (thm_2147 A B f_4 u_3 v_1 x_5 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))) ;)

(; dict ;)

def thm_2149 : B : hol.type -> A : hol.type -> v_1 : hol.term (Set_2Eset B) -> t_2 : hol.term (Set_2Eset B) -> u_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 v_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3) (hol.eq B (f_4 x_7) y_6))))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2)))) :=
  B : hol.type => A : hol.type => v_1 : hol.term (Set_2Eset B) => t_2 : hol.term (Set_2Eset B) => u_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 v_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3) (hol.eq B (f_4 x_7) y_6))))) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_1) => hol.PROVE_HYP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2)))) (thm_2085 B v_1 x_5 hyp_3) (hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_1) => thm_2148 B A v_1 t_2 u_3 f_4 x_5 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((Data.Bool.==> ((Set.member x) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ;)

(; dict ;)

def thm_2150 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> v_4 : hol.term (Set_2Eset B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 v_4) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2) (hol.eq B (f_3 x_7) y_6))))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1) -> hol.proof (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_4) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_1))))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => v_4 : hol.term (Set_2Eset B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 v_4) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2) (hol.eq B (f_3 x_7) y_6))))) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_4) => thm_2149 B A v_4 t_1 u_2 f_3 x_5 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) v))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ;)

(; dict ;)

def thm_2151 : A : hol.type -> B : hol.type -> u_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> v_3 : hol.term (Set_2Eset B) -> t_4 : hol.term (Set_2Eset B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_1) (hol.eq B (f_2 x_7) y_6))))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) -> hol.proof (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_4))))) :=
  A : hol.type => B : hol.type => u_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => v_3 : hol.term (Set_2Eset B) => t_4 : hol.term (Set_2Eset B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_1) (hol.eq B (f_2 x_7) y_6))))) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) => hol.EQ_MP (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_4))))) (hol.imp (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_6) t_4))))) (thm_2084 A B t_4 u_1 f_2 v_3 x_5 hyp_2) (thm_2150 A B t_4 u_1 f_2 v_3 x_5 hyp_1 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) v))) ;)

(; dict ;)

def thm_2152 : B : hol.type -> v_1 : hol.term (Set_2Eset B) -> t_2 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.forall B (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1))) -> hol.proof (hol.forall B (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1))) :=
  B : hol.type => v_1 : hol.term (Set_2Eset B) => t_2 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.forall B (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1))) => hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) v)) ;)

(; dict ;)

def thm_2153 : B : hol.type -> v_1 : hol.term (Set_2Eset B) -> t_2 : hol.term (Set_2Eset B) -> x_3 : hol.term B -> hyp_1 : hol.proof (hol.forall B (x_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 v_1))) -> hol.proof (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1)) :=
  B : hol.type => v_1 : hol.term (Set_2Eset B) => t_2 : hol.term (Set_2Eset B) => x_3 : hol.term B => hyp_1 : hol.proof (hol.forall B (x_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 v_1))) => thm_2152 B v_1 t_2 hyp_1 x_3.

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))) ;)

(; dict ;)

def thm_2154 : B : hol.type -> A : hol.type -> v_1 : hol.term (Set_2Eset B) -> t_2 : hol.term (Set_2Eset B) -> u_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (x_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 v_1))) -> hyp_2 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 v_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3) (hol.eq B (f_4 x_7) y_6))))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2)))) :=
  B : hol.type => A : hol.type => v_1 : hol.term (Set_2Eset B) => t_2 : hol.term (Set_2Eset B) => u_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (x_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 v_1))) => hyp_2 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 v_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3) (hol.eq B (f_4 x_7) y_6))))) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) => thm_2151 A B u_3 f_4 v_1 t_2 x_5 hyp_2 hyp_3 (thm_2153 B v_1 t_2 x_5 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))) ;)

(; dict ;)

def thm_2155 : B : hol.type -> A : hol.type -> v_1 : hol.term (Set_2Eset B) -> t_2 : hol.term (Set_2Eset B) -> u_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (x_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 v_1))) -> hyp_2 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 v_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3) (hol.eq B (f_4 x_7) y_6))))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2)))) :=
  B : hol.type => A : hol.type => v_1 : hol.term (Set_2Eset B) => t_2 : hol.term (Set_2Eset B) => u_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (x_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 v_1))) => hyp_2 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 v_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3) (hol.eq B (f_4 x_7) y_6))))) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) => hol.PROVE_HYP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2)))) (thm_2071 B t_2 x_5 hyp_3) (hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) => thm_2154 B A v_1 t_2 u_3 f_4 x_5 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((Data.Bool.==> ((Set.member x) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ;)

(; dict ;)

def thm_2156 : A : hol.type -> B : hol.type -> v_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> t_4 : hol.term (Set_2Eset B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (x_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 v_1))) -> hyp_2 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 v_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2) (hol.eq B (f_3 x_7) y_6))))) -> hol.proof (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_4))))) :=
  A : hol.type => B : hol.type => v_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => t_4 : hol.term (Set_2Eset B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (x_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 v_1))) => hyp_2 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 v_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2) (hol.eq B (f_3 x_7) y_6))))) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) => thm_2155 B A v_1 t_4 u_2 f_3 x_5 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))) x)) ((Set.member x) t)))) ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ((Set.member x) t))) ;)

(; dict ;)

def thm_2157 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hol.proof (hol.imp (hol.forall A (x_5 : hol.term A => hol.imp ((x_6 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_1))) x_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_279 A Q_1 P_2) A (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1))).

(; Theorem: |- ((Data.Bool./\ ((= x) (f z))) ((Data.Bool./\ ((Set.member z) u)) ((Set.member (f z)) t))) ;)

(; dict ;)

def thm_2158 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> z_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq B x_5 (f_4 z_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_1))) -> hol.proof (hol.and (hol.eq B x_5 (f_4 z_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_1))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => z_3 : hol.term A => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq B x_5 (f_4 z_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_1))) => hyp_1.

(; Theorem: |- ((= x) (f z)) ;)

(; dict ;)

def thm_2159 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> z_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq B x_5 (f_4 z_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_1))) -> hol.proof (hol.eq B x_5 (f_4 z_3)) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => z_3 : hol.term A => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq B x_5 (f_4 z_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_1))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_185 q_1 p_2 hyp_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_1)) (hol.eq B x_5 (f_4 z_3)) hyp_1.

(; Theorem: |- ((= x) (f z)) ;)

(; dict ;)

def thm_2160 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> z_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq B x_5 (f_4 z_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_1))) -> hol.proof (hol.eq B x_5 (f_4 z_3)) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => z_3 : hol.term A => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq B x_5 (f_4 z_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_1))) => hol.PROVE_HYP (hol.and (hol.eq B x_5 (f_4 z_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_1))) (hol.eq B x_5 (f_4 z_3)) (thm_2158 A B t_1 u_2 z_3 f_4 x_5 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq B x_5 (f_4 z_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_1))) => thm_2159 A B t_1 u_2 z_3 f_4 x_5 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((Set.member z) u)) ((Set.member (f z)) t)) ;)

(; dict ;)

def thm_2161 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> z_5 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq B x_1 (f_3 z_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_5) t_2))) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_5) t_2)) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => z_5 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq B x_1 (f_3 z_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_5) t_2))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_1) (hol.eq B x_1 (f_3 z_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_5) t_2)) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((Set.member z) u)) ((Set.member (f z)) t)) ;)

(; dict ;)

def thm_2162 : B : hol.type -> A : hol.type -> x_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> z_5 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq B x_1 (f_3 z_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_5) t_2))) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_5) t_2)) :=
  B : hol.type => A : hol.type => x_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => z_5 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq B x_1 (f_3 z_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_5) t_2))) => hol.PROVE_HYP (hol.and (hol.eq B x_1 (f_3 z_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_5) t_2))) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_5) t_2)) (thm_2158 A B t_2 u_4 z_5 f_3 x_1 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq B x_1 (f_3 z_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_5 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_5) t_2))) => thm_2161 B A x_1 t_2 f_3 u_4 z_5 hyp_2).

(; Theorem: |- ((= x) (f z)) ;)

(; dict ;)

def thm_2163 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hyp_1 : hol.proof (hol.eq B x_3 (f_2 z_1)) -> hol.proof (hol.eq B x_3 (f_2 z_1)) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => hyp_1 : hol.proof (hol.eq B x_3 (f_2 z_1)) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((Set.member z) u)) ((Set.member (f z)) t)) ;)

(; dict ;)

def thm_2164 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> z_4 : hol.term A -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 z_4) t_1)) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 z_4) t_1)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => z_4 : hol.term A => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_4 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 z_4) t_1)) => hyp_1.

(; Theorem: |- ((Set.member (f z)) t) ;)

(; dict ;)

def thm_2165 : A : hol.type -> B : hol.type -> u_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> z_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_2)) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_2) :=
  A : hol.type => B : hol.type => u_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => z_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_2)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_2) hyp_1.

(; Theorem: |- ((Set.member (f z)) t) ;)

(; dict ;)

def thm_2166 : A : hol.type -> B : hol.type -> u_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> z_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_2)) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_2) :=
  A : hol.type => B : hol.type => u_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => z_3 : hol.term A => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_2)) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_2) (thm_2164 B A t_2 f_4 u_1 z_3 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_2)) => thm_2165 A B u_1 t_2 z_3 f_4 hyp_2).

(; Theorem: |- ((Set.member (f z)) t) ;)

(; dict ;)

def thm_2167 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_1) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_1) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_1) => hyp_1.

(; Theorem: |- ((= (Set.member x)) (Set.member (f z))) ;)

(; dict ;)

def thm_2168 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hyp_1 : hol.proof (hol.eq B x_3 (f_2 z_1)) -> hol.proof (hol.eq (hol.arr (Set_2Eset B) hol.bool) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 z_1))) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => hyp_1 : hol.proof (hol.eq B x_3 (f_2 z_1)) => hol.APP_THM B (hol.arr (Set_2Eset B) hol.bool) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool))) x_3 (f_2 z_1) (thm_2117 B) (thm_2163 A B z_1 f_2 x_3 hyp_1).

(; Theorem: |- ((= ((Set.member x) t)) ((Set.member (f z)) t)) ;)

(; dict ;)

def thm_2169 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> t_3 : hol.term (Set_2Eset B) -> x_4 : hol.term B -> hyp_1 : hol.proof (hol.eq B x_4 (f_2 z_1)) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 z_1) t_3)) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => f_2 : hol.term (hol.arr A B) => t_3 : hol.term (Set_2Eset B) => x_4 : hol.term B => hyp_1 : hol.proof (hol.eq B x_4 (f_2 z_1)) => hol.APP_THM (Set_2Eset B) hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 z_1)) t_3 t_3 (thm_2168 A B z_1 f_2 x_4 hyp_1) (thm_2119 B t_3).

(; Theorem: |- ((= ((= ((Set.member (f z)) t)) Data.Bool.T)) ((= ((Set.member (f z)) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_2170 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_1) hol.true)) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_1) hol.true).

(; Theorem: |- ((= ((= ((Set.member (f z)) t)) Data.Bool.T)) ((= ((Set.member (f z)) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_2171 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_1) hol.true)) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_1) hol.true) (thm_2170 A B t_1 z_2 f_3) (thm_2170 A B t_1 z_2 f_3).

(; Theorem: |- ((= ((Set.member (f z)) t)) ((= ((Set.member (f z)) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_2172 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_1) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_1) hol.true)) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => (t_1 : hol.term hol.bool => thm_310 t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_1).

(; Theorem: |- ((= ((Set.member (f z)) t)) Data.Bool.T) ;)

(; dict ;)

def thm_2173 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_1) hol.true) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_1) => hol.EQ_MP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_1) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_1) hol.true) (thm_2172 A B t_1 z_2 f_3) (thm_2167 A B t_1 z_2 f_3 hyp_1).

(; Theorem: |- ((= ((Set.member x) t)) Data.Bool.T) ;)

(; dict ;)

def thm_2174 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> t_3 : hol.term (Set_2Eset B) -> x_4 : hol.term B -> hyp_1 : hol.proof (hol.eq B x_4 (f_2 z_1)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 z_1) t_3) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_3) hol.true) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => f_2 : hol.term (hol.arr A B) => t_3 : hol.term (Set_2Eset B) => x_4 : hol.term B => hyp_1 : hol.proof (hol.eq B x_4 (f_2 z_1)) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 z_1) t_3) => hol.TRANS hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 z_1) t_3) hol.true (thm_2169 A B z_1 f_2 t_3 x_4 hyp_1) (hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 z_1) t_3) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 z_1) t_3) hol.true) (thm_2171 A B t_3 z_1 f_2) (thm_2173 A B t_3 z_1 f_2 hyp_2)).

(; Theorem: |- ((= Data.Bool.T) ((Set.member x) t)) ;)

(; dict ;)

def thm_2175 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> t_3 : hol.term (Set_2Eset B) -> x_4 : hol.term B -> hyp_1 : hol.proof (hol.eq B x_4 (f_2 z_1)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 z_1) t_3) -> hol.proof (hol.eq hol.bool hol.true (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_3)) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => f_2 : hol.term (hol.arr A B) => t_3 : hol.term (Set_2Eset B) => x_4 : hol.term B => hyp_1 : hol.proof (hol.eq B x_4 (f_2 z_1)) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 z_1) t_3) => hol.SYM hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_3) hol.true (thm_2174 A B z_1 f_2 t_3 x_4 hyp_1 hyp_2).

(; Theorem: |- ((Set.member x) t) ;)

(; dict ;)

def thm_2176 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> t_3 : hol.term (Set_2Eset B) -> x_4 : hol.term B -> hyp_1 : hol.proof (hol.eq B x_4 (f_2 z_1)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 z_1) t_3) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_3) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => f_2 : hol.term (hol.arr A B) => t_3 : hol.term (Set_2Eset B) => x_4 : hol.term B => hyp_1 : hol.proof (hol.eq B x_4 (f_2 z_1)) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 z_1) t_3) => hol.EQ_MP hol.true (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_3) (thm_2175 A B z_1 f_2 t_3 x_4 hyp_1 hyp_2) thm_15.

(; Theorem: |- ((Set.member x) t) ;)

(; dict ;)

def thm_2177 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> t_3 : hol.term (Set_2Eset B) -> x_4 : hol.term B -> hyp_1 : hol.proof (hol.eq B x_4 (f_2 z_1)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 z_1) t_3) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_3) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => f_2 : hol.term (hol.arr A B) => t_3 : hol.term (Set_2Eset B) => x_4 : hol.term B => hyp_1 : hol.proof (hol.eq B x_4 (f_2 z_1)) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 z_1) t_3) => hol.PROVE_HYP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 z_1) t_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_3) (thm_2167 A B t_3 z_1 f_2 hyp_2) (hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 z_1) t_3) => thm_2176 A B z_1 f_2 t_3 x_4 hyp_1 hyp_3).

(; Theorem: |- ((Set.member x) t) ;)

(; dict ;)

def thm_2178 : A : hol.type -> B : hol.type -> u_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> t_4 : hol.term (Set_2Eset B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.eq B x_5 (f_3 z_2)) -> hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_4)) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) :=
  A : hol.type => B : hol.type => u_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => t_4 : hol.term (Set_2Eset B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.eq B x_5 (f_3 z_2)) => hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_4)) => hol.PROVE_HYP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (thm_2166 A B u_1 t_4 z_2 f_3 hyp_2) (hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_4) => thm_2177 A B z_2 f_3 t_4 x_5 hyp_1 hyp_3).

(; Theorem: |- ((Set.member x) t) ;)

(; dict ;)

def thm_2179 : A : hol.type -> B : hol.type -> u_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> t_4 : hol.term (Set_2Eset B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.eq B x_5 (f_3 z_2)) -> hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_4)) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) :=
  A : hol.type => B : hol.type => u_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => t_4 : hol.term (Set_2Eset B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.eq B x_5 (f_3 z_2)) => hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_4)) => hol.PROVE_HYP (hol.eq B x_5 (f_3 z_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (thm_2163 A B z_2 f_3 x_5 hyp_1) (hyp_3 : hol.proof (hol.eq B x_5 (f_3 z_2)) => thm_2178 A B u_1 z_2 f_3 t_4 x_5 hyp_3 hyp_2).

(; Theorem: |- ((Set.member x) t) ;)

(; dict ;)

def thm_2180 : A : hol.type -> B : hol.type -> u_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> t_4 : hol.term (Set_2Eset B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.eq B x_5 (f_3 z_2)) -> hyp_2 : hol.proof (hol.and (hol.eq B x_5 (f_3 z_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_4))) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) :=
  A : hol.type => B : hol.type => u_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => t_4 : hol.term (Set_2Eset B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.eq B x_5 (f_3 z_2)) => hyp_2 : hol.proof (hol.and (hol.eq B x_5 (f_3 z_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_4))) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (thm_2162 B A x_5 t_4 f_3 u_1 z_2 hyp_2) (hyp_3 : hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_4)) => thm_2179 A B u_1 z_2 f_3 t_4 x_5 hyp_1 hyp_3).

(; Theorem: |- ((Set.member x) t) ;)

(; dict ;)

def thm_2181 : A : hol.type -> B : hol.type -> u_1 : hol.term (Set_2Eset A) -> z_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> t_4 : hol.term (Set_2Eset B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq B x_5 (f_3 z_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_4))) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) :=
  A : hol.type => B : hol.type => u_1 : hol.term (Set_2Eset A) => z_2 : hol.term A => f_3 : hol.term (hol.arr A B) => t_4 : hol.term (Set_2Eset B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq B x_5 (f_3 z_2)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_2 u_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 z_2) t_4))) => hol.PROVE_HYP (hol.eq B x_5 (f_3 z_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (thm_2160 A B t_4 u_1 z_2 f_3 x_5 hyp_1) (hyp_2 : hol.proof (hol.eq B x_5 (f_3 z_2)) => thm_2180 A B u_1 z_2 f_3 t_4 x_5 hyp_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= x) (f z))) ((Data.Bool./\ ((Set.member z) u)) ((Set.member (f z)) t)))) ((Set.member x) t)) ;)

(; dict ;)

def thm_2182 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> z_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hol.proof (hol.imp (hol.and (hol.eq B x_5 (f_4 z_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_1))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1)) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => z_3 : hol.term A => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq B x_5 (f_4 z_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_1))) => thm_2181 A B u_2 z_3 f_4 t_1 x_5 hyp_1.

(; Theorem: |- (\lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))) z) ;)

(; dict ;)

def thm_2183 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> t_2 : hol.term (Set_2Eset B) -> u_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hyp_1 : hol.proof ((x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2))) z_1) -> hol.proof ((x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2))) z_1) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => t_2 : hol.term (Set_2Eset B) => u_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hyp_1 : hol.proof ((x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2))) z_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= x) (f z))) ((Data.Bool./\ ((Set.member z) u)) ((Set.member (f z)) t))) ;)

(; dict ;)

def thm_2184 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> z_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hyp_1 : hol.proof ((x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_1))) z_3) -> hol.proof (hol.and (hol.eq B x_5 (f_4 z_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_1))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => z_3 : hol.term A => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hyp_1 : hol.proof ((x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_1))) z_3) => hol.EQ_MP ((x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_1))) z_3) (hol.and (hol.eq B x_5 (f_4 z_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) z_3 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 z_3) t_1))) (thm_2106 B A z_3 t_1 u_2 f_4 x_5) (thm_2183 B A z_3 t_1 u_2 f_4 x_5 hyp_1).

(; Theorem: |- ((Set.member x) t) ;)

(; dict ;)

def thm_2185 : A : hol.type -> B : hol.type -> z_1 : hol.term A -> u_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> t_4 : hol.term (Set_2Eset B) -> x_5 : hol.term B -> hyp_1 : hol.proof ((x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_4))) z_1) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) :=
  A : hol.type => B : hol.type => z_1 : hol.term A => u_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => t_4 : hol.term (Set_2Eset B) => x_5 : hol.term B => hyp_1 : hol.proof ((x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_4))) z_1) => thm_2182 A B t_4 u_2 z_1 f_3 x_5 (thm_2184 A B t_4 u_2 z_1 f_3 x_5 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))) z)) ((Set.member x) t)) ;)

(; dict ;)

def thm_2186 : B : hol.type -> A : hol.type -> z_1 : hol.term A -> t_2 : hol.term (Set_2Eset B) -> u_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hol.proof (hol.imp ((x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2))) z_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2)) :=
  B : hol.type => A : hol.type => z_1 : hol.term A => t_2 : hol.term (Set_2Eset B) => u_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hyp_1 : hol.proof ((x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2))) z_1) => thm_2185 A B z_1 u_3 f_4 t_2 x_5 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda z. ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))) z)) ((Set.member x) t))) ;)

(; dict ;)

def thm_2187 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hol.proof (hol.forall A (z_5 : hol.term A => hol.imp ((x_6 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_1))) z_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => z_5 : hol.term A => thm_2186 B A z_5 t_1 u_2 f_3 x_4.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ((Set.member x) t)) ;)

(; dict ;)

def thm_2188 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_1)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => thm_2157 B A t_1 u_2 f_3 x_4 (thm_2187 B A t_1 u_2 f_3 x_4).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))) ;)

(; dict ;)

def thm_2189 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> u_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => u_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_1)))) => hyp_1.

(; Theorem: |- ((Set.member x) t) ;)

(; dict ;)

def thm_2190 : A : hol.type -> B : hol.type -> u_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> t_3 : hol.term (Set_2Eset B) -> x_4 : hol.term B -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_2 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_3)))) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 t_3) :=
  A : hol.type => B : hol.type => u_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => t_3 : hol.term (Set_2Eset B) => x_4 : hol.term B => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_2 x_5)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_3)))) => thm_2188 B A t_3 u_1 f_2 x_4 (thm_2189 B A t_3 u_1 f_2 x_4 hyp_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ((Set.member x) t)) ;)

(; dict ;)

def thm_2191 : B : hol.type -> A : hol.type -> v_1 : hol.term (Set_2Eset B) -> t_2 : hol.term (Set_2Eset B) -> u_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> x_5 : hol.term B -> hyp_1 : hol.proof (hol.forall B (x_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 v_1))) -> hyp_2 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 v_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3) (hol.eq B (f_4 x_7) y_6))))) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2)) :=
  B : hol.type => A : hol.type => v_1 : hol.term (Set_2Eset B) => t_2 : hol.term (Set_2Eset B) => u_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => x_5 : hol.term B => hyp_1 : hol.proof (hol.forall B (x_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 v_1))) => hyp_2 : hol.proof (hol.forall B (y_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_6 v_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_3) (hol.eq B (f_4 x_7) y_6))))) => hol.PROP_EXT (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) (hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) => thm_2156 A B v_1 u_3 f_4 t_2 x_5 hyp_1 hyp_2 (thm_2071 B t_2 x_5 hyp_3)) (hyp_3 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2)))) => (hyp_4 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2)))) => thm_2190 A B u_3 f_4 t_2 x_5 hyp_4) (thm_2189 B A t_2 u_3 f_4 x_5 hyp_3)).

(; Theorem: |- (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ((Set.member x) t))) ;)

(; dict ;)

def thm_2192 : A : hol.type -> B : hol.type -> v_1 : hol.term (Set_2Eset B) -> t_2 : hol.term (Set_2Eset B) -> u_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_1))) -> hyp_2 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 v_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (hol.eq B (f_4 x_6) y_5))))) -> hol.proof (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2))) :=
  A : hol.type => B : hol.type => v_1 : hol.term (Set_2Eset B) => t_2 : hol.term (Set_2Eset B) => u_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_1))) => hyp_2 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 v_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3) (hol.eq B (f_4 x_6) y_5))))) => x_5 : hol.term B => thm_2191 B A v_1 t_2 u_3 f_4 x_5 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))) ((Set.member x) t)))) ;)

(; dict ;)

def thm_2193 : B : hol.type -> A : hol.type -> v_1 : hol.term (Set_2Eset B) -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_1))) -> hyp_2 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 v_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4) (hol.eq B (f_3 x_6) y_5))))) -> hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_2)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2)))) :=
  B : hol.type => A : hol.type => v_1 : hol.term (Set_2Eset B) => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_1))) => hyp_2 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 v_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4) (hol.eq B (f_3 x_6) y_5))))) => hol.EQ_MP (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_2)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_2)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2)))) (thm_2067 A B t_2 u_4 f_3) (hol.EQ_MP (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_2)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_2)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2))) (thm_2070 A B t_2 u_4 f_3) (thm_2192 A B v_1 t_2 u_4 f_3 hyp_1 hyp_2)).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))))) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t))))))))) ((Set.member x) t)))) ;)

(; dict ;)

def thm_2194 : B : hol.type -> A : hol.type -> v_1 : hol.term (Set_2Eset B) -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_1))) -> hyp_2 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 v_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4) (hol.eq B (f_3 x_6) y_5))))) -> hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_6 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq A v_6 x_7) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_7) t_2)))))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_7 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq A v_7 x_8) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_8) t_2)))))))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2)))) :=
  B : hol.type => A : hol.type => v_1 : hol.term (Set_2Eset B) => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_1))) => hyp_2 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 v_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4) (hol.eq B (f_3 x_6) y_5))))) => hol.EQ_MP (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_2)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_6 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq A v_6 x_7) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_7) t_2)))))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_7 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq A v_7 x_8) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_8) t_2)))))))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2)))) (thm_2056 B A t_2 f_3 u_4) (thm_2193 B A v_1 t_2 f_3 u_4 hyp_1 hyp_2).

(; Theorem: |- (\lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) t)))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) u)) ((Set.member (f x)) t)))))) ;)

(; dict ;)

def thm_2195 : B : hol.type -> A : hol.type -> v_1 : hol.term (Set_2Eset B) -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_1))) -> hyp_2 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 v_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4) (hol.eq B (f_3 x_6) y_5))))) -> hol.proof ((s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_2)))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_2)))))) :=
  B : hol.type => A : hol.type => v_1 : hol.term (Set_2Eset B) => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_1))) => hyp_2 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 v_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4) (hol.eq B (f_3 x_6) y_5))))) => hol.EQ_MP (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_6 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq A v_6 x_7) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_7) t_2)))))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_7 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq A v_7 x_8) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_8) t_2)))))))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2)))) ((s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_2)))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_2)))))) (thm_2031 B A t_2 f_3 u_4) (thm_2194 B A v_1 t_2 f_3 u_4 hyp_1 hyp_2).

(; Theorem: |- (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) t))))) ;)

(; dict ;)

def thm_2196 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof ((s_4 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1)))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_4 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((s_4 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1)))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)))))) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_334 A x_1 P_2 hyp_1) (Set_2Eset A) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_4 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq A v_4 x_5) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1))))) (s_4 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_1)))) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) t))))) ;)

(; dict ;)

def thm_2197 : B : hol.type -> A : hol.type -> v_1 : hol.term (Set_2Eset B) -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_1))) -> hyp_2 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 v_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4) (hol.eq B (f_3 x_6) y_5))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_2))))) :=
  B : hol.type => A : hol.type => v_1 : hol.term (Set_2Eset B) => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_1))) => hyp_2 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 v_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4) (hol.eq B (f_3 x_6) y_5))))) => hol.PROVE_HYP ((s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_2)))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_2))))) (thm_2195 B A v_1 t_2 f_3 u_4 hyp_1 hyp_2) (hyp_3 : hol.proof ((s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_2)))) (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) (v_5 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq A v_5 x_6) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_2)))))) => thm_2196 B A t_2 f_3 u_4 hyp_3).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) v)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) t)))))) ;)

(; dict ;)

def thm_2198 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> t_4 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2) (hol.eq B (f_1 x_6) y_5))))) -> hol.proof (hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => t_4 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.forall B (y_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_5 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2) (hol.eq B (f_1 x_6) y_5))))) => hyp_2 : hol.proof (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) => thm_2197 B A v_3 t_4 f_1 u_2 hyp_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) v)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) t))))))) ;)

(; dict ;)

def thm_2199 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))) -> hol.proof (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))) => t_4 : hol.term (Set_2Eset B) => thm_2198 A B f_1 u_2 v_3 t_4 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))))) (Data.Bool.! \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) v)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) t)))))))) ;)

(; dict ;)

def thm_2200 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> hol.proof (hol.imp (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))) (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4)))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))) => hol.EQ_MP (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4))))))) (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4))))))) (thm_2029 A B f_1 u_2 v_3) (thm_2199 A B f_1 u_2 v_3 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) v)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) t))))))) ;)

(; dict ;)

def thm_2201 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4))))))) -> hol.proof (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4))))))) => hyp_1.

(; Theorem: |- ((= ((Set.member x) ((Set.insert y) Set.{}))) ((= x) y)) ;)

(; dict ;)

def thm_2202 : B : hol.type -> y_1 : hol.term B -> x_2 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_1 (Set_2E_7B_7D (Set_2Eset B)))) (hol.eq B x_2 y_1)) :=
  B : hol.type => y_1 : hol.term B => x_2 : hol.term B => (A : hol.type => y_1 : hol.term A => x_2 : hol.term A => thm_1766 A y_1 x_2) B y_1 x_2.

(; Theorem: |- ((= (Data.Bool.==> ((Set.member x) ((Set.insert y) Set.{})))) (Data.Bool.==> ((= x) y))) ;)

(; dict ;)

def thm_2203 : B : hol.type -> y_1 : hol.term B -> x_2 : hol.term B -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_1 (Set_2E_7B_7D (Set_2Eset B))))) (hol.imp (hol.eq B x_2 y_1))) :=
  B : hol.type => y_1 : hol.term B => x_2 : hol.term B => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_1 (Set_2E_7B_7D (Set_2Eset B)))) (hol.eq B x_2 y_1) thm_107 (thm_2202 B y_1 x_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) ((Set.insert y) Set.{}))) ((Set.member x) v))) ((Data.Bool.==> ((= x) y)) ((Set.member x) v))) ;)

(; dict ;)

def thm_2204 : B : hol.type -> v_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> x_3 : hol.term B -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_2 (Set_2E_7B_7D (Set_2Eset B)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1)) (hol.imp (hol.eq B x_3 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1))) :=
  B : hol.type => v_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => x_3 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_2 (Set_2E_7B_7D (Set_2Eset B))))) (hol.imp (hol.eq B x_3 y_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1) (thm_2203 B y_2 x_3) (thm_2077 B v_1 x_3).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert y) Set.{}))) ((Set.member x) v))) \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) v))) ;)

(; dict ;)

def thm_2205 : B : hol.type -> v_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> hol.proof (hol.eq (hol.arr B hol.bool) (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_2 (Set_2E_7B_7D (Set_2Eset B)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1)) (x_3 : hol.term B => hol.imp (hol.eq B x_3 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1))) :=
  B : hol.type => v_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => hol.ABS_THM B hol.bool (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_2 (Set_2E_7B_7D (Set_2Eset B)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1)) (x_3 : hol.term B => hol.imp (hol.eq B x_3 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1)) (x_3 : hol.term B => thm_2204 B v_1 y_2 x_3).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert y) Set.{}))) ((Set.member x) v)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) v)))) ;)

(; dict ;)

def thm_2206 : B : hol.type -> v_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.forall B (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_2 (Set_2E_7B_7D (Set_2Eset B)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1))) (hol.forall B (x_3 : hol.term B => hol.imp (hol.eq B x_3 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1)))) :=
  B : hol.type => v_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_2 (Set_2E_7B_7D (Set_2Eset B)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1)) (x_3 : hol.term B => hol.imp (hol.eq B x_3 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1)) (thm_63 B) (thm_2205 B v_1 y_2).

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert y) Set.{}))) ((Set.member x) v))))) (Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) v))))) ;)

(; dict ;)

def thm_2207 : B : hol.type -> v_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.forall B (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_2 (Set_2E_7B_7D (Set_2Eset B)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1)))) (hol.imp (hol.forall B (x_3 : hol.term B => hol.imp (hol.eq B x_3 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1))))) :=
  B : hol.type => v_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.forall B (x_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_2 (Set_2E_7B_7D (Set_2Eset B)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1))) (hol.forall B (x_3 : hol.term B => hol.imp (hol.eq B x_3 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1))) thm_107 (thm_2206 B v_1 y_2).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u))))) (Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u))))) ;)

(; dict ;)

def thm_2208 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)))) (hol.and (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1))))) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 u_1)))).

(; Theorem: |- ((= (= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))) (= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_2209 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term B -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term B => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B x_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) ((Set.insert y) Set.{})))) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y))) ;)

(; dict ;)

def thm_2210 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_1 (Set_2E_7B_7D (Set_2Eset B))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (hol.eq B x_4 y_1))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => x_4 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_1 (Set_2E_7B_7D (Set_2Eset B)))) (hol.eq B x_4 y_1) (thm_2209 B A s_2 f_3 x_4) (thm_2202 B y_1 x_4).

(; Theorem: |- ((= \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) ((Set.insert y) Set.{})))) \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y))) ;)

(; dict ;)

def thm_2211 : A : hol.type -> B : hol.type -> y_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_1 (Set_2E_7B_7D (Set_2Eset B))))) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (hol.eq B x_4 y_1))) :=
  A : hol.type => B : hol.type => y_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.ABS_THM B hol.bool (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_1 (Set_2E_7B_7D (Set_2Eset B))))) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (hol.eq B x_4 y_1)) (x_4 : hol.term B => thm_2210 B A y_1 s_2 f_3 x_4).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) ((Set.insert y) Set.{}))))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y)))) ;)

(; dict ;)

def thm_2212 : A : hol.type -> B : hol.type -> y_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_1 (Set_2E_7B_7D (Set_2Eset B)))))) (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (hol.eq B x_4 y_1)))) :=
  A : hol.type => B : hol.type => y_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_1 (Set_2E_7B_7D (Set_2Eset B))))) (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (hol.eq B x_4 y_1)) (thm_63 B) (thm_2211 A B y_1 s_2 f_3).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) ((Set.insert y) Set.{})))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y))))) ;)

(; dict ;)

def thm_2213 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_1 (Set_2E_7B_7D (Set_2Eset B))))))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B x_5 y_1))))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => s_4 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3)))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_1 (Set_2E_7B_7D (Set_2Eset B)))))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B x_5 y_1))) (thm_2208 A u_3 s_4) (thm_2212 A B y_1 s_4 f_2).

(; Theorem: |- ((= \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) ((Set.insert y) Set.{})))))) \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y))))) ;)

(; dict ;)

def thm_2214 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_4 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_1 (Set_2E_7B_7D (Set_2Eset B))))))) (s_4 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B x_5 y_1))))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => hol.ABS_THM (Set_2Eset A) hol.bool (s_4 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_1 (Set_2E_7B_7D (Set_2Eset B))))))) (s_4 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B x_5 y_1)))) (s_4 : hol.term (Set_2Eset A) => thm_2213 B A y_1 f_2 u_3 s_4).

(; Theorem: |- ((= (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) ((Set.insert y) Set.{}))))))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y)))))) ;)

(; dict ;)

def thm_2215 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_4 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_1 (Set_2E_7B_7D (Set_2Eset B)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_4 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B x_5 y_1)))))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool)) (s_4 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_1 (Set_2E_7B_7D (Set_2Eset B))))))) (s_4 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B x_5 y_1)))) (thm_2010 A) (thm_2214 B A y_1 f_2 u_3).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert y) Set.{}))) ((Set.member x) v)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) ((Set.insert y) Set.{})))))))) ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) v)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y))))))) ;)

(; dict ;)

def thm_2216 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> y_4 : hol.term B -> hol.proof (hol.eq hol.bool (hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_4 (Set_2E_7B_7D (Set_2Eset B)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_4 (Set_2E_7B_7D (Set_2Eset B))))))))) (hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (hol.eq B x_5 y_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_4))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => y_4 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_4 (Set_2E_7B_7D (Set_2Eset B)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3)))) (hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (hol.eq B x_5 y_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_4 (Set_2E_7B_7D (Set_2Eset B)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_4))))) (thm_2207 B v_3 y_4) (thm_2215 B A y_4 f_1 u_2).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert y) Set.{}))) ((Set.member x) v)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) ((Set.insert y) Set.{}))))))))) (Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) v)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y)))))))) ;)

(; dict ;)

def thm_2217 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> y_4 : hol.term B -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_4 (Set_2E_7B_7D (Set_2Eset B)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_4 (Set_2E_7B_7D (Set_2Eset B)))))))))) (hol.imp (hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (hol.eq B x_5 y_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_4)))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => y_4 : hol.term B => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_4 (Set_2E_7B_7D (Set_2Eset B)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_4 (Set_2E_7B_7D (Set_2Eset B))))))))) (hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (hol.eq B x_5 y_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_4)))))) thm_107 (thm_2216 A B f_1 u_2 v_3 y_4).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))) ;)

(; dict ;)

def thm_2218 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.eq B (f_2 x_4) y_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.eq B (f_2 x_4) y_1)))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => hol.REFL hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.eq B (f_2 x_4) y_1))).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert y) Set.{}))) ((Set.member x) v)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) ((Set.insert y) Set.{})))))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))) ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) v)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y))))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))) ;)

(; dict ;)

def thm_2219 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> y_4 : hol.term B -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_4 (Set_2E_7B_7D (Set_2Eset B)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_4 (Set_2E_7B_7D (Set_2Eset B))))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))) (hol.imp (hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (hol.eq B x_5 y_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => y_4 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.imp (hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_4 (Set_2E_7B_7D (Set_2Eset B)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_4 (Set_2E_7B_7D (Set_2Eset B)))))))))) (hol.imp (hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (hol.eq B x_5 y_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_4))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))) (thm_2217 A B f_1 u_2 v_3 y_4) (thm_2218 B A y_4 f_1 u_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) v)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y))))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))) ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert y) Set.{}))) ((Set.member x) v)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) ((Set.insert y) Set.{})))))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))) ;)

(; dict ;)

def thm_2220 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> y_4 : hol.term B -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (hol.eq B x_5 y_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))) (hol.imp (hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_4 (Set_2E_7B_7D (Set_2Eset B)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_4 (Set_2E_7B_7D (Set_2Eset B))))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => y_4 : hol.term B => hol.SYM hol.bool (hol.imp (hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_4 (Set_2E_7B_7D (Set_2Eset B)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_4 (Set_2E_7B_7D (Set_2Eset B))))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))) (hol.imp (hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (hol.eq B x_5 y_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))) (thm_2219 A B f_1 u_2 v_3 y_4).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ X) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> X) Y)) Z))) ((Data.Bool.==> ((Data.Bool./\ X) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> X) Y)) Z))) ;)

(; dict ;)

def thm_2221 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> X_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1))) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => X_3 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ X) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> X) Y)) Z))) ((Data.Bool.==> ((Data.Bool./\ X) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> X) Y)) Z))) ;)

(; dict ;)

def thm_2222 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> X_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1))) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => X_3 : hol.term hol.bool => hol.TRANS hol.bool (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) (thm_2221 Z_1 Y_2 X_3) (thm_2221 Z_1 Y_2 X_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ X) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> X) Y)) Z)) ;)

(; dict ;)

def thm_2223 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> X_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) -> hol.proof (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => X_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) => hyp_1.

(; Theorem: |- ((Data.Bool./\ X) ((Data.Bool.==> Y) Z)) ;)

(; dict ;)

def thm_2224 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> X_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and X_3 (hol.imp Y_2 Z_1)) -> hol.proof (hol.and X_3 (hol.imp Y_2 Z_1)) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => X_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.and X_3 (hol.imp Y_2 Z_1)) => hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> X) Y)) Z) ;)

(; dict ;)

def thm_2225 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> X_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and X_3 (hol.imp Y_2 Z_1)) -> hyp_2 : hol.proof (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) -> hol.proof (hol.imp (hol.imp X_3 Y_2) Z_1) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => X_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.and X_3 (hol.imp Y_2 Z_1)) => hyp_2 : hol.proof (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) => thm_2223 Z_1 Y_2 X_3 hyp_2 (thm_2224 Z_1 Y_2 X_3 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ X) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> X) Y)) Z))) ((Data.Bool.==> ((Data.Bool.==> X) Y)) Z)) ;)

(; dict ;)

def thm_2226 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> X_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and X_3 (hol.imp Y_2 Z_1)) -> hol.proof (hol.imp (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => X_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.and X_3 (hol.imp Y_2 Z_1)) => hyp_2 : hol.proof (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) => thm_2225 Z_1 Y_2 X_3 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> ((Data.Bool./\ X) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> X) Y)) Z))) ((Data.Bool.==> ((Data.Bool./\ X) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> X) Y)) Z))) ;)

(; dict ;)

def thm_2227 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> X_3 : hol.term hol.bool -> hol.proof (hol.imp (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1))) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => X_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) => hyp_2 : hol.proof (hol.and X_3 (hol.imp Y_2 Z_1)) => thm_2226 Z_1 Y_2 X_3 hyp_2 (thm_2223 Z_1 Y_2 X_3 hyp_1).

(; Theorem: |- ((= (= (\lambda _11170. ((Data.Bool.==> ((Data.Bool./\ _11170) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> _11170) Y)) Z)) X))) (= (\lambda _11170. ((Data.Bool.==> ((Data.Bool./\ _11170) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> _11170) Y)) Z)) X))) ;)

(; dict ;)

def thm_2228 : X_1 : hol.term hol.bool -> Z_2 : hol.term hol.bool -> Y_3 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11170_4 : hol.term hol.bool => hol.imp (hol.and __11170_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11170_4 Y_3) Z_2)) X_1)) (hol.eq hol.bool ((__11170_4 : hol.term hol.bool => hol.imp (hol.and __11170_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11170_4 Y_3) Z_2)) X_1))) :=
  X_1 : hol.term hol.bool => Z_2 : hol.term hol.bool => Y_3 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11170_4 : hol.term hol.bool => hol.imp (hol.and __11170_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11170_4 Y_3) Z_2)) X_1)).

(; Theorem: |- ((= (\lambda _11170. ((Data.Bool.==> ((Data.Bool./\ _11170) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> _11170) Y)) Z)) Data.Bool.F)) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) Y)) Z))) ;)

(; dict ;)

def thm_2229 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__11170_3 : hol.term hol.bool => hol.imp (hol.and __11170_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp __11170_3 Y_2) Z_1)) hol.false) (hol.imp (hol.and hol.false (hol.imp Y_2 Z_1)) (hol.imp (hol.imp hol.false Y_2) Z_1))) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__11170_3 : hol.term hol.bool => hol.imp (hol.and __11170_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp __11170_3 Y_2) Z_1)) hol.false.

(; Theorem: |- ((= ((= (\lambda _11170. ((Data.Bool.==> ((Data.Bool./\ _11170) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> _11170) Y)) Z)) X)) (\lambda _11170. ((Data.Bool.==> ((Data.Bool./\ _11170) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> _11170) Y)) Z)) Data.Bool.F))) ((= (\lambda _11170. ((Data.Bool.==> ((Data.Bool./\ _11170) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> _11170) Y)) Z)) X)) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) Y)) Z)))) ;)

(; dict ;)

def thm_2230 : X_1 : hol.term hol.bool -> Z_2 : hol.term hol.bool -> Y_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11170_4 : hol.term hol.bool => hol.imp (hol.and __11170_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11170_4 Y_3) Z_2)) X_1) ((__11170_4 : hol.term hol.bool => hol.imp (hol.and __11170_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11170_4 Y_3) Z_2)) hol.false)) (hol.eq hol.bool ((__11170_4 : hol.term hol.bool => hol.imp (hol.and __11170_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11170_4 Y_3) Z_2)) X_1) (hol.imp (hol.and hol.false (hol.imp Y_3 Z_2)) (hol.imp (hol.imp hol.false Y_3) Z_2)))) :=
  X_1 : hol.term hol.bool => Z_2 : hol.term hol.bool => Y_3 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11170_4 : hol.term hol.bool => hol.imp (hol.and __11170_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11170_4 Y_3) Z_2)) X_1)) (hol.eq hol.bool ((__11170_4 : hol.term hol.bool => hol.imp (hol.and __11170_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11170_4 Y_3) Z_2)) X_1)) ((__11170_4 : hol.term hol.bool => hol.imp (hol.and __11170_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11170_4 Y_3) Z_2)) hol.false) (hol.imp (hol.and hol.false (hol.imp Y_3 Z_2)) (hol.imp (hol.imp hol.false Y_3) Z_2)) (thm_2228 X_1 Z_2 Y_3) (thm_2229 Z_2 Y_3).

(; Theorem: |- ((= (\lambda _11170. ((Data.Bool.==> ((Data.Bool./\ _11170) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> _11170) Y)) Z)) X)) ((Data.Bool.==> ((Data.Bool./\ X) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> X) Y)) Z))) ;)

(; dict ;)

def thm_2231 : X_1 : hol.term hol.bool -> Z_2 : hol.term hol.bool -> Y_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__11170_4 : hol.term hol.bool => hol.imp (hol.and __11170_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11170_4 Y_3) Z_2)) X_1) (hol.imp (hol.and X_1 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp X_1 Y_3) Z_2))) :=
  X_1 : hol.term hol.bool => Z_2 : hol.term hol.bool => Y_3 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__11170_4 : hol.term hol.bool => hol.imp (hol.and __11170_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11170_4 Y_3) Z_2)) X_1.

(; Theorem: |- ((= (= (\lambda _11170. ((Data.Bool.==> ((Data.Bool./\ _11170) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> _11170) Y)) Z)) X))) (= ((Data.Bool.==> ((Data.Bool./\ X) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> X) Y)) Z)))) ;)

(; dict ;)

def thm_2232 : X_1 : hol.term hol.bool -> Z_2 : hol.term hol.bool -> Y_3 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11170_4 : hol.term hol.bool => hol.imp (hol.and __11170_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11170_4 Y_3) Z_2)) X_1)) (hol.eq hol.bool (hol.imp (hol.and X_1 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp X_1 Y_3) Z_2)))) :=
  X_1 : hol.term hol.bool => Z_2 : hol.term hol.bool => Y_3 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__11170_4 : hol.term hol.bool => hol.imp (hol.and __11170_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11170_4 Y_3) Z_2)) X_1) (hol.imp (hol.and X_1 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp X_1 Y_3) Z_2)) thm_64 (thm_2231 X_1 Z_2 Y_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) Y)) Z))) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) Y)) Z))) ;)

(; dict ;)

def thm_2233 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and hol.false (hol.imp Y_2 Z_1)) (hol.imp (hol.imp hol.false Y_2) Z_1)) (hol.imp (hol.and hol.false (hol.imp Y_2 Z_1)) (hol.imp (hol.imp hol.false Y_2) Z_1))) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.and hol.false (hol.imp Y_2 Z_1)) (hol.imp (hol.imp hol.false Y_2) Z_1)).

(; Theorem: |- ((= ((= (\lambda _11170. ((Data.Bool.==> ((Data.Bool./\ _11170) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> _11170) Y)) Z)) X)) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) Y)) Z)))) ((= ((Data.Bool.==> ((Data.Bool./\ X) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> X) Y)) Z))) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) Y)) Z)))) ;)

(; dict ;)

def thm_2234 : X_1 : hol.term hol.bool -> Z_2 : hol.term hol.bool -> Y_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11170_4 : hol.term hol.bool => hol.imp (hol.and __11170_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11170_4 Y_3) Z_2)) X_1) (hol.imp (hol.and hol.false (hol.imp Y_3 Z_2)) (hol.imp (hol.imp hol.false Y_3) Z_2))) (hol.eq hol.bool (hol.imp (hol.and X_1 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp X_1 Y_3) Z_2)) (hol.imp (hol.and hol.false (hol.imp Y_3 Z_2)) (hol.imp (hol.imp hol.false Y_3) Z_2)))) :=
  X_1 : hol.term hol.bool => Z_2 : hol.term hol.bool => Y_3 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11170_4 : hol.term hol.bool => hol.imp (hol.and __11170_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11170_4 Y_3) Z_2)) X_1)) (hol.eq hol.bool (hol.imp (hol.and X_1 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp X_1 Y_3) Z_2))) (hol.imp (hol.and hol.false (hol.imp Y_3 Z_2)) (hol.imp (hol.imp hol.false Y_3) Z_2)) (hol.imp (hol.and hol.false (hol.imp Y_3 Z_2)) (hol.imp (hol.imp hol.false Y_3) Z_2)) (thm_2232 X_1 Z_2 Y_3) (thm_2233 Z_2 Y_3).

(; Theorem: |- ((= ((= (\lambda _11170. ((Data.Bool.==> ((Data.Bool./\ _11170) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> _11170) Y)) Z)) X)) (\lambda _11170. ((Data.Bool.==> ((Data.Bool./\ _11170) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> _11170) Y)) Z)) Data.Bool.F))) ((= ((Data.Bool.==> ((Data.Bool./\ X) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> X) Y)) Z))) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) Y)) Z)))) ;)

(; dict ;)

def thm_2235 : X_1 : hol.term hol.bool -> Z_2 : hol.term hol.bool -> Y_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11170_4 : hol.term hol.bool => hol.imp (hol.and __11170_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11170_4 Y_3) Z_2)) X_1) ((__11170_4 : hol.term hol.bool => hol.imp (hol.and __11170_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11170_4 Y_3) Z_2)) hol.false)) (hol.eq hol.bool (hol.imp (hol.and X_1 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp X_1 Y_3) Z_2)) (hol.imp (hol.and hol.false (hol.imp Y_3 Z_2)) (hol.imp (hol.imp hol.false Y_3) Z_2)))) :=
  X_1 : hol.term hol.bool => Z_2 : hol.term hol.bool => Y_3 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__11170_4 : hol.term hol.bool => hol.imp (hol.and __11170_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11170_4 Y_3) Z_2)) X_1) ((__11170_4 : hol.term hol.bool => hol.imp (hol.and __11170_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11170_4 Y_3) Z_2)) hol.false)) (hol.eq hol.bool ((__11170_4 : hol.term hol.bool => hol.imp (hol.and __11170_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11170_4 Y_3) Z_2)) X_1) (hol.imp (hol.and hol.false (hol.imp Y_3 Z_2)) (hol.imp (hol.imp hol.false Y_3) Z_2))) (hol.eq hol.bool (hol.imp (hol.and X_1 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp X_1 Y_3) Z_2)) (hol.imp (hol.and hol.false (hol.imp Y_3 Z_2)) (hol.imp (hol.imp hol.false Y_3) Z_2))) (thm_2230 X_1 Z_2 Y_3) (thm_2234 X_1 Z_2 Y_3).

(; Theorem: |- ((= \lambda _11170. ((Data.Bool.==> ((Data.Bool./\ _11170) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> _11170) Y)) Z))) \lambda _11170. ((Data.Bool.==> ((Data.Bool./\ _11170) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> _11170) Y)) Z))) ;)

(; dict ;)

def thm_2236 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__11170_3 : hol.term hol.bool => hol.imp (hol.and __11170_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp __11170_3 Y_2) Z_1)) (__11170_3 : hol.term hol.bool => hol.imp (hol.and __11170_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp __11170_3 Y_2) Z_1))) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__11170_3 : hol.term hol.bool => hol.imp (hol.and __11170_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp __11170_3 Y_2) Z_1)).

(; Theorem: |- ((= X) Data.Bool.F) ;)

(; dict ;)

def thm_2237 : X_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool X_1 hol.false) -> hol.proof (hol.eq hol.bool X_1 hol.false) :=
  X_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool X_1 hol.false) => hyp_1.

(; Theorem: |- ((= (\lambda _11170. ((Data.Bool.==> ((Data.Bool./\ _11170) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> _11170) Y)) Z)) X)) (\lambda _11170. ((Data.Bool.==> ((Data.Bool./\ _11170) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> _11170) Y)) Z)) Data.Bool.F)) ;)

(; dict ;)

def thm_2238 : X_1 : hol.term hol.bool -> Z_2 : hol.term hol.bool -> Y_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool X_1 hol.false) -> hol.proof (hol.eq hol.bool ((__11170_4 : hol.term hol.bool => hol.imp (hol.and __11170_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11170_4 Y_3) Z_2)) X_1) ((__11170_4 : hol.term hol.bool => hol.imp (hol.and __11170_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11170_4 Y_3) Z_2)) hol.false)) :=
  X_1 : hol.term hol.bool => Z_2 : hol.term hol.bool => Y_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool X_1 hol.false) => hol.APP_THM hol.bool hol.bool (__11170_4 : hol.term hol.bool => hol.imp (hol.and __11170_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11170_4 Y_3) Z_2)) (__11170_4 : hol.term hol.bool => hol.imp (hol.and __11170_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11170_4 Y_3) Z_2)) X_1 hol.false (thm_2236 Z_2 Y_3) (thm_2237 X_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ X) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> X) Y)) Z))) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) Y)) Z))) ;)

(; dict ;)

def thm_2239 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> X_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool X_3 hol.false) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) (hol.imp (hol.and hol.false (hol.imp Y_2 Z_1)) (hol.imp (hol.imp hol.false Y_2) Z_1))) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => X_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool X_3 hol.false) => hol.EQ_MP (hol.eq hol.bool ((__11170_4 : hol.term hol.bool => hol.imp (hol.and __11170_4 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp __11170_4 Y_2) Z_1)) X_3) ((__11170_4 : hol.term hol.bool => hol.imp (hol.and __11170_4 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp __11170_4 Y_2) Z_1)) hol.false)) (hol.eq hol.bool (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) (hol.imp (hol.and hol.false (hol.imp Y_2 Z_1)) (hol.imp (hol.imp hol.false Y_2) Z_1))) (thm_2235 X_3 Z_1 Y_2) (thm_2238 X_3 Z_1 Y_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) Y)) Z))) ((Data.Bool.==> ((Data.Bool./\ X) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> X) Y)) Z))) ;)

(; dict ;)

def thm_2240 : X_1 : hol.term hol.bool -> Z_2 : hol.term hol.bool -> Y_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool X_1 hol.false) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and hol.false (hol.imp Y_3 Z_2)) (hol.imp (hol.imp hol.false Y_3) Z_2)) (hol.imp (hol.and X_1 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp X_1 Y_3) Z_2))) :=
  X_1 : hol.term hol.bool => Z_2 : hol.term hol.bool => Y_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool X_1 hol.false) => hol.SYM hol.bool (hol.imp (hol.and X_1 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp X_1 Y_3) Z_2)) (hol.imp (hol.and hol.false (hol.imp Y_3 Z_2)) (hol.imp (hol.imp hol.false Y_3) Z_2)) (thm_2239 Z_2 Y_3 X_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> Y) Z))) Data.Bool.F) ;)

(; dict ;)

def thm_2241 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.false (hol.imp Y_2 Z_1)) hol.false) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_162 t_1) (hol.imp Y_2 Z_1).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> Y) Z)))) (Data.Bool.==> Data.Bool.F)) ;)

(; dict ;)

def thm_2242 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and hol.false (hol.imp Y_2 Z_1))) (hol.imp hol.false)) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.and hol.false (hol.imp Y_2 Z_1)) hol.false thm_107 (thm_2241 Z_1 Y_2).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) Y)) Data.Bool.T) ;)

(; dict ;)

def thm_2243 : Y_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.false Y_1) hol.true) :=
  Y_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_460 t_1) Y_1.

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool.==> Data.Bool.F) Y))) (Data.Bool.==> Data.Bool.T)) ;)

(; dict ;)

def thm_2244 : Y_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.imp hol.false Y_1)) (hol.imp hol.true)) :=
  Y_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.imp hol.false Y_1) hol.true thm_107 (thm_2243 Y_1).

(; Theorem: |- ((= Z) Z) ;)

(; dict ;)

def thm_2245 : Z_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool Z_1 Z_1) :=
  Z_1 : hol.term hol.bool => hol.REFL hol.bool Z_1.

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) Y)) Z)) ((Data.Bool.==> Data.Bool.T) Z)) ;)

(; dict ;)

def thm_2246 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp hol.false Y_2) Z_1) (hol.imp hol.true Z_1)) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.imp (hol.imp hol.false Y_2)) (hol.imp hol.true) Z_1 Z_1 (thm_2244 Y_2) (thm_2245 Z_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) Z)) Z) ;)

(; dict ;)

def thm_2247 : Z_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.true Z_1) Z_1) :=
  Z_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_450 t_1) Z_1.

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) Y)) Z)) Z) ;)

(; dict ;)

def thm_2248 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp hol.false Y_2) Z_1) Z_1) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.imp (hol.imp hol.false Y_2) Z_1) (hol.imp hol.true Z_1) Z_1 (thm_2246 Z_1 Y_2) (thm_2247 Z_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) Y)) Z))) ((Data.Bool.==> Data.Bool.F) Z)) ;)

(; dict ;)

def thm_2249 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and hol.false (hol.imp Y_2 Z_1)) (hol.imp (hol.imp hol.false Y_2) Z_1)) (hol.imp hol.false Z_1)) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and hol.false (hol.imp Y_2 Z_1))) (hol.imp hol.false) (hol.imp (hol.imp hol.false Y_2) Z_1) Z_1 (thm_2242 Z_1 Y_2) (thm_2248 Z_1 Y_2).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) Z)) Data.Bool.T) ;)

(; dict ;)

def thm_2250 : Z_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.false Z_1) hol.true) :=
  Z_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_460 t_1) Z_1.

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) Y)) Z))) Data.Bool.T) ;)

(; dict ;)

def thm_2251 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and hol.false (hol.imp Y_2 Z_1)) (hol.imp (hol.imp hol.false Y_2) Z_1)) hol.true) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.imp (hol.and hol.false (hol.imp Y_2 Z_1)) (hol.imp (hol.imp hol.false Y_2) Z_1)) (hol.imp hol.false Z_1) hol.true (thm_2249 Z_1 Y_2) (thm_2250 Z_1).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) Y)) Z))) ;)

(; dict ;)

def thm_2252 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.imp (hol.and hol.false (hol.imp Y_2 Z_1)) (hol.imp (hol.imp hol.false Y_2) Z_1))) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => hol.SYM hol.bool (hol.imp (hol.and hol.false (hol.imp Y_2 Z_1)) (hol.imp (hol.imp hol.false Y_2) Z_1)) hol.true (thm_2251 Z_1 Y_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ Data.Bool.F) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.F) Y)) Z)) ;)

(; dict ;)

def thm_2253 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.and hol.false (hol.imp Y_2 Z_1)) (hol.imp (hol.imp hol.false Y_2) Z_1)) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => hol.EQ_MP hol.true (hol.imp (hol.and hol.false (hol.imp Y_2 Z_1)) (hol.imp (hol.imp hol.false Y_2) Z_1)) (thm_2252 Z_1 Y_2) thm_15.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ X) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> X) Y)) Z)) ;)

(; dict ;)

def thm_2254 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> X_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool X_3 hol.false) -> hol.proof (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => X_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool X_3 hol.false) => hol.EQ_MP (hol.imp (hol.and hol.false (hol.imp Y_2 Z_1)) (hol.imp (hol.imp hol.false Y_2) Z_1)) (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) (thm_2240 X_3 Z_1 Y_2 hyp_1) (thm_2253 Z_1 Y_2).

(; Theorem: |- ((Data.Bool.==> ((= X) Data.Bool.F)) ((Data.Bool.==> ((Data.Bool./\ X) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> X) Y)) Z))) ;)

(; dict ;)

def thm_2255 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> X_3 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool X_3 hol.false) (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1))) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => X_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool X_3 hol.false) => thm_2254 Z_1 Y_2 X_3 hyp_1.

(; Theorem: |- ((= (= (\lambda _11168. ((Data.Bool.==> ((Data.Bool./\ _11168) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> _11168) Y)) Z)) X))) (= (\lambda _11168. ((Data.Bool.==> ((Data.Bool./\ _11168) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> _11168) Y)) Z)) X))) ;)

(; dict ;)

def thm_2256 : X_1 : hol.term hol.bool -> Z_2 : hol.term hol.bool -> Y_3 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11168_4 : hol.term hol.bool => hol.imp (hol.and __11168_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11168_4 Y_3) Z_2)) X_1)) (hol.eq hol.bool ((__11168_4 : hol.term hol.bool => hol.imp (hol.and __11168_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11168_4 Y_3) Z_2)) X_1))) :=
  X_1 : hol.term hol.bool => Z_2 : hol.term hol.bool => Y_3 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11168_4 : hol.term hol.bool => hol.imp (hol.and __11168_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11168_4 Y_3) Z_2)) X_1)).

(; Theorem: |- ((= (\lambda _11168. ((Data.Bool.==> ((Data.Bool./\ _11168) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> _11168) Y)) Z)) Data.Bool.T)) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) Y)) Z))) ;)

(; dict ;)

def thm_2257 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__11168_3 : hol.term hol.bool => hol.imp (hol.and __11168_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp __11168_3 Y_2) Z_1)) hol.true) (hol.imp (hol.and hol.true (hol.imp Y_2 Z_1)) (hol.imp (hol.imp hol.true Y_2) Z_1))) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__11168_3 : hol.term hol.bool => hol.imp (hol.and __11168_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp __11168_3 Y_2) Z_1)) hol.true.

(; Theorem: |- ((= ((= (\lambda _11168. ((Data.Bool.==> ((Data.Bool./\ _11168) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> _11168) Y)) Z)) X)) (\lambda _11168. ((Data.Bool.==> ((Data.Bool./\ _11168) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> _11168) Y)) Z)) Data.Bool.T))) ((= (\lambda _11168. ((Data.Bool.==> ((Data.Bool./\ _11168) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> _11168) Y)) Z)) X)) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) Y)) Z)))) ;)

(; dict ;)

def thm_2258 : X_1 : hol.term hol.bool -> Z_2 : hol.term hol.bool -> Y_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11168_4 : hol.term hol.bool => hol.imp (hol.and __11168_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11168_4 Y_3) Z_2)) X_1) ((__11168_4 : hol.term hol.bool => hol.imp (hol.and __11168_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11168_4 Y_3) Z_2)) hol.true)) (hol.eq hol.bool ((__11168_4 : hol.term hol.bool => hol.imp (hol.and __11168_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11168_4 Y_3) Z_2)) X_1) (hol.imp (hol.and hol.true (hol.imp Y_3 Z_2)) (hol.imp (hol.imp hol.true Y_3) Z_2)))) :=
  X_1 : hol.term hol.bool => Z_2 : hol.term hol.bool => Y_3 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11168_4 : hol.term hol.bool => hol.imp (hol.and __11168_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11168_4 Y_3) Z_2)) X_1)) (hol.eq hol.bool ((__11168_4 : hol.term hol.bool => hol.imp (hol.and __11168_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11168_4 Y_3) Z_2)) X_1)) ((__11168_4 : hol.term hol.bool => hol.imp (hol.and __11168_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11168_4 Y_3) Z_2)) hol.true) (hol.imp (hol.and hol.true (hol.imp Y_3 Z_2)) (hol.imp (hol.imp hol.true Y_3) Z_2)) (thm_2256 X_1 Z_2 Y_3) (thm_2257 Z_2 Y_3).

(; Theorem: |- ((= (\lambda _11168. ((Data.Bool.==> ((Data.Bool./\ _11168) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> _11168) Y)) Z)) X)) ((Data.Bool.==> ((Data.Bool./\ X) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> X) Y)) Z))) ;)

(; dict ;)

def thm_2259 : X_1 : hol.term hol.bool -> Z_2 : hol.term hol.bool -> Y_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((__11168_4 : hol.term hol.bool => hol.imp (hol.and __11168_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11168_4 Y_3) Z_2)) X_1) (hol.imp (hol.and X_1 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp X_1 Y_3) Z_2))) :=
  X_1 : hol.term hol.bool => Z_2 : hol.term hol.bool => Y_3 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (__11168_4 : hol.term hol.bool => hol.imp (hol.and __11168_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11168_4 Y_3) Z_2)) X_1.

(; Theorem: |- ((= (= (\lambda _11168. ((Data.Bool.==> ((Data.Bool./\ _11168) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> _11168) Y)) Z)) X))) (= ((Data.Bool.==> ((Data.Bool./\ X) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> X) Y)) Z)))) ;)

(; dict ;)

def thm_2260 : X_1 : hol.term hol.bool -> Z_2 : hol.term hol.bool -> Y_3 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11168_4 : hol.term hol.bool => hol.imp (hol.and __11168_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11168_4 Y_3) Z_2)) X_1)) (hol.eq hol.bool (hol.imp (hol.and X_1 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp X_1 Y_3) Z_2)))) :=
  X_1 : hol.term hol.bool => Z_2 : hol.term hol.bool => Y_3 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__11168_4 : hol.term hol.bool => hol.imp (hol.and __11168_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11168_4 Y_3) Z_2)) X_1) (hol.imp (hol.and X_1 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp X_1 Y_3) Z_2)) thm_64 (thm_2259 X_1 Z_2 Y_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) Y)) Z))) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) Y)) Z))) ;)

(; dict ;)

def thm_2261 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and hol.true (hol.imp Y_2 Z_1)) (hol.imp (hol.imp hol.true Y_2) Z_1)) (hol.imp (hol.and hol.true (hol.imp Y_2 Z_1)) (hol.imp (hol.imp hol.true Y_2) Z_1))) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.and hol.true (hol.imp Y_2 Z_1)) (hol.imp (hol.imp hol.true Y_2) Z_1)).

(; Theorem: |- ((= ((= (\lambda _11168. ((Data.Bool.==> ((Data.Bool./\ _11168) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> _11168) Y)) Z)) X)) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) Y)) Z)))) ((= ((Data.Bool.==> ((Data.Bool./\ X) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> X) Y)) Z))) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) Y)) Z)))) ;)

(; dict ;)

def thm_2262 : X_1 : hol.term hol.bool -> Z_2 : hol.term hol.bool -> Y_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11168_4 : hol.term hol.bool => hol.imp (hol.and __11168_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11168_4 Y_3) Z_2)) X_1) (hol.imp (hol.and hol.true (hol.imp Y_3 Z_2)) (hol.imp (hol.imp hol.true Y_3) Z_2))) (hol.eq hol.bool (hol.imp (hol.and X_1 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp X_1 Y_3) Z_2)) (hol.imp (hol.and hol.true (hol.imp Y_3 Z_2)) (hol.imp (hol.imp hol.true Y_3) Z_2)))) :=
  X_1 : hol.term hol.bool => Z_2 : hol.term hol.bool => Y_3 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11168_4 : hol.term hol.bool => hol.imp (hol.and __11168_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11168_4 Y_3) Z_2)) X_1)) (hol.eq hol.bool (hol.imp (hol.and X_1 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp X_1 Y_3) Z_2))) (hol.imp (hol.and hol.true (hol.imp Y_3 Z_2)) (hol.imp (hol.imp hol.true Y_3) Z_2)) (hol.imp (hol.and hol.true (hol.imp Y_3 Z_2)) (hol.imp (hol.imp hol.true Y_3) Z_2)) (thm_2260 X_1 Z_2 Y_3) (thm_2261 Z_2 Y_3).

(; Theorem: |- ((= ((= (\lambda _11168. ((Data.Bool.==> ((Data.Bool./\ _11168) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> _11168) Y)) Z)) X)) (\lambda _11168. ((Data.Bool.==> ((Data.Bool./\ _11168) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> _11168) Y)) Z)) Data.Bool.T))) ((= ((Data.Bool.==> ((Data.Bool./\ X) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> X) Y)) Z))) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) Y)) Z)))) ;)

(; dict ;)

def thm_2263 : X_1 : hol.term hol.bool -> Z_2 : hol.term hol.bool -> Y_3 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11168_4 : hol.term hol.bool => hol.imp (hol.and __11168_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11168_4 Y_3) Z_2)) X_1) ((__11168_4 : hol.term hol.bool => hol.imp (hol.and __11168_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11168_4 Y_3) Z_2)) hol.true)) (hol.eq hol.bool (hol.imp (hol.and X_1 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp X_1 Y_3) Z_2)) (hol.imp (hol.and hol.true (hol.imp Y_3 Z_2)) (hol.imp (hol.imp hol.true Y_3) Z_2)))) :=
  X_1 : hol.term hol.bool => Z_2 : hol.term hol.bool => Y_3 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool ((__11168_4 : hol.term hol.bool => hol.imp (hol.and __11168_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11168_4 Y_3) Z_2)) X_1) ((__11168_4 : hol.term hol.bool => hol.imp (hol.and __11168_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11168_4 Y_3) Z_2)) hol.true)) (hol.eq hol.bool ((__11168_4 : hol.term hol.bool => hol.imp (hol.and __11168_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11168_4 Y_3) Z_2)) X_1) (hol.imp (hol.and hol.true (hol.imp Y_3 Z_2)) (hol.imp (hol.imp hol.true Y_3) Z_2))) (hol.eq hol.bool (hol.imp (hol.and X_1 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp X_1 Y_3) Z_2)) (hol.imp (hol.and hol.true (hol.imp Y_3 Z_2)) (hol.imp (hol.imp hol.true Y_3) Z_2))) (thm_2258 X_1 Z_2 Y_3) (thm_2262 X_1 Z_2 Y_3).

(; Theorem: |- ((= \lambda _11168. ((Data.Bool.==> ((Data.Bool./\ _11168) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> _11168) Y)) Z))) \lambda _11168. ((Data.Bool.==> ((Data.Bool./\ _11168) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> _11168) Y)) Z))) ;)

(; dict ;)

def thm_2264 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__11168_3 : hol.term hol.bool => hol.imp (hol.and __11168_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp __11168_3 Y_2) Z_1)) (__11168_3 : hol.term hol.bool => hol.imp (hol.and __11168_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp __11168_3 Y_2) Z_1))) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (__11168_3 : hol.term hol.bool => hol.imp (hol.and __11168_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp __11168_3 Y_2) Z_1)).

(; Theorem: |- ((= X) Data.Bool.T) ;)

(; dict ;)

def thm_2265 : X_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool X_1 hol.true) -> hol.proof (hol.eq hol.bool X_1 hol.true) :=
  X_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool X_1 hol.true) => hyp_1.

(; Theorem: |- ((= (\lambda _11168. ((Data.Bool.==> ((Data.Bool./\ _11168) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> _11168) Y)) Z)) X)) (\lambda _11168. ((Data.Bool.==> ((Data.Bool./\ _11168) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> _11168) Y)) Z)) Data.Bool.T)) ;)

(; dict ;)

def thm_2266 : X_1 : hol.term hol.bool -> Z_2 : hol.term hol.bool -> Y_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool X_1 hol.true) -> hol.proof (hol.eq hol.bool ((__11168_4 : hol.term hol.bool => hol.imp (hol.and __11168_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11168_4 Y_3) Z_2)) X_1) ((__11168_4 : hol.term hol.bool => hol.imp (hol.and __11168_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11168_4 Y_3) Z_2)) hol.true)) :=
  X_1 : hol.term hol.bool => Z_2 : hol.term hol.bool => Y_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool X_1 hol.true) => hol.APP_THM hol.bool hol.bool (__11168_4 : hol.term hol.bool => hol.imp (hol.and __11168_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11168_4 Y_3) Z_2)) (__11168_4 : hol.term hol.bool => hol.imp (hol.and __11168_4 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp __11168_4 Y_3) Z_2)) X_1 hol.true (thm_2264 Z_2 Y_3) (thm_2265 X_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ X) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> X) Y)) Z))) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) Y)) Z))) ;)

(; dict ;)

def thm_2267 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> X_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool X_3 hol.true) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) (hol.imp (hol.and hol.true (hol.imp Y_2 Z_1)) (hol.imp (hol.imp hol.true Y_2) Z_1))) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => X_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool X_3 hol.true) => hol.EQ_MP (hol.eq hol.bool ((__11168_4 : hol.term hol.bool => hol.imp (hol.and __11168_4 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp __11168_4 Y_2) Z_1)) X_3) ((__11168_4 : hol.term hol.bool => hol.imp (hol.and __11168_4 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp __11168_4 Y_2) Z_1)) hol.true)) (hol.eq hol.bool (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) (hol.imp (hol.and hol.true (hol.imp Y_2 Z_1)) (hol.imp (hol.imp hol.true Y_2) Z_1))) (thm_2263 X_3 Z_1 Y_2) (thm_2266 X_3 Z_1 Y_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) Y)) Z))) ((Data.Bool.==> ((Data.Bool./\ X) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> X) Y)) Z))) ;)

(; dict ;)

def thm_2268 : X_1 : hol.term hol.bool -> Z_2 : hol.term hol.bool -> Y_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool X_1 hol.true) -> hol.proof (hol.eq hol.bool (hol.imp (hol.and hol.true (hol.imp Y_3 Z_2)) (hol.imp (hol.imp hol.true Y_3) Z_2)) (hol.imp (hol.and X_1 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp X_1 Y_3) Z_2))) :=
  X_1 : hol.term hol.bool => Z_2 : hol.term hol.bool => Y_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool X_1 hol.true) => hol.SYM hol.bool (hol.imp (hol.and X_1 (hol.imp Y_3 Z_2)) (hol.imp (hol.imp X_1 Y_3) Z_2)) (hol.imp (hol.and hol.true (hol.imp Y_3 Z_2)) (hol.imp (hol.imp hol.true Y_3) Z_2)) (thm_2267 Z_2 Y_3 X_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> Y) Z)) ;)

(; dict ;)

def thm_2269 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.true (hol.imp Y_2 Z_1)) (hol.imp Y_2 Z_1)) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_124 t_1) (hol.imp Y_2 Z_1).

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> Y) Z)))) (Data.Bool.==> ((Data.Bool.==> Y) Z))) ;)

(; dict ;)

def thm_2270 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.and hol.true (hol.imp Y_2 Z_1))) (hol.imp (hol.imp Y_2 Z_1))) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.and hol.true (hol.imp Y_2 Z_1)) (hol.imp Y_2 Z_1) thm_107 (thm_2269 Z_1 Y_2).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) Y)) Y) ;)

(; dict ;)

def thm_2271 : Y_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.true Y_1) Y_1) :=
  Y_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_450 t_1) Y_1.

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool.==> Data.Bool.T) Y))) (Data.Bool.==> Y)) ;)

(; dict ;)

def thm_2272 : Y_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.imp hol.true Y_1)) (hol.imp Y_1)) :=
  Y_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.imp hol.true Y_1) Y_1 thm_107 (thm_2271 Y_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) Y)) Z)) ((Data.Bool.==> Y) Z)) ;)

(; dict ;)

def thm_2273 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp hol.true Y_2) Z_1) (hol.imp Y_2 Z_1)) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.imp (hol.imp hol.true Y_2)) (hol.imp Y_2) Z_1 Z_1 (thm_2272 Y_2) (thm_2245 Z_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) Y)) Z))) ((Data.Bool.==> ((Data.Bool.==> Y) Z)) ((Data.Bool.==> Y) Z))) ;)

(; dict ;)

def thm_2274 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and hol.true (hol.imp Y_2 Z_1)) (hol.imp (hol.imp hol.true Y_2) Z_1)) (hol.imp (hol.imp Y_2 Z_1) (hol.imp Y_2 Z_1))) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.imp (hol.and hol.true (hol.imp Y_2 Z_1))) (hol.imp (hol.imp Y_2 Z_1)) (hol.imp (hol.imp hol.true Y_2) Z_1) (hol.imp Y_2 Z_1) (thm_2270 Z_1 Y_2) (thm_2273 Z_1 Y_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.==> Y) Z)) ((Data.Bool.==> Y) Z))) Data.Bool.T) ;)

(; dict ;)

def thm_2275 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.imp Y_2 Z_1) (hol.imp Y_2 Z_1)) hol.true) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_468 t_1) (hol.imp Y_2 Z_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) Y)) Z))) Data.Bool.T) ;)

(; dict ;)

def thm_2276 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.and hol.true (hol.imp Y_2 Z_1)) (hol.imp (hol.imp hol.true Y_2) Z_1)) hol.true) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.imp (hol.and hol.true (hol.imp Y_2 Z_1)) (hol.imp (hol.imp hol.true Y_2) Z_1)) (hol.imp (hol.imp Y_2 Z_1) (hol.imp Y_2 Z_1)) hol.true (thm_2274 Z_1 Y_2) (thm_2275 Z_1 Y_2).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) Y)) Z))) ;)

(; dict ;)

def thm_2277 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool hol.true (hol.imp (hol.and hol.true (hol.imp Y_2 Z_1)) (hol.imp (hol.imp hol.true Y_2) Z_1))) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => hol.SYM hol.bool (hol.imp (hol.and hol.true (hol.imp Y_2 Z_1)) (hol.imp (hol.imp hol.true Y_2) Z_1)) hol.true (thm_2276 Z_1 Y_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ Data.Bool.T) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> Data.Bool.T) Y)) Z)) ;)

(; dict ;)

def thm_2278 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.and hol.true (hol.imp Y_2 Z_1)) (hol.imp (hol.imp hol.true Y_2) Z_1)) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => hol.EQ_MP hol.true (hol.imp (hol.and hol.true (hol.imp Y_2 Z_1)) (hol.imp (hol.imp hol.true Y_2) Z_1)) (thm_2277 Z_1 Y_2) thm_15.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ X) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> X) Y)) Z)) ;)

(; dict ;)

def thm_2279 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> X_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool X_3 hol.true) -> hol.proof (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => X_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool X_3 hol.true) => hol.EQ_MP (hol.imp (hol.and hol.true (hol.imp Y_2 Z_1)) (hol.imp (hol.imp hol.true Y_2) Z_1)) (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) (thm_2268 X_3 Z_1 Y_2 hyp_1) (thm_2278 Z_1 Y_2).

(; Theorem: |- ((Data.Bool.==> ((= X) Data.Bool.T)) ((Data.Bool.==> ((Data.Bool./\ X) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> X) Y)) Z))) ;)

(; dict ;)

def thm_2280 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> X_3 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool X_3 hol.true) (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1))) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => X_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool X_3 hol.true) => thm_2279 Z_1 Y_2 X_3 hyp_1.

(; Theorem: |- ((Data.Bool.\/ ((= X) Data.Bool.T)) ((= X) Data.Bool.F)) ;)

(; dict ;)

def thm_2281 : X_1 : hol.term hol.bool -> hol.proof (hol.or (hol.eq hol.bool X_1 hol.true) (hol.eq hol.bool X_1 hol.false)) :=
  X_1 : hol.term hol.bool => thm_26 X_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ X) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> X) Y)) Z)) ;)

(; dict ;)

def thm_2282 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> X_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool X_3 hol.false) (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool X_3 hol.true) (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1))) -> hyp_3 : hol.proof (hol.or (hol.eq hol.bool X_3 hol.true) (hol.eq hol.bool X_3 hol.false)) -> hol.proof (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => X_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool X_3 hol.false) (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool X_3 hol.true) (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1))) => hyp_3 : hol.proof (hol.or (hol.eq hol.bool X_3 hol.true) (hol.eq hol.bool X_3 hol.false)) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_775 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.eq hol.bool X_3 hol.false) (hol.eq hol.bool X_3 hol.true) (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ X) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> X) Y)) Z)) ;)

(; dict ;)

def thm_2283 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> X_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool X_3 hol.false) (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1))) -> hyp_2 : hol.proof (hol.imp (hol.eq hol.bool X_3 hol.true) (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1))) -> hol.proof (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => X_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool X_3 hol.false) (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1))) => hyp_2 : hol.proof (hol.imp (hol.eq hol.bool X_3 hol.true) (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1))) => hol.PROVE_HYP (hol.or (hol.eq hol.bool X_3 hol.true) (hol.eq hol.bool X_3 hol.false)) (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) (thm_2281 X_3) (hyp_3 : hol.proof (hol.or (hol.eq hol.bool X_3 hol.true) (hol.eq hol.bool X_3 hol.false)) => thm_2282 Z_1 Y_2 X_3 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ X) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> X) Y)) Z)) ;)

(; dict ;)

def thm_2284 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> X_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp (hol.eq hol.bool X_3 hol.false) (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1))) -> hol.proof (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => X_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp (hol.eq hol.bool X_3 hol.false) (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1))) => hol.PROVE_HYP (hol.imp (hol.eq hol.bool X_3 hol.true) (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1))) (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) (thm_2280 Z_1 Y_2 X_3) (hyp_2 : hol.proof (hol.imp (hol.eq hol.bool X_3 hol.true) (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1))) => thm_2283 Z_1 Y_2 X_3 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ X) ((Data.Bool.==> Y) Z))) ((Data.Bool.==> ((Data.Bool.==> X) Y)) Z)) ;)

(; dict ;)

def thm_2285 : Z_1 : hol.term hol.bool -> Y_2 : hol.term hol.bool -> X_3 : hol.term hol.bool -> hol.proof (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) :=
  Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => X_3 : hol.term hol.bool => hol.PROVE_HYP (hol.imp (hol.eq hol.bool X_3 hol.false) (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1))) (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) (thm_2255 Z_1 Y_2 X_3) (hyp_1 : hol.proof (hol.imp (hol.eq hol.bool X_3 hol.false) (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1))) => thm_2284 Z_1 Y_2 X_3 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) v)))) ((Data.Bool.==> (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y)))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))))) ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) v)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y))))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))) ;)

(; dict ;)

def thm_2286 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> y_4 : hol.term B -> hol.proof (hol.imp (hol.and (hol.forall B (x_5 : hol.term B => hol.imp (hol.eq B x_5 y_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))) (hol.imp (hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (hol.eq B x_5 y_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => y_4 : hol.term B => (Z_1 : hol.term hol.bool => Y_2 : hol.term hol.bool => X_3 : hol.term hol.bool => hol.EQ_MP (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) (thm_2222 Z_1 Y_2 X_3) (thm_2227 Z_1 Y_2 X_3 (hol.EQ_MP (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) (thm_2221 Z_1 Y_2 X_3) (hol.EQ_MP (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) (hol.imp (hol.and X_3 (hol.imp Y_2 Z_1)) (hol.imp (hol.imp X_3 Y_2) Z_1)) (thm_2221 Z_1 Y_2 X_3) (thm_2285 Z_1 Y_2 X_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_4))))) (hol.forall B (x_5 : hol.term B => hol.imp (hol.eq B x_5 y_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) v))) \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) v))) ;)

(; dict ;)

def thm_2287 : B : hol.type -> v_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> hol.proof (hol.eq (hol.arr B hol.bool) (x_3 : hol.term B => hol.imp (hol.eq B x_3 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1)) (x_3 : hol.term B => hol.imp (hol.eq B x_3 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1))) :=
  B : hol.type => v_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => hol.REFL (hol.arr B hol.bool) (x_3 : hol.term B => hol.imp (hol.eq B x_3 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1)).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) v))) \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) v))) ;)

(; dict ;)

def thm_2288 : B : hol.type -> v_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> hol.proof (hol.eq (hol.arr B hol.bool) (x_3 : hol.term B => hol.imp (hol.eq B x_3 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1)) (x_3 : hol.term B => hol.imp (hol.eq B x_3 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1))) :=
  B : hol.type => v_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => hol.TRANS (hol.arr B hol.bool) (x_3 : hol.term B => hol.imp (hol.eq B x_3 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1)) (x_3 : hol.term B => hol.imp (hol.eq B x_3 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1)) (x_3 : hol.term B => hol.imp (hol.eq B x_3 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1)) (thm_2287 B v_1 y_2) (thm_2287 B v_1 y_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) v)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) v)))) ;)

(; dict ;)

def thm_2289 : B : hol.type -> v_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.forall B (x_3 : hol.term B => hol.imp (hol.eq B x_3 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1))) (hol.forall B (x_3 : hol.term B => hol.imp (hol.eq B x_3 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1)))) :=
  B : hol.type => v_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (x_3 : hol.term B => hol.imp (hol.eq B x_3 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1)) (x_3 : hol.term B => hol.imp (hol.eq B x_3 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1)) (thm_63 B) (thm_2288 B v_1 y_2).

(; Theorem: |- ((= (= (\lambda _11172. ((Set.member _11172) v) x))) (= (\lambda _11172. ((Set.member _11172) v) x))) ;)

(; dict ;)

def thm_2290 : B : hol.type -> x_1 : hol.term B -> v_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11172_3 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_3 v_2) x_1)) (hol.eq hol.bool ((__11172_3 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_3 v_2) x_1))) :=
  B : hol.type => x_1 : hol.term B => v_2 : hol.term (Set_2Eset B) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11172_3 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_3 v_2) x_1)).

(; Theorem: |- ((= (\lambda _11172. ((Set.member _11172) v) y)) ((Set.member y) v)) ;)

(; dict ;)

def thm_2291 : B : hol.type -> y_1 : hol.term B -> v_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool ((__11172_3 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_3 v_2) y_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 v_2)) :=
  B : hol.type => y_1 : hol.term B => v_2 : hol.term (Set_2Eset B) => hol.BETA_CONV B hol.bool (__11172_3 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_3 v_2) y_1.

(; Theorem: |- ((= ((= (\lambda _11172. ((Set.member _11172) v) x)) (\lambda _11172. ((Set.member _11172) v) y))) ((= (\lambda _11172. ((Set.member _11172) v) x)) ((Set.member y) v))) ;)

(; dict ;)

def thm_2292 : B : hol.type -> y_1 : hol.term B -> x_2 : hol.term B -> v_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11172_4 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_4 v_3) x_2) ((__11172_4 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_4 v_3) y_1)) (hol.eq hol.bool ((__11172_4 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_4 v_3) x_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 v_3))) :=
  B : hol.type => y_1 : hol.term B => x_2 : hol.term B => v_3 : hol.term (Set_2Eset B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11172_4 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_4 v_3) x_2)) (hol.eq hol.bool ((__11172_4 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_4 v_3) x_2)) ((__11172_4 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_4 v_3) y_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 v_3) (thm_2290 B x_2 v_3) (thm_2291 B y_1 v_3).

(; Theorem: |- ((= (\lambda _11172. ((Set.member _11172) v) x)) ((Set.member x) v)) ;)

(; dict ;)

def thm_2293 : B : hol.type -> x_1 : hol.term B -> v_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool ((__11172_3 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_3 v_2) x_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1 v_2)) :=
  B : hol.type => x_1 : hol.term B => v_2 : hol.term (Set_2Eset B) => hol.BETA_CONV B hol.bool (__11172_3 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_3 v_2) x_1.

(; Theorem: |- ((= (= (\lambda _11172. ((Set.member _11172) v) x))) (= ((Set.member x) v))) ;)

(; dict ;)

def thm_2294 : B : hol.type -> x_1 : hol.term B -> v_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__11172_3 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_3 v_2) x_1)) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1 v_2))) :=
  B : hol.type => x_1 : hol.term B => v_2 : hol.term (Set_2Eset B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__11172_3 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_3 v_2) x_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1 v_2) thm_64 (thm_2293 B x_1 v_2).

(; Theorem: |- ((= ((Set.member y) v)) ((Set.member y) v)) ;)

(; dict ;)

def thm_2295 : B : hol.type -> v_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 v_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 v_1)) :=
  B : hol.type => v_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => hol.REFL hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 v_1).

(; Theorem: |- ((= ((= (\lambda _11172. ((Set.member _11172) v) x)) ((Set.member y) v))) ((= ((Set.member x) v)) ((Set.member y) v))) ;)

(; dict ;)

def thm_2296 : B : hol.type -> y_1 : hol.term B -> x_2 : hol.term B -> v_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11172_4 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_4 v_3) x_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 v_3)) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 v_3))) :=
  B : hol.type => y_1 : hol.term B => x_2 : hol.term B => v_3 : hol.term (Set_2Eset B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__11172_4 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_4 v_3) x_2)) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 v_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 v_3) (thm_2294 B x_2 v_3) (thm_2295 B v_3 y_1).

(; Theorem: |- ((= ((= (\lambda _11172. ((Set.member _11172) v) x)) (\lambda _11172. ((Set.member _11172) v) y))) ((= ((Set.member x) v)) ((Set.member y) v))) ;)

(; dict ;)

def thm_2297 : B : hol.type -> y_1 : hol.term B -> x_2 : hol.term B -> v_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__11172_4 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_4 v_3) x_2) ((__11172_4 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_4 v_3) y_1)) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 v_3))) :=
  B : hol.type => y_1 : hol.term B => x_2 : hol.term B => v_3 : hol.term (Set_2Eset B) => hol.TRANS hol.bool (hol.eq hol.bool ((__11172_4 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_4 v_3) x_2) ((__11172_4 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_4 v_3) y_1)) (hol.eq hol.bool ((__11172_4 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_4 v_3) x_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 v_3)) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_2 v_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 v_3)) (thm_2292 B y_1 x_2 v_3) (thm_2296 B y_1 x_2 v_3).

(; Theorem: |- ((= \lambda _11172. ((Set.member _11172) v)) \lambda _11172. ((Set.member _11172) v)) ;)

(; dict ;)

def thm_2298 : B : hol.type -> v_1 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (hol.arr B hol.bool) (__11172_2 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_2 v_1) (__11172_2 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_2 v_1)) :=
  B : hol.type => v_1 : hol.term (Set_2Eset B) => hol.REFL (hol.arr B hol.bool) (__11172_2 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_2 v_1).

(; Theorem: |- ((= x) y) ;)

(; dict ;)

def thm_2299 : B : hol.type -> y_1 : hol.term B -> x_2 : hol.term B -> hyp_1 : hol.proof (hol.eq B x_2 y_1) -> hol.proof (hol.eq B x_2 y_1) :=
  B : hol.type => y_1 : hol.term B => x_2 : hol.term B => hyp_1 : hol.proof (hol.eq B x_2 y_1) => hyp_1.

(; Theorem: |- ((= (\lambda _11172. ((Set.member _11172) v) x)) (\lambda _11172. ((Set.member _11172) v) y)) ;)

(; dict ;)

def thm_2300 : B : hol.type -> y_1 : hol.term B -> x_2 : hol.term B -> v_3 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.eq B x_2 y_1) -> hol.proof (hol.eq hol.bool ((__11172_4 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_4 v_3) x_2) ((__11172_4 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_4 v_3) y_1)) :=
  B : hol.type => y_1 : hol.term B => x_2 : hol.term B => v_3 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.eq B x_2 y_1) => hol.APP_THM B hol.bool (__11172_4 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_4 v_3) (__11172_4 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_4 v_3) x_2 y_1 (thm_2298 B v_3) (thm_2299 B y_1 x_2 hyp_1).

(; Theorem: |- ((= ((Set.member x) v)) ((Set.member y) v)) ;)

(; dict ;)

def thm_2301 : B : hol.type -> y_1 : hol.term B -> v_2 : hol.term (Set_2Eset B) -> x_3 : hol.term B -> hyp_1 : hol.proof (hol.eq B x_3 y_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 v_2)) :=
  B : hol.type => y_1 : hol.term B => v_2 : hol.term (Set_2Eset B) => x_3 : hol.term B => hyp_1 : hol.proof (hol.eq B x_3 y_1) => hol.EQ_MP (hol.eq hol.bool ((__11172_4 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_4 v_2) x_3) ((__11172_4 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __11172_4 v_2) y_1)) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 v_2)) (thm_2297 B y_1 x_3 v_2) (thm_2300 B y_1 x_3 v_2 hyp_1).

(; Theorem: |- ((= ((Set.member y) v)) ((Set.member x) v)) ;)

(; dict ;)

def thm_2302 : B : hol.type -> x_1 : hol.term B -> v_2 : hol.term (Set_2Eset B) -> y_3 : hol.term B -> hyp_1 : hol.proof (hol.eq B x_1 y_3) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 v_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1 v_2)) :=
  B : hol.type => x_1 : hol.term B => v_2 : hol.term (Set_2Eset B) => y_3 : hol.term B => hyp_1 : hol.proof (hol.eq B x_1 y_3) => hol.SYM hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1 v_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 v_2) (thm_2301 B y_3 v_2 x_1 hyp_1).

(; Theorem: |- ((Set.member y) v) ;)

(; dict ;)

def thm_2303 : B : hol.type -> v_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 v_1) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 v_1) :=
  B : hol.type => v_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 v_1) => hyp_1.

(; Theorem: |- ((Set.member y) v) ;)

(; dict ;)

def thm_2304 : B : hol.type -> v_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 v_1) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 v_1) :=
  B : hol.type => v_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 v_1) => hol.PROVE_HYP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 v_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 v_1) (hol.EQ_MP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 v_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 v_1) (thm_2295 B v_1 y_2) (thm_2303 B v_1 y_2 hyp_1)) (hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 v_1) => thm_2303 B v_1 y_2 hyp_2).

(; Theorem: |- ((Set.member x) v) ;)

(; dict ;)

def thm_2305 : B : hol.type -> y_1 : hol.term B -> v_2 : hol.term (Set_2Eset B) -> x_3 : hol.term B -> hyp_1 : hol.proof (hol.eq B x_3 y_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 v_2) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_2) :=
  B : hol.type => y_1 : hol.term B => v_2 : hol.term (Set_2Eset B) => x_3 : hol.term B => hyp_1 : hol.proof (hol.eq B x_3 y_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 v_2) => hol.EQ_MP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 v_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_2) (thm_2302 B x_3 v_2 y_1 hyp_1) (thm_2304 B v_2 y_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((= x) y)) ((Set.member x) v)) ;)

(; dict ;)

def thm_2306 : B : hol.type -> v_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> x_3 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 v_1) -> hol.proof (hol.imp (hol.eq B x_3 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1)) :=
  B : hol.type => v_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => x_3 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 v_1) => hyp_2 : hol.proof (hol.eq B x_3 y_2) => thm_2305 B y_2 v_1 x_3 hyp_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) v))) ;)

(; dict ;)

def thm_2307 : B : hol.type -> v_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 v_1) -> hol.proof (hol.forall B (x_3 : hol.term B => hol.imp (hol.eq B x_3 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_3 v_1))) :=
  B : hol.type => v_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 v_1) => x_3 : hol.term B => thm_2306 B v_1 y_2 x_3 hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y)))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) v)))) ((Data.Bool.==> (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y)))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))))) ;)

(; dict ;)

def thm_2308 : B : hol.type -> A : hol.type -> v_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall B (x_5 : hol.term B => hol.imp (hol.eq B x_5 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_1))) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) y_2)))) (hol.and (hol.forall B (x_5 : hol.term B => hol.imp (hol.eq B x_5 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) y_2)))))) :=
  B : hol.type => A : hol.type => v_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall B (x_5 : hol.term B => hol.imp (hol.eq B x_5 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_1))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_154 p_1 q_2 hyp_1) (hol.forall B (x_5 : hol.term B => hol.imp (hol.eq B x_5 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) y_2)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y)))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) v)))) ((Data.Bool.==> (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y)))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))))) ;)

(; dict ;)

def thm_2309 : B : hol.type -> A : hol.type -> v_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 v_1) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) y_2)))) (hol.and (hol.forall B (x_5 : hol.term B => hol.imp (hol.eq B x_5 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) y_2)))))) :=
  B : hol.type => A : hol.type => v_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 v_1) => hol.PROVE_HYP (hol.forall B (x_5 : hol.term B => hol.imp (hol.eq B x_5 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_1))) (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) y_2)))) (hol.and (hol.forall B (x_5 : hol.term B => hol.imp (hol.eq B x_5 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) y_2)))))) (hol.EQ_MP (hol.forall B (x_5 : hol.term B => hol.imp (hol.eq B x_5 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_1))) (hol.forall B (x_5 : hol.term B => hol.imp (hol.eq B x_5 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_1))) (thm_2289 B v_1 y_2) (thm_2307 B v_1 y_2 hyp_1)) (hyp_2 : hol.proof (hol.forall B (x_5 : hol.term B => hol.imp (hol.eq B x_5 y_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_1))) => thm_2308 B A v_1 y_2 f_3 u_4 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y)))) x)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))))) ((Data.Bool.==> (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y)))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))) ;)

(; dict ;)

def thm_2310 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.forall (Set_2Eset A) (x_4 : hol.term (Set_2Eset A) => hol.imp ((s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_2 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_1)))) x_4) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (hol.eq B (f_2 x_5) y_1))))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_4 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B x_5 y_1))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.eq B (f_2 x_4) y_1))))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_279 A Q_1 P_2) (Set_2Eset A) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.eq B (f_2 x_4) y_1))) (s_4 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B x_5 y_1)))).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y)))) ;)

(; dict ;)

def thm_2311 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B x_5 y_1)))) -> hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B x_5 y_1)))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B x_5 y_1)))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u))) ;)

(; dict ;)

def thm_2312 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B x_5 y_1)))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B x_5 y_1)))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_185 q_1 p_2 hyp_1) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B x_5 y_1))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u))) ;)

(; dict ;)

def thm_2313 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B x_5 y_1)))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B x_5 y_1)))) => hol.PROVE_HYP (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B x_5 y_1)))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (thm_2311 B A y_1 f_2 u_3 s_4 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B x_5 y_1)))) => thm_2312 B A y_1 f_2 u_3 s_4 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y))) ;)

(; dict ;)

def thm_2314 : A : hol.type -> B : hol.type -> u_1 : hol.term (Set_2Eset A) -> y_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (hol.eq B x_5 y_2)))) -> hol.proof (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (hol.eq B x_5 y_2))) :=
  A : hol.type => B : hol.type => u_1 : hol.term (Set_2Eset A) => y_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (hol.eq B x_5 y_2)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_1) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (hol.eq B x_5 y_2))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y))) ;)

(; dict ;)

def thm_2315 : A : hol.type -> B : hol.type -> u_1 : hol.term (Set_2Eset A) -> y_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (hol.eq B x_5 y_2)))) -> hol.proof (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (hol.eq B x_5 y_2))) :=
  A : hol.type => B : hol.type => u_1 : hol.term (Set_2Eset A) => y_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (hol.eq B x_5 y_2)))) => hol.PROVE_HYP (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (hol.eq B x_5 y_2)))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (hol.eq B x_5 y_2))) (thm_2311 B A y_2 f_4 u_1 s_3 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (hol.eq B x_5 y_2)))) => thm_2314 A B u_1 y_2 s_3 f_4 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y))) ;)

(; dict ;)

def thm_2316 : A : hol.type -> B : hol.type -> y_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (hol.eq B x_4 y_1))) -> hol.proof (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (hol.eq B x_4 y_1))) :=
  A : hol.type => B : hol.type => y_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (hol.eq B x_4 y_1))) => hyp_1.

(; Theorem: |- ((= (= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))))) (= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_2317 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))).

(; Theorem: |- ((= ((= y) y)) Data.Bool.T) ;)

(; dict ;)

def thm_2318 : B : hol.type -> y_1 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq B y_1 y_1) hol.true) :=
  B : hol.type => y_1 : hol.term B => (B : hol.type => x_1 : hol.term B => thm_315 B x_1) B y_1.

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))) ((= y) y))) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))) Data.Bool.T)) ;)

(; dict ;)

def thm_2319 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) (hol.eq B y_3 y_3)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) hol.true)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (hol.eq B y_3 y_3) hol.true (thm_2317 B A s_1 f_2 y_3) (thm_2318 B y_3).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))) Data.Bool.T)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_2320 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) hol.true) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => (t_1 : hol.term hol.bool => thm_209 t_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))) ((= y) y))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_2321 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) (hol.eq B y_3 y_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => hol.TRANS hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) (hol.eq B y_3 y_3)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) hol.true) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) (thm_2319 B A s_1 f_2 y_3) (thm_2320 B A s_1 f_2 y_3).

(; Theorem: |- ((= (Data.Bool.==> ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))) ((= y) y)))) (Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_2322 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) (hol.eq B y_3 y_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) (hol.eq B y_3 y_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) thm_107 (thm_2321 B A s_1 f_2 y_3).

(; Theorem: |- ((= ((Data.Bool.==> ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))) ((= y) y))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))) ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))) ;)

(; dict ;)

def thm_2323 : B : hol.type -> A : hol.type -> u_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> y_4 : hol.term B -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (hol.eq B y_4 y_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1) (hol.eq B (f_3 x_5) y_4)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1) (hol.eq B (f_3 x_5) y_4))))) :=
  B : hol.type => A : hol.type => u_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => y_4 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (hol.eq B y_4 y_4))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1) (hol.eq B (f_3 x_5) y_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1) (hol.eq B (f_3 x_5) y_4))) (thm_2322 B A s_2 f_3 y_4) (thm_2218 B A y_4 f_3 u_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))) ((Data.Bool.==> ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))) ((= y) y))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))) ;)

(; dict ;)

def thm_2324 : B : hol.type -> A : hol.type -> u_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> y_4 : hol.term B -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1) (hol.eq B (f_3 x_5) y_4)))) (hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (hol.eq B y_4 y_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1) (hol.eq B (f_3 x_5) y_4))))) :=
  B : hol.type => A : hol.type => u_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => y_4 : hol.term B => hol.SYM hol.bool (hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (hol.eq B y_4 y_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1) (hol.eq B (f_3 x_5) y_4)))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1) (hol.eq B (f_3 x_5) y_4)))) (thm_2323 B A u_1 s_2 f_3 y_4).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)) x)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))))) ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))) ;)

(; dict ;)

def thm_2325 : B : hol.type -> A : hol.type -> u_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> y_4 : hol.term B -> hol.proof (hol.imp (hol.forall A (x_5 : hol.term A => hol.imp ((x_6 : hol.term A => hol.and (hol.eq B y_4 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) x_5) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1) (hol.eq B (f_3 x_6) y_4))))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1) (hol.eq B (f_3 x_5) y_4))))) :=
  B : hol.type => A : hol.type => u_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => y_4 : hol.term B => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_279 A Q_1 P_2) A (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1) (hol.eq B (f_3 x_5) y_4))) (x_5 : hol.term A => hol.and (hol.eq B y_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)).

(; Theorem: |- ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)) ;)

(; dict ;)

def thm_2326 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> y_4 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq B y_4 (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) -> hol.proof (hol.and (hol.eq B y_4 (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => y_4 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq B y_4 (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) => hyp_1.

(; Theorem: |- ((= y) (f x)) ;)

(; dict ;)

def thm_2327 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> y_4 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq B y_4 (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) -> hol.proof (hol.eq B y_4 (f_3 x_2)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => y_4 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq B y_4 (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_185 q_1 p_2 hyp_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq B y_4 (f_3 x_2)) hyp_1.

(; Theorem: |- ((= y) (f x)) ;)

(; dict ;)

def thm_2328 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> y_4 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq B y_4 (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) -> hol.proof (hol.eq B y_4 (f_3 x_2)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => y_4 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq B y_4 (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) => hol.PROVE_HYP (hol.and (hol.eq B y_4 (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.eq B y_4 (f_3 x_2)) (thm_2326 A B s_1 x_2 f_3 y_4 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq B y_4 (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) => thm_2327 A B s_1 x_2 f_3 y_4 hyp_2).

(; Theorem: |- ((Set.member x) s) ;)

(; dict ;)

def thm_2329 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq B y_2 (f_1 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq B y_2 (f_1 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_146 p_1 q_2 hyp_1) (hol.eq B y_2 (f_1 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) hyp_1.

(; Theorem: |- ((Set.member x) s) ;)

(; dict ;)

def thm_2330 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq B y_2 (f_1 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq B y_2 (f_1 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) => hol.PROVE_HYP (hol.and (hol.eq B y_2 (f_1 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (thm_2326 A B s_3 x_4 f_1 y_2 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq B y_2 (f_1 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) => thm_2329 B A f_1 y_2 s_3 x_4 hyp_2).

(; Theorem: |- ((= y) (f x)) ;)

(; dict ;)

def thm_2331 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hyp_1 : hol.proof (hol.eq B y_3 (f_2 x_1)) -> hol.proof (hol.eq B y_3 (f_2 x_1)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => hyp_1 : hol.proof (hol.eq B y_3 (f_2 x_1)) => hyp_1.

(; Theorem: |- ((= (\lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)) x)) ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))) ;)

(; dict ;)

def thm_2332 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) y_2)) x_1) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 u_4) (hol.eq B (f_3 x_1) y_2))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => hol.BETA_CONV A hol.bool (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) y_2)) x_1.

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))) (\lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)) x)) ;)

(; dict ;)

def thm_2333 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.eq B (f_2 x_4) y_1)) ((x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (hol.eq B (f_2 x_5) y_1)) x_4)) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.SYM hol.bool ((x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (hol.eq B (f_2 x_5) y_1)) x_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.eq B (f_2 x_4) y_1)) (thm_2332 B A x_4 y_1 f_2 u_3).

(; Theorem: |- ((= (= (f x))) (= (f x))) ;)

(; dict ;)

def thm_2334 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B (f_2 x_1)) (hol.eq B (f_2 x_1))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => f_2 : hol.term (hol.arr A B) => hol.REFL (hol.arr B hol.bool) (hol.eq B (f_2 x_1)).

(; Theorem: |- ((= ((= (f x)) y)) ((= (f x)) (f x))) ;)

(; dict ;)

def thm_2335 : A : hol.type -> B : hol.type -> y_1 : hol.term B -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq B y_1 (f_3 x_2)) -> hol.proof (hol.eq hol.bool (hol.eq B (f_3 x_2) y_1) (hol.eq B (f_3 x_2) (f_3 x_2))) :=
  A : hol.type => B : hol.type => y_1 : hol.term B => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq B y_1 (f_3 x_2)) => hol.APP_THM B hol.bool (hol.eq B (f_3 x_2)) (hol.eq B (f_3 x_2)) y_1 (f_3 x_2) (thm_2334 A B x_2 f_3) (thm_2331 A B x_2 f_3 y_1 hyp_1).

(; Theorem: |- ((= ((= (f x)) y)) Data.Bool.T) ;)

(; dict ;)

def thm_2336 : A : hol.type -> B : hol.type -> y_1 : hol.term B -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq B y_1 (f_3 x_2)) -> hol.proof (hol.eq hol.bool (hol.eq B (f_3 x_2) y_1) hol.true) :=
  A : hol.type => B : hol.type => y_1 : hol.term B => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq B y_1 (f_3 x_2)) => hol.TRANS hol.bool (hol.eq B (f_3 x_2) y_1) (hol.eq B (f_3 x_2) (f_3 x_2)) hol.true (thm_2335 A B y_1 x_2 f_3 hyp_1) (thm_911 A B x_2 f_3).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))) ((Data.Bool./\ ((Set.member x) u)) Data.Bool.T)) ;)

(; dict ;)

def thm_2337 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.eq B y_1 (f_2 x_4)) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.eq B (f_2 x_4) y_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) hol.true)) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.eq B y_1 (f_2 x_4)) => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3)) (hol.eq B (f_2 x_4) y_1) hol.true (thm_1613 A u_3 x_4) (thm_2336 A B y_1 x_4 f_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member x) u)) Data.Bool.T)) ((Set.member x) u)) ;)

(; dict ;)

def thm_2338 : A : hol.type -> u_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1) hol.true) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1)) :=
  A : hol.type => u_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => (t_1 : hol.term hol.bool => thm_157 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))) ((Set.member x) u)) ;)

(; dict ;)

def thm_2339 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.eq B y_1 (f_2 x_4)) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.eq B (f_2 x_4) y_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3)) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.eq B y_1 (f_2 x_4)) => hol.TRANS hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.eq B (f_2 x_4) y_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) hol.true) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (thm_2337 B A y_1 f_2 u_3 x_4 hyp_1) (thm_2338 A u_3 x_4).

(; Theorem: |- ((= ((Set.member x) u)) ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))) ;)

(; dict ;)

def thm_2340 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.eq B y_1 (f_2 x_4)) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.eq B (f_2 x_4) y_1))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.eq B y_1 (f_2 x_4)) => hol.SYM hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.eq B (f_2 x_4) y_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (thm_2339 B A y_1 f_2 u_3 x_4 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)) ;)

(; dict ;)

def thm_2341 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) -> hyp_2 : hol.proof (hol.eq B y_2 (f_3 x_5)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) -> hol.proof (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) y_2)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) => hyp_2 : hol.proof (hol.eq B y_2 (f_3 x_5)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) => hol.EQ_MP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) y_2)) (thm_2340 B A y_2 f_3 u_4 x_5 hyp_2) (thm_1628 A s_1 u_4 x_5 hyp_1 hyp_3).

(; Theorem: |- (\lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)) x) ;)

(; dict ;)

def thm_2342 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> y_3 : hol.term B -> f_4 : hol.term (hol.arr A B) -> u_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5))) -> hyp_2 : hol.proof (hol.eq B y_3 (f_4 x_2)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof ((x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (hol.eq B (f_4 x_6) y_3)) x_2) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => y_3 : hol.term B => f_4 : hol.term (hol.arr A B) => u_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5))) => hyp_2 : hol.proof (hol.eq B y_3 (f_4 x_2)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hol.EQ_MP (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 u_5) (hol.eq B (f_4 x_2) y_3)) ((x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (hol.eq B (f_4 x_6) y_3)) x_2) (thm_2333 B A y_3 f_4 u_5 x_2) (thm_2341 B A s_1 y_3 f_4 u_5 x_2 hyp_1 hyp_2 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))) ;)

(; dict ;)

def thm_2343 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) y_2)) x_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) y_2))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) y_2)) x_1) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_334 A x_1 P_2 hyp_1) A x_1 (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) y_2)) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))) ;)

(; dict ;)

def thm_2344 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> f_4 : hol.term (hol.arr A B) -> u_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5))) -> hyp_2 : hol.proof (hol.eq B y_3 (f_4 x_1)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (hol.eq B (f_4 x_6) y_3))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => f_4 : hol.term (hol.arr A B) => u_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5))) => hyp_2 : hol.proof (hol.eq B y_3 (f_4 x_1)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) => hol.PROVE_HYP ((x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (hol.eq B (f_4 x_6) y_3)) x_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (hol.eq B (f_4 x_6) y_3))) (thm_2342 B A s_2 x_1 y_3 f_4 u_5 hyp_1 hyp_2 hyp_3) (hyp_4 : hol.proof ((x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (hol.eq B (f_4 x_6) y_3)) x_1) => thm_2343 B A x_1 y_3 f_4 u_5 hyp_4).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))) ;)

(; dict ;)

def thm_2345 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> f_4 : hol.term (hol.arr A B) -> u_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5))) -> hyp_2 : hol.proof (hol.eq B y_3 (f_4 x_1)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (hol.eq B (f_4 x_6) y_3))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => f_4 : hol.term (hol.arr A B) => u_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5))) => hyp_2 : hol.proof (hol.eq B y_3 (f_4 x_1)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (hol.eq B (f_4 x_6) y_3))) (thm_790 A s_2 x_1 hyp_3) (hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) => thm_2344 B A x_1 s_2 y_3 f_4 u_5 hyp_1 hyp_2 hyp_4).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))) ;)

(; dict ;)

def thm_2346 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> f_4 : hol.term (hol.arr A B) -> u_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5))) -> hyp_2 : hol.proof (hol.eq B y_3 (f_4 x_1)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (hol.eq B (f_4 x_6) y_3))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => f_4 : hol.term (hol.arr A B) => u_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5))) => hyp_2 : hol.proof (hol.eq B y_3 (f_4 x_1)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) => hol.PROVE_HYP (hol.eq B y_3 (f_4 x_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (hol.eq B (f_4 x_6) y_3))) (thm_2331 A B x_1 f_4 y_3 hyp_2) (hyp_4 : hol.proof (hol.eq B y_3 (f_4 x_1)) => thm_2345 B A x_1 s_2 y_3 f_4 u_5 hyp_1 hyp_4 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))) ;)

(; dict ;)

def thm_2347 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> f_4 : hol.term (hol.arr A B) -> u_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5))) -> hyp_2 : hol.proof (hol.eq B y_3 (f_4 x_1)) -> hyp_3 : hol.proof (hol.and (hol.eq B y_3 (f_4 x_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (hol.eq B (f_4 x_6) y_3))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => f_4 : hol.term (hol.arr A B) => u_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5))) => hyp_2 : hol.proof (hol.eq B y_3 (f_4 x_1)) => hyp_3 : hol.proof (hol.and (hol.eq B y_3 (f_4 x_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (hol.eq B (f_4 x_6) y_3))) (thm_2330 B A f_4 y_3 s_2 x_1 hyp_3) (hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) => thm_2346 B A x_1 s_2 y_3 f_4 u_5 hyp_1 hyp_2 hyp_4).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))) ;)

(; dict ;)

def thm_2348 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> f_4 : hol.term (hol.arr A B) -> u_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5))) -> hyp_2 : hol.proof (hol.and (hol.eq B y_3 (f_4 x_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (hol.eq B (f_4 x_6) y_3))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => f_4 : hol.term (hol.arr A B) => u_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5))) => hyp_2 : hol.proof (hol.and (hol.eq B y_3 (f_4 x_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2)) => hol.PROVE_HYP (hol.eq B y_3 (f_4 x_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (hol.eq B (f_4 x_6) y_3))) (thm_2328 A B s_2 x_1 f_4 y_3 hyp_2) (hyp_3 : hol.proof (hol.eq B y_3 (f_4 x_1)) => thm_2347 B A x_1 s_2 y_3 f_4 u_5 hyp_1 hyp_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))) ;)

(; dict ;)

def thm_2349 : A : hol.type -> B : hol.type -> u_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> f_4 : hol.term (hol.arr A B) -> y_5 : hol.term B -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) -> hol.proof (hol.imp (hol.and (hol.eq B y_5 (f_4 x_3)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1) (hol.eq B (f_4 x_6) y_5)))) :=
  A : hol.type => B : hol.type => u_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => f_4 : hol.term (hol.arr A B) => y_5 : hol.term B => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) => hyp_2 : hol.proof (hol.and (hol.eq B y_5 (f_4 x_3)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) => thm_2348 B A x_3 s_2 y_5 f_4 u_1 hyp_1 hyp_2.

(; Theorem: |- ((= (\lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)) x)) ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_2350 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> y_4 : hol.term B -> hol.proof (hol.eq hol.bool ((x_5 : hol.term A => hol.and (hol.eq B y_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)) x_1) (hol.and (hol.eq B y_4 (f_3 x_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => y_4 : hol.term B => hol.BETA_CONV A hol.bool (x_5 : hol.term A => hol.and (hol.eq B y_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)) x_1.

(; Theorem: |- (\lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)) x) ;)

(; dict ;)

def thm_2351 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> y_4 : hol.term B -> hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (hol.eq B y_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)) x_1) -> hol.proof ((x_5 : hol.term A => hol.and (hol.eq B y_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)) x_1) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => y_4 : hol.term B => hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (hol.eq B y_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2)) x_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)) ;)

(; dict ;)

def thm_2352 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> y_4 : hol.term B -> hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (hol.eq B y_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) x_2) -> hol.proof (hol.and (hol.eq B y_4 (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => y_4 : hol.term B => hyp_1 : hol.proof ((x_5 : hol.term A => hol.and (hol.eq B y_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) x_2) => hol.EQ_MP ((x_5 : hol.term A => hol.and (hol.eq B y_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) x_2) (hol.and (hol.eq B y_4 (f_3 x_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (thm_2350 B A x_2 s_1 f_3 y_4) (thm_2351 B A x_2 s_1 f_3 y_4 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))) ;)

(; dict ;)

def thm_2353 : B : hol.type -> A : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> f_4 : hol.term (hol.arr A B) -> u_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5))) -> hyp_2 : hol.proof ((x_6 : hol.term A => hol.and (hol.eq B y_3 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) x_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5) (hol.eq B (f_4 x_6) y_3))) :=
  B : hol.type => A : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => f_4 : hol.term (hol.arr A B) => u_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_5))) => hyp_2 : hol.proof ((x_6 : hol.term A => hol.and (hol.eq B y_3 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) x_1) => thm_2349 A B u_5 s_2 x_1 f_4 y_3 hyp_1 (thm_2352 A B s_2 x_1 f_4 y_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)) x)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))) ;)

(; dict ;)

def thm_2354 : B : hol.type -> A : hol.type -> u_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> s_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> y_5 : hol.term B -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) -> hol.proof (hol.imp ((x_6 : hol.term A => hol.and (hol.eq B y_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1) (hol.eq B (f_4 x_6) y_5)))) :=
  B : hol.type => A : hol.type => u_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => s_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => y_5 : hol.term B => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1))) => hyp_2 : hol.proof ((x_6 : hol.term A => hol.and (hol.eq B y_5 (f_4 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) x_2) => thm_2353 B A x_2 s_3 y_5 f_4 u_1 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)) x)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))) ;)

(; dict ;)

def thm_2355 : B : hol.type -> A : hol.type -> u_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> y_4 : hol.term B -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.imp ((x_6 : hol.term A => hol.and (hol.eq B y_4 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) x_5) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_1) (hol.eq B (f_3 x_6) y_4))))) :=
  B : hol.type => A : hol.type => u_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => y_4 : hol.term B => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1))) => x_5 : hol.term A => thm_2354 B A u_1 x_5 s_2 f_3 y_4 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))) ;)

(; dict ;)

def thm_2356 : B : hol.type -> A : hol.type -> u_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> y_4 : hol.term B -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1))) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1) (hol.eq B (f_3 x_5) y_4)))) :=
  B : hol.type => A : hol.type => u_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => y_4 : hol.term B => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1))) => thm_2325 B A u_1 s_2 f_3 y_4 (thm_2355 B A u_1 s_2 f_3 y_4 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))) ;)

(; dict ;)

def thm_2357 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) => hyp_1.

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))) ;)

(; dict ;)

def thm_2358 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4))) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_2 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) y_2))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4))) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_2 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1))) => thm_2356 B A u_4 s_1 f_3 y_2 hyp_1 (thm_2357 B A s_1 f_3 y_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))) ((= y) y))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))) ;)

(; dict ;)

def thm_2359 : B : hol.type -> A : hol.type -> u_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> y_4 : hol.term B -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1))) -> hol.proof (hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (hol.eq B y_4 y_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1) (hol.eq B (f_3 x_5) y_4)))) :=
  B : hol.type => A : hol.type => u_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => y_4 : hol.term B => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1))) => hol.EQ_MP (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1) (hol.eq B (f_3 x_5) y_4)))) (hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) (hol.eq B y_4 y_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_1) (hol.eq B (f_3 x_5) y_4)))) (thm_2324 B A u_1 s_2 f_3 y_4) (hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B y_4 (f_3 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_2))) => thm_2358 B A s_2 y_4 f_3 u_1 hyp_1 hyp_2).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))) ((= y) y)) ;)

(; dict ;)

def thm_2360 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hyp_1 : hol.proof (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_2 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1))) (hol.eq B x_4 y_3))) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))) (hol.eq B y_3 y_3)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => hyp_1 : hol.proof (hol.forall B (x_4 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (hol.eq B x_4 (f_2 x_5)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1))) (hol.eq B x_4 y_3))) => thm_2316 A B y_3 s_1 f_2 hyp_1 y_3.

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))) ;)

(; dict ;)

def thm_2361 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4))) -> hyp_2 : hol.proof (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B x_5 y_2))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) y_2))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4))) => hyp_2 : hol.proof (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B x_5 y_2))) => thm_2359 B A u_4 s_1 f_3 y_2 hyp_1 (thm_2360 B A s_1 f_3 y_2 hyp_2).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))) ;)

(; dict ;)

def thm_2362 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4))) -> hyp_2 : hol.proof (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B x_5 y_2))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) y_2))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4))) => hyp_2 : hol.proof (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B x_5 y_2))) => hol.PROVE_HYP (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B x_5 y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) y_2))) (thm_2316 A B y_2 s_1 f_3 hyp_2) (hyp_3 : hol.proof (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B x_5 y_2))) => thm_2361 B A s_1 y_2 f_3 u_4 hyp_1 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))) ;)

(; dict ;)

def thm_2363 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4))) -> hyp_2 : hol.proof (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B x_5 y_2))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) y_2))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4))) => hyp_2 : hol.proof (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B x_5 y_2))) => hol.PROVE_HYP (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) y_2))) (thm_1268 A u_4 s_1 hyp_1) (hyp_3 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4))) => thm_2362 B A s_1 y_2 f_3 u_4 hyp_3 hyp_2).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))) ;)

(; dict ;)

def thm_2364 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4))) -> hyp_2 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B x_5 y_2)))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) y_2))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4))) => hyp_2 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B x_5 y_2)))) => hol.PROVE_HYP (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B x_5 y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) y_2))) (thm_2315 A B u_4 y_2 s_1 f_3 hyp_2) (hyp_3 : hol.proof (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B x_5 y_2))) => thm_2363 B A s_1 y_2 f_3 u_4 hyp_1 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))) ;)

(; dict ;)

def thm_2365 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B x_5 y_2)))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) y_2))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B x_5 y_2)))) => hol.PROVE_HYP (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) y_2))) (thm_2313 B A y_2 f_3 u_4 s_1 hyp_1) (hyp_2 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4))) => thm_2364 B A s_1 y_2 f_3 u_4 hyp_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))) ;)

(; dict ;)

def thm_2366 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B x_5 y_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (hol.eq B (f_2 x_5) y_1)))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B x_5 y_1)))) => thm_2365 B A s_4 y_1 f_2 u_3 hyp_1.

(; Theorem: |- ((= (\lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y)))) s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y))))) ;)

(; dict ;)

def thm_2367 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_2)))) s_1) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_3 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B x_5 y_2))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => hol.BETA_CONV (Set_2Eset A) hol.bool (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_2)))) s_1.

(; Theorem: |- (\lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y)))) s) ;)

(; dict ;)

def thm_2368 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof ((s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_2)))) s_1) -> hol.proof ((s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_2)))) s_1) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_2)))) s_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y)))) ;)

(; dict ;)

def thm_2369 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof ((s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_2 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_1)))) s_4) -> hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B x_5 y_1)))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_2 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_1)))) s_4) => hol.EQ_MP ((s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_2 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_1)))) s_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B x_5 y_1)))) (thm_2367 B A s_4 y_1 f_2 u_3) (thm_2368 B A s_4 y_1 f_2 u_3 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))) ;)

(; dict ;)

def thm_2370 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof ((s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_2)))) s_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) y_2))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_2)))) s_1) => thm_2366 B A y_2 f_3 u_4 s_1 (thm_2369 B A y_2 f_3 u_4 s_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y)))) s)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))) ;)

(; dict ;)

def thm_2371 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> hol.proof (hol.imp ((s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_2)))) s_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) y_2)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_4))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_3 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_2)))) s_1) => thm_2370 B A s_1 y_2 f_3 u_4 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (\lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y)))) s)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))) ;)

(; dict ;)

def thm_2372 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> hol.proof (hol.forall (Set_2Eset A) (s_4 : hol.term (Set_2Eset A) => hol.imp ((s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_3))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_2 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_1)))) s_4) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3) (hol.eq B (f_2 x_5) y_1))))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => s_4 : hol.term (Set_2Eset A) => thm_2371 B A s_4 y_1 f_2 u_3.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y)))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))) ;)

(; dict ;)

def thm_2373 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_4 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B x_5 y_1))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.eq B (f_2 x_4) y_1)))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => thm_2310 B A y_1 f_2 u_3 (thm_2372 B A y_1 f_2 u_3).

(; Theorem: |- (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y))))) ;)

(; dict ;)

def thm_2374 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_4 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B x_5 y_1))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_4 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B x_5 y_1))))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_4 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B x_5 y_1))))) => hyp_1.

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))) ;)

(; dict ;)

def thm_2375 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> u_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_4 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B x_5 y_1))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 u_3) (hol.eq B (f_2 x_4) y_1))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => u_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_4 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_3))) (hol.forall B (x_5 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_6 : hol.term A => hol.and (hol.eq B x_5 (f_2 x_6)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B x_5 y_1))))) => thm_2373 B A y_1 f_2 u_3 (thm_2374 B A y_1 f_2 u_3 hyp_1).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) v)))) ((Data.Bool.==> (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y)))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))) ;)

(; dict ;)

def thm_2376 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> y_4 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) -> hol.proof (hol.and (hol.forall B (x_5 : hol.term B => hol.imp (hol.eq B x_5 y_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => y_4 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) => hol.EQ_MP (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))) (hol.and (hol.forall B (x_5 : hol.term B => hol.imp (hol.eq B x_5 y_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))) (thm_2309 B A v_3 y_4 f_1 u_2 hyp_1) (hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_4))))) => thm_2375 B A y_4 f_1 u_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((= x) y)) ((Set.member x) v)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((= x) y))))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))) ;)

(; dict ;)

def thm_2377 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> y_4 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) -> hol.proof (hol.imp (hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (hol.eq B x_5 y_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => y_4 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) => thm_2286 A B f_1 u_2 v_3 y_4 (thm_2376 A B f_1 u_2 v_3 y_4 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert y) Set.{}))) ((Set.member x) v)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) ((Set.insert y) Set.{})))))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))) ;)

(; dict ;)

def thm_2378 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> y_4 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) -> hol.proof (hol.imp (hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_4 (Set_2E_7B_7D (Set_2Eset B)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_4 (Set_2E_7B_7D (Set_2Eset B))))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => y_4 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) => hol.EQ_MP (hol.imp (hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (hol.eq B x_5 y_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B x_6 y_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))) (hol.imp (hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_4 (Set_2E_7B_7D (Set_2Eset B)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_4 (Set_2E_7B_7D (Set_2Eset B))))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))) (thm_2220 A B f_1 u_2 v_3 y_4) (thm_2377 A B f_1 u_2 v_3 y_4 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert y) Set.{}))) ((Set.member x) v)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) ((Set.insert y) Set.{}))))))) ;)

(; dict ;)

def thm_2379 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> y_4 : hol.term B -> hyp_1 : hol.proof (hol.forall (Set_2Eset B) (t_5 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_6 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.forall B (x_7 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_7 t_5))))))) -> hol.proof (hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_4 (Set_2E_7B_7D (Set_2Eset B)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_4 (Set_2E_7B_7D (Set_2Eset B))))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => y_4 : hol.term B => hyp_1 : hol.proof (hol.forall (Set_2Eset B) (t_5 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_6 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.forall B (x_7 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_7 t_5))))))) => thm_2201 A B f_1 u_2 v_3 hyp_1 (Set_2Einsert (hol.arr B (hol.arr (Set_2Eset B) (Set_2Eset B))) y_4 (Set_2E_7B_7D (Set_2Eset B))).

(; Theorem: |- (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))) ;)

(; dict ;)

def thm_2380 : B : hol.type -> A : hol.type -> v_1 : hol.term (Set_2Eset B) -> y_2 : hol.term B -> f_3 : hol.term (hol.arr A B) -> u_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall (Set_2Eset B) (t_5 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 v_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_6 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) (hol.forall B (x_7 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_3 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_7 t_5))))))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 v_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_4) (hol.eq B (f_3 x_5) y_2))) :=
  B : hol.type => A : hol.type => v_1 : hol.term (Set_2Eset B) => y_2 : hol.term B => f_3 : hol.term (hol.arr A B) => u_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall (Set_2Eset B) (t_5 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 v_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_6 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_4))) (hol.forall B (x_7 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_3 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_7 t_5))))))) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 v_1) => thm_2378 A B f_3 u_4 v_1 y_2 hyp_2 (thm_2379 A B f_3 u_4 v_1 y_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))) ;)

(; dict ;)

def thm_2381 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> y_4 : hol.term B -> hyp_1 : hol.proof (hol.forall (Set_2Eset B) (t_5 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_6 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.forall B (x_7 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_7 t_5))))))) -> hol.proof (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => y_4 : hol.term B => hyp_1 : hol.proof (hol.forall (Set_2Eset B) (t_5 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_6 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_6 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 u_2))) (hol.forall B (x_7 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_8 : hol.term A => hol.and (hol.eq B x_7 (f_1 x_8)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_7 t_5))))))) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) => thm_2380 B A v_3 y_4 f_1 u_2 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))) ;)

(; dict ;)

def thm_2382 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4))))))) -> hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4))))))) => y_4 : hol.term B => thm_2381 A B f_1 u_2 v_3 y_4 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))) ;)

(; dict ;)

def thm_2383 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> hyp_1 : hol.proof (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4))))))) -> hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4))))))) => hol.PROVE_HYP (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4))))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))) (thm_2201 A B f_1 u_2 v_3 hyp_1) (hyp_2 : hol.proof (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4))))))) => hol.EQ_MP (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))) (thm_2024 A B f_1 u_2 v_3) (thm_2382 A B f_1 u_2 v_3 hyp_2)).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) v)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) t)))))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))))) ;)

(; dict ;)

def thm_2384 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> hol.proof (hol.imp (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4))))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => hyp_1 : hol.proof (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4))))))) => thm_2383 A B f_1 u_2 v_3 hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) t)) ((Set.member x) v)))) (Data.Bool.? \lambda s. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member x) u)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) (f x))) ((Set.member x) s)))) ((Set.member x) t)))))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))))) ;)

(; dict ;)

def thm_2385 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4))))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => hol.PROP_EXT (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4))))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))) (hyp_1 : hol.proof (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))) => thm_2200 A B f_1 u_2 v_3 (thm_2146 A B f_1 u_2 v_3 hyp_1)) (hyp_1 : hol.proof (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4))))))) => thm_2384 A B f_1 u_2 v_3 (thm_2201 A B f_1 u_2 v_3 hyp_1)).

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) v)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))))) ;)

(; dict ;)

def thm_2386 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> v_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => hol.EQ_MP (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (hol.forall B (x_5 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_5 v_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 u_2))) (hol.forall B (x_6 : hol.term B => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_7 : hol.term A => hol.and (hol.eq B x_6 (f_1 x_7)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_6 t_4))))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))) (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))) (thm_2026 A B f_1 u_2 v_3) (thm_2385 A B f_1 u_2 v_3).

(; Theorem: |- (Data.Bool.! \lambda v. ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) v)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))))) ;)

(; dict ;)

def thm_2387 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> u_2 : hol.term (Set_2Eset A) -> hol.proof (hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => v_3 : hol.term (Set_2Eset B) => thm_2386 A B f_1 u_2 v_3.

(; Theorem: |- (Data.Bool.! \lambda u. (Data.Bool.! \lambda v. ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) v)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y)))))))) ;)

(; dict ;)

def thm_2388 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => u_2 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))))) (hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))))) (thm_2006 A B f_1 u_2) (thm_2387 A B f_1 u_2).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda u. (Data.Bool.! \lambda v. ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) v)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))))))) ;)

(; dict ;)

def thm_2389 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.EQ_MP (hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))))) (hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4)))))))) (thm_2003 B A f_1) (thm_2388 B A f_1).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda u. (Data.Bool.! \lambda v. ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) v)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) u)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) u)) ((= (f x)) y))))))))) ;)

(; thm ;)

def thm_2390 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))))))) :=
  B : hol.type => A : hol.type => hol.EQ_MP (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))))))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (Set_2Eset A) (u_2 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (v_3 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_5 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_5 u_2) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_5) t_4))))) (hol.forall B (y_4 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_4 v_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_5 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 u_2) (hol.eq B (f_1 x_5) y_4))))))))) (thm_2000 B A) (thm_2389 B A).

(; Theorem: |- ((= \lambda f. ((= (Data.Bool.! \lambda t. (Data.Bool.? \lambda s. ((= ((Set.image f) s)) t)))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) \lambda f. ((= (Data.Bool.! \lambda t. (Data.Bool.? \lambda s. ((= ((Set.image f) s)) t)))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) ;)

(; dict ;)

def thm_2391 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))).

(; Theorem: |- ((= \lambda f. ((= (Data.Bool.! \lambda t. (Data.Bool.? \lambda s. ((= ((Set.image f) s)) t)))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) \lambda f. ((= (Data.Bool.! \lambda t. (Data.Bool.? \lambda s. ((= ((Set.image f) s)) t)))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) ;)

(; dict ;)

def thm_2392 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))))) :=
  B : hol.type => A : hol.type => hol.TRANS (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (thm_2391 B A) (thm_2391 B A).

(; Theorem: |- ((= (Data.Bool.! \lambda f. ((= (Data.Bool.! \lambda t. (Data.Bool.? \lambda s. ((= ((Set.image f) s)) t)))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))))) (Data.Bool.! \lambda f. ((= (Data.Bool.! \lambda t. (Data.Bool.? \lambda s. ((= ((Set.image f) s)) t)))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))))) ;)

(; dict ;)

def thm_2393 : B : hol.type -> A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))))) :=
  B : hol.type => A : hol.type => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B)) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (thm_38 B A) (thm_2392 B A).

(; Theorem: |- ((= ((Set.subset s) Set.universe)) Data.Bool.T) ;)

(; dict ;)

def thm_2394 : B : hol.type -> s_1 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) s_1 (Set_2Euniverse (Set_2Eset B))) hol.true) :=
  B : hol.type => s_1 : hol.term (Set_2Eset B) => (A : hol.type => s_1 : hol.term (Set_2Eset A) => thm_1948 A s_1) B s_1.

(; Theorem: |- ((= ((Set.subset t) Set.universe)) Data.Bool.T) ;)

(; dict ;)

def thm_2395 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_1 (Set_2Euniverse (Set_2Eset B))) hol.true) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => (B : hol.type => s_1 : hol.term (Set_2Eset B) => thm_2394 B s_1) B t_1.

(; Theorem: |- ((= (Data.Bool.==> ((Set.subset t) Set.universe))) (Data.Bool.==> Data.Bool.T)) ;)

(; dict ;)

def thm_2396 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_1 (Set_2Euniverse (Set_2Eset B)))) (hol.imp hol.true)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_1 (Set_2Euniverse (Set_2Eset B))) hol.true thm_107 (thm_2395 B t_1).

(; Theorem: |- ((= ((= ((Set.image f) s)) t)) ((= ((Set.image f) s)) t)) ;)

(; dict ;)

def thm_2397 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) t_1) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) t_1)) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) t_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.subset s) Set.universe)) ((= ((Set.image f) s)) t))) ((Data.Bool./\ Data.Bool.T) ((= ((Set.image f) s)) t))) ;)

(; dict ;)

def thm_2398 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) t_1)) (hol.and hol.true (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A)))) (hol.and hol.true) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) t_1) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) t_1) (thm_1949 A s_3) (thm_2397 A B t_1 s_3 f_2).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) ((= ((Set.image f) s)) t))) ((= ((Set.image f) s)) t)) ;)

(; dict ;)

def thm_2399 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and hol.true (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) t_1)) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) t_1)) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => f_3 : hol.term (hol.arr A B) => (t_1 : hol.term hol.bool => thm_124 t_1) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2) t_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.subset s) Set.universe)) ((= ((Set.image f) s)) t))) ((= ((Set.image f) s)) t)) ;)

(; dict ;)

def thm_2400 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) t_1)) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) t_1)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) t_1)) (hol.and hol.true (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) t_1)) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) t_1) (thm_2398 B A t_1 f_2 s_3) (thm_2399 A B t_1 s_3 f_2).

(; Theorem: |- ((= \lambda s. ((Data.Bool./\ ((Set.subset s) Set.universe)) ((= ((Set.image f) s)) t))) \lambda s. ((= ((Set.image f) s)) t)) ;)

(; dict ;)

def thm_2401 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) t_1)) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) t_1)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => hol.ABS_THM (Set_2Eset A) hol.bool (s_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) t_1)) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) t_1) (s_3 : hol.term (Set_2Eset A) => thm_2400 B A t_1 f_2 s_3).

(; Theorem: |- ((= (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) Set.universe)) ((= ((Set.image f) s)) t)))) (Data.Bool.? \lambda s. ((= ((Set.image f) s)) t))) ;)

(; dict ;)

def thm_2402 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) t_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool)) (s_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) t_1)) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) t_1) (thm_2010 A) (thm_2401 B A t_1 f_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.subset t) Set.universe)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) Set.universe)) ((= ((Set.image f) s)) t))))) ((Data.Bool.==> Data.Bool.T) (Data.Bool.? \lambda s. ((= ((Set.image f) s)) t)))) ;)

(; dict ;)

def thm_2403 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> t_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2)))) (hol.imp hol.true (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => t_2 : hol.term (Set_2Eset B) => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset B)))) (hol.imp hol.true) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2)) (thm_2396 B t_2) (thm_2402 B A t_2 f_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) (Data.Bool.? \lambda s. ((= ((Set.image f) s)) t)))) (Data.Bool.? \lambda s. ((= ((Set.image f) s)) t))) ;)

(; dict ;)

def thm_2404 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.imp hol.true (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) t_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => (t_1 : hol.term hol.bool => thm_450 t_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_3) t_1)).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.subset t) Set.universe)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) Set.universe)) ((= ((Set.image f) s)) t))))) (Data.Bool.? \lambda s. ((= ((Set.image f) s)) t))) ;)

(; dict ;)

def thm_2405 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> t_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => t_2 : hol.term (Set_2Eset B) => hol.TRANS hol.bool (hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2)))) (hol.imp hol.true (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2)) (thm_2403 A B f_1 t_2) (thm_2404 B A t_2 f_1).

(; Theorem: |- ((= \lambda t. ((Data.Bool.==> ((Set.subset t) Set.universe)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) Set.universe)) ((= ((Set.image f) s)) t))))) \lambda t. (Data.Bool.? \lambda s. ((= ((Set.image f) s)) t))) ;)

(; dict ;)

def thm_2406 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (Set_2Eset B) hol.bool) (t_2 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2)))) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.ABS_THM (Set_2Eset B) hol.bool (t_2 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2)))) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2)) (t_2 : hol.term (Set_2Eset B) => thm_2405 A B f_1 t_2).

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) Set.universe)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) Set.universe)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda t. (Data.Bool.? \lambda s. ((= ((Set.image f) s)) t)))) ;)

(; dict ;)

def thm_2407 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))))) (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr (Set_2Eset B) hol.bool) hol.bool (hol.forall (Set_2Eset B)) (hol.forall (Set_2Eset B)) (t_2 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2)))) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2)) (thm_401 B) (thm_2406 A B f_1).

(; Theorem: |- ((= (= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) Set.universe)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) Set.universe)) ((= ((Set.image f) s)) t))))))) (= (Data.Bool.! \lambda t. (Data.Bool.? \lambda s. ((= ((Set.image f) s)) t))))) ;)

(; dict ;)

def thm_2408 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2)))))) (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))))) (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) thm_64 (thm_2407 A B f_1).

(; Theorem: |- ((= ((Set.member x) Set.universe)) Data.Bool.T) ;)

(; dict ;)

def thm_2409 : B : hol.type -> x_1 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_1 (Set_2Euniverse (Set_2Eset B))) hol.true) :=
  B : hol.type => x_1 : hol.term B => (A : hol.type => x_1 : hol.term A => thm_1970 A x_1) B x_1.

(; Theorem: |- ((= ((Set.member y) Set.universe)) Data.Bool.T) ;)

(; dict ;)

def thm_2410 : B : hol.type -> y_1 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 (Set_2Euniverse (Set_2Eset B))) hol.true) :=
  B : hol.type => y_1 : hol.term B => (B : hol.type => x_1 : hol.term B => thm_2409 B x_1) B y_1.

(; Theorem: |- ((= (Data.Bool.==> ((Set.member y) Set.universe))) (Data.Bool.==> Data.Bool.T)) ;)

(; dict ;)

def thm_2411 : B : hol.type -> y_1 : hol.term B -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 (Set_2Euniverse (Set_2Eset B)))) (hol.imp hol.true)) :=
  B : hol.type => y_1 : hol.term B => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 (Set_2Euniverse (Set_2Eset B))) hol.true thm_107 (thm_2410 B y_1).

(; Theorem: |- ((= ((= (f x)) y)) ((= (f x)) y)) ;)

(; dict ;)

def thm_2412 : A : hol.type -> B : hol.type -> y_1 : hol.term B -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B (f_3 x_2) y_1) (hol.eq B (f_3 x_2) y_1)) :=
  A : hol.type => B : hol.type => y_1 : hol.term B => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.eq B (f_3 x_2) y_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y))) ((Data.Bool./\ Data.Bool.T) ((= (f x)) y))) ;)

(; dict ;)

def thm_2413 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_2 x_3) y_1)) (hol.and hol.true (hol.eq B (f_2 x_3) y_1))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => x_3 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A)))) (hol.and hol.true) (hol.eq B (f_2 x_3) y_1) (hol.eq B (f_2 x_3) y_1) (thm_1971 A x_3) (thm_2412 A B y_1 x_3 f_2).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) ((= (f x)) y))) ((= (f x)) y)) ;)

(; dict ;)

def thm_2414 : A : hol.type -> B : hol.type -> y_1 : hol.term B -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and hol.true (hol.eq B (f_3 x_2) y_1)) (hol.eq B (f_3 x_2) y_1)) :=
  A : hol.type => B : hol.type => y_1 : hol.term B => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => (t_1 : hol.term hol.bool => thm_124 t_1) (hol.eq B (f_3 x_2) y_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y))) ((= (f x)) y)) ;)

(; dict ;)

def thm_2415 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_2 x_3) y_1)) (hol.eq B (f_2 x_3) y_1)) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => x_3 : hol.term A => hol.TRANS hol.bool (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_2 x_3) y_1)) (hol.and hol.true (hol.eq B (f_2 x_3) y_1)) (hol.eq B (f_2 x_3) y_1) (thm_2413 B A y_1 f_2 x_3) (thm_2414 A B y_1 x_3 f_2).

(; Theorem: |- ((= \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y))) \lambda x. ((= (f x)) y)) ;)

(; dict ;)

def thm_2416 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_2 x_3) y_1)) (x_3 : hol.term A => hol.eq B (f_2 x_3) y_1)) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => hol.ABS_THM A hol.bool (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_2 x_3) y_1)) (x_3 : hol.term A => hol.eq B (f_2 x_3) y_1) (x_3 : hol.term A => thm_2415 B A y_1 f_2 x_3).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y)))) (Data.Bool.? \lambda x. ((= (f x)) y))) ;)

(; dict ;)

def thm_2417 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_2 x_3) y_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_2 x_3) y_1))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_2 x_3) y_1)) (x_3 : hol.term A => hol.eq B (f_2 x_3) y_1) (thm_71 A) (thm_2416 B A y_1 f_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y))))) ((Data.Bool.==> Data.Bool.T) (Data.Bool.? \lambda x. ((= (f x)) y)))) ;)

(; dict ;)

def thm_2418 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))) (hol.imp hol.true (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B)))) (hol.imp hol.true) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)) (thm_2411 B y_2) (thm_2417 B A y_2 f_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) (Data.Bool.? \lambda x. ((= (f x)) y)))) (Data.Bool.? \lambda x. ((= (f x)) y))) ;)

(; dict ;)

def thm_2419 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.imp hol.true (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_2 x_3) y_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_2 x_3) y_1))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => f_2 : hol.term (hol.arr A B) => (t_1 : hol.term hol.bool => thm_450 t_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_2 x_3) y_1)).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y))))) (Data.Bool.? \lambda x. ((= (f x)) y))) ;)

(; dict ;)

def thm_2420 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> y_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => y_2 : hol.term B => hol.TRANS hol.bool (hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))) (hol.imp hol.true (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)) (thm_2418 A B f_1 y_2) (thm_2419 B A y_2 f_1).

(; Theorem: |- ((= \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y))))) \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))) ;)

(; dict ;)

def thm_2421 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))) (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.ABS_THM B hol.bool (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))) (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)) (y_2 : hol.term B => thm_2420 A B f_1 y_2).

(; Theorem: |- ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y)))))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) ;)

(; dict ;)

def thm_2422 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2))))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))) (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)) (thm_63 B) (thm_2421 A B f_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) Set.universe)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) Set.universe)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y))))))) ((= (Data.Bool.! \lambda t. (Data.Bool.? \lambda s. ((= ((Set.image f) s)) t)))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) ;)

(; dict ;)

def thm_2423 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))))) (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2)))))) (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2)))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2))))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))) (thm_2408 A B f_1) (thm_2422 A B f_1).

(; Theorem: |- ((= (Data.Bool.==> ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) Set.universe)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) Set.universe)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y)))))))) (Data.Bool.==> ((= (Data.Bool.! \lambda t. (Data.Bool.? \lambda s. ((= ((Set.image f) s)) t)))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))))) ;)

(; dict ;)

def thm_2424 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2))))))) (hol.imp (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))))) (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) thm_107 (thm_2423 A B f_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda t. (Data.Bool.? \lambda s. ((= ((Set.image f) s)) t)))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) ((= (Data.Bool.! \lambda t. (Data.Bool.? \lambda s. ((= ((Set.image f) s)) t)))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) ;)

(; dict ;)

def thm_2425 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))).

(; Theorem: |- ((= ((Data.Bool.==> ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) Set.universe)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) Set.universe)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y))))))) ((= (Data.Bool.! \lambda t. (Data.Bool.? \lambda s. ((= ((Set.image f) s)) t)))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))))) ((Data.Bool.==> ((= (Data.Bool.! \lambda t. (Data.Bool.? \lambda s. ((= ((Set.image f) s)) t)))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) ((= (Data.Bool.! \lambda t. (Data.Bool.? \lambda s. ((= ((Set.image f) s)) t)))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))))) ;)

(; dict ;)

def thm_2426 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))))) (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))))) (hol.imp (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2))))))) (hol.imp (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))))) (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (thm_2424 A B f_1) (thm_2425 A B f_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= (Data.Bool.! \lambda t. (Data.Bool.? \lambda s. ((= ((Set.image f) s)) t)))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) ((= (Data.Bool.! \lambda t. (Data.Bool.? \lambda s. ((= ((Set.image f) s)) t)))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))))) Data.Bool.T) ;)

(; dict ;)

def thm_2427 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))))) hol.true) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => (t_1 : hol.term hol.bool => thm_468 t_1) (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))).

(; Theorem: |- ((= ((Data.Bool.==> ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) Set.universe)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) Set.universe)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y))))))) ((= (Data.Bool.! \lambda t. (Data.Bool.? \lambda s. ((= ((Set.image f) s)) t)))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))))) Data.Bool.T) ;)

(; dict ;)

def thm_2428 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))))) (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))))) hol.true) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.imp (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))))) (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))))) (hol.imp (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))))) hol.true (thm_2426 A B f_1) (thm_2427 A B f_1).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) Set.universe)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) Set.universe)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y))))))) ((= (Data.Bool.! \lambda t. (Data.Bool.? \lambda s. ((= ((Set.image f) s)) t)))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))))) ;)

(; dict ;)

def thm_2429 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool hol.true (hol.imp (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))))) (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.SYM hol.bool (hol.imp (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))))) (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))))) hol.true (thm_2428 A B f_1).

(; Theorem: |- ((Data.Bool.==> ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) Set.universe)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) Set.universe)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y))))))) ((= (Data.Bool.! \lambda t. (Data.Bool.? \lambda s. ((= ((Set.image f) s)) t)))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) ;)

(; dict ;)

def thm_2430 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.imp (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))))) (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => hol.EQ_MP hol.true (hol.imp (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))))) (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))))) (thm_2429 A B f_1) thm_15.

(; Theorem: |- (Data.Bool.! \lambda v. ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) v)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) Set.universe)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) v)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y))))))) ;)

(; dict ;)

def thm_2431 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.forall (Set_2Eset B) (v_2 : hol.term (Set_2Eset B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_3 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_3 v_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_4 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_4 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_4) t_3))))) (hol.forall B (y_3 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 v_2) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_4) y_3))))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => thm_2388 B A f_1 (Set_2Euniverse (Set_2Eset A)).

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.subset t) Set.universe)) (Data.Bool.? \lambda s. ((Data.Bool./\ ((Set.subset s) Set.universe)) ((= ((Set.image f) s)) t)))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) Set.universe)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) Set.universe)) ((= (f x)) y)))))) ;)

(; dict ;)

def thm_2432 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.imp (Set_2Esubset (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset B) hol.bool)) t_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.and (Set_2Esubset (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset A) hol.bool)) s_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))))) (hol.forall B (y_2 : hol.term B => hol.imp (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Euniverse (Set_2Eset B))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Euniverse (Set_2Eset A))) (hol.eq B (f_1 x_3) y_2)))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => thm_2431 A B f_1 (Set_2Euniverse (Set_2Eset B)).

(; Theorem: |- ((= (Data.Bool.! \lambda t. (Data.Bool.? \lambda s. ((= ((Set.image f) s)) t)))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y)))) ;)

(; dict ;)

def thm_2433 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => thm_2430 A B f_1 (thm_2432 A B f_1).

(; Theorem: |- (Data.Bool.! \lambda f. ((= (Data.Bool.! \lambda t. (Data.Bool.? \lambda s. ((= ((Set.image f) s)) t)))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) ;)

(; dict ;)

def thm_2434 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => thm_2433 A B f_1.

(; Theorem: |- (Data.Bool.! \lambda f. ((= (Data.Bool.! \lambda t. (Data.Bool.? \lambda s. ((= ((Set.image f) s)) t)))) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= (f x)) y))))) ;)

(; thm ;)

def thm_2435 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))))) :=
  B : hol.type => A : hol.type => hol.EQ_MP (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => Data_2EBool_2E_3F (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.eq (Set_2Eset B) (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_1 s_3) t_2))) (hol.forall B (y_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.eq B (f_1 x_3) y_2))))) (thm_2393 B A) (thm_2434 B A).
