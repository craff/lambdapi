
(; This file was generated by Holide. ;)

#REQUIRE hol.
#NAME set_2Dthm_2Da4.

Set_2Eset : hol.type -> hol.type.

Data_2EPair_2E_2A : hol.type -> hol.type -> hol.type.

Set_2EfromPredicate : A : hol.type -> hol.term A.

Data_2EBool_2E_3F : A : hol.type -> hol.term A.

Set_2Emember : A : hol.type -> hol.term A.

Set_2E_7B_7D : A : hol.type -> hol.term A.

Set_2Einsert : A : hol.type -> hol.term A.

Set_2Eimage : A : hol.type -> hol.term A.

Data_2EPair_2E_2C : A : hol.type -> hol.term A.

Set_2Ecross : A : hol.type -> hol.term A.

(; axiom ;)

thm_0 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.eq hol.bool (hol.eq A x_1 y_2) (hol.eq A y_2 x_1)))).

(; axiom ;)

thm_1 : A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))) (hol.eq (Set_2Eset A) s_1 t_2)))).

(; axiom ;)

thm_2 : A : hol.type -> hol.proof (hol.forall (hol.arr A hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.forall A (x_2 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) p_1)) (p_1 x_2)))).

(; axiom ;)

thm_3 : hol.proof (hol.eq hol.bool hol.false (hol.forall hol.bool (p_1 : hol.term hol.bool => p_1))).

(; axiom ;)

thm_4 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) hol.not (p_1 : hol.term hol.bool => hol.imp p_1 hol.false)).

(; axiom ;)

thm_5 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2E_7B_7D (Set_2Eset A))))).

(; axiom ;)

thm_6 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp hol.true t_1) t_1)).

(; axiom ;)

thm_7 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))).

(; axiom ;)

thm_8 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 hol.true) hol.true)).

(; axiom ;)

thm_9 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp hol.false t_1) hol.true)).

(; axiom ;)

thm_10 : hol.proof hol.true.

(; axiom ;)

thm_11 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.imp t_1 t_1)).

(; axiom ;)

thm_12 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))).

(; axiom ;)

thm_13 : A : hol.type -> hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1)).

(; axiom ;)

thm_14 : hol.proof (hol.eq hol.bool (hol.not hol.true) hol.false).

(; axiom ;)

thm_15 : hol.proof (hol.eq hol.bool (hol.not hol.false) hol.true).

(; axiom ;)

thm_16 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and hol.true t_1) t_1)).

(; axiom ;)

thm_17 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and t_1 hol.true) t_1)).

(; axiom ;)

thm_18 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and hol.false t_1) hol.false)).

(; axiom ;)

thm_19 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and t_1 hol.false) hol.false)).

(; axiom ;)

thm_20 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.and t_1 t_1) t_1)).

(; axiom ;)

thm_21 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_1 y_2)))).

(; axiom ;)

thm_22 : A : hol.type -> hol.proof (hol.forall (hol.arr A hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.forall A (a_2 : hol.term A => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq A a_2 x_3) (p_1 x_3))) (p_1 a_2)))).

(; axiom ;)

thm_23 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))) (hol.eq (hol.arr A B) f_1 g_2)))).

(; axiom ;)

thm_24 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall A (y_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_3)) (hol.or (hol.eq A x_1 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3)))))).

(; axiom ;)

thm_25 : A : hol.type -> B : hol.type -> hol.proof (hol.forall B (y_1 : hol.term B => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_1 (f_3 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2))))))).

(; axiom ;)

thm_26 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr (Data_2EPair_2E_2A A B) hol.bool) (p_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) hol.bool) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_2 : hol.term (Data_2EPair_2E_2A A B) => p_1 x_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (b_3 : hol.term B => p_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)))))).

(; axiom ;)

thm_27 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (p_1 x_3) q_2)) q_2))).

(; axiom ;)

thm_28 : A : hol.type -> hol.proof (hol.forall (hol.arr A hol.bool) (P_1 : hol.term (hol.arr A hol.bool) => hol.forall A (x_2 : hol.term A => hol.imp (P_1 x_2) (P_1 (hol.select A P_1))))).

(; axiom ;)

thm_29 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (t_1 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1)).

(; axiom ;)

thm_30 : C : hol.type -> B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A (hol.arr B C)) (f_1 : hol.term (hol.arr A (hol.arr B C)) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) C) hol.bool) hol.bool) (fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) (f_1 a_3 b_4)))))).

(; axiom ;)

thm_31 : B : hol.type -> A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall B (y_2 : hol.term B => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_1 y_2) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_4))))))).

(; axiom ;)

thm_32 : hol.proof (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))))).

(; axiom ;)

thm_33 : hol.proof (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))).

(; axiom ;)

thm_34 : A : hol.type -> hol.proof (hol.forall (hol.arr A hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (c_2 : hol.term hol.bool => hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.eq hol.bool (p_1 (hol.cond A c_2 x_3 y_4)) (hol.and (hol.imp c_2 (p_1 x_3)) (hol.imp (hol.not c_2) (p_1 y_4)))))))).

(; axiom ;)

thm_35 : A : hol.type -> hol.proof (hol.forall A (t1_1 : hol.term A => hol.forall A (t2_2 : hol.term A => hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1))).

(; axiom ;)

thm_36 : A : hol.type -> hol.proof (hol.forall A (t1_1 : hol.term A => hol.forall A (t2_2 : hol.term A => hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))).

(; axiom ;)

thm_37 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.or (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp p_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))).

(; axiom ;)

thm_38 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.or hol.true t_1) hol.true)).

(; axiom ;)

thm_39 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.or t_1 hol.true) hol.true)).

(; axiom ;)

thm_40 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.or hol.false t_1) t_1)).

(; axiom ;)

thm_41 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.or t_1 hol.false) t_1)).

(; axiom ;)

thm_42 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.or t_1 t_1) t_1)).

(; axiom ;)

thm_43 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1)).

(; axiom ;)

thm_44 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1)).

(; axiom ;)

thm_45 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1))).

(; axiom ;)

thm_46 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))).

(; axiom ;)

thm_47 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) x_1 s_2) s_2)))).

(; axiom ;)

thm_48 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.or t_1 (hol.not t_1))).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_49 : B : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr B hol.bool) hol.bool) (hol.forall B) (hol.forall B)) :=
  B : hol.type => hol.REFL (hol.arr (hol.arr B hol.bool) hol.bool) (hol.forall B).

(; Theorem: |- ((= \lambda d. (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))))) ((Set.insert \lambda x. d) Set.{})))) \lambda d. (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))))) ((Set.insert \lambda x. d) Set.{})))) ;)

(; dict ;)

def thm_50 : A : hol.type -> B : hol.type -> hol.proof (hol.eq (hol.arr B hol.bool) (d_1 : hol.term B => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B)))))) (d_1 : hol.term B => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B))))))) :=
  A : hol.type => B : hol.type => hol.REFL (hol.arr B hol.bool) (d_1 : hol.term B => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B)))))).

(; Theorem: |- ((= \lambda d. (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))))) ((Set.insert \lambda x. d) Set.{})))) \lambda d. (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))))) ((Set.insert \lambda x. d) Set.{})))) ;)

(; dict ;)

def thm_51 : A : hol.type -> B : hol.type -> hol.proof (hol.eq (hol.arr B hol.bool) (d_1 : hol.term B => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B)))))) (d_1 : hol.term B => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B))))))) :=
  A : hol.type => B : hol.type => hol.TRANS (hol.arr B hol.bool) (d_1 : hol.term B => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B)))))) (d_1 : hol.term B => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B)))))) (d_1 : hol.term B => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B)))))) (thm_50 A B) (thm_50 A B).

(; Theorem: |- ((= (Data.Bool.! \lambda d. (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))))) ((Set.insert \lambda x. d) Set.{}))))) (Data.Bool.! \lambda d. (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))))) ((Set.insert \lambda x. d) Set.{}))))) ;)

(; dict ;)

def thm_52 : A : hol.type -> B : hol.type -> hol.proof (hol.eq hol.bool (hol.forall B (d_1 : hol.term B => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B))))))) (hol.forall B (d_1 : hol.term B => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B)))))))) :=
  A : hol.type => B : hol.type => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (d_1 : hol.term B => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B)))))) (d_1 : hol.term B => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B)))))) (thm_49 B) (thm_51 A B).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_53 : B : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (Set_2Eset B) hol.bool) hol.bool) (hol.forall (Set_2Eset B)) (hol.forall (Set_2Eset B))) :=
  B : hol.type => hol.REFL (hol.arr (hol.arr (Set_2Eset B) hol.bool) hol.bool) (hol.forall (Set_2Eset B)).

(; Theorem: |- ((= \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))))) ((Set.insert \lambda x. d) Set.{}))) \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))))) ((Set.insert \lambda x. d) Set.{}))) ;)

(; dict ;)

def thm_54 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> hol.proof (hol.eq (hol.arr (Set_2Eset B) hol.bool) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B))))) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B)))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => hol.REFL (hol.arr (Set_2Eset B) hol.bool) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B))))).

(; Theorem: |- ((= \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))))) ((Set.insert \lambda x. d) Set.{}))) \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))))) ((Set.insert \lambda x. d) Set.{}))) ;)

(; dict ;)

def thm_55 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> hol.proof (hol.eq (hol.arr (Set_2Eset B) hol.bool) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B))))) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B)))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => hol.TRANS (hol.arr (Set_2Eset B) hol.bool) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B))))) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B))))) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B))))) (thm_54 A B d_1) (thm_54 A B d_1).

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))))) ((Set.insert \lambda x. d) Set.{})))) (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))))) ((Set.insert \lambda x. d) Set.{})))) ;)

(; dict ;)

def thm_56 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B)))))) (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => hol.APP_THM (hol.arr (Set_2Eset B) hol.bool) hol.bool (hol.forall (Set_2Eset B)) (hol.forall (Set_2Eset B)) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B))))) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B))))) (thm_53 B) (thm_55 A B d_1).

(; Theorem: |- ((= ((= ((= s) t)) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))) ((= ((= s) t)) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_57 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq (Set_2Eset A) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (hol.eq (Set_2Eset A) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1))))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.eq hol.bool (hol.eq (Set_2Eset A) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))).

(; Theorem: |- ((= ((= ((= s) t)) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))) ((= ((= s) t)) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_58 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq (Set_2Eset A) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (hol.eq (Set_2Eset A) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1))))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq (Set_2Eset A) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (hol.eq (Set_2Eset A) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (hol.eq (Set_2Eset A) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (thm_57 A t_1 s_2) (thm_57 A t_1 s_2).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_59 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr (Set_2Eset A) hol.bool) hol.bool) (hol.forall (Set_2Eset A)).

(; Theorem: |- ((= ((= ((= x) y)) ((= y) x))) ((= ((= x) y)) ((= y) x))) ;)

(; dict ;)

def thm_60 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)).

(; Theorem: |- ((= ((= ((= x) y)) ((= y) x))) ((= ((= x) y)) ((= y) x))) ;)

(; dict ;)

def thm_61 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (thm_60 A y_1 x_2) (thm_60 A y_1 x_2).

(; Theorem: |- (Data.Bool.! \lambda y. ((= ((= x) y)) ((= y) x))) ;)

(; dict ;)

def thm_62 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.forall A (y_2 : hol.term A => hol.eq hol.bool (hol.eq A x_1 y_2) (hol.eq A y_2 x_1))) :=
  A : hol.type => x_1 : hol.term A => thm_0 A x_1.

(; Theorem: |- ((= ((= x) y)) ((= y) x)) ;)

(; dict ;)

def thm_63 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => thm_62 A x_2 y_1.

(; Theorem: |- ((= ((= x) y)) ((= y) x)) ;)

(; dict ;)

def thm_64 : y_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool x_2 y_1) (hol.eq hol.bool y_1 x_2)) :=
  y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => (A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.EQ_MP (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (hol.eq hol.bool (hol.eq A x_2 y_1) (hol.eq A y_1 x_2)) (thm_61 A y_1 x_2) (thm_63 A y_1 x_2)) hol.bool y_1 x_2.

(; Theorem: |- ((= ((= ((= s) t)) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))) ((= (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))) ((= s) t))) ;)

(; dict ;)

def thm_65 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq (Set_2Eset A) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1))) (hol.eq (Set_2Eset A) s_2 t_1))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => (y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => thm_64 y_1 x_2) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1))) (hol.eq (Set_2Eset A) s_2 t_1).

(; Theorem: |- ((= \lambda t. ((= ((= s) t)) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))) \lambda t. ((= (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))) ((= s) t))) ;)

(; dict ;)

def thm_66 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2)))) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))) (hol.eq (Set_2Eset A) s_1 t_2))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.ABS_THM (Set_2Eset A) hol.bool (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2)))) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))) (hol.eq (Set_2Eset A) s_1 t_2)) (t_2 : hol.term (Set_2Eset A) => thm_65 A t_2 s_1).

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((= ((= s) t)) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))))) (Data.Bool.! \lambda t. ((= (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))) ((= s) t)))) ;)

(; dict ;)

def thm_67 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))))) (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))) (hol.eq (Set_2Eset A) s_1 t_2)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2)))) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))) (hol.eq (Set_2Eset A) s_1 t_2)) (thm_59 A) (thm_66 A s_1).

(; Theorem: |- ((= \lambda s. (Data.Bool.! \lambda t. ((= ((= s) t)) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))))) \lambda s. (Data.Bool.! \lambda t. ((= (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))) ((= s) t)))) ;)

(; dict ;)

def thm_68 : A : hol.type -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))))) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))) (hol.eq (Set_2Eset A) s_1 t_2)))) :=
  A : hol.type => hol.ABS_THM (Set_2Eset A) hol.bool (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))))) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))) (hol.eq (Set_2Eset A) s_1 t_2))) (s_1 : hol.term (Set_2Eset A) => thm_67 A s_1).

(; Theorem: |- ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= ((= s) t)) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))))) (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))) ((= s) t))))) ;)

(; dict ;)

def thm_69 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2)))))) (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))) (hol.eq (Set_2Eset A) s_1 t_2))))) :=
  A : hol.type => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))))) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))) (hol.eq (Set_2Eset A) s_1 t_2))) (thm_59 A) (thm_68 A).

(; Theorem: |- ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))) ((= s) t))))) (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= ((= s) t)) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))))) ;)

(; dict ;)

def thm_70 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))) (hol.eq (Set_2Eset A) s_1 t_2)))) (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))))))) :=
  A : hol.type => hol.SYM hol.bool (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2)))))) (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))) (hol.eq (Set_2Eset A) s_1 t_2)))) (thm_69 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= ((= s) t)) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))))) ;)

(; dict ;)

def thm_71 : A : hol.type -> hol.proof (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2)))))) :=
  A : hol.type => hol.EQ_MP (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))) (hol.eq (Set_2Eset A) s_1 t_2)))) (hol.forall (Set_2Eset A) (s_1 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2)))))) (thm_70 A) (thm_1 A).

(; Theorem: |- (Data.Bool.! \lambda t. ((= ((= s) t)) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t))))) ;)

(; dict ;)

def thm_72 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.forall (Set_2Eset A) (t_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (hol.eq (Set_2Eset A) s_1 t_2) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_2))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => thm_71 A s_1.

(; Theorem: |- ((= ((= s) t)) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))) ;)

(; dict ;)

def thm_73 : A : hol.type -> t_1 : hol.term (Set_2Eset A) -> s_2 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset A) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) :=
  A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => thm_72 A s_2 t_1.

(; Theorem: |- ((= ((= s) t)) (Data.Bool.! \lambda x. ((= ((Set.member x) s)) ((Set.member x) t)))) ;)

(; dict ;)

def thm_74 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset (hol.arr A B)) -> s_2 : hol.term (Set_2Eset (hol.arr A B)) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset (hol.arr A B)) s_2 t_1) (hol.forall (hol.arr A B) (x_3 : hol.term (hol.arr A B) => hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_3 t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset (hol.arr A B)) => s_2 : hol.term (Set_2Eset (hol.arr A B)) => (A : hol.type => t_1 : hol.term (Set_2Eset A) => s_2 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.eq hol.bool (hol.eq (Set_2Eset A) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (hol.eq hol.bool (hol.eq (Set_2Eset A) s_2 t_1) (hol.forall A (x_3 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 t_1)))) (thm_58 A t_1 s_2) (thm_73 A t_1 s_2)) (hol.arr A B) t_1 s_2.

(; Theorem: |- ((= ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))))) ((Set.insert \lambda x. d) Set.{}))) (Data.Bool.! \lambda x. ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d))))))))) ((Set.member x) ((Set.insert \lambda x. d) Set.{}))))) ;)

(; dict ;)

def thm_75 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B))))) (hol.forall (hol.arr A B) (x_3 : hol.term (hol.arr A B) => hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_1)))))))) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_3 (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_4 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B)))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => (B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset (hol.arr A B)) => s_2 : hol.term (Set_2Eset (hol.arr A B)) => thm_74 B A t_1 s_2) B A (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B)))) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_76 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (hol.forall (hol.arr A B)).

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_77 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) (hol.eq hol.bool) (hol.eq hol.bool)) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) (hol.eq hol.bool).

(; Theorem: |- ((= ((= ((Set.member x) (Set.fromPredicate p))) (p x))) ((= ((Set.member x) (Set.fromPredicate p))) (p x))) ;)

(; dict ;)

def thm_78 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) p_1)) (p_1 x_2)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) p_1)) (p_1 x_2))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => x_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) p_1)) (p_1 x_2)).

(; Theorem: |- ((= ((= ((Set.member x) (Set.fromPredicate p))) (p x))) ((= ((Set.member x) (Set.fromPredicate p))) (p x))) ;)

(; dict ;)

def thm_79 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) p_1)) (p_1 x_2)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) p_1)) (p_1 x_2))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => x_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) p_1)) (p_1 x_2)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) p_1)) (p_1 x_2)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) p_1)) (p_1 x_2)) (thm_78 A p_1 x_2) (thm_78 A p_1 x_2).

(; Theorem: |- (Data.Bool.! \lambda x. ((= ((Set.member x) (Set.fromPredicate p))) (p x))) ;)

(; dict ;)

def thm_80 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.forall A (x_2 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) p_1)) (p_1 x_2))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_2 A p_1.

(; Theorem: |- ((= ((Set.member x) (Set.fromPredicate p))) (p x)) ;)

(; dict ;)

def thm_81 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) p_1)) (p_1 x_2)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => x_2 : hol.term A => thm_80 A p_1 x_2.

(; Theorem: |- ((= ((Set.member x) (Set.fromPredicate p))) (p x)) ;)

(; dict ;)

def thm_82 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr (hol.arr A B) hol.bool) -> x_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) p_1)) (p_1 x_2)) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr (hol.arr A B) hol.bool) => x_2 : hol.term (hol.arr A B) => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => x_2 : hol.term A => hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) p_1)) (p_1 x_2)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2EfromPredicate (hol.arr (hol.arr A hol.bool) (Set_2Eset A)) p_1)) (p_1 x_2)) (thm_79 A p_1 x_2) (thm_81 A p_1 x_2)) (hol.arr A B) p_1 x_2.

(; Theorem: |- ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d))))))))) (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))) x)) ;)

(; dict ;)

def thm_83 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> x_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_1)))))))) ((v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_1)))))) x_3)) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => x_3 : hol.term (hol.arr A B) => (B : hol.type => A : hol.type => p_1 : hol.term (hol.arr (hol.arr A B) hol.bool) => x_2 : hol.term (hol.arr A B) => thm_82 B A p_1 x_2) B A (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_1)))))) x_3.

(; Theorem: |- ((= (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))) v)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d))))))) ;)

(; dict ;)

def thm_84 : B : hol.type -> A : hol.type -> v_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool ((v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_2)))))) v_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_1 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_3))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_2))))))) :=
  B : hol.type => A : hol.type => v_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => hol.BETA_CONV (hol.arr A B) hol.bool (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_2)))))) v_1.

(; Theorem: |- ((= \lambda v. (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))) v)) \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d))))))) ;)

(; dict ;)

def thm_85 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (v_3 : hol.term (hol.arr A B) => (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_1)))))) v_3) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => hol.ABS_THM (hol.arr A B) hol.bool (v_3 : hol.term (hol.arr A B) => (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_1)))))) v_3) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1)))))) (v_3 : hol.term (hol.arr A B) => thm_84 B A v_3 d_1 t_2).

(; Theorem: |- ((= x) x) ;)

(; dict ;)

def thm_86 : B : hol.type -> A : hol.type -> x_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A B) x_1 x_1) :=
  B : hol.type => A : hol.type => x_1 : hol.term (hol.arr A B) => hol.REFL (hol.arr A B) x_1.

(; Theorem: |- ((= (\lambda v. (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))) v) x)) (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))) x)) ;)

(; dict ;)

def thm_87 : B : hol.type -> A : hol.type -> x_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool ((v_4 : hol.term (hol.arr A B) => (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_6 x_7) d_2)))))) v_4) x_1) ((v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_2)))))) x_1)) :=
  B : hol.type => A : hol.type => x_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => hol.APP_THM (hol.arr A B) hol.bool (v_4 : hol.term (hol.arr A B) => (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_6 x_7) d_2)))))) v_4) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_2)))))) x_1 x_1 (thm_85 B A d_2 t_3) (thm_86 B A x_1).

(; Theorem: |- ((= (= (\lambda v. (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))) v) x))) (= (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))) x))) ;)

(; dict ;)

def thm_88 : B : hol.type -> A : hol.type -> x_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((v_4 : hol.term (hol.arr A B) => (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_6 x_7) d_2)))))) v_4) x_1)) (hol.eq hol.bool ((v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_2)))))) x_1))) :=
  B : hol.type => A : hol.type => x_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((v_4 : hol.term (hol.arr A B) => (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_6 x_7) d_2)))))) v_4) x_1) ((v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_2)))))) x_1) thm_77 (thm_87 B A x_1 d_2 t_3).

(; Theorem: |- ((= (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))) x)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d))))))) ;)

(; dict ;)

def thm_89 : B : hol.type -> A : hol.type -> x_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool ((v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_2)))))) x_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_1 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_3))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_2))))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => hol.BETA_CONV (hol.arr A B) hol.bool (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_2)))))) x_1.

(; Theorem: |- ((= ((= (\lambda v. (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))) v) x)) (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))) x))) ((= (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))) x)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))))) ;)

(; dict ;)

def thm_90 : B : hol.type -> A : hol.type -> x_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((v_4 : hol.term (hol.arr A B) => (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_6 x_7) d_2)))))) v_4) x_1) ((v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_2)))))) x_1)) (hol.eq hol.bool ((v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_2)))))) x_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_1 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_3))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_2)))))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((v_4 : hol.term (hol.arr A B) => (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_6 x_7) d_2)))))) v_4) x_1)) (hol.eq hol.bool ((v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_2)))))) x_1)) ((v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_2)))))) x_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_1 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_3))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_2)))))) (thm_88 B A x_1 d_2 t_3) (thm_89 B A x_1 d_2 t_3).

(; Theorem: |- ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d))))))))) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d))))))) ;)

(; dict ;)

def thm_91 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> x_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_1)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => x_3 : hol.term (hol.arr A B) => hol.TRANS hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_1)))))))) ((v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_1)))))) x_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1)))))) (thm_83 B A d_1 t_2 x_3) (hol.EQ_MP (hol.eq hol.bool ((v_4 : hol.term (hol.arr A B) => (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_6 x_7) d_1)))))) v_4) x_3) ((v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_1)))))) x_3)) (hol.eq hol.bool ((v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_1)))))) x_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (thm_90 B A x_3 d_1 t_2) (thm_87 B A x_3 d_1 t_2)).

(; Theorem: |- ((= Data.Bool.?) Data.Bool.?) ;)

(; dict ;)

def thm_92 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool)).

(; Theorem: |- ((= (Data.Bool./\ ((= x) f))) (Data.Bool./\ ((= x) f))) ;)

(; dict ;)

def thm_93 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> x_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq (hol.arr A B) x_2 f_1)) (hol.and (hol.eq (hol.arr A B) x_2 f_1))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => x_2 : hol.term (hol.arr A B) => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (hol.eq (hol.arr A B) x_2 f_1)).

(; Theorem: |- ((= Data.Bool./\) Data.Bool./\) ;)

(; dict ;)

def thm_94 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and hol.and) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and.

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_95 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (hol.forall A) (hol.forall A)) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A hol.bool) hol.bool) (hol.forall A).

(; Theorem: |- ((= Data.Bool.==>) Data.Bool.==>) ;)

(; dict ;)

def thm_96 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.imp hol.imp) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.imp.

(; Theorem: |- ((= ((= ((Set.member x) Set.{})) Data.Bool.F)) ((= ((Set.member x) Set.{})) Data.Bool.F)) ;)

(; dict ;)

def thm_97 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2E_7B_7D (Set_2Eset A))) hol.false) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2E_7B_7D (Set_2Eset A))) hol.false)) :=
  A : hol.type => x_1 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2E_7B_7D (Set_2Eset A))) hol.false).

(; Theorem: |- ((= ((= ((Set.member x) Set.{})) Data.Bool.F)) ((= ((Set.member x) Set.{})) Data.Bool.F)) ;)

(; dict ;)

def thm_98 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2E_7B_7D (Set_2Eset A))) hol.false) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2E_7B_7D (Set_2Eset A))) hol.false)) :=
  A : hol.type => x_1 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2E_7B_7D (Set_2Eset A))) hol.false) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2E_7B_7D (Set_2Eset A))) hol.false) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2E_7B_7D (Set_2Eset A))) hol.false) (thm_97 A x_1) (thm_97 A x_1).

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_99 : hyp_1 : hol.proof hol.false -> hol.proof hol.false :=
  hyp_1 : hol.proof hol.false => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda p. p) ;)

(; dict ;)

def thm_100 : hyp_1 : hol.proof hol.false -> hol.proof (hol.forall hol.bool (p_1 : hol.term hol.bool => p_1)) :=
  hyp_1 : hol.proof hol.false => hol.EQ_MP hol.false (hol.forall hol.bool (p_1 : hol.term hol.bool => p_1)) thm_3 (thm_99 hyp_1).

(; Theorem: |- P ;)

(; dict ;)

def thm_101 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof hol.false -> hol.proof P_1 :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof hol.false => thm_100 hyp_1 P_1.

(; Theorem: |- ((Data.Bool.==> Data.Bool.F) P) ;)

(; dict ;)

def thm_102 : P_1 : hol.term hol.bool -> hol.proof (hol.imp hol.false P_1) :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof hol.false => thm_101 P_1 hyp_1.

(; Theorem: |- ((= (= (Data.Bool.~ P))) (= (Data.Bool.~ P))) ;)

(; dict ;)

def thm_103 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not P_1)) (hol.eq hol.bool (hol.not P_1))) :=
  P_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.not P_1)).

(; Theorem: |- ((= (\lambda p. ((Data.Bool.==> p) Data.Bool.F) P)) ((Data.Bool.==> P) Data.Bool.F)) ;)

(; dict ;)

def thm_104 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1) (hol.imp P_1 hol.false)) :=
  P_1 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1.

(; Theorem: |- ((= ((= (Data.Bool.~ P)) (\lambda p. ((Data.Bool.==> p) Data.Bool.F) P))) ((= (Data.Bool.~ P)) ((Data.Bool.==> P) Data.Bool.F))) ;)

(; dict ;)

def thm_105 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not P_1) ((p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1)) (hol.eq hol.bool (hol.not P_1) (hol.imp P_1 hol.false))) :=
  P_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.not P_1)) (hol.eq hol.bool (hol.not P_1)) ((p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1) (hol.imp P_1 hol.false) (thm_103 P_1) (thm_104 P_1).

(; Theorem: |- ((= P) P) ;)

(; dict ;)

def thm_106 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool P_1 P_1) :=
  P_1 : hol.term hol.bool => hol.REFL hol.bool P_1.

(; Theorem: |- ((= (Data.Bool.~ P)) (\lambda p. ((Data.Bool.==> p) Data.Bool.F) P)) ;)

(; dict ;)

def thm_107 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not P_1) ((p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1)) :=
  P_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool hol.not (p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1 P_1 thm_4 (thm_106 P_1).

(; Theorem: |- ((= (Data.Bool.~ P)) ((Data.Bool.==> P) Data.Bool.F)) ;)

(; dict ;)

def thm_108 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not P_1) (hol.imp P_1 hol.false)) :=
  P_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.not P_1) ((p_2 : hol.term hol.bool => hol.imp p_2 hol.false) P_1)) (hol.eq hol.bool (hol.not P_1) (hol.imp P_1 hol.false)) (thm_105 P_1) (thm_107 P_1).

(; Theorem: |- (Data.Bool.~ P) ;)

(; dict ;)

def thm_109 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.not P_1) -> hol.proof (hol.not P_1) :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.not P_1) => hyp_1.

(; Theorem: |- ((Data.Bool.==> P) Data.Bool.F) ;)

(; dict ;)

def thm_110 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.not P_1) -> hol.proof (hol.imp P_1 hol.false) :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.not P_1) => hol.EQ_MP (hol.not P_1) (hol.imp P_1 hol.false) ((P_1 : hol.term hol.bool => thm_108 P_1) P_1) (thm_109 P_1 hyp_1).

(; Theorem: |- P ;)

(; dict ;)

def thm_111 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof P_1 -> hol.proof P_1 :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof P_1 => hyp_1.

(; Theorem: |- Data.Bool.F ;)

(; dict ;)

def thm_112 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof P_1 -> hyp_2 : hol.proof (hol.not P_1) -> hol.proof hol.false :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof P_1 => hyp_2 : hol.proof (hol.not P_1) => thm_110 P_1 hyp_2 (thm_111 P_1 hyp_1).

(; Theorem: |- ((= P) Data.Bool.F) ;)

(; dict ;)

def thm_113 : P_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.not P_1) -> hol.proof (hol.eq hol.bool P_1 hol.false) :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.not P_1) => hol.PROP_EXT P_1 hol.false (hyp_2 : hol.proof hol.false => thm_102 P_1 (thm_99 hyp_2)) (hyp_2 : hol.proof P_1 => thm_112 P_1 hyp_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ P)) ((= P) Data.Bool.F)) ;)

(; dict ;)

def thm_114 : P_1 : hol.term hol.bool -> hol.proof (hol.imp (hol.not P_1) (hol.eq hol.bool P_1 hol.false)) :=
  P_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.not P_1) => thm_113 P_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= ((Set.member x) Set.{})) Data.Bool.F)) ;)

(; dict ;)

def thm_115 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2E_7B_7D (Set_2Eset A))) hol.false)) :=
  A : hol.type => x_1 : hol.term A => (P_1 : hol.term hol.bool => thm_114 P_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2E_7B_7D (Set_2Eset A))).

(; Theorem: |- (Data.Bool.~ ((Set.member x) Set.{})) ;)

(; dict ;)

def thm_116 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2E_7B_7D (Set_2Eset A)))) :=
  A : hol.type => x_1 : hol.term A => thm_5 A x_1.

(; Theorem: |- ((= ((Set.member x) Set.{})) Data.Bool.F) ;)

(; dict ;)

def thm_117 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2E_7B_7D (Set_2Eset A))) hol.false) :=
  A : hol.type => x_1 : hol.term A => thm_115 A x_1 (thm_116 A x_1).

(; Theorem: |- ((= (Data.Bool.==> ((Set.member x) Set.{}))) (Data.Bool.==> Data.Bool.F)) ;)

(; dict ;)

def thm_118 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.imp hol.false)) :=
  A : hol.type => x_1 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2E_7B_7D (Set_2Eset A))) hol.false thm_96 ((A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2E_7B_7D (Set_2Eset A))) hol.false) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2E_7B_7D (Set_2Eset A))) hol.false) (thm_98 A x_1) (thm_117 A x_1)) A x_1).

(; Theorem: |- ((= ((Set.member (f x)) t)) ((Set.member (f x)) t)) ;)

(; dict ;)

def thm_119 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_2) t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_2) t_1)) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hol.REFL hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_2) t_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t))) ((Data.Bool.==> Data.Bool.F) ((Set.member (f x)) t))) ;)

(; dict ;)

def thm_120 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_3) t_1)) (hol.imp hol.false (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_3) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2E_7B_7D (Set_2Eset A)))) (hol.imp hol.false) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_3) t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_3) t_1) (thm_118 A x_3) (thm_119 A B t_1 x_3 f_2).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_121 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_122 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (thm_121 t_1) (thm_121 t_1).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_123 : hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.forall hol.bool) (hol.forall hol.bool)) :=
  hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.forall hol.bool).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_124 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_125 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) thm_124 thm_124.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))))) ;)

(; dict ;)

def thm_126 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) thm_123 thm_125.

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_127 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_128 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (thm_127 t_1) (thm_127 t_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_129 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_6 t_1.

(; Theorem: |- ((= (= ((Data.Bool./\ p) q))) (= ((Data.Bool./\ p) q))) ;)

(; dict ;)

def thm_130 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and p_2 q_1)) (hol.eq hol.bool (hol.and p_2 q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and p_2 q_1)).

(; Theorem: |- ((= (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_131 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ p) q)) (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q))) ((= ((Data.Bool./\ p) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)))) ;)

(; dict ;)

def thm_132 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.and p_2 q_1)) (hol.eq hol.bool (hol.and p_2 q_1)) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_130 q_1 p_2) (thm_131 q_1 p_2).

(; Theorem: |- ((= (= (Data.Bool./\ p))) (= (Data.Bool./\ p))) ;)

(; dict ;)

def thm_133 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1))) :=
  p_1 : hol.term hol.bool => hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)).

(; Theorem: |- ((= (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_134 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) :=
  p_1 : hol.term hol.bool => hol.BETA_CONV hol.bool (hol.arr hol.bool hol.bool) (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1.

(; Theorem: |- ((= ((= (Data.Bool./\ p)) (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p))) ((= (Data.Bool./\ p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)))) ;)

(; dict ;)

def thm_135 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3)))) :=
  p_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3)) (thm_133 p_1) (thm_134 p_1).

(; Theorem: |- ((= p) p) ;)

(; dict ;)

def thm_136 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool p_1 p_1) :=
  p_1 : hol.term hol.bool => hol.REFL hol.bool p_1.

(; Theorem: |- ((= (Data.Bool./\ p)) (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p)) ;)

(; dict ;)

def thm_137 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1 p_1 thm_7 (thm_136 p_1).

(; Theorem: |- ((= (Data.Bool./\ p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_138 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) :=
  p_1 : hol.term hol.bool => hol.EQ_MP (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) (thm_135 p_1) (thm_137 p_1).

(; Theorem: |- ((= q) q) ;)

(; dict ;)

def thm_139 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool q_1 q_1) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool q_1.

(; Theorem: |- ((= ((Data.Bool./\ p) q)) (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q)) ;)

(; dict ;)

def thm_140 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and p_2) (q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1 q_1 (thm_138 p_2) (thm_139 q_1).

(; Theorem: |- ((= ((Data.Bool./\ p) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_141 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) (thm_132 q_1 p_2) (thm_140 q_1 p_2).

(; Theorem: |- ((Data.Bool./\ p) q) ;)

(; dict ;)

def thm_142 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.and p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) ;)

(; dict ;)

def thm_143 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => hol.EQ_MP (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_141 q_1 p_2) (thm_142 q_1 p_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) q))) q) ;)

(; dict ;)

def thm_144 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.imp (hol.imp p_2 (hol.imp q_1 q_1)) q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_143 q_1 p_2 hyp_1 q_1.

(; Theorem: |- p ;)

(; dict ;)

def thm_145 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof p_1 :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_146 : q_1 : hol.term hol.bool -> hyp_1 : hol.proof q_1 -> hol.proof q_1 :=
  q_1 : hol.term hol.bool => hyp_1 : hol.proof q_1 => hyp_1.

(; Theorem: |- ((= p) q) ;)

(; dict ;)

def thm_147 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.eq hol.bool p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.PROP_EXT p_2 q_1 (hyp_3 : hol.proof q_1 => thm_145 p_2 hyp_1) (hyp_3 : hol.proof p_2 => thm_146 q_1 hyp_2).

(; Theorem: |- q ;)

(; dict ;)

def thm_148 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof q_2 -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => hol.EQ_MP p_1 q_2 (thm_147 q_2 p_1 hyp_1 hyp_2) (thm_145 p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> q) q) ;)

(; dict ;)

def thm_149 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.imp q_2 q_2) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => thm_148 p_1 q_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) q)) ;)

(; dict ;)

def thm_150 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp p_2 (hol.imp q_1 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => thm_149 p_2 q_1 hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_151 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_1 q_2) -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_144 q_2 p_1 hyp_1 (thm_150 q_2 p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ((Data.Bool./\ p) q)) ;)

(; dict ;)

def thm_152 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (hol.and p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.SYM hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_141 q_1 p_2).

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) x)) ;)

(; dict ;)

def thm_153 : x_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) -> hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) :=
  x_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) => hyp_1.

(; Theorem: |- ((Data.Bool.==> q) x) ;)

(; dict ;)

def thm_154 : p_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.imp p_1 (hol.imp q_3 x_2)) -> hol.proof (hol.imp q_3 x_2) :=
  p_1 : hol.term hol.bool => x_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.imp p_1 (hol.imp q_3 x_2)) => thm_153 x_2 q_3 p_1 hyp_2 (thm_145 p_1 hyp_1).

(; Theorem: |- x ;)

(; dict ;)

def thm_155 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hyp_3 : hol.proof (hol.imp p_2 (hol.imp q_1 x_3)) -> hol.proof x_3 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hyp_3 : hol.proof (hol.imp p_2 (hol.imp q_1 x_3)) => thm_154 p_2 x_3 q_1 hyp_1 hyp_3 (thm_146 q_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x) ;)

(; dict ;)

def thm_156 : x_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof p_3 -> hyp_2 : hol.proof q_2 -> hol.proof (hol.imp (hol.imp p_3 (hol.imp q_2 x_1)) x_1) :=
  x_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof p_3 => hyp_2 : hol.proof q_2 => hyp_3 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) => thm_155 q_2 p_3 x_1 hyp_1 hyp_2 hyp_3.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) ;)

(; dict ;)

def thm_157 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => x_3 : hol.term hol.bool => thm_156 x_3 q_1 p_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool./\ p) q) ;)

(; dict ;)

def thm_158 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.and p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.EQ_MP (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (hol.and p_2 q_1) (thm_152 q_1 p_2) (thm_157 q_1 p_2 hyp_1 hyp_2).

(; Theorem: |- ((= q) ((Data.Bool./\ p) q)) ;)

(; dict ;)

def thm_159 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.eq hol.bool q_2 (hol.and p_1 q_2)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hol.PROP_EXT q_2 (hol.and p_1 q_2) (hyp_2 : hol.proof (hol.and p_1 q_2) => thm_151 p_1 q_2 hyp_2) (hyp_2 : hol.proof q_2 => thm_158 q_2 p_1 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_160 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_161 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) (hol.EQ_MP (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (thm_128 t_1) (thm_129 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) => thm_160 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_162 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_163 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (thm_162 t_1) (thm_162 t_1).

(; Theorem: |- ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_164 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) :=
  t_1 : hol.term hol.bool => thm_8 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_165 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_166 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (thm_163 t_1) (thm_164 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) => thm_165 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T) ;)

(; dict ;)

def thm_167 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) :=
  t_1 : hol.term hol.bool => thm_9 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_168 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_169 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (thm_121 t_1) (thm_167 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) => thm_168 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_170 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_171 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_170 t_1) (thm_170 t_1).

(; Theorem: |- ((= \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_172 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true).

(; Theorem: |- ((= \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_173 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) thm_172 thm_172.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T))) (Data.Bool.! \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T))) ;)

(; dict ;)

def thm_174 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) thm_123 thm_173.

(; Theorem: |- ((= t) Data.Bool.T) ;)

(; dict ;)

def thm_175 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof (hol.eq hol.bool t_1 hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hyp_1.

(; Theorem: |- ((= Data.Bool.T) t) ;)

(; dict ;)

def thm_176 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof (hol.eq hol.bool hol.true t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hol.SYM hol.bool t_1 hol.true (thm_175 t_1 hyp_1).

(; Theorem: |- t ;)

(; dict ;)

def thm_177 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof t_1 :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hol.EQ_MP hol.true t_1 (thm_176 t_1 hyp_1) thm_10.

(; Theorem: |- t ;)

(; dict ;)

def thm_178 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof t_1 -> hol.proof t_1 :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof t_1 => hyp_1.

(; Theorem: |- ((= t) Data.Bool.T) ;)

(; dict ;)

def thm_179 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof t_1 -> hol.proof (hol.eq hol.bool t_1 hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof t_1 => hol.PROP_EXT t_1 hol.true (hyp_2 : hol.proof hol.true => thm_178 t_1 hyp_1) (hyp_2 : hol.proof t_1 => thm_10).

(; Theorem: |- ((= t) ((= t) Data.Bool.T)) ;)

(; dict ;)

def thm_180 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool t_1 (hol.eq hol.bool t_1 hol.true)) :=
  t_1 : hol.term hol.bool => hol.PROP_EXT t_1 (hol.eq hol.bool t_1 hol.true) (hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => thm_177 t_1 hyp_1) (hyp_1 : hol.proof t_1 => thm_179 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> t) t)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_181 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_180 t_1) (hol.imp t_1 t_1).

(; Theorem: |- ((Data.Bool.==> t) t) ;)

(; dict ;)

def thm_182 : t_1 : hol.term hol.bool -> hol.proof (hol.imp t_1 t_1) :=
  t_1 : hol.term hol.bool => thm_11 t_1.

(; Theorem: |- ((= ((Data.Bool.==> t) t)) Data.Bool.T) ;)

(; dict ;)

def thm_183 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.imp t_1 t_1) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_181 t_1) (thm_182 t_1).

(; Theorem: |- ((= (= ((Data.Bool.==> t) t))) (= Data.Bool.T)) ;)

(; dict ;)

def thm_184 : t_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.imp t_1 t_1)) (hol.eq hol.bool hol.true)) :=
  t_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.imp t_1 t_1) hol.true thm_77 (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_170 t_1) (thm_183 t_1)).

(; Theorem: |- ((= Data.Bool.T) Data.Bool.T) ;)

(; dict ;)

def thm_185 : hol.proof (hol.eq hol.bool hol.true hol.true) :=
  hol.REFL hol.bool hol.true.

(; Theorem: |- ((= ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_186 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool hol.true hol.true)) :=
  t_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.imp t_1 t_1)) (hol.eq hol.bool hol.true) hol.true hol.true (thm_184 t_1) thm_185.

(; Theorem: |- ((= ((= Data.Bool.T) Data.Bool.T)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_187 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool hol.true hol.true) (thm_186 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_188 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool hol.true hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_187 t_1) thm_185.

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_189 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_190 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_171 t_1) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_2 t_2) hol.true)) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_2 t_2) hol.true)) thm_174 thm_188 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) => thm_189 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_191 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_192 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (thm_191 t_1) (thm_191 t_1).

(; Theorem: |- ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_193 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => thm_12 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_194 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (thm_190 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (thm_192 t_1) (thm_193 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_195 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (thm_169 t_1) (thm_194 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_196 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (thm_166 t_1) (thm_195 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_197 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (thm_161 t_1) (thm_196 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_198 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  t_1 : hol.term hol.bool => thm_197 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_199 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_151 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_200 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.imp t_2 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_2) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_2 t_2) hol.true) (hol.eq hol.bool (hol.imp t_2 hol.false) (hol.not t_2))))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.imp t_2 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_2) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_2 t_2) hol.true) (hol.eq hol.bool (hol.imp t_2 hol.false) (hol.not t_2))))))) thm_126 thm_198 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) => thm_199 t_1 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_201 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) -> hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_151 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_202 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (thm_200 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) => thm_201 t_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) p))) p) ;)

(; dict ;)

def thm_203 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.imp (hol.imp p_2 (hol.imp q_1 p_2)) p_2) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_143 q_1 p_2 hyp_1 p_2.

(; Theorem: |- ((= q) p) ;)

(; dict ;)

def thm_204 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof q_2 -> hol.proof (hol.eq hol.bool q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => hol.SYM hol.bool p_1 q_2 (thm_147 q_2 p_1 hyp_1 hyp_2).

(; Theorem: |- p ;)

(; dict ;)

def thm_205 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof p_2 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.EQ_MP q_1 p_2 (thm_204 p_2 q_1 hyp_1 hyp_2) (thm_146 q_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> q) p) ;)

(; dict ;)

def thm_206 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.imp q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => thm_205 q_2 p_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) p)) ;)

(; dict ;)

def thm_207 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp p_2 (hol.imp q_1 p_2)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => thm_206 p_2 q_1 hyp_1.

(; Theorem: |- p ;)

(; dict ;)

def thm_208 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof p_2 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_203 q_1 p_2 hyp_1 (thm_207 q_1 p_2).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T) ;)

(; dict ;)

def thm_209 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) -> hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_208 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T) ;)

(; dict ;)

def thm_210 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (thm_202 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) => thm_209 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) ((Set.member (f x)) t))) Data.Bool.T) ;)

(; dict ;)

def thm_211 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.imp hol.false (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_2) t_1)) hol.true) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (thm_122 t_1) (thm_210 t_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_2) t_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t))) Data.Bool.T) ;)

(; dict ;)

def thm_212 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_3) t_1)) hol.true) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => x_3 : hol.term A => hol.TRANS hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_3) t_1)) (hol.imp hol.false (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_3) t_1)) hol.true (thm_120 B A t_1 f_2 x_3) (thm_211 A B t_1 x_3 f_2).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t))) \lambda x. Data.Bool.T) ;)

(; dict ;)

def thm_213 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_3) t_1)) (x_3 : hol.term A => hol.true)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => hol.ABS_THM A hol.bool (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_3) t_1)) (x_3 : hol.term A => hol.true) (x_3 : hol.term A => thm_212 B A t_1 f_2 x_3).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. Data.Bool.T)) ;)

(; dict ;)

def thm_214 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_3) t_1))) (hol.forall A (x_3 : hol.term A => hol.true))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_3) t_1)) (x_3 : hol.term A => hol.true) (thm_95 A) (thm_213 B A t_1 f_2).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. t)) t)) ((= (Data.Bool.! \lambda x. t)) t)) ;)

(; dict ;)

def thm_215 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. t)) t)) ((= (Data.Bool.! \lambda x. t)) t)) ;)

(; dict ;)

def thm_216 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (thm_215 A t_1) (thm_215 A t_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. t)) t) ;)

(; dict ;)

def thm_217 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) :=
  A : hol.type => t_1 : hol.term hol.bool => thm_13 A t_1.

(; Theorem: |- ((= (Data.Bool.! \lambda x. Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_218 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall A (x_1 : hol.term A => hol.true)) hol.true) :=
  A : hol.type => (A : hol.type => t_1 : hol.term hol.bool => (A : hol.type => t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (thm_216 A t_1) (thm_217 A t_1)) A t_1) A hol.true.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) Data.Bool.T) ;)

(; dict ;)

def thm_219 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_3) t_1))) hol.true) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_3) t_1))) (hol.forall A (x_3 : hol.term A => hol.true)) hol.true (thm_214 B A t_1 f_2) (thm_218 A).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t))))) (Data.Bool./\ Data.Bool.T)) ;)

(; dict ;)

def thm_220 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_3) t_1)))) (hol.and hol.true)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.forall A (x_3 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_3) t_1))) hol.true thm_94 (thm_219 B A t_1 f_2).

(; Theorem: |- ((= Data.Bool.~) Data.Bool.~) ;)

(; dict ;)

def thm_221 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) hol.not hol.not) :=
  hol.REFL (hol.arr hol.bool hol.bool) hol.not.

(; Theorem: |- ((= (Data.Bool.~ ((Set.member x) Set.{}))) (Data.Bool.~ Data.Bool.F)) ;)

(; dict ;)

def thm_222 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.not hol.false)) :=
  A : hol.type => x_1 : hol.term A => hol.APP_THM hol.bool hol.bool hol.not hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2E_7B_7D (Set_2Eset A))) hol.false thm_221 (thm_117 A x_1).

(; Theorem: |- ((= ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)) ;)

(; dict ;)

def thm_223 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.eq hol.bool (hol.not hol.false) hol.true)) :=
  hol.REFL hol.bool (hol.eq hol.bool (hol.not hol.false) hol.true).

(; Theorem: |- ((= ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)) ;)

(; dict ;)

def thm_224 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.eq hol.bool (hol.not hol.false) hol.true)) :=
  hol.TRANS hol.bool (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.eq hol.bool (hol.not hol.false) hol.true) thm_223 thm_223.

(; Theorem: |- ((= ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ;)

(; dict ;)

def thm_225 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.true) hol.false)) :=
  hol.REFL hol.bool (hol.eq hol.bool (hol.not hol.true) hol.false).

(; Theorem: |- ((= ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ;)

(; dict ;)

def thm_226 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.true) hol.false)) :=
  hol.TRANS hol.bool (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.true) hol.false) thm_225 thm_225.

(; Theorem: |- ((= ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)) ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T))) ;)

(; dict ;)

def thm_227 : hyp_1 : hol.proof (hol.eq hol.bool (hol.not hol.true) hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) :=
  hyp_1 : hol.proof (hol.eq hol.bool (hol.not hol.true) hol.false) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true) hyp_1.

(; Theorem: |- ((= ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)) ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T))) ;)

(; dict ;)

def thm_228 : hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) :=
  hol.PROVE_HYP (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true))) (hol.EQ_MP (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.true) hol.false) thm_226 thm_14) (hyp_1 : hol.proof (hol.eq hol.bool (hol.not hol.true) hol.false) => thm_227 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= (Data.Bool.~ Data.Bool.T)) Data.Bool.F)) ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T)) ;)

(; dict ;)

def thm_229 : hol.proof (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) :=
  hol.EQ_MP (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) thm_228 (hol.EQ_MP (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.eq hol.bool (hol.not hol.false) hol.true) thm_223 thm_15).

(; Theorem: |- ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T) ;)

(; dict ;)

def thm_230 : hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) -> hol.proof (hol.eq hol.bool (hol.not hol.false) hol.true) :=
  hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_151 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true) hyp_1.

(; Theorem: |- ((= (Data.Bool.~ Data.Bool.F)) Data.Bool.T) ;)

(; dict ;)

def thm_231 : hol.proof (hol.eq hol.bool (hol.not hol.false) hol.true) :=
  hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) (hol.eq hol.bool (hol.not hol.false) hol.true) thm_229 (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.not hol.true) hol.false) (hol.eq hol.bool (hol.not hol.false) hol.true)) => thm_230 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ ((Set.member x) Set.{}))) Data.Bool.T) ;)

(; dict ;)

def thm_232 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2E_7B_7D (Set_2Eset A)))) hol.true) :=
  A : hol.type => x_1 : hol.term A => hol.TRANS hol.bool (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.not hol.false) hol.true (thm_222 A x_1) (hol.EQ_MP (hol.eq hol.bool (hol.not hol.false) hol.true) (hol.eq hol.bool (hol.not hol.false) hol.true) thm_224 thm_231).

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{})))) (Data.Bool.==> Data.Bool.T)) ;)

(; dict ;)

def thm_233 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2E_7B_7D (Set_2Eset A))))) (hol.imp hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2E_7B_7D (Set_2Eset A)))) hol.true thm_96 (thm_232 A x_1).

(; Theorem: |- ((= ((= (f x)) d)) ((= (f x)) d)) ;)

(; dict ;)

def thm_234 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B (f_3 x_2) d_1) (hol.eq B (f_3 x_2) d_1)) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.eq B (f_3 x_2) d_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d))) ((Data.Bool.==> Data.Bool.T) ((= (f x)) d))) ;)

(; dict ;)

def thm_235 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_2 x_3) d_1)) (hol.imp hol.true (hol.eq B (f_2 x_3) d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => f_2 : hol.term (hol.arr A B) => x_3 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2E_7B_7D (Set_2Eset A))))) (hol.imp hol.true) (hol.eq B (f_2 x_3) d_1) (hol.eq B (f_2 x_3) d_1) (thm_233 A x_3) (thm_234 A B d_1 x_3 f_2).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) ((= (f x)) d))) ((= (f x)) d)) ;)

(; dict ;)

def thm_236 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> x_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.imp hol.true (hol.eq B (f_3 x_2) d_1)) (hol.eq B (f_3 x_2) d_1)) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => x_2 : hol.term A => f_3 : hol.term (hol.arr A B) => (t_1 : hol.term hol.bool => thm_129 t_1) (hol.eq B (f_3 x_2) d_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d))) ((= (f x)) d)) ;)

(; dict ;)

def thm_237 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_2 x_3) d_1)) (hol.eq B (f_2 x_3) d_1)) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => f_2 : hol.term (hol.arr A B) => x_3 : hol.term A => hol.TRANS hol.bool (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_2 x_3) d_1)) (hol.imp hol.true (hol.eq B (f_2 x_3) d_1)) (hol.eq B (f_2 x_3) d_1) (thm_235 B A d_1 f_2 x_3) (thm_236 A B d_1 x_3 f_2).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d))) \lambda x. ((= (f x)) d)) ;)

(; dict ;)

def thm_238 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_2 x_3) d_1)) (x_3 : hol.term A => hol.eq B (f_2 x_3) d_1)) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => f_2 : hol.term (hol.arr A B) => hol.ABS_THM A hol.bool (x_3 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_2 x_3) d_1)) (x_3 : hol.term A => hol.eq B (f_2 x_3) d_1) (x_3 : hol.term A => thm_237 B A d_1 f_2 x_3).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))) (Data.Bool.! \lambda x. ((= (f x)) d))) ;)

(; dict ;)

def thm_239 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_2 x_3) d_1))) (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => f_2 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_3 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_2 x_3) d_1)) (x_3 : hol.term A => hol.eq B (f_2 x_3) d_1) (thm_95 A) (thm_238 B A d_1 f_2).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d))))) ((Data.Bool./\ Data.Bool.T) (Data.Bool.! \lambda x. ((= (f x)) d)))) ;)

(; dict ;)

def thm_240 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_4) t_2))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_3 x_4) d_1)))) (hol.and hol.true (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_4) t_2)))) (hol.and hol.true) (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_3 x_4) d_1))) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)) (thm_220 B A t_2 f_3) (thm_239 B A d_1 f_3).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_241 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_242 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (thm_241 t_1) (thm_241 t_1).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_243 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_244 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) thm_243 thm_243.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))))) ;)

(; dict ;)

def thm_245 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) thm_123 thm_244.

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_246 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_16 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_247 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_248 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (thm_241 t_1) (thm_246 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) => thm_247 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_249 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_250 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (thm_249 t_1) (thm_249 t_1).

(; Theorem: |- ((= ((Data.Bool./\ t) Data.Bool.T)) t) ;)

(; dict ;)

def thm_251 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) :=
  t_1 : hol.term hol.bool => thm_17 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ;)

(; dict ;)

def thm_252 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ;)

(; dict ;)

def thm_253 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (thm_250 t_1) (thm_251 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.true) t_1) => thm_252 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ;)

(; dict ;)

def thm_254 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false).

(; Theorem: |- ((= ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ;)

(; dict ;)

def thm_255 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (thm_254 t_1) (thm_254 t_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F) ;)

(; dict ;)

def thm_256 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) :=
  t_1 : hol.term hol.bool => thm_18 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_257 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_258 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (thm_255 t_1) (thm_256 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and hol.false t_1) hol.false) => thm_257 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_259 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ;)

(; dict ;)

def thm_260 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (thm_259 t_1) (thm_259 t_1).

(; Theorem: |- ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F) ;)

(; dict ;)

def thm_261 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) :=
  t_1 : hol.term hol.bool => thm_19 t_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ;)

(; dict ;)

def thm_262 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1) hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ;)

(; dict ;)

def thm_263 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.EQ_MP (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (thm_260 t_1) (thm_261 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) => thm_262 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((= ((Data.Bool./\ t) t)) t)) ;)

(; dict ;)

def thm_264 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool./\ t) t)) t)) ((= ((Data.Bool./\ t) t)) t)) ;)

(; dict ;)

def thm_265 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1) (thm_264 t_1) (thm_264 t_1).

(; Theorem: |- ((= ((Data.Bool./\ t) t)) t) ;)

(; dict ;)

def thm_266 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and t_1 t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_20 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)) ;)

(; dict ;)

def thm_267 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (thm_263 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.and t_1 t_1) t_1) (hol.eq hol.bool (hol.and t_1 t_1) t_1) (thm_265 t_1) (thm_266 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))) ;)

(; dict ;)

def thm_268 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (thm_258 t_1) (thm_267 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))) ;)

(; dict ;)

def thm_269 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (thm_253 t_1) (thm_268 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t))))) ;)

(; dict ;)

def thm_270 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (thm_248 t_1) (thm_269 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((Data.Bool./\ Data.Bool.F) t)) Data.Bool.F)) ((Data.Bool./\ ((= ((Data.Bool./\ t) Data.Bool.F)) Data.Bool.F)) ((= ((Data.Bool./\ t) t)) t)))))) ;)

(; dict ;)

def thm_271 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => thm_270 t_1.

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_272 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) -> hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_208 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1)))) (hol.eq hol.bool (hol.and hol.true t_1) t_1) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_273 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.and t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.and hol.false t_2) hol.false) (hol.and (hol.eq hol.bool (hol.and t_2 hol.false) hol.false) (hol.eq hol.bool (hol.and t_2 t_2) t_2)))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.and hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.and t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.and hol.false t_2) hol.false) (hol.and (hol.eq hol.bool (hol.and t_2 hol.false) hol.false) (hol.eq hol.bool (hol.and t_2 t_2) t_2)))))) thm_245 thm_271 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.and t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.and hol.false t_1) hol.false) (hol.and (hol.eq hol.bool (hol.and t_1 hol.false) hol.false) (hol.eq hol.bool (hol.and t_1 t_1) t_1))))) => thm_272 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ Data.Bool.T) (Data.Bool.! \lambda x. ((= (f x)) d)))) (Data.Bool.! \lambda x. ((= (f x)) d))) ;)

(; dict ;)

def thm_274 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and hol.true (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) d_1))) (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => f_2 : hol.term (hol.arr A B) => (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and hol.true t_1) t_1) (hol.eq hol.bool (hol.and hol.true t_1) t_1) (thm_242 t_1) (thm_273 t_1)) (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) d_1)).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d))))) (Data.Bool.! \lambda x. ((= (f x)) d))) ;)

(; dict ;)

def thm_275 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_4) t_2))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_3 x_4) d_1)))) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.and (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_4) t_2))) (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_3 x_4) d_1)))) (hol.and hol.true (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1))) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)) (thm_240 B A d_1 t_2 f_3) (thm_274 B A d_1 f_3).

(; Theorem: |- ((= ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))) ((Data.Bool./\ ((= x) f)) (Data.Bool.! \lambda x. ((= (f x)) d)))) ;)

(; dict ;)

def thm_276 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> x_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq (hol.arr A B) x_4 f_3) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_3 x_5) d_1))))) (hol.and (hol.eq (hol.arr A B) x_4 f_3) (hol.forall A (x_5 : hol.term A => hol.eq B (f_3 x_5) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => x_4 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq (hol.arr A B) x_4 f_3)) (hol.and (hol.eq (hol.arr A B) x_4 f_3)) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_3 x_5) d_1)))) (hol.forall A (x_5 : hol.term A => hol.eq B (f_3 x_5) d_1)) (thm_93 B A f_3 x_4) (thm_275 B A d_1 t_2 f_3).

(; Theorem: |- ((= \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))) \lambda f. ((Data.Bool./\ ((= x) f)) (Data.Bool.! \lambda x. ((= (f x)) d)))) ;)

(; dict ;)

def thm_277 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> x_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_3 f_4) (hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => x_3 : hol.term (hol.arr A B) => hol.ABS_THM (hol.arr A B) hol.bool (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_3 f_4) (hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_1))) (f_4 : hol.term (hol.arr A B) => thm_276 B A d_1 t_2 f_4 x_3).

(; Theorem: |- ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d))))))) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) (Data.Bool.! \lambda x. ((= (f x)) d))))) ;)

(; dict ;)

def thm_278 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> x_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_3 f_4) (hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_1))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => x_3 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool)) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_3 f_4) (hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_1))) (thm_92 B A) (thm_277 B A d_1 t_2 x_3).

(; Theorem: |- ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d))))))))) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) (Data.Bool.! \lambda x. ((= (f x)) d))))) ;)

(; dict ;)

def thm_279 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> x_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_1)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_3 f_4) (hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_1))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => x_3 : hol.term (hol.arr A B) => hol.TRANS hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_1)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_3 f_4) (hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_1)))) (thm_91 B A d_1 t_2 x_3) (thm_278 B A d_1 t_2 x_3).

(; Theorem: |- ((= (= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))))))) (= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) (Data.Bool.! \lambda x. ((= (f x)) d)))))) ;)

(; dict ;)

def thm_280 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> x_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_1))))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_3 f_4) (hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_1)))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => x_3 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_1)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_3 f_4) (hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_1)))) thm_77 (thm_279 B A d_1 t_2 x_3).

(; Theorem: |- ((= ((= ((Set.member x) ((Set.insert y) Set.{}))) ((= x) y))) ((= ((Set.member x) ((Set.insert y) Set.{}))) ((= x) y))) ;)

(; dict ;)

def thm_281 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_2 y_1)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_2 y_1))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_2 y_1)).

(; Theorem: |- ((= ((= ((Set.member x) ((Set.insert y) Set.{}))) ((= x) y))) ((= ((Set.member x) ((Set.insert y) Set.{}))) ((= x) y))) ;)

(; dict ;)

def thm_282 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_2 y_1)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_2 y_1))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_2 y_1)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_2 y_1)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_2 y_1)) (thm_281 A y_1 x_2) (thm_281 A y_1 x_2).

(; Theorem: |- (Data.Bool.! \lambda y. ((= ((Set.member x) ((Set.insert y) Set.{}))) ((= x) y))) ;)

(; dict ;)

def thm_283 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.forall A (y_2 : hol.term A => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_1 y_2))) :=
  A : hol.type => x_1 : hol.term A => thm_21 A x_1.

(; Theorem: |- ((= ((Set.member x) ((Set.insert y) Set.{}))) ((= x) y)) ;)

(; dict ;)

def thm_284 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_2 y_1)) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => thm_283 A x_2 y_1.

(; Theorem: |- ((= ((Set.member x) ((Set.insert y) Set.{}))) ((= x) y)) ;)

(; dict ;)

def thm_285 : B : hol.type -> A : hol.type -> y_1 : hol.term (hol.arr A B) -> x_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_2 (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) y_1 (Set_2E_7B_7D (Set_2Eset (hol.arr A B))))) (hol.eq (hol.arr A B) x_2 y_1)) :=
  B : hol.type => A : hol.type => y_1 : hol.term (hol.arr A B) => x_2 : hol.term (hol.arr A B) => (A : hol.type => y_1 : hol.term A => x_2 : hol.term A => hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_2 y_1)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq A x_2 y_1)) (thm_282 A y_1 x_2) (thm_284 A y_1 x_2)) (hol.arr A B) y_1 x_2.

(; Theorem: |- ((= ((Set.member x) ((Set.insert \lambda x. d) Set.{}))) ((= x) \lambda x. d)) ;)

(; dict ;)

def thm_286 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> x_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_2 (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B))))) (hol.eq (hol.arr A B) x_2 (x_3 : hol.term A => d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => x_2 : hol.term (hol.arr A B) => (B : hol.type => A : hol.type => y_1 : hol.term (hol.arr A B) => x_2 : hol.term (hol.arr A B) => thm_285 B A y_1 x_2) B A (x_3 : hol.term A => d_1) x_2.

(; Theorem: |- ((= ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d))))))))) ((Set.member x) ((Set.insert \lambda x. d) Set.{})))) ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) (Data.Bool.! \lambda x. ((= (f x)) d))))) ((= x) \lambda x. d))) ;)

(; dict ;)

def thm_287 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> x_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_1)))))))) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_3 (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_4 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B)))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_3 f_4) (hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_1)))) (hol.eq (hol.arr A B) x_3 (x_4 : hol.term A => d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => x_3 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_1))))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_3 f_4) (hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_1))))) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_3 (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_4 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B))))) (hol.eq (hol.arr A B) x_3 (x_4 : hol.term A => d_1)) (thm_280 B A d_1 t_2 x_3) (thm_286 B A d_1 x_3).

(; Theorem: |- ((= \lambda x. ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d))))))))) ((Set.member x) ((Set.insert \lambda x. d) Set.{})))) \lambda x. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) (Data.Bool.! \lambda x. ((= (f x)) d))))) ((= x) \lambda x. d))) ;)

(; dict ;)

def thm_288 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (x_3 : hol.term (hol.arr A B) => hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_1)))))))) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_3 (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_4 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B)))))) (x_3 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_3 f_4) (hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_1)))) (hol.eq (hol.arr A B) x_3 (x_4 : hol.term A => d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => hol.ABS_THM (hol.arr A B) hol.bool (x_3 : hol.term (hol.arr A B) => hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_1)))))))) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_3 (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_4 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B)))))) (x_3 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_3 f_4) (hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_1)))) (hol.eq (hol.arr A B) x_3 (x_4 : hol.term A => d_1))) (x_3 : hol.term (hol.arr A B) => thm_287 B A d_1 t_2 x_3).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d))))))))) ((Set.member x) ((Set.insert \lambda x. d) Set.{}))))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) (Data.Bool.! \lambda x. ((= (f x)) d))))) ((= x) \lambda x. d)))) ;)

(; dict ;)

def thm_289 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (x_3 : hol.term (hol.arr A B) => hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_1)))))))) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_3 (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_4 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B))))))) (hol.forall (hol.arr A B) (x_3 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_3 f_4) (hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_1)))) (hol.eq (hol.arr A B) x_3 (x_4 : hol.term A => d_1))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B)) (x_3 : hol.term (hol.arr A B) => hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_1)))))))) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_3 (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_4 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B)))))) (x_3 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_3 f_4) (hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_1)))) (hol.eq (hol.arr A B) x_3 (x_4 : hol.term A => d_1))) (thm_76 B A) (thm_288 B A d_1 t_2).

(; Theorem: |- ((= ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))))) ((Set.insert \lambda x. d) Set.{}))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) (Data.Bool.! \lambda x. ((= (f x)) d))))) ((= x) \lambda x. d)))) ;)

(; dict ;)

def thm_290 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B))))) (hol.forall (hol.arr A B) (x_3 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_3 f_4) (hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_1)))) (hol.eq (hol.arr A B) x_3 (x_4 : hol.term A => d_1))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => hol.TRANS hol.bool (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B))))) (hol.forall (hol.arr A B) (x_3 : hol.term (hol.arr A B) => hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_5 x_6) d_1)))))))) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_3 (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_4 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B))))))) (hol.forall (hol.arr A B) (x_3 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_3 f_4) (hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_1)))) (hol.eq (hol.arr A B) x_3 (x_4 : hol.term A => d_1)))) (thm_75 B A d_1 t_2) (thm_289 B A d_1 t_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) (Data.Bool.! \lambda x. ((= (f x)) d))))) ((= x) \lambda x. d)))) ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))))) ((Set.insert \lambda x. d) Set.{}))) ;)

(; dict ;)

def thm_291 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> d_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (x_3 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_3 f_4) (hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_2)))) (hol.eq (hol.arr A B) x_3 (x_4 : hol.term A => d_2)))) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_1))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_2))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_2) (Set_2E_7B_7D (Set_2Eset (hol.arr A B)))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => d_2 : hol.term B => hol.SYM hol.bool (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_1))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_2))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_2) (Set_2E_7B_7D (Set_2Eset (hol.arr A B))))) (hol.forall (hol.arr A B) (x_3 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_3 f_4) (hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_2)))) (hol.eq (hol.arr A B) x_3 (x_4 : hol.term A => d_2)))) (thm_290 B A d_2 t_1).

(; Theorem: |- ((= \lambda g. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) (Data.Bool.! \lambda x. ((= (f x)) d))))) ((= g) \lambda x. d))) \lambda g. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) (Data.Bool.! \lambda x. ((= (f x)) d))))) ((= g) \lambda x. d))) ;)

(; dict ;)

def thm_292 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1))) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => hol.REFL (hol.arr (hol.arr A B) hol.bool) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1))).

(; Theorem: |- ((= \lambda x. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) (Data.Bool.! \lambda x. ((= (f x)) d))))) ((= x) \lambda x. d))) \lambda x. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) (Data.Bool.! \lambda x. ((= (f x)) d))))) ((= x) \lambda x. d))) ;)

(; dict ;)

def thm_293 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (x_2 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) (hol.eq (hol.arr A B) x_2 (x_3 : hol.term A => d_1))) (x_2 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) (hol.eq (hol.arr A B) x_2 (x_3 : hol.term A => d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => hol.REFL (hol.arr (hol.arr A B) hol.bool) (x_2 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) (hol.eq (hol.arr A B) x_2 (x_3 : hol.term A => d_1))).

(; Theorem: |- ((= \lambda g. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) (Data.Bool.! \lambda x. ((= (f x)) d))))) ((= g) \lambda x. d))) \lambda x. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) (Data.Bool.! \lambda x. ((= (f x)) d))))) ((= x) \lambda x. d))) ;)

(; dict ;)

def thm_294 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1))) (x_2 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) (hol.eq (hol.arr A B) x_2 (x_3 : hol.term A => d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => hol.TRANS (hol.arr (hol.arr A B) hol.bool) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1))) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1))) (x_2 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) (hol.eq (hol.arr A B) x_2 (x_3 : hol.term A => d_1))) (thm_292 B A d_1) (thm_293 B A d_1).

(; Theorem: |- ((= (Data.Bool.! \lambda g. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) (Data.Bool.! \lambda x. ((= (f x)) d))))) ((= g) \lambda x. d)))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) (Data.Bool.! \lambda x. ((= (f x)) d))))) ((= x) \lambda x. d)))) ;)

(; dict ;)

def thm_295 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1)))) (hol.forall (hol.arr A B) (x_2 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) (hol.eq (hol.arr A B) x_2 (x_3 : hol.term A => d_1))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B)) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1))) (x_2 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) (hol.eq (hol.arr A B) x_2 (x_3 : hol.term A => d_1))) (thm_76 B A) (thm_294 B A d_1).

(; Theorem: |- ((= (Data.Bool./\ ((= g) f))) (Data.Bool./\ ((= g) f))) ;)

(; dict ;)

def thm_296 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq (hol.arr A B) g_2 f_1)) (hol.and (hol.eq (hol.arr A B) g_2 f_1))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => g_2 : hol.term (hol.arr A B) => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (hol.eq (hol.arr A B) g_2 f_1)).

(; Theorem: |- ((= (\lambda f. (Data.Bool.! \lambda x. ((= (f x)) d)) f)) (Data.Bool.! \lambda x. ((= (f x)) d))) ;)

(; dict ;)

def thm_297 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> hol.proof (hol.eq hol.bool ((f_3 : hol.term (hol.arr A B) => hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_2)) f_1) (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) d_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => d_2 : hol.term B => hol.BETA_CONV (hol.arr A B) hol.bool (f_3 : hol.term (hol.arr A B) => hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_2)) f_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= g) f)) (\lambda f. (Data.Bool.! \lambda x. ((= (f x)) d)) f))) ((Data.Bool./\ ((= g) f)) (Data.Bool.! \lambda x. ((= (f x)) d)))) ;)

(; dict ;)

def thm_298 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq (hol.arr A B) g_3 f_2) ((f_4 : hol.term (hol.arr A B) => hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_1)) f_2)) (hol.and (hol.eq (hol.arr A B) g_3 f_2) (hol.forall A (x_4 : hol.term A => hol.eq B (f_2 x_4) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => f_2 : hol.term (hol.arr A B) => g_3 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq (hol.arr A B) g_3 f_2)) (hol.and (hol.eq (hol.arr A B) g_3 f_2)) ((f_4 : hol.term (hol.arr A B) => hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_1)) f_2) (hol.forall A (x_4 : hol.term A => hol.eq B (f_2 x_4) d_1)) (thm_296 B A f_2 g_3) (thm_297 B A f_2 d_1).

(; Theorem: |- ((= \lambda f. ((Data.Bool./\ ((= g) f)) (\lambda f. (Data.Bool.! \lambda x. ((= (f x)) d)) f))) \lambda f. ((Data.Bool./\ ((= g) f)) (Data.Bool.! \lambda x. ((= (f x)) d)))) ;)

(; dict ;)

def thm_299 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) ((f_4 : hol.term (hol.arr A B) => hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_1)) f_3)) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => hol.ABS_THM (hol.arr A B) hol.bool (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) ((f_4 : hol.term (hol.arr A B) => hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_1)) f_3)) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1))) (f_3 : hol.term (hol.arr A B) => thm_298 B A d_1 f_3 g_2).

(; Theorem: |- ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) (\lambda f. (Data.Bool.! \lambda x. ((= (f x)) d)) f)))) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) (Data.Bool.! \lambda x. ((= (f x)) d))))) ;)

(; dict ;)

def thm_300 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) ((f_4 : hol.term (hol.arr A B) => hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_1)) f_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool)) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) ((f_4 : hol.term (hol.arr A B) => hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_1)) f_3)) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1))) (thm_92 B A) (thm_299 B A d_1 g_2).

(; Theorem: |- ((= (= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) (\lambda f. (Data.Bool.! \lambda x. ((= (f x)) d)) f))))) (= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) (Data.Bool.! \lambda x. ((= (f x)) d)))))) ;)

(; dict ;)

def thm_301 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) ((f_4 : hol.term (hol.arr A B) => hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_1)) f_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) ((f_4 : hol.term (hol.arr A B) => hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_1)) f_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) thm_77 (thm_300 B A d_1 g_2).

(; Theorem: |- ((= (\lambda f. (Data.Bool.! \lambda x. ((= (f x)) d)) g)) (Data.Bool.! \lambda x. ((= (g x)) d))) ;)

(; dict ;)

def thm_302 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> hol.proof (hol.eq hol.bool ((f_3 : hol.term (hol.arr A B) => hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_2)) g_1) (hol.forall A (x_3 : hol.term A => hol.eq B (g_1 x_3) d_2))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => d_2 : hol.term B => hol.BETA_CONV (hol.arr A B) hol.bool (f_3 : hol.term (hol.arr A B) => hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_2)) g_1.

(; Theorem: |- ((= ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) (\lambda f. (Data.Bool.! \lambda x. ((= (f x)) d)) f)))) (\lambda f. (Data.Bool.! \lambda x. ((= (f x)) d)) g))) ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) (Data.Bool.! \lambda x. ((= (f x)) d))))) (Data.Bool.! \lambda x. ((= (g x)) d)))) ;)

(; dict ;)

def thm_303 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) ((f_4 : hol.term (hol.arr A B) => hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_1)) f_3))) ((f_3 : hol.term (hol.arr A B) => hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)) g_2)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) ((f_4 : hol.term (hol.arr A B) => hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_1)) f_3)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1))))) ((f_3 : hol.term (hol.arr A B) => hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)) g_2) (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1)) (thm_301 B A d_1 g_2) (thm_302 B A g_2 d_1).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= a) x)) (p x)))) (p a))) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= a) x)) (p x)))) (p a))) ;)

(; dict ;)

def thm_304 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq A a_2 x_3) (p_1 x_3))) (p_1 a_2)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq A a_2 x_3) (p_1 x_3))) (p_1 a_2))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => a_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq A a_2 x_3) (p_1 x_3))) (p_1 a_2)).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= a) f)) (p f)))) (p a))) ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= a) f)) (p f)))) (p a))) ;)

(; dict ;)

def thm_305 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (f_3 : hol.term A => hol.and (hol.eq A a_2 f_3) (p_1 f_3))) (p_1 a_2)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (f_3 : hol.term A => hol.and (hol.eq A a_2 f_3) (p_1 f_3))) (p_1 a_2))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => a_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (f_3 : hol.term A => hol.and (hol.eq A a_2 f_3) (p_1 f_3))) (p_1 a_2)).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= a) x)) (p x)))) (p a))) ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= a) f)) (p f)))) (p a))) ;)

(; dict ;)

def thm_306 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq A a_2 x_3) (p_1 x_3))) (p_1 a_2)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (f_3 : hol.term A => hol.and (hol.eq A a_2 f_3) (p_1 f_3))) (p_1 a_2))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => a_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq A a_2 x_3) (p_1 x_3))) (p_1 a_2)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq A a_2 x_3) (p_1 x_3))) (p_1 a_2)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (f_3 : hol.term A => hol.and (hol.eq A a_2 f_3) (p_1 f_3))) (p_1 a_2)) (thm_304 A p_1 a_2) (thm_305 A p_1 a_2).

(; Theorem: |- (Data.Bool.! \lambda a. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= a) x)) (p x)))) (p a))) ;)

(; dict ;)

def thm_307 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq A a_2 x_3) (p_1 x_3))) (p_1 a_2))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_22 A p_1.

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= a) x)) (p x)))) (p a)) ;)

(; dict ;)

def thm_308 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq A a_2 x_3) (p_1 x_3))) (p_1 a_2)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => a_2 : hol.term A => thm_307 A p_1 a_2.

(; Theorem: |- ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= a) f)) (p f)))) (p a)) ;)

(; dict ;)

def thm_309 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (f_3 : hol.term A => hol.and (hol.eq A a_2 f_3) (p_1 f_3))) (p_1 a_2)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => a_2 : hol.term A => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => hol.and (hol.eq A a_2 x_3) (p_1 x_3))) (p_1 a_2)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (f_3 : hol.term A => hol.and (hol.eq A a_2 f_3) (p_1 f_3))) (p_1 a_2)) (thm_306 A p_1 a_2) (thm_308 A p_1 a_2).

(; Theorem: |- ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= a) f)) (p f)))) (p a)) ;)

(; dict ;)

def thm_310 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr (hol.arr A B) hol.bool) -> a_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) a_2 f_3) (p_1 f_3))) (p_1 a_2)) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr (hol.arr A B) hol.bool) => a_2 : hol.term (hol.arr A B) => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => a_2 : hol.term A => thm_309 A p_1 a_2) (hol.arr A B) p_1 a_2.

(; Theorem: |- ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) (\lambda f. (Data.Bool.! \lambda x. ((= (f x)) d)) f)))) (\lambda f. (Data.Bool.! \lambda x. ((= (f x)) d)) g)) ;)

(; dict ;)

def thm_311 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) ((f_4 : hol.term (hol.arr A B) => hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_1)) f_3))) ((f_3 : hol.term (hol.arr A B) => hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)) g_2)) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => (B : hol.type => A : hol.type => p_1 : hol.term (hol.arr (hol.arr A B) hol.bool) => a_2 : hol.term (hol.arr A B) => thm_310 B A p_1 a_2) B A (f_3 : hol.term (hol.arr A B) => hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)) g_2.

(; Theorem: |- ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) (Data.Bool.! \lambda x. ((= (f x)) d))))) (Data.Bool.! \lambda x. ((= (g x)) d))) ;)

(; dict ;)

def thm_312 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) ((f_4 : hol.term (hol.arr A B) => hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_1)) f_3))) ((f_3 : hol.term (hol.arr A B) => hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)) g_2)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1))) (thm_303 B A d_1 g_2) (thm_311 B A d_1 g_2).

(; Theorem: |- ((= (= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) (Data.Bool.! \lambda x. ((= (f x)) d)))))) (= (Data.Bool.! \lambda x. ((= (g x)) d)))) ;)

(; dict ;)

def thm_313 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1))))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1)) thm_77 (thm_312 B A d_1 g_2).

(; Theorem: |- ((= ((= g) \lambda x. d)) ((= g) \lambda x. d)) ;)

(; dict ;)

def thm_314 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1)) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1)).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) (Data.Bool.! \lambda x. ((= (f x)) d))))) ((= g) \lambda x. d))) ((= (Data.Bool.! \lambda x. ((= (g x)) d))) ((= g) \lambda x. d))) ;)

(; dict ;)

def thm_315 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1)) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1))))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1))) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1)) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1)) (thm_313 B A d_1 g_2) (thm_314 B A d_1 g_2).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. ((= (g x)) d))) ((= g) \lambda x. d))) ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) (Data.Bool.! \lambda x. ((= (f x)) d))))) ((= g) \lambda x. d))) ;)

(; dict ;)

def thm_316 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1)) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => hol.SYM hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1)) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1))) (thm_315 B A d_1 g_2).

(; Theorem: |- ((= (= (Data.Bool.! \lambda x. ((= (g x)) d)))) (= (Data.Bool.! \lambda x. ((= (g x)) d)))) ;)

(; dict ;)

def thm_317 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1))).

(; Theorem: |- ((= ((= ((= f) g)) (Data.Bool.! \lambda x. ((= (f x)) (g x))))) ((= ((= f) g)) (Data.Bool.! \lambda x. ((= (f x)) (g x))))) ;)

(; dict ;)

def thm_318 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq (hol.arr A B) f_2 g_1) (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) (g_1 x_3)))) (hol.eq hol.bool (hol.eq (hol.arr A B) f_2 g_1) (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) (g_1 x_3))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => f_2 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.eq hol.bool (hol.eq (hol.arr A B) f_2 g_1) (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) (g_1 x_3)))).

(; Theorem: |- ((= ((= ((= f) g)) (Data.Bool.! \lambda x. ((= (f x)) (g x))))) ((= ((= f) g)) (Data.Bool.! \lambda x. ((= (f x)) (g x))))) ;)

(; dict ;)

def thm_319 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq (hol.arr A B) f_2 g_1) (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) (g_1 x_3)))) (hol.eq hol.bool (hol.eq (hol.arr A B) f_2 g_1) (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) (g_1 x_3))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => f_2 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq (hol.arr A B) f_2 g_1) (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) (g_1 x_3)))) (hol.eq hol.bool (hol.eq (hol.arr A B) f_2 g_1) (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) (g_1 x_3)))) (hol.eq hol.bool (hol.eq (hol.arr A B) f_2 g_1) (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) (g_1 x_3)))) (thm_318 B A g_1 f_2) (thm_318 B A g_1 f_2).

(; Theorem: |- ((= ((= ((= f) g)) (Data.Bool.! \lambda x. ((= (f x)) (g x))))) ((= (Data.Bool.! \lambda x. ((= (f x)) (g x)))) ((= f) g))) ;)

(; dict ;)

def thm_320 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq (hol.arr A B) f_2 g_1) (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) (g_1 x_3)))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) (g_1 x_3))) (hol.eq (hol.arr A B) f_2 g_1))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => f_2 : hol.term (hol.arr A B) => (y_1 : hol.term hol.bool => x_2 : hol.term hol.bool => thm_64 y_1 x_2) (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) (g_1 x_3))) (hol.eq (hol.arr A B) f_2 g_1).

(; Theorem: |- ((= \lambda g. ((= ((= f) g)) (Data.Bool.! \lambda x. ((= (f x)) (g x))))) \lambda g. ((= (Data.Bool.! \lambda x. ((= (f x)) (g x)))) ((= f) g))) ;)

(; dict ;)

def thm_321 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.eq (hol.arr A B) f_1 g_2) (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3)))) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))) (hol.eq (hol.arr A B) f_1 g_2))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.ABS_THM (hol.arr A B) hol.bool (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.eq (hol.arr A B) f_1 g_2) (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3)))) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))) (hol.eq (hol.arr A B) f_1 g_2)) (g_2 : hol.term (hol.arr A B) => thm_320 B A g_2 f_1).

(; Theorem: |- ((= (Data.Bool.! \lambda g. ((= ((= f) g)) (Data.Bool.! \lambda x. ((= (f x)) (g x)))))) (Data.Bool.! \lambda g. ((= (Data.Bool.! \lambda x. ((= (f x)) (g x)))) ((= f) g)))) ;)

(; dict ;)

def thm_322 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.eq (hol.arr A B) f_1 g_2) (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))))) (hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))) (hol.eq (hol.arr A B) f_1 g_2)))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B)) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.eq (hol.arr A B) f_1 g_2) (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3)))) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))) (hol.eq (hol.arr A B) f_1 g_2)) (thm_76 B A) (thm_321 B A f_1).

(; Theorem: |- ((= \lambda f. (Data.Bool.! \lambda g. ((= ((= f) g)) (Data.Bool.! \lambda x. ((= (f x)) (g x)))))) \lambda f. (Data.Bool.! \lambda g. ((= (Data.Bool.! \lambda x. ((= (f x)) (g x)))) ((= f) g)))) ;)

(; dict ;)

def thm_323 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.eq (hol.arr A B) f_1 g_2) (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))))) (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))) (hol.eq (hol.arr A B) f_1 g_2)))) :=
  B : hol.type => A : hol.type => hol.ABS_THM (hol.arr A B) hol.bool (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.eq (hol.arr A B) f_1 g_2) (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))))) (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))) (hol.eq (hol.arr A B) f_1 g_2))) (f_1 : hol.term (hol.arr A B) => thm_322 B A f_1).

(; Theorem: |- ((= (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. ((= ((= f) g)) (Data.Bool.! \lambda x. ((= (f x)) (g x))))))) (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. ((= (Data.Bool.! \lambda x. ((= (f x)) (g x)))) ((= f) g))))) ;)

(; dict ;)

def thm_324 : B : hol.type -> A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.eq (hol.arr A B) f_1 g_2) (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3)))))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))) (hol.eq (hol.arr A B) f_1 g_2))))) :=
  B : hol.type => A : hol.type => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B)) (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.eq (hol.arr A B) f_1 g_2) (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))))) (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))) (hol.eq (hol.arr A B) f_1 g_2))) (thm_76 B A) (thm_323 B A).

(; Theorem: |- ((= (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. ((= (Data.Bool.! \lambda x. ((= (f x)) (g x)))) ((= f) g))))) (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. ((= ((= f) g)) (Data.Bool.! \lambda x. ((= (f x)) (g x))))))) ;)

(; dict ;)

def thm_325 : B : hol.type -> A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))) (hol.eq (hol.arr A B) f_1 g_2)))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.eq (hol.arr A B) f_1 g_2) (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))))))) :=
  B : hol.type => A : hol.type => hol.SYM hol.bool (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.eq (hol.arr A B) f_1 g_2) (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3)))))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))) (hol.eq (hol.arr A B) f_1 g_2)))) (thm_324 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. ((= ((= f) g)) (Data.Bool.! \lambda x. ((= (f x)) (g x)))))) ;)

(; dict ;)

def thm_326 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.eq (hol.arr A B) f_1 g_2) (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3)))))) :=
  B : hol.type => A : hol.type => hol.EQ_MP (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))) (hol.eq (hol.arr A B) f_1 g_2)))) (hol.forall (hol.arr A B) (f_1 : hol.term (hol.arr A B) => hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.eq (hol.arr A B) f_1 g_2) (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3)))))) (thm_325 B A) (thm_23 B A).

(; Theorem: |- (Data.Bool.! \lambda g. ((= ((= f) g)) (Data.Bool.! \lambda x. ((= (f x)) (g x))))) ;)

(; dict ;)

def thm_327 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (hol.eq (hol.arr A B) f_1 g_2) (hol.forall A (x_3 : hol.term A => hol.eq B (f_1 x_3) (g_2 x_3))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => thm_326 B A f_1.

(; Theorem: |- ((= ((= f) g)) (Data.Bool.! \lambda x. ((= (f x)) (g x)))) ;)

(; dict ;)

def thm_328 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A B) f_2 g_1) (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) (g_1 x_3)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => f_2 : hol.term (hol.arr A B) => thm_327 B A f_2 g_1.

(; Theorem: |- ((= ((= g) \lambda x. d)) (Data.Bool.! \lambda x. ((= (g x)) (\lambda x. d x)))) ;)

(; dict ;)

def thm_329 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1)) (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) ((x_4 : hol.term A => d_1) x_3)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => (B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => f_2 : hol.term (hol.arr A B) => (B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => f_2 : hol.term (hol.arr A B) => hol.EQ_MP (hol.eq hol.bool (hol.eq (hol.arr A B) f_2 g_1) (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) (g_1 x_3)))) (hol.eq hol.bool (hol.eq (hol.arr A B) f_2 g_1) (hol.forall A (x_3 : hol.term A => hol.eq B (f_2 x_3) (g_1 x_3)))) (thm_319 B A g_1 f_2) (thm_328 B A g_1 f_2)) B A g_1 f_2) B A (x_3 : hol.term A => d_1) g_2.

(; Theorem: |- ((= (= (g x))) (= (g x))) ;)

(; dict ;)

def thm_330 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B (g_2 x_1)) (hol.eq B (g_2 x_1))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A B) => hol.REFL (hol.arr B hol.bool) (hol.eq B (g_2 x_1)).

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_331 : B : hol.type -> hol.proof (hol.eq (hol.arr B (hol.arr B hol.bool)) (hol.eq B) (hol.eq B)) :=
  B : hol.type => hol.REFL (hol.arr B (hol.arr B hol.bool)) (hol.eq B).

(; Theorem: |- ((= (\lambda x. d x)) d) ;)

(; dict ;)

def thm_332 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> d_2 : hol.term B -> hol.proof (hol.eq B ((x_3 : hol.term A => d_2) x_1) d_2) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => d_2 : hol.term B => hol.BETA_CONV A B (x_3 : hol.term A => d_2) x_1.

(; Theorem: |- ((= \lambda x. (\lambda x. d x)) \lambda x. d) ;)

(; dict ;)

def thm_333 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> hol.proof (hol.eq (hol.arr A B) (x_2 : hol.term A => (x_3 : hol.term A => d_1) x_2) (x_2 : hol.term A => d_1)) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => hol.ABS_THM A B (x_2 : hol.term A => (x_3 : hol.term A => d_1) x_2) (x_2 : hol.term A => d_1) (x_2 : hol.term A => thm_332 A B x_2 d_1).

(; Theorem: |- ((= x) x) ;)

(; dict ;)

def thm_334 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq A x_1 x_1) :=
  A : hol.type => x_1 : hol.term A => hol.REFL A x_1.

(; Theorem: |- ((= (\lambda x. (\lambda x. d x) x)) (\lambda x. d x)) ;)

(; dict ;)

def thm_335 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> d_2 : hol.term B -> hol.proof (hol.eq B ((x_3 : hol.term A => (x_4 : hol.term A => d_2) x_3) x_1) ((x_3 : hol.term A => d_2) x_1)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => d_2 : hol.term B => hol.APP_THM A B (x_3 : hol.term A => (x_4 : hol.term A => d_2) x_3) (x_3 : hol.term A => d_2) x_1 x_1 (thm_333 B A d_2) (thm_334 A x_1).

(; Theorem: |- ((= (= (\lambda x. (\lambda x. d x) x))) (= (\lambda x. d x))) ;)

(; dict ;)

def thm_336 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> d_2 : hol.term B -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B ((x_3 : hol.term A => (x_4 : hol.term A => d_2) x_3) x_1)) (hol.eq B ((x_3 : hol.term A => d_2) x_1))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => d_2 : hol.term B => hol.APP_THM B (hol.arr B hol.bool) (hol.eq B) (hol.eq B) ((x_3 : hol.term A => (x_4 : hol.term A => d_2) x_3) x_1) ((x_3 : hol.term A => d_2) x_1) (thm_331 B) (thm_335 A B x_1 d_2).

(; Theorem: |- ((= ((= (\lambda x. (\lambda x. d x) x)) (\lambda x. d x))) ((= (\lambda x. d x)) d)) ;)

(; dict ;)

def thm_337 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> d_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq B ((x_3 : hol.term A => (x_4 : hol.term A => d_2) x_3) x_1) ((x_3 : hol.term A => d_2) x_1)) (hol.eq B ((x_3 : hol.term A => d_2) x_1) d_2)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => d_2 : hol.term B => hol.APP_THM B hol.bool (hol.eq B ((x_3 : hol.term A => (x_4 : hol.term A => d_2) x_3) x_1)) (hol.eq B ((x_3 : hol.term A => d_2) x_1)) ((x_3 : hol.term A => d_2) x_1) d_2 (thm_336 A B x_1 d_2) (thm_332 A B x_1 d_2).

(; Theorem: |- ((= ((= (g x)) (\lambda x. d x))) ((= (g x)) d)) ;)

(; dict ;)

def thm_338 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B (g_3 x_2) ((x_4 : hol.term A => d_1) x_2)) (hol.eq B (g_3 x_2) d_1)) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hol.APP_THM B hol.bool (hol.eq B (g_3 x_2)) (hol.eq B (g_3 x_2)) ((x_4 : hol.term A => d_1) x_2) d_1 (thm_330 A B x_2 g_3) (hol.EQ_MP (hol.eq B ((x_4 : hol.term A => (x_5 : hol.term A => d_1) x_4) x_2) ((x_4 : hol.term A => d_1) x_2)) (hol.eq B ((x_4 : hol.term A => d_1) x_2) d_1) (thm_337 A B x_2 d_1) (thm_335 A B x_2 d_1)).

(; Theorem: |- ((= \lambda x. ((= (g x)) (\lambda x. d x))) \lambda x. ((= (g x)) d)) ;)

(; dict ;)

def thm_339 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.eq B (g_2 x_3) ((x_4 : hol.term A => d_1) x_3)) (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1)) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => hol.ABS_THM A hol.bool (x_3 : hol.term A => hol.eq B (g_2 x_3) ((x_4 : hol.term A => d_1) x_3)) (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1) (x_3 : hol.term A => thm_338 A B d_1 x_3 g_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= (g x)) (\lambda x. d x)))) (Data.Bool.! \lambda x. ((= (g x)) d))) ;)

(; dict ;)

def thm_340 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) ((x_4 : hol.term A => d_1) x_3))) (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_3 : hol.term A => hol.eq B (g_2 x_3) ((x_4 : hol.term A => d_1) x_3)) (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1) (thm_95 A) (thm_339 B A d_1 g_2).

(; Theorem: |- ((= ((= g) \lambda x. d)) (Data.Bool.! \lambda x. ((= (g x)) d))) ;)

(; dict ;)

def thm_341 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1)) (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1)) (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) ((x_4 : hol.term A => d_1) x_3))) (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1)) (thm_329 B A d_1 g_2) (thm_340 B A d_1 g_2).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. ((= (g x)) d))) ((= g) \lambda x. d))) ((= (Data.Bool.! \lambda x. ((= (g x)) d))) (Data.Bool.! \lambda x. ((= (g x)) d)))) ;)

(; dict ;)

def thm_342 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1)) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1)) (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1))) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1)) (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1)) (thm_317 B A d_1 g_2) (thm_341 B A d_1 g_2).

(; Theorem: |- ((= ((= ((= x) x)) Data.Bool.T)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_343 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true).

(; Theorem: |- ((= ((= ((= x) x)) Data.Bool.T)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_344 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_343 A x_1) (thm_343 A x_1).

(; Theorem: |- ((= \lambda x. ((= ((= x) x)) Data.Bool.T)) \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_345 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => hol.REFL (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true).

(; Theorem: |- ((= \lambda x. ((= ((= x) x)) Data.Bool.T)) \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_346 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => hol.TRANS (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_345 A) (thm_345 A).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T))) (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T))) ;)

(; dict ;)

def thm_347 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true))) :=
  A : hol.type => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_95 A) (thm_346 A).

(; Theorem: |- ((= ((= x) x)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_348 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_1 x_1) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => (t_1 : hol.term hol.bool => thm_180 t_1) (hol.eq A x_1 x_1).

(; Theorem: |- ((= ((= x) x)) Data.Bool.T) ;)

(; dict ;)

def thm_349 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) :=
  A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq A x_1 x_1) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_348 A x_1) (thm_334 A x_1).

(; Theorem: |- (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_350 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => (A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_343 A x_1) (thm_349 A x_1)) A x_1.

(; Theorem: |- ((= ((= x) x)) Data.Bool.T) ;)

(; dict ;)

def thm_351 : x_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool x_1 x_1) hol.true) :=
  x_1 : hol.term hol.bool => (A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_344 A x_1) (hol.EQ_MP (hol.forall A (x_2 : hol.term A => hol.eq hol.bool (hol.eq A x_2 x_2) hol.true)) (hol.forall A (x_2 : hol.term A => hol.eq hol.bool (hol.eq A x_2 x_2) hol.true)) (thm_347 A) (thm_350 A) x_1)) hol.bool x_1.

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. ((= (g x)) d))) (Data.Bool.! \lambda x. ((= (g x)) d)))) Data.Bool.T) ;)

(; dict ;)

def thm_352 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1)) (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1))) hol.true) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => (x_1 : hol.term hol.bool => thm_351 x_1) (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1)).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. ((= (g x)) d))) ((= g) \lambda x. d))) Data.Bool.T) ;)

(; dict ;)

def thm_353 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1)) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1))) hol.true) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1)) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1))) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1)) (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1))) hol.true (thm_342 B A d_1 g_2) (thm_352 B A d_1 g_2).

(; Theorem: |- ((= Data.Bool.T) ((= (Data.Bool.! \lambda x. ((= (g x)) d))) ((= g) \lambda x. d))) ;)

(; dict ;)

def thm_354 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool hol.true (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1)) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => hol.SYM hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1)) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1))) hol.true (thm_353 B A d_1 g_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= (g x)) d))) ((= g) \lambda x. d)) ;)

(; dict ;)

def thm_355 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1)) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => hol.EQ_MP hol.true (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1)) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1))) (thm_354 B A d_1 g_2) thm_10.

(; Theorem: |- ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) (Data.Bool.! \lambda x. ((= (f x)) d))))) ((= g) \lambda x. d)) ;)

(; dict ;)

def thm_356 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => hol.EQ_MP (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) d_1)) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1))) (thm_316 B A d_1 g_2) (thm_355 B A d_1 g_2).

(; Theorem: |- (Data.Bool.! \lambda g. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) (Data.Bool.! \lambda x. ((= (f x)) d))))) ((= g) \lambda x. d))) ;)

(; dict ;)

def thm_357 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> hol.proof (hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => thm_356 B A d_1 g_2.

(; Theorem: |- (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) (Data.Bool.! \lambda x. ((= (f x)) d))))) ((= x) \lambda x. d))) ;)

(; dict ;)

def thm_358 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> hol.proof (hol.forall (hol.arr A B) (x_2 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) (hol.eq (hol.arr A B) x_2 (x_3 : hol.term A => d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => hol.EQ_MP (hol.forall (hol.arr A B) (g_2 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => d_1)))) (hol.forall (hol.arr A B) (x_2 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_3 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_2 f_3) (hol.forall A (x_4 : hol.term A => hol.eq B (f_3 x_4) d_1)))) (hol.eq (hol.arr A B) x_2 (x_3 : hol.term A => d_1)))) (thm_295 B A d_1) (thm_357 B A d_1).

(; Theorem: |- ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))))) ((Set.insert \lambda x. d) Set.{})) ;)

(; dict ;)

def thm_359 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => hol.EQ_MP (hol.forall (hol.arr A B) (x_3 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_3 f_4) (hol.forall A (x_5 : hol.term A => hol.eq B (f_4 x_5) d_1)))) (hol.eq (hol.arr A B) x_3 (x_4 : hol.term A => d_1)))) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B))))) (thm_291 B A t_2 d_1) (thm_358 B A d_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))))) ((Set.insert \lambda x. d) Set.{}))) ;)

(; dict ;)

def thm_360 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> hol.proof (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B)))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => thm_359 B A d_1 t_2.

(; Theorem: |- (Data.Bool.! \lambda d. (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))))) ((Set.insert \lambda x. d) Set.{})))) ;)

(; dict ;)

def thm_361 : A : hol.type -> B : hol.type -> hol.proof (hol.forall B (d_1 : hol.term B => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => hol.EQ_MP (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B)))))) (hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B)))))) (thm_56 A B d_1) (thm_360 A B d_1).

(; Theorem: |- (Data.Bool.! \lambda d. (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) Set.{})) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) Set.{}))) ((= (f x)) d)))))))) ((Set.insert \lambda x. d) Set.{})))) ;)

(; thm ;)

def thm_362 : A : hol.type -> B : hol.type -> hol.proof (hol.forall B (d_1 : hol.term B => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B))))))) :=
  A : hol.type => B : hol.type => hol.EQ_MP (hol.forall B (d_1 : hol.term B => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B))))))) (hol.forall B (d_1 : hol.term B => hol.forall (Set_2Eset B) (t_2 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_3 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_3 f_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2E_7B_7D (Set_2Eset A)))) (hol.eq B (f_4 x_5) d_1))))))) (Set_2Einsert (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (hol.arr A B)))) (x_3 : hol.term A => d_1) (Set_2E_7B_7D (Set_2Eset (hol.arr A B))))))) (thm_52 A B) (thm_361 A B).

(; Theorem: |- ((= \lambda d. (Data.Bool.! \lambda a. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))))) \lambda d. (Data.Bool.! \lambda a. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))))) ;)

(; dict ;)

def thm_363 : A : hol.type -> B : hol.type -> hol.proof (hol.eq (hol.arr B hol.bool) (d_1 : hol.term B => hol.forall A (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))))) (d_1 : hol.term B => hol.forall A (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))))))) :=
  A : hol.type => B : hol.type => hol.REFL (hol.arr B hol.bool) (d_1 : hol.term B => hol.forall A (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))))).

(; Theorem: |- ((= \lambda d. (Data.Bool.! \lambda a. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))))) \lambda d. (Data.Bool.! \lambda a. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))))) ;)

(; dict ;)

def thm_364 : A : hol.type -> B : hol.type -> hol.proof (hol.eq (hol.arr B hol.bool) (d_1 : hol.term B => hol.forall A (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))))) (d_1 : hol.term B => hol.forall A (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))))))) :=
  A : hol.type => B : hol.type => hol.TRANS (hol.arr B hol.bool) (d_1 : hol.term B => hol.forall A (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))))) (d_1 : hol.term B => hol.forall A (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))))) (d_1 : hol.term B => hol.forall A (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))))) (thm_363 A B) (thm_363 A B).

(; Theorem: |- ((= (Data.Bool.! \lambda d. (Data.Bool.! \lambda a. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))))) (Data.Bool.! \lambda d. (Data.Bool.! \lambda a. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))))) ;)

(; dict ;)

def thm_365 : A : hol.type -> B : hol.type -> hol.proof (hol.eq hol.bool (hol.forall B (d_1 : hol.term B => hol.forall A (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))))))) (hol.forall B (d_1 : hol.term B => hol.forall A (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))))))) :=
  A : hol.type => B : hol.type => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (d_1 : hol.term B => hol.forall A (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))))) (d_1 : hol.term B => hol.forall A (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))))) (thm_49 B) (thm_364 A B).

(; Theorem: |- ((= \lambda a. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))) \lambda a. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))) ;)

(; dict ;)

def thm_366 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> hol.proof (hol.eq (hol.arr A hol.bool) (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))))) (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => hol.REFL (hol.arr A hol.bool) (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))))).

(; Theorem: |- ((= \lambda a. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))) \lambda a. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))) ;)

(; dict ;)

def thm_367 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> hol.proof (hol.eq (hol.arr A hol.bool) (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))))) (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => hol.TRANS (hol.arr A hol.bool) (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))))) (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))))) (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))))) (thm_366 B A d_1) (thm_366 B A d_1).

(; Theorem: |- ((= (Data.Bool.! \lambda a. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))))) (Data.Bool.! \lambda a. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))))) ;)

(; dict ;)

def thm_368 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> hol.proof (hol.eq hol.bool (hol.forall A (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))))) (hol.forall A (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))))) (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))))) (thm_95 A) (thm_367 B A d_1).

(; Theorem: |- ((= \lambda s. (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) \lambda s. (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ;)

(; dict ;)

def thm_369 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> a_2 : hol.term A -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => a_2 : hol.term A => hol.REFL (hol.arr (Set_2Eset A) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))).

(; Theorem: |- ((= \lambda s. (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) \lambda s. (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ;)

(; dict ;)

def thm_370 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> a_2 : hol.term A -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => a_2 : hol.term A => hol.TRANS (hol.arr (Set_2Eset A) hol.bool) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) (thm_369 B A d_1 a_2) (thm_369 B A d_1 a_2).

(; Theorem: |- ((= (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))) (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))) ;)

(; dict ;)

def thm_371 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => a_2 : hol.term A => hol.APP_THM (hol.arr (Set_2Eset A) hol.bool) hol.bool (hol.forall (Set_2Eset A)) (hol.forall (Set_2Eset A)) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) (thm_59 A) (thm_370 B A d_1 a_2).

(; Theorem: |- ((= \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) ;)

(; dict ;)

def thm_372 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> a_3 : hol.term A -> hol.proof (hol.eq (hol.arr (Set_2Eset B) hol.bool) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_3 s_2))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (f_6 x_7) d_1)))))))))) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_3 s_2))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (f_6 x_7) d_1))))))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => a_3 : hol.term A => hol.REFL (hol.arr (Set_2Eset B) hol.bool) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_3 s_2))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (f_6 x_7) d_1)))))))))).

(; Theorem: |- ((= \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) ;)

(; dict ;)

def thm_373 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> a_3 : hol.term A -> hol.proof (hol.eq (hol.arr (Set_2Eset B) hol.bool) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_3 s_2))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (f_6 x_7) d_1)))))))))) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_3 s_2))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (f_6 x_7) d_1))))))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => a_3 : hol.term A => hol.TRANS (hol.arr (Set_2Eset B) hol.bool) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_3 s_2))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (f_6 x_7) d_1)))))))))) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_3 s_2))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (f_6 x_7) d_1)))))))))) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_3 s_2))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (f_6 x_7) d_1)))))))))) (thm_372 A B d_1 s_2 a_3) (thm_372 A B d_1 s_2 a_3).

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ;)

(; dict ;)

def thm_374 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> a_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_3 s_2))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (f_6 x_7) d_1))))))))))) (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_3 s_2))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (f_6 x_7) d_1)))))))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => a_3 : hol.term A => hol.APP_THM (hol.arr (Set_2Eset B) hol.bool) hol.bool (hol.forall (Set_2Eset B)) (hol.forall (Set_2Eset B)) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_3 s_2))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (f_6 x_7) d_1)))))))))) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_3 s_2))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (f_6 x_7) d_1)))))))))) (thm_53 B) (thm_373 A B d_1 s_2 a_3).

(; Theorem: |- ((= ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) (Data.Bool.! \lambda x. ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d))))))))) ((Set.member x) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))) ;)

(; dict ;)

def thm_375 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))) (hol.forall (hol.arr A B) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_7 x_8) d_1)))))))) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_7 : hol.term B => hol.forall (hol.arr A B) (g_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_7 g_8)) (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_4) b_7 (g_8 x_9)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)) (hol.eq B (f_7 x_8) d_1))))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => (B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset (hol.arr A B)) => s_2 : hol.term (Set_2Eset (hol.arr A B)) => thm_74 B A t_1 s_2) B A (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))).

(; Theorem: |- ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d))))))))) (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))) x)) ;)

(; dict ;)

def thm_376 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> x_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_7 x_8) d_1)))))))) ((v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_7 x_8) d_1)))))) x_5)) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => x_5 : hol.term (hol.arr A B) => (B : hol.type => A : hol.type => p_1 : hol.term (hol.arr (hol.arr A B) hol.bool) => x_2 : hol.term (hol.arr A B) => thm_82 B A p_1 x_2) B A (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_7 x_8) d_1)))))) x_5.

(; Theorem: |- ((= (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))) v)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d))))))) ;)

(; dict ;)

def thm_377 : B : hol.type -> A : hol.type -> v_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hol.proof (hol.eq hol.bool ((v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4))) (hol.eq B (f_7 x_8) d_2)))))) v_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_1 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4))) (hol.eq B (f_6 x_7) d_2))))))) :=
  B : hol.type => A : hol.type => v_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hol.BETA_CONV (hol.arr A B) hol.bool (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4))) (hol.eq B (f_7 x_8) d_2)))))) v_1.

(; Theorem: |- ((= \lambda v. (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))) v)) \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d))))))) ;)

(; dict ;)

def thm_378 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (v_5 : hol.term (hol.arr A B) => (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_7 x_8) d_1)))))) v_5) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hol.ABS_THM (hol.arr A B) hol.bool (v_5 : hol.term (hol.arr A B) => (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_7 x_8) d_1)))))) v_5) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (v_5 : hol.term (hol.arr A B) => thm_377 B A v_5 d_1 t_2 s_3 a_4).

(; Theorem: |- ((= (\lambda v. (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))) v) x)) (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))) x)) ;)

(; dict ;)

def thm_379 : B : hol.type -> A : hol.type -> x_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hol.proof (hol.eq hol.bool ((v_6 : hol.term (hol.arr A B) => (v_7 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4))) (hol.eq B (f_8 x_9) d_2)))))) v_6) x_1) ((v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4))) (hol.eq B (f_7 x_8) d_2)))))) x_1)) :=
  B : hol.type => A : hol.type => x_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hol.APP_THM (hol.arr A B) hol.bool (v_6 : hol.term (hol.arr A B) => (v_7 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4))) (hol.eq B (f_8 x_9) d_2)))))) v_6) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4))) (hol.eq B (f_7 x_8) d_2)))))) x_1 x_1 (thm_378 B A d_2 t_3 s_4 a_5) (thm_86 B A x_1).

(; Theorem: |- ((= (= (\lambda v. (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))) v) x))) (= (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))) x))) ;)

(; dict ;)

def thm_380 : B : hol.type -> A : hol.type -> x_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((v_6 : hol.term (hol.arr A B) => (v_7 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4))) (hol.eq B (f_8 x_9) d_2)))))) v_6) x_1)) (hol.eq hol.bool ((v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4))) (hol.eq B (f_7 x_8) d_2)))))) x_1))) :=
  B : hol.type => A : hol.type => x_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((v_6 : hol.term (hol.arr A B) => (v_7 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4))) (hol.eq B (f_8 x_9) d_2)))))) v_6) x_1) ((v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4))) (hol.eq B (f_7 x_8) d_2)))))) x_1) thm_77 (thm_379 B A x_1 d_2 t_3 s_4 a_5).

(; Theorem: |- ((= (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))) x)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d))))))) ;)

(; dict ;)

def thm_381 : B : hol.type -> A : hol.type -> x_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hol.proof (hol.eq hol.bool ((v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4))) (hol.eq B (f_7 x_8) d_2)))))) x_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_1 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4))) (hol.eq B (f_6 x_7) d_2))))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hol.BETA_CONV (hol.arr A B) hol.bool (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4))) (hol.eq B (f_7 x_8) d_2)))))) x_1.

(; Theorem: |- ((= ((= (\lambda v. (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))) v) x)) (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))) x))) ((= (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))) x)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ;)

(; dict ;)

def thm_382 : B : hol.type -> A : hol.type -> x_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((v_6 : hol.term (hol.arr A B) => (v_7 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4))) (hol.eq B (f_8 x_9) d_2)))))) v_6) x_1) ((v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4))) (hol.eq B (f_7 x_8) d_2)))))) x_1)) (hol.eq hol.bool ((v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4))) (hol.eq B (f_7 x_8) d_2)))))) x_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_1 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4))) (hol.eq B (f_6 x_7) d_2)))))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((v_6 : hol.term (hol.arr A B) => (v_7 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4))) (hol.eq B (f_8 x_9) d_2)))))) v_6) x_1)) (hol.eq hol.bool ((v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4))) (hol.eq B (f_7 x_8) d_2)))))) x_1)) ((v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4))) (hol.eq B (f_7 x_8) d_2)))))) x_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_1 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4))) (hol.eq B (f_6 x_7) d_2)))))) (thm_380 B A x_1 d_2 t_3 s_4 a_5) (thm_381 B A x_1 d_2 t_3 s_4 a_5).

(; Theorem: |- ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d))))))))) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d))))))) ;)

(; dict ;)

def thm_383 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> x_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_7 x_8) d_1)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => x_5 : hol.term (hol.arr A B) => hol.TRANS hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_7 x_8) d_1)))))))) ((v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_7 x_8) d_1)))))) x_5) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (thm_376 B A d_1 t_2 s_3 a_4 x_5) (hol.EQ_MP (hol.eq hol.bool ((v_6 : hol.term (hol.arr A B) => (v_7 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_8 x_9) d_1)))))) v_6) x_5) ((v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_7 x_8) d_1)))))) x_5)) (hol.eq hol.bool ((v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_7 x_8) d_1)))))) x_5) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (thm_382 B A x_5 d_1 t_2 s_3 a_4) (thm_379 B A x_5 d_1 t_2 s_3 a_4)).

(; Theorem: |- ((= ((= ((Set.member x) ((Set.insert y) s))) ((Data.Bool.\/ ((= x) y)) ((Set.member x) s)))) ((= ((Set.member x) ((Set.insert y) s))) ((Data.Bool.\/ ((= x) y)) ((Set.member x) s)))) ;)

(; dict ;)

def thm_384 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => x_3 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))).

(; Theorem: |- ((= ((= ((Set.member x) ((Set.insert y) s))) ((Data.Bool.\/ ((= x) y)) ((Set.member x) s)))) ((= ((Set.member x) ((Set.insert y) s))) ((Data.Bool.\/ ((= x) y)) ((Set.member x) s)))) ;)

(; dict ;)

def thm_385 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => x_3 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) (thm_384 A s_1 y_2 x_3) (thm_384 A s_1 y_2 x_3).

(; Theorem: |- (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. ((= ((Set.member x) ((Set.insert y) s))) ((Data.Bool.\/ ((= x) y)) ((Set.member x) s))))) ;)

(; dict ;)

def thm_386 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.forall A (y_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_3)) (hol.or (hol.eq A x_1 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3))))) :=
  A : hol.type => x_1 : hol.term A => thm_24 A x_1.

(; Theorem: |- (Data.Bool.! \lambda s. ((= ((Set.member x) ((Set.insert y) s))) ((Data.Bool.\/ ((= x) y)) ((Set.member x) s)))) ;)

(; dict ;)

def thm_387 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_1 s_3)) (hol.or (hol.eq A x_2 y_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3)))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => thm_386 A x_2 y_1.

(; Theorem: |- ((= ((Set.member x) ((Set.insert y) s))) ((Data.Bool.\/ ((= x) y)) ((Set.member x) s))) ;)

(; dict ;)

def thm_388 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => x_3 : hol.term A => thm_387 A y_2 x_3 s_1.

(; Theorem: |- ((= ((Set.member x) ((Set.insert a) s))) ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ;)

(; dict ;)

def thm_389 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1)) (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => x_3 : hol.term A => (A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => x_3 : hol.term A => (A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term A => x_3 : hol.term A => hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) y_2 s_1)) (hol.or (hol.eq A x_3 y_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) (thm_385 A s_1 y_2 x_3) (thm_388 A s_1 y_2 x_3)) A s_1 y_2 x_3) A s_1 a_2 x_3.

(; Theorem: |- ((= (Data.Bool.==> ((Set.member x) ((Set.insert a) s)))) (Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ;)

(; dict ;)

def thm_390 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1))) (hol.imp (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => x_3 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1)) (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) thm_96 (thm_389 A s_1 a_2 x_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t))) ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t))) ;)

(; dict ;)

def thm_391 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> x_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)) (hol.imp (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => x_5 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.imp (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1) (thm_390 A s_3 a_4 x_5) (thm_119 A B t_1 x_5 f_2).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t))) \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t))) ;)

(; dict ;)

def thm_392 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)) (x_5 : hol.term A => hol.imp (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hol.ABS_THM A hol.bool (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)) (x_5 : hol.term A => hol.imp (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)) (x_5 : hol.term A => thm_391 B A t_1 f_2 s_3 a_4 x_5).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) ;)

(; dict ;)

def thm_393 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)) (x_5 : hol.term A => hol.imp (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)) (thm_95 A) (thm_392 B A t_1 f_2 s_3 a_4).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t))))) (Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t))))) ;)

(; dict ;)

def thm_394 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1))) thm_94 (thm_393 B A t_1 f_2 s_3 a_4).

(; Theorem: |- ((= (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ;)

(; dict ;)

def thm_395 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1))) (hol.not (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => x_3 : hol.term A => hol.APP_THM hol.bool hol.bool hol.not hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1)) (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) thm_221 (thm_389 A s_1 a_2 x_3).

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s))))) (Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))))) ;)

(; dict ;)

def thm_396 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1)))) (hol.imp (hol.not (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => x_3 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1))) (hol.not (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) thm_96 (thm_395 A s_1 a_2 x_3).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d))) ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d))) ;)

(; dict ;)

def thm_397 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> x_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_2 x_5) d_1)) (hol.imp (hol.not (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3))) (hol.eq B (f_2 x_5) d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => x_5 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)))) (hol.imp (hol.not (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)))) (hol.eq B (f_2 x_5) d_1) (hol.eq B (f_2 x_5) d_1) (thm_396 A s_3 a_4 x_5) (thm_234 A B d_1 x_5 f_2).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d))) \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d))) ;)

(; dict ;)

def thm_398 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_2 x_5) d_1)) (x_5 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3))) (hol.eq B (f_2 x_5) d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hol.ABS_THM A hol.bool (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_2 x_5) d_1)) (x_5 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3))) (hol.eq B (f_2 x_5) d_1)) (x_5 : hol.term A => thm_397 B A d_1 f_2 s_3 a_4 x_5).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d)))) ;)

(; dict ;)

def thm_399 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_2 x_5) d_1))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3))) (hol.eq B (f_2 x_5) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_2 x_5) d_1)) (x_5 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3))) (hol.eq B (f_2 x_5) d_1)) (thm_95 A) (thm_398 B A d_1 f_2 s_3 a_4).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d))))) ;)

(; dict ;)

def thm_400 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4))) (hol.eq B (f_3 x_6) d_1)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (f_3 x_6) d_1))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_2)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_2)))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4))) (hol.eq B (f_3 x_6) d_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (f_3 x_6) d_1))) (thm_394 B A t_2 f_3 s_4 a_5) (thm_399 B A d_1 f_3 s_4 a_5).

(; Theorem: |- ((= ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))) ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d)))))) ;)

(; dict ;)

def thm_401 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> x_6 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq (hol.arr A B) x_6 f_5) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_5 x_7) d_1))))) (hol.and (hol.eq (hol.arr A B) x_6 f_5) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_5 x_7) d_1)))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => f_5 : hol.term (hol.arr A B) => x_6 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq (hol.arr A B) x_6 f_5)) (hol.and (hol.eq (hol.arr A B) x_6 f_5)) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_5 x_7) d_1)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_5 x_7) d_1)))) (thm_93 B A f_5 x_6) (thm_400 B A d_1 t_2 f_5 s_3 a_4).

(; Theorem: |- ((= \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))) \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d)))))) ;)

(; dict ;)

def thm_402 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> x_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => x_5 : hol.term (hol.arr A B) => hol.ABS_THM (hol.arr A B) hol.bool (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1))))) (f_6 : hol.term (hol.arr A B) => thm_401 B A d_1 t_2 s_3 a_4 f_6 x_5).

(; Theorem: |- ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d))))))) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d))))))) ;)

(; dict ;)

def thm_403 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> x_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => x_5 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool)) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1))))) (thm_92 B A) (thm_402 B A d_1 t_2 s_3 a_4 x_5).

(; Theorem: |- ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d))))))))) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d))))))) ;)

(; dict ;)

def thm_404 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> x_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_7 x_8) d_1)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => x_5 : hol.term (hol.arr A B) => hol.TRANS hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_7 x_8) d_1)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (thm_383 B A d_1 t_2 s_3 a_4 x_5) (thm_403 B A d_1 t_2 s_3 a_4 x_5).

(; Theorem: |- ((= (= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))))) (= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d)))))))) ;)

(; dict ;)

def thm_405 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> x_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_7 x_8) d_1))))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => x_5 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_7 x_8) d_1)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) thm_77 (thm_404 B A d_1 t_2 s_3 a_4 x_5).

(; Theorem: |- ((= ((= ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))))) ((= ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_406 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))).

(; Theorem: |- ((= ((= ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))))) ((= ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_407 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (thm_406 A B s_1 f_2 y_3) (thm_406 A B s_1 f_2 y_3).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda f. ((= ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))))) ;)

(; dict ;)

def thm_408 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_1 (f_3 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2)))))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => thm_25 A B y_1.

(; Theorem: |- (Data.Bool.! \lambda f. ((= ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s))))) ;)

(; dict ;)

def thm_409 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term B -> hol.proof (hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_3 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_2 (f_3 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term B => thm_408 B A y_2 s_1.

(; Theorem: |- ((= ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_410 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> f_2 : hol.term (hol.arr A B) -> y_3 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => thm_409 B A s_1 y_3 f_2.

(; Theorem: |- ((= ((Set.member y) ((Set.image f) s))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= y) (f x))) ((Set.member x) s)))) ;)

(; dict ;)

def thm_411 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) -> f_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) -> y_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool) hol.bool) (x_4 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) y_3 (f_2 x_4)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_4 s_1)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) => f_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => y_3 : hol.term (hol.arr A B) => (A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => f_2 : hol.term (hol.arr A B) => y_3 : hol.term B => hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 (Set_2Eimage (hol.arr (hol.arr A B) (hol.arr (Set_2Eset A) (Set_2Eset B))) f_2 s_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => hol.and (hol.eq B y_3 (f_2 x_4)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)))) (thm_407 A B s_1 f_2 y_3) (thm_410 A B s_1 f_2 y_3)) (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B) s_1 f_2 y_3.

(; Theorem: |- ((= ((Set.member x) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) ((select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) x))) ((Set.member x) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ;)

(; dict ;)

def thm_412 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> x_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_7 : hol.term B => hol.forall (hol.arr A B) (g_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_7 g_8)) (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_4) b_7 (g_8 x_9)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (f_7 x_8) d_1)))))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool) hol.bool) (x_6 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_7 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_8 : hol.term B => hol.forall (hol.arr A B) (g_9 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_7 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_8 g_9)) (x_10 : hol.term A => hol.cond B (hol.eq A x_10 a_4) b_8 (g_9 x_10))))) x_6)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_6 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_7 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1)))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => x_5 : hol.term (hol.arr A B) => (B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) => f_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => y_3 : hol.term (hol.arr A B) => thm_411 B A s_1 f_2 y_3) B A (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (f_7 x_8) d_1)))))))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_7 : hol.term B => hol.forall (hol.arr A B) (g_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_7 g_8)) (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_4) b_7 (g_8 x_9)))))) x_5.

(; Theorem: |- ((= Data.Bool.?) Data.Bool.?) ;)

(; dict ;)

def thm_413 : A : hol.type -> B : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool) hol.bool))) :=
  A : hol.type => B : hol.type => hol.REFL (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool) hol.bool)).

(; Theorem: |- ((= (\lambda x. ((Data.Bool./\ ((= x) ((select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) x))) ((Set.member x) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) x)) ((Data.Bool./\ ((= x) ((select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) x))) ((Set.member x) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) ;)

(; dict ;)

def thm_414 : A : hol.type -> B : hol.type -> x_1 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) -> d_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> t_4 : hol.term (Set_2Eset B) -> a_5 : hol.term A -> x_6 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((x_7 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_6 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_9 : hol.term B => hol.forall (hol.arr A B) (g_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_9 g_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_5) b_9 (g_10 x_11))))) x_7)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_7 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_4))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_3)) (hol.eq B (f_9 x_10) d_2)))))))))) x_1) (hol.and (hol.eq (hol.arr A B) x_6 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_7 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_8 : hol.term B => hol.forall (hol.arr A B) (g_9 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_7 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_8 g_9)) (x_10 : hol.term A => hol.cond B (hol.eq A x_10 a_5) b_8 (g_9 x_10))))) x_1)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_1 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_7 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_4))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_2))))))))))) :=
  A : hol.type => B : hol.type => x_1 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => d_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => t_4 : hol.term (Set_2Eset B) => a_5 : hol.term A => x_6 : hol.term (hol.arr A B) => hol.BETA_CONV (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool (x_7 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_6 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_9 : hol.term B => hol.forall (hol.arr A B) (g_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_9 g_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_5) b_9 (g_10 x_11))))) x_7)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_7 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_4))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_3)) (hol.eq B (f_9 x_10) d_2)))))))))) x_1.

(; Theorem: |- ((= \lambda x. (\lambda x. ((Data.Bool./\ ((= x) ((select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) x))) ((Set.member x) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) x)) \lambda x. ((Data.Bool./\ ((= x) ((select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) x))) ((Set.member x) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) ;)

(; dict ;)

def thm_415 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> x_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool) (x_6 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => (x_7 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_9 : hol.term B => hol.forall (hol.arr A B) (g_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_9 g_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_4) b_9 (g_10 x_11))))) x_7)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_7 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1)))))))))) x_6) (x_6 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_7 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_8 : hol.term B => hol.forall (hol.arr A B) (g_9 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_7 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_8 g_9)) (x_10 : hol.term A => hol.cond B (hol.eq A x_10 a_4) b_8 (g_9 x_10))))) x_6)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_6 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_7 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1))))))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => x_5 : hol.term (hol.arr A B) => hol.ABS_THM (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool (x_6 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => (x_7 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_9 : hol.term B => hol.forall (hol.arr A B) (g_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_9 g_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_4) b_9 (g_10 x_11))))) x_7)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_7 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1)))))))))) x_6) (x_6 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_7 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_8 : hol.term B => hol.forall (hol.arr A B) (g_9 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_7 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_8 g_9)) (x_10 : hol.term A => hol.cond B (hol.eq A x_10 a_4) b_8 (g_9 x_10))))) x_6)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_6 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_7 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1)))))))))) (x_6 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => thm_414 A B x_6 d_1 s_2 t_3 a_4 x_5).

(; Theorem: |- ((= (Data.Bool.? \lambda x. (\lambda x. ((Data.Bool./\ ((= x) ((select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) x))) ((Set.member x) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) x))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) ((select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) x))) ((Set.member x) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ;)

(; dict ;)

def thm_416 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> x_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool) hol.bool) (x_6 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => (x_7 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_9 : hol.term B => hol.forall (hol.arr A B) (g_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_9 g_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_4) b_9 (g_10 x_11))))) x_7)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_7 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1)))))))))) x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool) hol.bool) (x_6 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_7 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_8 : hol.term B => hol.forall (hol.arr A B) (g_9 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_7 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_8 g_9)) (x_10 : hol.term A => hol.cond B (hol.eq A x_10 a_4) b_8 (g_9 x_10))))) x_6)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_6 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_7 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1)))))))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => x_5 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool) hol.bool)) (x_6 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => (x_7 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_9 : hol.term B => hol.forall (hol.arr A B) (g_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_9 g_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_4) b_9 (g_10 x_11))))) x_7)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_7 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1)))))))))) x_6) (x_6 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_7 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_8 : hol.term B => hol.forall (hol.arr A B) (g_9 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_7 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_8 g_9)) (x_10 : hol.term A => hol.cond B (hol.eq A x_10 a_4) b_8 (g_9 x_10))))) x_6)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_6 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_7 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1)))))))))) (thm_413 A B) (thm_415 A B d_1 s_2 t_3 a_4 x_5).

(; Theorem: |- ((= (= (Data.Bool.? \lambda x. (\lambda x. ((Data.Bool./\ ((= x) ((select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) x))) ((Set.member x) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) x)))) (= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) ((select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) x))) ((Set.member x) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))) ;)

(; dict ;)

def thm_417 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> x_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool) hol.bool) (x_6 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => (x_7 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_9 : hol.term B => hol.forall (hol.arr A B) (g_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_9 g_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_4) b_9 (g_10 x_11))))) x_7)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_7 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1)))))))))) x_6))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool) hol.bool) (x_6 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_7 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_8 : hol.term B => hol.forall (hol.arr A B) (g_9 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_7 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_8 g_9)) (x_10 : hol.term A => hol.cond B (hol.eq A x_10 a_4) b_8 (g_9 x_10))))) x_6)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_6 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_7 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1))))))))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => x_5 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool) hol.bool) (x_6 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => (x_7 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_9 : hol.term B => hol.forall (hol.arr A B) (g_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_9 g_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_4) b_9 (g_10 x_11))))) x_7)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_7 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1)))))))))) x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool) hol.bool) (x_6 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_7 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_8 : hol.term B => hol.forall (hol.arr A B) (g_9 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_7 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_8 g_9)) (x_10 : hol.term A => hol.cond B (hol.eq A x_10 a_4) b_8 (g_9 x_10))))) x_6)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_6 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_7 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1))))))))))) thm_77 (thm_416 A B d_1 s_2 t_3 a_4 x_5).

(; Theorem: |- ((= Data.Bool.?) Data.Bool.?) ;)

(; dict ;)

def thm_418 : B : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr B hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool))) :=
  B : hol.type => hol.REFL (hol.arr (hol.arr B hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool)).

(; Theorem: |- ((= (\lambda x. ((Data.Bool./\ ((= x) ((select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) x))) ((Set.member x) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) ((Data.Pair., a) b))) ((Data.Bool./\ ((= x) ((select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) ((Data.Pair., a) b)))) ((Set.member ((Data.Pair., a) b)) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) ;)

(; dict ;)

def thm_419 : A : hol.type -> B : hol.type -> b_1 : hol.term (hol.arr A B) -> a_2 : hol.term B -> d_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> t_5 : hol.term (Set_2Eset B) -> a_6 : hol.term A -> x_7 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((x_8 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_7 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_9 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_10 : hol.term B => hol.forall (hol.arr A B) (g_11 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_9 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_10 g_11)) (x_12 : hol.term A => hol.cond B (hol.eq A x_12 a_6) b_10 (g_11 x_12))))) x_8)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_8 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_5 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_9 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_10 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_9 f_10) (hol.and (hol.forall A (x_11 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_11 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_10 x_11) t_5))) (hol.forall A (x_11 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_11 s_4)) (hol.eq B (f_10 x_11) d_3)))))))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_2 b_1)) (hol.and (hol.eq (hol.arr A B) x_7 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_9 : hol.term B => hol.forall (hol.arr A B) (g_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_9 g_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_6) b_9 (g_10 x_11))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_2 b_1))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_2 b_1) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_5 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_5))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_4)) (hol.eq B (f_9 x_10) d_3))))))))))) :=
  A : hol.type => B : hol.type => b_1 : hol.term (hol.arr A B) => a_2 : hol.term B => d_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => t_5 : hol.term (Set_2Eset B) => a_6 : hol.term A => x_7 : hol.term (hol.arr A B) => hol.BETA_CONV (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool (x_8 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_7 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_9 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_10 : hol.term B => hol.forall (hol.arr A B) (g_11 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_9 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_10 g_11)) (x_12 : hol.term A => hol.cond B (hol.eq A x_12 a_6) b_10 (g_11 x_12))))) x_8)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_8 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_5 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_9 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_10 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_9 f_10) (hol.and (hol.forall A (x_11 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_11 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_10 x_11) t_5))) (hol.forall A (x_11 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_11 s_4)) (hol.eq B (f_10 x_11) d_3)))))))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_2 b_1).

(; Theorem: |- ((= \lambda b. (\lambda x. ((Data.Bool./\ ((= x) ((select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) x))) ((Set.member x) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) ((Data.Pair., a) b))) \lambda b. ((Data.Bool./\ ((= x) ((select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) ((Data.Pair., a) b)))) ((Set.member ((Data.Pair., a) b)) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) ;)

(; dict ;)

def thm_420 : B : hol.type -> A : hol.type -> a_1 : hol.term B -> d_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> t_4 : hol.term (Set_2Eset B) -> a_5 : hol.term A -> x_6 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (b_7 : hol.term (hol.arr A B) => (x_8 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_6 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_9 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_10 : hol.term B => hol.forall (hol.arr A B) (g_11 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_9 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_10 g_11)) (x_12 : hol.term A => hol.cond B (hol.eq A x_12 a_5) b_10 (g_11 x_12))))) x_8)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_8 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_9 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_10 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_9 f_10) (hol.and (hol.forall A (x_11 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_11 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_10 x_11) t_4))) (hol.forall A (x_11 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_11 s_3)) (hol.eq B (f_10 x_11) d_2)))))))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_1 b_7)) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_6 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_9 : hol.term B => hol.forall (hol.arr A B) (g_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_9 g_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_5) b_9 (g_10 x_11))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_1 b_7))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_1 b_7) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_4))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_3)) (hol.eq B (f_9 x_10) d_2))))))))))) :=
  B : hol.type => A : hol.type => a_1 : hol.term B => d_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => t_4 : hol.term (Set_2Eset B) => a_5 : hol.term A => x_6 : hol.term (hol.arr A B) => hol.ABS_THM (hol.arr A B) hol.bool (b_7 : hol.term (hol.arr A B) => (x_8 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_6 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_9 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_10 : hol.term B => hol.forall (hol.arr A B) (g_11 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_9 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_10 g_11)) (x_12 : hol.term A => hol.cond B (hol.eq A x_12 a_5) b_10 (g_11 x_12))))) x_8)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_8 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_9 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_10 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_9 f_10) (hol.and (hol.forall A (x_11 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_11 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_10 x_11) t_4))) (hol.forall A (x_11 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_11 s_3)) (hol.eq B (f_10 x_11) d_2)))))))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_1 b_7)) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_6 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_9 : hol.term B => hol.forall (hol.arr A B) (g_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_9 g_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_5) b_9 (g_10 x_11))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_1 b_7))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_1 b_7) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_4))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_3)) (hol.eq B (f_9 x_10) d_2)))))))))) (b_7 : hol.term (hol.arr A B) => thm_419 A B b_7 a_1 d_2 s_3 t_4 a_5 x_6).

(; Theorem: |- ((= (Data.Bool.? \lambda b. (\lambda x. ((Data.Bool./\ ((= x) ((select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) x))) ((Set.member x) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) ((Data.Pair., a) b)))) (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) ((select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) ((Data.Pair., a) b)))) ((Set.member ((Data.Pair., a) b)) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ;)

(; dict ;)

def thm_421 : B : hol.type -> A : hol.type -> a_1 : hol.term B -> d_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> t_4 : hol.term (Set_2Eset B) -> a_5 : hol.term A -> x_6 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => (x_8 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_6 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_9 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_10 : hol.term B => hol.forall (hol.arr A B) (g_11 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_9 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_10 g_11)) (x_12 : hol.term A => hol.cond B (hol.eq A x_12 a_5) b_10 (g_11 x_12))))) x_8)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_8 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_9 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_10 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_9 f_10) (hol.and (hol.forall A (x_11 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_11 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_10 x_11) t_4))) (hol.forall A (x_11 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_11 s_3)) (hol.eq B (f_10 x_11) d_2)))))))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_1 b_7))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_6 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_9 : hol.term B => hol.forall (hol.arr A B) (g_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_9 g_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_5) b_9 (g_10 x_11))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_1 b_7))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_1 b_7) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_4))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_3)) (hol.eq B (f_9 x_10) d_2)))))))))))) :=
  B : hol.type => A : hol.type => a_1 : hol.term B => d_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => t_4 : hol.term (Set_2Eset B) => a_5 : hol.term A => x_6 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool)) (b_7 : hol.term (hol.arr A B) => (x_8 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_6 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_9 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_10 : hol.term B => hol.forall (hol.arr A B) (g_11 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_9 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_10 g_11)) (x_12 : hol.term A => hol.cond B (hol.eq A x_12 a_5) b_10 (g_11 x_12))))) x_8)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_8 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_9 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_10 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_9 f_10) (hol.and (hol.forall A (x_11 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_11 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_10 x_11) t_4))) (hol.forall A (x_11 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_11 s_3)) (hol.eq B (f_10 x_11) d_2)))))))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_1 b_7)) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_6 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_9 : hol.term B => hol.forall (hol.arr A B) (g_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_9 g_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_5) b_9 (g_10 x_11))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_1 b_7))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_1 b_7) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_4))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_3)) (hol.eq B (f_9 x_10) d_2)))))))))) (thm_92 B A) (thm_420 B A a_1 d_2 s_3 t_4 a_5 x_6).

(; Theorem: |- ((= \lambda a. (Data.Bool.? \lambda b. (\lambda x. ((Data.Bool./\ ((= x) ((select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) x))) ((Set.member x) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) ((Data.Pair., a) b)))) \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) ((select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) ((Data.Pair., a) b)))) ((Set.member ((Data.Pair., a) b)) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ;)

(; dict ;)

def thm_422 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> x_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => (x_8 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_9 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_10 : hol.term B => hol.forall (hol.arr A B) (g_11 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_9 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_10 g_11)) (x_12 : hol.term A => hol.cond B (hol.eq A x_12 a_4) b_10 (g_11 x_12))))) x_8)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_8 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_9 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_10 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_9 f_10) (hol.and (hol.forall A (x_11 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_11 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_10 x_11) t_3))) (hol.forall A (x_11 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_11 s_2)) (hol.eq B (f_10 x_11) d_1)))))))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7))) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_9 : hol.term B => hol.forall (hol.arr A B) (g_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_9 g_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_4) b_9 (g_10 x_11))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1)))))))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => x_5 : hol.term (hol.arr A B) => hol.ABS_THM B hol.bool (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => (x_8 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_9 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_10 : hol.term B => hol.forall (hol.arr A B) (g_11 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_9 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_10 g_11)) (x_12 : hol.term A => hol.cond B (hol.eq A x_12 a_4) b_10 (g_11 x_12))))) x_8)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_8 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_9 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_10 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_9 f_10) (hol.and (hol.forall A (x_11 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_11 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_10 x_11) t_3))) (hol.forall A (x_11 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_11 s_2)) (hol.eq B (f_10 x_11) d_1)))))))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7))) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_9 : hol.term B => hol.forall (hol.arr A B) (g_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_9 g_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_4) b_9 (g_10 x_11))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1))))))))))) (a_6 : hol.term B => thm_421 B A a_6 d_1 s_2 t_3 a_4 x_5).

(; Theorem: |- ((= (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (\lambda x. ((Data.Bool./\ ((= x) ((select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) x))) ((Set.member x) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) ((Data.Pair., a) b))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) ((select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) ((Data.Pair., a) b)))) ((Set.member ((Data.Pair., a) b)) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))) ;)

(; dict ;)

def thm_423 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> x_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => (x_8 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_9 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_10 : hol.term B => hol.forall (hol.arr A B) (g_11 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_9 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_10 g_11)) (x_12 : hol.term A => hol.cond B (hol.eq A x_12 a_4) b_10 (g_11 x_12))))) x_8)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_8 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_9 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_10 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_9 f_10) (hol.and (hol.forall A (x_11 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_11 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_10 x_11) t_3))) (hol.forall A (x_11 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_11 s_2)) (hol.eq B (f_10 x_11) d_1)))))))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_9 : hol.term B => hol.forall (hol.arr A B) (g_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_9 g_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_4) b_9 (g_10 x_11))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1))))))))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => x_5 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr B hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool)) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => (x_8 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_9 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_10 : hol.term B => hol.forall (hol.arr A B) (g_11 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_9 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_10 g_11)) (x_12 : hol.term A => hol.cond B (hol.eq A x_12 a_4) b_10 (g_11 x_12))))) x_8)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_8 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_9 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_10 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_9 f_10) (hol.and (hol.forall A (x_11 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_11 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_10 x_11) t_3))) (hol.forall A (x_11 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_11 s_2)) (hol.eq B (f_10 x_11) d_1)))))))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7))) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_9 : hol.term B => hol.forall (hol.arr A B) (g_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_9 g_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_4) b_9 (g_10 x_11))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1))))))))))) (thm_418 B) (thm_422 A B d_1 s_2 t_3 a_4 x_5).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. (\lambda x. ((Data.Bool./\ ((= x) ((select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) x))) ((Set.member x) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) x))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (\lambda x. ((Data.Bool./\ ((= x) ((select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) x))) ((Set.member x) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) ((Data.Pair., a) b)))))) ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) ((select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) x))) ((Set.member x) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) ((select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) ((Data.Pair., a) b)))) ((Set.member ((Data.Pair., a) b)) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))))) ;)

(; dict ;)

def thm_424 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> x_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool) hol.bool) (x_6 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => (x_7 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_9 : hol.term B => hol.forall (hol.arr A B) (g_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_9 g_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_4) b_9 (g_10 x_11))))) x_7)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_7 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1)))))))))) x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => (x_8 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_9 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_10 : hol.term B => hol.forall (hol.arr A B) (g_11 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_9 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_10 g_11)) (x_12 : hol.term A => hol.cond B (hol.eq A x_12 a_4) b_10 (g_11 x_12))))) x_8)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_8 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_9 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_10 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_9 f_10) (hol.and (hol.forall A (x_11 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_11 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_10 x_11) t_3))) (hol.forall A (x_11 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_11 s_2)) (hol.eq B (f_10 x_11) d_1)))))))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool) hol.bool) (x_6 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_7 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_8 : hol.term B => hol.forall (hol.arr A B) (g_9 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_7 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_8 g_9)) (x_10 : hol.term A => hol.cond B (hol.eq A x_10 a_4) b_8 (g_9 x_10))))) x_6)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_6 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_7 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1))))))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_9 : hol.term B => hol.forall (hol.arr A B) (g_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_9 g_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_4) b_9 (g_10 x_11))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1)))))))))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => x_5 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool) hol.bool) (x_6 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => (x_7 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_9 : hol.term B => hol.forall (hol.arr A B) (g_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_9 g_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_4) b_9 (g_10 x_11))))) x_7)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_7 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1)))))))))) x_6))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool) hol.bool) (x_6 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_7 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_8 : hol.term B => hol.forall (hol.arr A B) (g_9 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_7 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_8 g_9)) (x_10 : hol.term A => hol.cond B (hol.eq A x_10 a_4) b_8 (g_9 x_10))))) x_6)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_6 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_7 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1)))))))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => (x_8 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_9 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_10 : hol.term B => hol.forall (hol.arr A B) (g_11 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_9 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_10 g_11)) (x_12 : hol.term A => hol.cond B (hol.eq A x_12 a_4) b_10 (g_11 x_12))))) x_8)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_8 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_9 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_10 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_9 f_10) (hol.and (hol.forall A (x_11 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_11 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_10 x_11) t_3))) (hol.forall A (x_11 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_11 s_2)) (hol.eq B (f_10 x_11) d_1)))))))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_9 : hol.term B => hol.forall (hol.arr A B) (g_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_9 g_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_4) b_9 (g_10 x_11))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1)))))))))))) (thm_417 A B d_1 s_2 t_3 a_4 x_5) (thm_423 A B d_1 s_2 t_3 a_4 x_5).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (p ((Data.Pair., a) b)))))) ((= (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (p ((Data.Pair., a) b)))))) ;)

(; dict ;)

def thm_425 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_2 : hol.term (Data_2EPair_2E_2A A B) => p_1 x_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (b_3 : hol.term B => p_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_2 : hol.term (Data_2EPair_2E_2A A B) => p_1 x_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (b_3 : hol.term B => p_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)))))) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_2 : hol.term (Data_2EPair_2E_2A A B) => p_1 x_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (b_3 : hol.term B => p_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3))))).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (p ((Data.Pair., a) b)))))) ((= (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (p ((Data.Pair., a) b)))))) ;)

(; dict ;)

def thm_426 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_2 : hol.term (Data_2EPair_2E_2A A B) => p_1 x_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (b_3 : hol.term B => p_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_2 : hol.term (Data_2EPair_2E_2A A B) => p_1 x_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (b_3 : hol.term B => p_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)))))) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_2 : hol.term (Data_2EPair_2E_2A A B) => p_1 x_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (b_3 : hol.term B => p_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_2 : hol.term (Data_2EPair_2E_2A A B) => p_1 x_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (b_3 : hol.term B => p_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_2 : hol.term (Data_2EPair_2E_2A A B) => p_1 x_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (b_3 : hol.term B => p_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3))))) (thm_425 B A p_1) (thm_425 B A p_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (p ((Data.Pair., a) b))))) ;)

(; dict ;)

def thm_427 : B : hol.type -> A : hol.type -> p_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_2 : hol.term (Data_2EPair_2E_2A A B) => p_1 x_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (b_3 : hol.term B => p_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3))))) :=
  B : hol.type => A : hol.type => p_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) hol.bool) => thm_26 B A p_1.

(; Theorem: |- ((= (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (p ((Data.Pair., a) b))))) ;)

(; dict ;)

def thm_428 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool) hol.bool) (x_2 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => p_1 x_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_2 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_3 : hol.term (hol.arr A B) => p_1 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_2 b_3))))) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool) => (B : hol.type => A : hol.type => p_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) hol.bool) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_2 : hol.term (Data_2EPair_2E_2A A B) => p_1 x_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (b_3 : hol.term B => p_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A A B) hol.bool) hol.bool) (x_2 : hol.term (Data_2EPair_2E_2A A B) => p_1 x_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (b_3 : hol.term B => p_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3))))) (thm_426 B A p_1) (thm_427 B A p_1)) (hol.arr A B) B p_1.

(; Theorem: |- ((= (Data.Bool.? \lambda x. (\lambda x. ((Data.Bool./\ ((= x) ((select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) x))) ((Set.member x) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) x))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (\lambda x. ((Data.Bool./\ ((= x) ((select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) x))) ((Set.member x) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) ((Data.Pair., a) b))))) ;)

(; dict ;)

def thm_429 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> x_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool) hol.bool) (x_6 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => (x_7 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_9 : hol.term B => hol.forall (hol.arr A B) (g_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_9 g_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_4) b_9 (g_10 x_11))))) x_7)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_7 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1)))))))))) x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => (x_8 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_9 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_10 : hol.term B => hol.forall (hol.arr A B) (g_11 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_9 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_10 g_11)) (x_12 : hol.term A => hol.cond B (hol.eq A x_12 a_4) b_10 (g_11 x_12))))) x_8)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_8 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_9 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_10 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_9 f_10) (hol.and (hol.forall A (x_11 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_11 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_10 x_11) t_3))) (hol.forall A (x_11 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_11 s_2)) (hol.eq B (f_10 x_11) d_1)))))))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => x_5 : hol.term (hol.arr A B) => (A : hol.type => B : hol.type => p_1 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool) => thm_428 A B p_1) A B (x_6 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_7 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_8 : hol.term B => hol.forall (hol.arr A B) (g_9 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_7 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_8 g_9)) (x_10 : hol.term A => hol.cond B (hol.eq A x_10 a_4) b_8 (g_9 x_10))))) x_6)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_6 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_7 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1)))))))))).

(; Theorem: |- ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((= x) ((select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) x))) ((Set.member x) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) ((select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) ((Data.Pair., a) b)))) ((Set.member ((Data.Pair., a) b)) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))) ;)

(; dict ;)

def thm_430 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> x_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool) hol.bool) (x_6 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_7 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_8 : hol.term B => hol.forall (hol.arr A B) (g_9 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_7 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_8 g_9)) (x_10 : hol.term A => hol.cond B (hol.eq A x_10 a_4) b_8 (g_9 x_10))))) x_6)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_6 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_7 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1))))))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_9 : hol.term B => hol.forall (hol.arr A B) (g_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_9 g_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_4) b_9 (g_10 x_11))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1))))))))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => x_5 : hol.term (hol.arr A B) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool) hol.bool) (x_6 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => (x_7 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_9 : hol.term B => hol.forall (hol.arr A B) (g_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_9 g_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_4) b_9 (g_10 x_11))))) x_7)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_7 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1)))))))))) x_6)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => (x_8 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_9 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_10 : hol.term B => hol.forall (hol.arr A B) (g_11 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_9 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_10 g_11)) (x_12 : hol.term A => hol.cond B (hol.eq A x_12 a_4) b_10 (g_11 x_12))))) x_8)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_8 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_9 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_10 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_9 f_10) (hol.and (hol.forall A (x_11 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_11 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_10 x_11) t_3))) (hol.forall A (x_11 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_11 s_2)) (hol.eq B (f_10 x_11) d_1)))))))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool) hol.bool) (x_6 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_7 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_8 : hol.term B => hol.forall (hol.arr A B) (g_9 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_7 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_8 g_9)) (x_10 : hol.term A => hol.cond B (hol.eq A x_10 a_4) b_8 (g_9 x_10))))) x_6)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_6 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_7 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1))))))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_9 : hol.term B => hol.forall (hol.arr A B) (g_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_9 g_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_4) b_9 (g_10 x_11))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1))))))))))))) (thm_424 A B d_1 s_2 t_3 a_4 x_5) (thm_429 A B d_1 s_2 t_3 a_4 x_5).

(; Theorem: |- ((= ((Set.member x) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) ((select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) ((Data.Pair., a) b)))) ((Set.member ((Data.Pair., a) b)) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))) ;)

(; dict ;)

def thm_431 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> x_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_7 : hol.term B => hol.forall (hol.arr A B) (g_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_7 g_8)) (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_4) b_7 (g_8 x_9)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (f_7 x_8) d_1)))))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_9 : hol.term B => hol.forall (hol.arr A B) (g_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_9 g_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_4) b_9 (g_10 x_11))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1))))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => x_5 : hol.term (hol.arr A B) => hol.TRANS hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_7 : hol.term B => hol.forall (hol.arr A B) (g_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_7 g_8)) (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_4) b_7 (g_8 x_9)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (f_7 x_8) d_1)))))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) hol.bool) hol.bool) (x_6 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_7 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_8 : hol.term B => hol.forall (hol.arr A B) (g_9 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_7 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_8 g_9)) (x_10 : hol.term A => hol.cond B (hol.eq A x_10 a_4) b_8 (g_9 x_10))))) x_6)) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) x_6 (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_7 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1))))))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_9 : hol.term B => hol.forall (hol.arr A B) (g_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_9 g_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_4) b_9 (g_10 x_11))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1)))))))))))) (thm_412 B A d_1 s_2 t_3 a_4 x_5) (thm_430 A B d_1 s_2 t_3 a_4 x_5).

(; Theorem: |- ((= (= x)) (= x)) ;)

(; dict ;)

def thm_432 : B : hol.type -> A : hol.type -> x_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (hol.eq (hol.arr A B) x_1) (hol.eq (hol.arr A B) x_1)) :=
  B : hol.type => A : hol.type => x_1 : hol.term (hol.arr A B) => hol.REFL (hol.arr (hol.arr A B) hol.bool) (hol.eq (hol.arr A B) x_1).

(; Theorem: |- ((= ((= ((= a) b)) ((= a) b))) ((= ((= a) b)) ((= a) b))) ;)

(; dict ;)

def thm_433 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1)) (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1)).

(; Theorem: |- ((= ((= ((= a) b)) ((= a) b))) ((= ((= a) b)) ((= a) b))) ;)

(; dict ;)

def thm_434 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1)) (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1)) (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1)) (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1)) (thm_433 A b_1 a_2) (thm_433 A b_1 a_2).

(; Theorem: |- ((= ((= =) =)) ((= =) =)) ;)

(; dict ;)

def thm_435 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A (hol.arr A hol.bool)) (hol.eq A) (hol.eq A)) (hol.eq (hol.arr A (hol.arr A hol.bool)) (hol.eq A) (hol.eq A))) :=
  A : hol.type => hol.REFL hol.bool (hol.eq (hol.arr A (hol.arr A hol.bool)) (hol.eq A) (hol.eq A)).

(; Theorem: |- ((= ((= =) =)) ((= =) =)) ;)

(; dict ;)

def thm_436 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A (hol.arr A hol.bool)) (hol.eq A) (hol.eq A)) (hol.eq (hol.arr A (hol.arr A hol.bool)) (hol.eq A) (hol.eq A))) :=
  A : hol.type => hol.TRANS hol.bool (hol.eq (hol.arr A (hol.arr A hol.bool)) (hol.eq A) (hol.eq A)) (hol.eq (hol.arr A (hol.arr A hol.bool)) (hol.eq A) (hol.eq A)) (hol.eq (hol.arr A (hol.arr A hol.bool)) (hol.eq A) (hol.eq A)) (thm_435 A) (thm_435 A).

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_437 : A : hol.type -> hol.proof (hol.eq (hol.arr A (hol.arr A hol.bool)) (hol.eq A) (hol.eq A)) :=
  A : hol.type => hol.REFL (hol.arr A (hol.arr A hol.bool)) (hol.eq A).

(; Theorem: |- ((= a) a) ;)

(; dict ;)

def thm_438 : A : hol.type -> a_1 : hol.term A -> hol.proof (hol.eq A a_1 a_1) :=
  A : hol.type => a_1 : hol.term A => hol.REFL A a_1.

(; Theorem: |- ((= (= a)) (= a)) ;)

(; dict ;)

def thm_439 : A : hol.type -> a_1 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (hol.eq A a_1) (hol.eq A a_1)) :=
  A : hol.type => a_1 : hol.term A => hol.APP_THM A (hol.arr A hol.bool) (hol.eq A) (hol.eq A) a_1 a_1 (hol.EQ_MP (hol.eq (hol.arr A (hol.arr A hol.bool)) (hol.eq A) (hol.eq A)) (hol.eq (hol.arr A (hol.arr A hol.bool)) (hol.eq A) (hol.eq A)) (thm_436 A) (thm_437 A)) (thm_438 A a_1).

(; Theorem: |- ((= b) b) ;)

(; dict ;)

def thm_440 : A : hol.type -> b_1 : hol.term A -> hol.proof (hol.eq A b_1 b_1) :=
  A : hol.type => b_1 : hol.term A => hol.REFL A b_1.

(; Theorem: |- ((= ((= a) b)) ((= a) b)) ;)

(; dict ;)

def thm_441 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1)) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => hol.APP_THM A hol.bool (hol.eq A a_2) (hol.eq A a_2) b_1 b_1 (thm_439 A a_2) (thm_440 A b_1).

(; Theorem: |- ((= (= ((= a) b))) (= ((= a) b))) ;)

(; dict ;)

def thm_442 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.eq A a_2 b_1)) (hol.eq hol.bool (hol.eq A a_2 b_1))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.eq A a_2 b_1) (hol.eq A a_2 b_1) thm_77 (thm_441 A b_1 a_2).

(; Theorem: |- ((= ((= a) b)) ((= a) b)) ;)

(; dict ;)

def thm_443 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1)) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => hol.REFL hol.bool (hol.eq A a_2 b_1).

(; Theorem: |- ((= ((= ((= a) b)) ((= a) b))) ((= ((= a) b)) ((= a) b))) ;)

(; dict ;)

def thm_444 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1)) (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.eq A a_2 b_1)) (hol.eq hol.bool (hol.eq A a_2 b_1)) (hol.eq A a_2 b_1) (hol.eq A a_2 b_1) (thm_442 A b_1 a_2) (thm_443 A b_1 a_2).

(; Theorem: |- ((= ((= ((= a) b)) ((= a) b))) Data.Bool.T) ;)

(; dict ;)

def thm_445 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1)) hol.true) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => (x_1 : hol.term hol.bool => thm_351 x_1) (hol.eq A a_2 b_1).

(; Theorem: |- ((= ((= ((= a) b)) ((= a) b))) Data.Bool.T) ;)

(; dict ;)

def thm_446 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1)) hol.true) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1)) (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1)) hol.true (thm_444 A b_1 a_2) (thm_445 A b_1 a_2).

(; Theorem: |- ((= \lambda b. ((= ((= a) b)) ((= a) b))) \lambda b. Data.Bool.T) ;)

(; dict ;)

def thm_447 : A : hol.type -> a_1 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2)) (b_2 : hol.term A => hol.true)) :=
  A : hol.type => a_1 : hol.term A => hol.ABS_THM A hol.bool (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2)) (b_2 : hol.term A => hol.true) (b_2 : hol.term A => thm_446 A b_2 a_1).

(; Theorem: |- ((= (Data.Bool.! \lambda b. ((= ((= a) b)) ((= a) b)))) (Data.Bool.! \lambda b. Data.Bool.T)) ;)

(; dict ;)

def thm_448 : A : hol.type -> a_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.forall A (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2))) (hol.forall A (b_2 : hol.term A => hol.true))) :=
  A : hol.type => a_1 : hol.term A => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2)) (b_2 : hol.term A => hol.true) (thm_95 A) (thm_447 A a_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda b. t)) t)) ((= (Data.Bool.! \lambda b. t)) t)) ;)

(; dict ;)

def thm_449 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (b_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (b_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (b_2 : hol.term A => t_1)) t_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. t)) t)) ((= (Data.Bool.! \lambda b. t)) t)) ;)

(; dict ;)

def thm_450 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (b_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (b_2 : hol.term A => t_1)) t_1) (thm_215 A t_1) (thm_449 A t_1).

(; Theorem: |- ((= (Data.Bool.! \lambda b. t)) t) ;)

(; dict ;)

def thm_451 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall A (b_2 : hol.term A => t_1)) t_1) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (b_2 : hol.term A => t_1)) t_1) (thm_450 A t_1) (thm_217 A t_1).

(; Theorem: |- ((= (Data.Bool.! \lambda b. Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_452 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall A (b_1 : hol.term A => hol.true)) hol.true) :=
  A : hol.type => (A : hol.type => t_1 : hol.term hol.bool => (A : hol.type => t_1 : hol.term hol.bool => thm_451 A t_1) A t_1) A hol.true.

(; Theorem: |- ((= (Data.Bool.! \lambda b. ((= ((= a) b)) ((= a) b)))) Data.Bool.T) ;)

(; dict ;)

def thm_453 : A : hol.type -> a_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.forall A (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2))) hol.true) :=
  A : hol.type => a_1 : hol.term A => hol.TRANS hol.bool (hol.forall A (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2))) (hol.forall A (b_2 : hol.term A => hol.true)) hol.true (thm_448 A a_1) (thm_452 A).

(; Theorem: |- ((= \lambda a. (Data.Bool.! \lambda b. ((= ((= a) b)) ((= a) b)))) \lambda a. Data.Bool.T) ;)

(; dict ;)

def thm_454 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (a_1 : hol.term A => hol.forall A (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2))) (a_1 : hol.term A => hol.true)) :=
  A : hol.type => hol.ABS_THM A hol.bool (a_1 : hol.term A => hol.forall A (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2))) (a_1 : hol.term A => hol.true) (a_1 : hol.term A => thm_453 A a_1).

(; Theorem: |- ((= (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= ((= a) b)) ((= a) b))))) (Data.Bool.! \lambda a. Data.Bool.T)) ;)

(; dict ;)

def thm_455 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall A (a_1 : hol.term A => hol.forall A (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2)))) (hol.forall A (a_1 : hol.term A => hol.true))) :=
  A : hol.type => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (a_1 : hol.term A => hol.forall A (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2))) (a_1 : hol.term A => hol.true) (thm_95 A) (thm_454 A).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda a. t)) t)) ((= (Data.Bool.! \lambda a. t)) t)) ;)

(; dict ;)

def thm_456 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (a_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (a_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (a_2 : hol.term A => t_1)) t_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. t)) t)) ((= (Data.Bool.! \lambda a. t)) t)) ;)

(; dict ;)

def thm_457 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (a_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (a_2 : hol.term A => t_1)) t_1) (thm_215 A t_1) (thm_456 A t_1).

(; Theorem: |- ((= (Data.Bool.! \lambda a. t)) t) ;)

(; dict ;)

def thm_458 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall A (a_2 : hol.term A => t_1)) t_1) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (a_2 : hol.term A => t_1)) t_1) (thm_457 A t_1) (thm_217 A t_1).

(; Theorem: |- ((= (Data.Bool.! \lambda a. Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_459 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall A (a_1 : hol.term A => hol.true)) hol.true) :=
  A : hol.type => (A : hol.type => t_1 : hol.term hol.bool => (A : hol.type => t_1 : hol.term hol.bool => thm_458 A t_1) A t_1) A hol.true.

(; Theorem: |- ((= (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= ((= a) b)) ((= a) b))))) Data.Bool.T) ;)

(; dict ;)

def thm_460 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall A (a_1 : hol.term A => hol.forall A (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2)))) hol.true) :=
  A : hol.type => hol.TRANS hol.bool (hol.forall A (a_1 : hol.term A => hol.forall A (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2)))) (hol.forall A (a_1 : hol.term A => hol.true)) hol.true (thm_455 A) (thm_459 A).

(; Theorem: |- ((= Data.Bool.T) (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= ((= a) b)) ((= a) b))))) ;)

(; dict ;)

def thm_461 : A : hol.type -> hol.proof (hol.eq hol.bool hol.true (hol.forall A (a_1 : hol.term A => hol.forall A (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2))))) :=
  A : hol.type => hol.SYM hol.bool (hol.forall A (a_1 : hol.term A => hol.forall A (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2)))) hol.true (thm_460 A).

(; Theorem: |- (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= ((= a) b)) ((= a) b)))) ;)

(; dict ;)

def thm_462 : A : hol.type -> hol.proof (hol.forall A (a_1 : hol.term A => hol.forall A (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2)))) :=
  A : hol.type => hol.EQ_MP hol.true (hol.forall A (a_1 : hol.term A => hol.forall A (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2)))) (thm_461 A) thm_10.

(; Theorem: |- (Data.Bool.! \lambda b. ((= ((= a) b)) ((= a) b))) ;)

(; dict ;)

def thm_463 : A : hol.type -> a_1 : hol.term A -> hol.proof (hol.forall A (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2))) :=
  A : hol.type => a_1 : hol.term A => thm_462 A a_1.

(; Theorem: |- ((= ((= a) b)) ((= a) b)) ;)

(; dict ;)

def thm_464 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A B) a_2 b_1) (hol.eq (hol.arr A B) a_2 b_1)) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_2 : hol.term (hol.arr A B) => (A : hol.type => b_1 : hol.term A => a_2 : hol.term A => hol.EQ_MP (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1)) (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1)) (thm_434 A b_1 a_2) (thm_463 A a_2 b_1)) (hol.arr A B) b_1 a_2.

(; Theorem: |- ((= ((= ((select \lambda _10598. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))) ((= ((select \lambda _10598. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))) ;)

(; dict ;)

def thm_465 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> a_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A B) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_5 : hol.term B => hol.forall (hol.arr A B) (g_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_5 g_6)) (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_3) b_5 (g_6 x_7))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) b_2 (g_1 x_4))) (hol.eq (hol.arr A B) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_5 : hol.term B => hol.forall (hol.arr A B) (g_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_5 g_6)) (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_3) b_5 (g_6 x_7))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) b_2 (g_1 x_4)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => a_3 : hol.term A => (B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_2 : hol.term (hol.arr A B) => thm_464 B A b_1 a_2) B A (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) b_2 (g_1 x_4)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_5 : hol.term B => hol.forall (hol.arr A B) (g_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_5 g_6)) (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_3) b_5 (g_6 x_7))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)).

(; Theorem: |- ((= (\lambda _10598. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))) (select \lambda _10598. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= ((select \lambda _10598. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) ;)

(; dict ;)

def thm_466 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> hol.proof (hol.eq hol.bool ((__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5))))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5))))))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (g_3 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_5 : hol.term B => hol.forall (hol.arr A B) (g_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_5 g_6)) (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_1) b_5 (g_6 x_7))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_3)) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_1) b_2 (g_3 x_4)))))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => hol.BETA_CONV (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) hol.bool (__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5))))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5)))))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) ;)

(; dict ;)

def thm_467 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1)))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) ;)

(; dict ;)

def thm_468 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1)))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) (thm_467 A p_1) (thm_467 A p_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= p) p')) ((Data.Bool.==> ((Data.Bool.==> p') ((= q) q'))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.==> p') q'))))) ((Data.Bool.==> ((= p) p')) ((Data.Bool.==> ((Data.Bool.==> p') ((= q) q'))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.==> p') q'))))) ;)

(; dict ;)

def thm_469 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_27_3 : hol.term hol.bool -> p_4 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool p_4 p_27_3) (hol.imp (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) (hol.eq hol.bool (hol.imp p_4 q_2) (hol.imp p_27_3 q_27_1)))) (hol.imp (hol.eq hol.bool p_4 p_27_3) (hol.imp (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) (hol.eq hol.bool (hol.imp p_4 q_2) (hol.imp p_27_3 q_27_1))))) :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => p_4 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.eq hol.bool p_4 p_27_3) (hol.imp (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) (hol.eq hol.bool (hol.imp p_4 q_2) (hol.imp p_27_3 q_27_1)))).

(; Theorem: |- ((= ((Data.Bool.==> ((= p) p')) ((Data.Bool.==> ((Data.Bool.==> p') ((= q) q'))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.==> p') q'))))) ((Data.Bool.==> ((= p) p')) ((Data.Bool.==> ((Data.Bool.==> p') ((= q) q'))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.==> p') q'))))) ;)

(; dict ;)

def thm_470 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_27_3 : hol.term hol.bool -> p_4 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool p_4 p_27_3) (hol.imp (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) (hol.eq hol.bool (hol.imp p_4 q_2) (hol.imp p_27_3 q_27_1)))) (hol.imp (hol.eq hol.bool p_4 p_27_3) (hol.imp (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) (hol.eq hol.bool (hol.imp p_4 q_2) (hol.imp p_27_3 q_27_1))))) :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => p_4 : hol.term hol.bool => hol.TRANS hol.bool (hol.imp (hol.eq hol.bool p_4 p_27_3) (hol.imp (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) (hol.eq hol.bool (hol.imp p_4 q_2) (hol.imp p_27_3 q_27_1)))) (hol.imp (hol.eq hol.bool p_4 p_27_3) (hol.imp (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) (hol.eq hol.bool (hol.imp p_4 q_2) (hol.imp p_27_3 q_27_1)))) (hol.imp (hol.eq hol.bool p_4 p_27_3) (hol.imp (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) (hol.eq hol.bool (hol.imp p_4 q_2) (hol.imp p_27_3 q_27_1)))) (thm_469 q_27_1 q_2 p_27_3 p_4) (thm_469 q_27_1 q_2 p_27_3 p_4).

(; Theorem: |- ((Data.Bool.==> p) p') ;)

(; dict ;)

def thm_471 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_2 p_27_1) -> hol.proof (hol.imp p_2 p_27_1) :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_2 p_27_1) => hyp_1.

(; Theorem: |- p' ;)

(; dict ;)

def thm_472 : p_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.imp p_1 p_27_2) -> hol.proof p_27_2 :=
  p_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.imp p_1 p_27_2) => thm_471 p_27_2 p_1 hyp_2 (thm_145 p_1 hyp_1).

(; Theorem: |- p' ;)

(; dict ;)

def thm_473 : p_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.imp p_1 p_27_2) -> hol.proof p_27_2 :=
  p_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.imp p_1 p_27_2) => hol.PROVE_HYP p_1 p_27_2 (thm_145 p_1 hyp_1) (hyp_3 : hol.proof p_1 => thm_472 p_1 p_27_2 hyp_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> p') q') ;)

(; dict ;)

def thm_474 : q_27_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_27_2 q_27_1) -> hol.proof (hol.imp p_27_2 q_27_1) :=
  q_27_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_27_2 q_27_1) => hyp_1.

(; Theorem: |- p' ;)

(; dict ;)

def thm_475 : p_27_1 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hol.proof p_27_1 :=
  p_27_1 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_1.

(; Theorem: |- q' ;)

(; dict ;)

def thm_476 : p_27_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 q_27_2) -> hol.proof q_27_2 :=
  p_27_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 q_27_2) => thm_474 q_27_2 p_27_1 hyp_2 (thm_475 p_27_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> q') q) ;)

(; dict ;)

def thm_477 : q_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp q_27_2 q_1) -> hol.proof (hol.imp q_27_2 q_1) :=
  q_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp q_27_2 q_1) => hyp_1.

(; Theorem: |- q' ;)

(; dict ;)

def thm_478 : q_27_1 : hol.term hol.bool -> hyp_1 : hol.proof q_27_1 -> hol.proof q_27_1 :=
  q_27_1 : hol.term hol.bool => hyp_1 : hol.proof q_27_1 => hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_479 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof q_27_1 -> hyp_2 : hol.proof (hol.imp q_27_1 q_2) -> hol.proof q_2 :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof q_27_1 => hyp_2 : hol.proof (hol.imp q_27_1 q_2) => thm_477 q_2 q_27_1 hyp_2 (thm_478 q_27_1 hyp_1).

(; Theorem: |- q ;)

(; dict ;)

def thm_480 : q_27_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_2 -> hyp_2 : hol.proof (hol.imp p_27_2 q_27_1) -> hyp_3 : hol.proof (hol.imp q_27_1 q_3) -> hol.proof q_3 :=
  q_27_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_2 => hyp_2 : hol.proof (hol.imp p_27_2 q_27_1) => hyp_3 : hol.proof (hol.imp q_27_1 q_3) => hol.PROVE_HYP q_27_1 q_3 (thm_476 p_27_2 q_27_1 hyp_1 hyp_2) (hyp_4 : hol.proof q_27_1 => thm_479 q_27_1 q_3 hyp_4 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> q) q')) q) ;)

(; dict ;)

def thm_481 : p_27_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 q_27_2) -> hyp_3 : hol.proof (hol.imp q_27_2 q_3) -> hol.proof (hol.imp (hol.imp q_3 q_27_2) q_3) :=
  p_27_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 q_27_2) => hyp_3 : hol.proof (hol.imp q_27_2 q_3) => hyp_4 : hol.proof (hol.imp q_3 q_27_2) => thm_480 q_27_2 p_27_1 q_3 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> q') q)) ((Data.Bool.==> ((Data.Bool.==> q) q')) q)) ;)

(; dict ;)

def thm_482 : p_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> q_27_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 q_27_3) -> hol.proof (hol.imp (hol.imp q_27_3 q_2) (hol.imp (hol.imp q_2 q_27_3) q_2)) :=
  p_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => q_27_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 q_27_3) => hyp_3 : hol.proof (hol.imp q_27_3 q_2) => thm_481 p_27_1 q_27_3 q_2 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((= p) q) ;)

(; dict ;)

def thm_483 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) -> hol.proof (hol.eq hol.bool p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_484 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.eq hol.bool p_1 q_2) -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.eq hol.bool p_1 q_2) => hol.EQ_MP p_1 q_2 (thm_483 q_2 p_1 hyp_2) (thm_145 p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> p) q) ;)

(; dict ;)

def thm_485 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) -> hol.proof (hol.imp p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => hyp_2 : hol.proof p_2 => thm_484 p_2 q_1 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= p) q)) ((Data.Bool.==> p) q)) ;)

(; dict ;)

def thm_486 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 q_1) (hol.imp p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => thm_485 q_1 p_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= q) q')) ((Data.Bool.==> q) q')) ;)

(; dict ;)

def thm_487 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool q_2 q_27_1) (hol.imp q_2 q_27_1)) :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_486 q_1 p_2) q_27_1 q_2.

(; Theorem: |- ((Data.Bool.==> p') ((= q) q')) ;)

(; dict ;)

def thm_488 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_27_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) -> hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) => hyp_1.

(; Theorem: |- ((= q) q') ;)

(; dict ;)

def thm_489 : p_27_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_3 q_27_2)) -> hol.proof (hol.eq hol.bool q_3 q_27_2) :=
  p_27_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_3 q_27_2)) => thm_488 q_27_2 q_3 p_27_1 hyp_2 (thm_475 p_27_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> q) q') ;)

(; dict ;)

def thm_490 : p_27_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_3 q_27_2)) -> hol.proof (hol.imp q_3 q_27_2) :=
  p_27_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_3 q_27_2)) => thm_487 q_27_2 q_3 (thm_489 p_27_1 q_27_2 q_3 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool.==> q') q)) ((Data.Bool./\ ((Data.Bool.==> q) q')) ((Data.Bool.==> q') q))) ;)

(; dict ;)

def thm_491 : q_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp q_1 q_27_2) -> hol.proof (hol.eq hol.bool (hol.imp q_27_2 q_1) (hol.and (hol.imp q_1 q_27_2) (hol.imp q_27_2 q_1))) :=
  q_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp q_1 q_27_2) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.imp q_1 q_27_2) (hol.imp q_27_2 q_1) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> q') q)) ((Data.Bool./\ ((Data.Bool.==> q) q')) ((Data.Bool.==> q') q))) ;)

(; dict ;)

def thm_492 : p_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> q_27_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_2 q_27_3)) -> hol.proof (hol.eq hol.bool (hol.imp q_27_3 q_2) (hol.and (hol.imp q_2 q_27_3) (hol.imp q_27_3 q_2))) :=
  p_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => q_27_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_2 q_27_3)) => hol.PROVE_HYP (hol.imp q_2 q_27_3) (hol.eq hol.bool (hol.imp q_27_3 q_2) (hol.and (hol.imp q_2 q_27_3) (hol.imp q_27_3 q_2))) (thm_490 p_27_1 q_27_3 q_2 hyp_1 hyp_2) (hyp_3 : hol.proof (hol.imp q_2 q_27_3) => thm_491 q_2 q_27_3 hyp_3).

(; Theorem: |- ((= q) p) ;)

(; dict ;)

def thm_493 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 q_2) -> hol.proof (hol.eq hol.bool q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 q_2) => hol.SYM hol.bool p_1 q_2 (thm_483 q_2 p_1 hyp_1).

(; Theorem: |- p ;)

(; dict ;)

def thm_494 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof q_1 -> hyp_2 : hol.proof (hol.eq hol.bool p_2 q_1) -> hol.proof p_2 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof q_1 => hyp_2 : hol.proof (hol.eq hol.bool p_2 q_1) => hol.EQ_MP q_1 p_2 (thm_493 p_2 q_1 hyp_2) (thm_146 q_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> q) p) ;)

(; dict ;)

def thm_495 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 q_2) -> hol.proof (hol.imp q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 q_2) => hyp_2 : hol.proof q_2 => thm_494 q_2 p_1 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= p) q)) ((Data.Bool.==> q) p)) ;)

(; dict ;)

def thm_496 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 q_1) (hol.imp q_1 p_2)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => thm_495 p_2 q_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= q) q')) ((Data.Bool.==> q') q)) ;)

(; dict ;)

def thm_497 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool q_2 q_27_1) (hol.imp q_27_1 q_2)) :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_496 q_1 p_2) q_27_1 q_2.

(; Theorem: |- ((Data.Bool.==> q') q) ;)

(; dict ;)

def thm_498 : p_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> q_27_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_2 q_27_3)) -> hol.proof (hol.imp q_27_3 q_2) :=
  p_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => q_27_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_2 q_27_3)) => thm_497 q_27_3 q_2 (thm_489 p_27_1 q_27_3 q_2 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((Data.Bool.==> q) q')) ((Data.Bool.==> q') q)) ;)

(; dict ;)

def thm_499 : p_27_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_3 q_27_2)) -> hol.proof (hol.and (hol.imp q_3 q_27_2) (hol.imp q_27_2 q_3)) :=
  p_27_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_3 q_27_2)) => hol.EQ_MP (hol.imp q_27_2 q_3) (hol.and (hol.imp q_3 q_27_2) (hol.imp q_27_2 q_3)) (thm_492 p_27_1 q_3 q_27_2 hyp_1 hyp_2) (thm_498 p_27_1 q_3 q_27_2 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> q') q) ;)

(; dict ;)

def thm_500 : q_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.imp q_1 q_27_2) (hol.imp q_27_2 q_1)) -> hol.proof (hol.imp q_27_2 q_1) :=
  q_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.imp q_1 q_27_2) (hol.imp q_27_2 q_1)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_151 p_1 q_2 hyp_1) (hol.imp q_1 q_27_2) (hol.imp q_27_2 q_1) hyp_1.

(; Theorem: |- ((Data.Bool.==> q') q) ;)

(; dict ;)

def thm_501 : p_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> q_27_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_2 q_27_3)) -> hol.proof (hol.imp q_27_3 q_2) :=
  p_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => q_27_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_2 q_27_3)) => hol.PROVE_HYP (hol.and (hol.imp q_2 q_27_3) (hol.imp q_27_3 q_2)) (hol.imp q_27_3 q_2) (thm_499 p_27_1 q_27_3 q_2 hyp_1 hyp_2) (hyp_3 : hol.proof (hol.and (hol.imp q_2 q_27_3) (hol.imp q_27_3 q_2)) => thm_500 q_2 q_27_3 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> q) q')) q) ;)

(; dict ;)

def thm_502 : p_27_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 q_27_2) -> hyp_3 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_3 q_27_2)) -> hol.proof (hol.imp (hol.imp q_3 q_27_2) q_3) :=
  p_27_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 q_27_2) => hyp_3 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_3 q_27_2)) => thm_482 p_27_1 q_3 q_27_2 hyp_1 hyp_2 (thm_501 p_27_1 q_3 q_27_2 hyp_1 hyp_3).

(; Theorem: |- q ;)

(; dict ;)

def thm_503 : q_27_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_2 -> hyp_2 : hol.proof (hol.imp p_27_2 q_27_1) -> hyp_3 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_3 q_27_1)) -> hol.proof q_3 :=
  q_27_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_2 => hyp_2 : hol.proof (hol.imp p_27_2 q_27_1) => hyp_3 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_3 q_27_1)) => thm_502 p_27_2 q_27_1 q_3 hyp_1 hyp_2 hyp_3 (thm_490 p_27_2 q_27_1 q_3 hyp_1 hyp_3).

(; Theorem: |- q ;)

(; dict ;)

def thm_504 : q_27_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> q_4 : hol.term hol.bool -> hyp_1 : hol.proof p_3 -> hyp_2 : hol.proof (hol.imp p_3 p_27_2) -> hyp_3 : hol.proof (hol.imp p_27_2 q_27_1) -> hyp_4 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_4 q_27_1)) -> hol.proof q_4 :=
  q_27_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => p_3 : hol.term hol.bool => q_4 : hol.term hol.bool => hyp_1 : hol.proof p_3 => hyp_2 : hol.proof (hol.imp p_3 p_27_2) => hyp_3 : hol.proof (hol.imp p_27_2 q_27_1) => hyp_4 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_4 q_27_1)) => hol.PROVE_HYP p_27_2 q_4 (thm_473 p_3 p_27_2 hyp_1 hyp_2) (hyp_5 : hol.proof p_27_2 => thm_503 q_27_1 p_27_2 q_4 hyp_5 hyp_3 hyp_4).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) p')) q) ;)

(; dict ;)

def thm_505 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_27_3 : hol.term hol.bool -> p_4 : hol.term hol.bool -> hyp_1 : hol.proof p_4 -> hyp_2 : hol.proof (hol.imp p_27_3 q_27_1) -> hyp_3 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) -> hol.proof (hol.imp (hol.imp p_4 p_27_3) q_2) :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => p_4 : hol.term hol.bool => hyp_1 : hol.proof p_4 => hyp_2 : hol.proof (hol.imp p_27_3 q_27_1) => hyp_3 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) => hyp_4 : hol.proof (hol.imp p_4 p_27_3) => thm_504 q_27_1 p_27_3 p_4 q_2 hyp_1 hyp_4 hyp_2 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p') p)) ((Data.Bool.==> ((Data.Bool.==> p) p')) q)) ;)

(; dict ;)

def thm_506 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> p_27_4 : hol.term hol.bool -> hyp_1 : hol.proof p_3 -> hyp_2 : hol.proof (hol.imp p_27_4 q_27_1) -> hyp_3 : hol.proof (hol.imp p_27_4 (hol.eq hol.bool q_2 q_27_1)) -> hol.proof (hol.imp (hol.imp p_27_4 p_3) (hol.imp (hol.imp p_3 p_27_4) q_2)) :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => p_27_4 : hol.term hol.bool => hyp_1 : hol.proof p_3 => hyp_2 : hol.proof (hol.imp p_27_4 q_27_1) => hyp_3 : hol.proof (hol.imp p_27_4 (hol.eq hol.bool q_2 q_27_1)) => hyp_4 : hol.proof (hol.imp p_27_4 p_3) => thm_505 q_27_1 q_2 p_27_4 p_3 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((= p) p')) ((Data.Bool.==> p) p')) ;)

(; dict ;)

def thm_507 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 p_27_1) (hol.imp p_2 p_27_1)) :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_486 q_1 p_2) p_27_1 p_2.

(; Theorem: |- ((= p) p') ;)

(; dict ;)

def thm_508 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 p_27_1) -> hol.proof (hol.eq hol.bool p_2 p_27_1) :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 p_27_1) => hyp_1.

(; Theorem: |- ((Data.Bool.==> p) p') ;)

(; dict ;)

def thm_509 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 p_27_1) -> hol.proof (hol.imp p_2 p_27_1) :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 p_27_1) => thm_507 p_27_1 p_2 (thm_508 p_27_1 p_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> p') p)) ((Data.Bool./\ ((Data.Bool.==> p) p')) ((Data.Bool.==> p') p))) ;)

(; dict ;)

def thm_510 : p_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_1 p_27_2) -> hol.proof (hol.eq hol.bool (hol.imp p_27_2 p_1) (hol.and (hol.imp p_1 p_27_2) (hol.imp p_27_2 p_1))) :=
  p_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_1 p_27_2) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.imp p_1 p_27_2) (hol.imp p_27_2 p_1) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> p') p)) ((Data.Bool./\ ((Data.Bool.==> p) p')) ((Data.Bool.==> p') p))) ;)

(; dict ;)

def thm_511 : p_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 p_27_2) -> hol.proof (hol.eq hol.bool (hol.imp p_27_2 p_1) (hol.and (hol.imp p_1 p_27_2) (hol.imp p_27_2 p_1))) :=
  p_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 p_27_2) => hol.PROVE_HYP (hol.imp p_1 p_27_2) (hol.eq hol.bool (hol.imp p_27_2 p_1) (hol.and (hol.imp p_1 p_27_2) (hol.imp p_27_2 p_1))) (thm_509 p_27_2 p_1 hyp_1) (hyp_2 : hol.proof (hol.imp p_1 p_27_2) => thm_510 p_1 p_27_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((= p) p')) ((Data.Bool.==> p') p)) ;)

(; dict ;)

def thm_512 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 p_27_1) (hol.imp p_27_1 p_2)) :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_496 q_1 p_2) p_27_1 p_2.

(; Theorem: |- ((Data.Bool.==> p') p) ;)

(; dict ;)

def thm_513 : p_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 p_27_2) -> hol.proof (hol.imp p_27_2 p_1) :=
  p_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 p_27_2) => thm_512 p_27_2 p_1 (thm_508 p_27_2 p_1 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((Data.Bool.==> p) p')) ((Data.Bool.==> p') p)) ;)

(; dict ;)

def thm_514 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 p_27_1) -> hol.proof (hol.and (hol.imp p_2 p_27_1) (hol.imp p_27_1 p_2)) :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 p_27_1) => hol.EQ_MP (hol.imp p_27_1 p_2) (hol.and (hol.imp p_2 p_27_1) (hol.imp p_27_1 p_2)) (thm_511 p_2 p_27_1 hyp_1) (thm_513 p_2 p_27_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> p') p) ;)

(; dict ;)

def thm_515 : p_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.imp p_1 p_27_2) (hol.imp p_27_2 p_1)) -> hol.proof (hol.imp p_27_2 p_1) :=
  p_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.imp p_1 p_27_2) (hol.imp p_27_2 p_1)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_151 p_1 q_2 hyp_1) (hol.imp p_1 p_27_2) (hol.imp p_27_2 p_1) hyp_1.

(; Theorem: |- ((Data.Bool.==> p') p) ;)

(; dict ;)

def thm_516 : p_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 p_27_2) -> hol.proof (hol.imp p_27_2 p_1) :=
  p_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 p_27_2) => hol.PROVE_HYP (hol.and (hol.imp p_1 p_27_2) (hol.imp p_27_2 p_1)) (hol.imp p_27_2 p_1) (thm_514 p_27_2 p_1 hyp_1) (hyp_2 : hol.proof (hol.and (hol.imp p_1 p_27_2) (hol.imp p_27_2 p_1)) => thm_515 p_1 p_27_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) p')) q) ;)

(; dict ;)

def thm_517 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_27_3 : hol.term hol.bool -> p_4 : hol.term hol.bool -> hyp_1 : hol.proof p_4 -> hyp_2 : hol.proof (hol.eq hol.bool p_4 p_27_3) -> hyp_3 : hol.proof (hol.imp p_27_3 q_27_1) -> hyp_4 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) -> hol.proof (hol.imp (hol.imp p_4 p_27_3) q_2) :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => p_4 : hol.term hol.bool => hyp_1 : hol.proof p_4 => hyp_2 : hol.proof (hol.eq hol.bool p_4 p_27_3) => hyp_3 : hol.proof (hol.imp p_27_3 q_27_1) => hyp_4 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) => thm_506 q_27_1 q_2 p_4 p_27_3 hyp_1 hyp_3 hyp_4 (thm_516 p_4 p_27_3 hyp_2).

(; Theorem: |- q ;)

(; dict ;)

def thm_518 : q_27_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> q_4 : hol.term hol.bool -> hyp_1 : hol.proof p_3 -> hyp_2 : hol.proof (hol.eq hol.bool p_3 p_27_2) -> hyp_3 : hol.proof (hol.imp p_27_2 q_27_1) -> hyp_4 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_4 q_27_1)) -> hol.proof q_4 :=
  q_27_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => p_3 : hol.term hol.bool => q_4 : hol.term hol.bool => hyp_1 : hol.proof p_3 => hyp_2 : hol.proof (hol.eq hol.bool p_3 p_27_2) => hyp_3 : hol.proof (hol.imp p_27_2 q_27_1) => hyp_4 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_4 q_27_1)) => thm_517 q_27_1 q_4 p_27_2 p_3 hyp_1 hyp_2 hyp_3 hyp_4 (thm_509 p_27_2 p_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> p) q) ;)

(; dict ;)

def thm_519 : q_27_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> p_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_4 p_27_2) -> hyp_2 : hol.proof (hol.imp p_27_2 q_27_1) -> hyp_3 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_3 q_27_1)) -> hol.proof (hol.imp p_4 q_3) :=
  q_27_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => p_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_4 p_27_2) => hyp_2 : hol.proof (hol.imp p_27_2 q_27_1) => hyp_3 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_3 q_27_1)) => hyp_4 : hol.proof p_4 => thm_518 q_27_1 p_27_2 p_4 q_3 hyp_4 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p') q')) ((Data.Bool.==> p) q)) ;)

(; dict ;)

def thm_520 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> q_27_3 : hol.term hol.bool -> p_27_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 p_27_4) -> hyp_2 : hol.proof (hol.imp p_27_4 (hol.eq hol.bool q_1 q_27_3)) -> hol.proof (hol.imp (hol.imp p_27_4 q_27_3) (hol.imp p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => q_27_3 : hol.term hol.bool => p_27_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 p_27_4) => hyp_2 : hol.proof (hol.imp p_27_4 (hol.eq hol.bool q_1 q_27_3)) => hyp_3 : hol.proof (hol.imp p_27_4 q_27_3) => thm_519 q_27_3 p_27_4 q_1 p_2 hyp_1 hyp_3 hyp_2.

(; Theorem: |- ((Data.Bool.==> p') p) ;)

(; dict ;)

def thm_521 : p_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_27_2 p_1) -> hol.proof (hol.imp p_27_2 p_1) :=
  p_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_27_2 p_1) => hyp_1.

(; Theorem: |- p ;)

(; dict ;)

def thm_522 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 p_2) -> hol.proof p_2 :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 p_2) => thm_521 p_2 p_27_1 hyp_2 (thm_475 p_27_1 hyp_1).

(; Theorem: |- p ;)

(; dict ;)

def thm_523 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 p_2) -> hol.proof p_2 :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 p_2) => hol.PROVE_HYP p_27_1 p_2 (thm_475 p_27_1 hyp_1) (hyp_3 : hol.proof p_27_1 => thm_522 p_27_1 p_2 hyp_3 hyp_2).

(; Theorem: |- p ;)

(; dict ;)

def thm_524 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof (hol.imp p_2 p_27_1) -> hyp_3 : hol.proof (hol.imp p_27_1 p_2) -> hol.proof p_2 :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof (hol.imp p_2 p_27_1) => hyp_3 : hol.proof (hol.imp p_27_1 p_2) => hol.PROVE_HYP p_27_1 p_2 (thm_472 p_2 p_27_1 hyp_1 hyp_2) (hyp_4 : hol.proof p_27_1 => thm_522 p_27_1 p_2 hyp_4 hyp_3).

(; Theorem: |- p ;)

(; dict ;)

def thm_525 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_2 p_27_1) -> hyp_3 : hol.proof (hol.imp p_27_1 p_2) -> hol.proof p_2 :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_2 p_27_1) => hyp_3 : hol.proof (hol.imp p_27_1 p_2) => hol.PROVE_HYP p_2 p_2 (thm_523 p_27_1 p_2 hyp_1 hyp_3) (hyp_4 : hol.proof p_2 => thm_524 p_27_1 p_2 hyp_4 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> p) q) ;)

(; dict ;)

def thm_526 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_2 q_1) -> hol.proof (hol.imp p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_2 q_1) => hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_527 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.imp p_1 q_2) -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.imp p_1 q_2) => thm_526 q_2 p_1 hyp_2 (thm_145 p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> q) q') ;)

(; dict ;)

def thm_528 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp q_2 q_27_1) -> hol.proof (hol.imp q_2 q_27_1) :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp q_2 q_27_1) => hyp_1.

(; Theorem: |- q' ;)

(; dict ;)

def thm_529 : q_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> hyp_1 : hol.proof q_1 -> hyp_2 : hol.proof (hol.imp q_1 q_27_2) -> hol.proof q_27_2 :=
  q_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => hyp_1 : hol.proof q_1 => hyp_2 : hol.proof (hol.imp q_1 q_27_2) => thm_528 q_27_2 q_1 hyp_2 (thm_146 q_1 hyp_1).

(; Theorem: |- q' ;)

(; dict ;)

def thm_530 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> q_27_3 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof (hol.imp p_2 q_1) -> hyp_3 : hol.proof (hol.imp q_1 q_27_3) -> hol.proof q_27_3 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => q_27_3 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof (hol.imp p_2 q_1) => hyp_3 : hol.proof (hol.imp q_1 q_27_3) => hol.PROVE_HYP q_1 q_27_3 (thm_527 p_2 q_1 hyp_1 hyp_2) (hyp_4 : hol.proof q_1 => thm_529 q_1 q_27_3 hyp_4 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> q) q')) q') ;)

(; dict ;)

def thm_531 : p_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.imp p_1 q_3) -> hol.proof (hol.imp (hol.imp q_3 q_27_2) q_27_2) :=
  p_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.imp p_1 q_3) => hyp_3 : hol.proof (hol.imp q_3 q_27_2) => thm_530 q_3 p_1 q_27_2 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> q') q)) ((Data.Bool.==> ((Data.Bool.==> q) q')) q')) ;)

(; dict ;)

def thm_532 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> q_27_3 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.imp p_1 q_2) -> hol.proof (hol.imp (hol.imp q_27_3 q_2) (hol.imp (hol.imp q_2 q_27_3) q_27_3)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => q_27_3 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.imp p_1 q_2) => hyp_3 : hol.proof (hol.imp q_27_3 q_2) => thm_531 p_1 q_27_3 q_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> q) q')) q') ;)

(; dict ;)

def thm_533 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> q_27_3 : hol.term hol.bool -> q_4 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof p_27_1 -> hyp_3 : hol.proof (hol.imp p_2 q_4) -> hyp_4 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_4 q_27_3)) -> hol.proof (hol.imp (hol.imp q_4 q_27_3) q_27_3) :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => q_27_3 : hol.term hol.bool => q_4 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof p_27_1 => hyp_3 : hol.proof (hol.imp p_2 q_4) => hyp_4 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_4 q_27_3)) => thm_532 p_2 q_4 q_27_3 hyp_1 hyp_3 (thm_498 p_27_1 q_4 q_27_3 hyp_2 hyp_4).

(; Theorem: |- q' ;)

(; dict ;)

def thm_534 : q_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> q_27_4 : hol.term hol.bool -> hyp_1 : hol.proof p_3 -> hyp_2 : hol.proof p_27_2 -> hyp_3 : hol.proof (hol.imp p_3 q_1) -> hyp_4 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_1 q_27_4)) -> hol.proof q_27_4 :=
  q_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => p_3 : hol.term hol.bool => q_27_4 : hol.term hol.bool => hyp_1 : hol.proof p_3 => hyp_2 : hol.proof p_27_2 => hyp_3 : hol.proof (hol.imp p_3 q_1) => hyp_4 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_1 q_27_4)) => thm_533 p_27_2 p_3 q_27_4 q_1 hyp_1 hyp_2 hyp_3 hyp_4 (thm_490 p_27_2 q_27_4 q_1 hyp_2 hyp_4).

(; Theorem: |- q' ;)

(; dict ;)

def thm_535 : q_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> q_27_4 : hol.term hol.bool -> hyp_1 : hol.proof p_3 -> hyp_2 : hol.proof p_27_2 -> hyp_3 : hol.proof (hol.imp p_3 q_1) -> hyp_4 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_1 q_27_4)) -> hol.proof q_27_4 :=
  q_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => p_3 : hol.term hol.bool => q_27_4 : hol.term hol.bool => hyp_1 : hol.proof p_3 => hyp_2 : hol.proof p_27_2 => hyp_3 : hol.proof (hol.imp p_3 q_1) => hyp_4 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_1 q_27_4)) => hol.PROVE_HYP p_27_2 q_27_4 (thm_475 p_27_2 hyp_2) (hyp_5 : hol.proof p_27_2 => thm_534 q_1 p_27_2 p_3 q_27_4 hyp_1 hyp_5 hyp_3 hyp_4).

(; Theorem: |- q' ;)

(; dict ;)

def thm_536 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> p_27_3 : hol.term hol.bool -> q_27_4 : hol.term hol.bool -> hyp_1 : hol.proof p_27_3 -> hyp_2 : hol.proof (hol.imp p_2 p_27_3) -> hyp_3 : hol.proof (hol.imp p_2 q_1) -> hyp_4 : hol.proof (hol.imp p_27_3 p_2) -> hyp_5 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_1 q_27_4)) -> hol.proof q_27_4 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => q_27_4 : hol.term hol.bool => hyp_1 : hol.proof p_27_3 => hyp_2 : hol.proof (hol.imp p_2 p_27_3) => hyp_3 : hol.proof (hol.imp p_2 q_1) => hyp_4 : hol.proof (hol.imp p_27_3 p_2) => hyp_5 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_1 q_27_4)) => hol.PROVE_HYP p_2 q_27_4 (thm_525 p_27_3 p_2 hyp_1 hyp_2 hyp_4) (hyp_6 : hol.proof p_2 => thm_535 q_1 p_27_3 p_2 q_27_4 hyp_6 hyp_1 hyp_3 hyp_5).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) p')) q') ;)

(; dict ;)

def thm_537 : q_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> p_27_3 : hol.term hol.bool -> p_4 : hol.term hol.bool -> hyp_1 : hol.proof p_27_3 -> hyp_2 : hol.proof (hol.imp p_4 q_1) -> hyp_3 : hol.proof (hol.imp p_27_3 p_4) -> hyp_4 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_1 q_27_2)) -> hol.proof (hol.imp (hol.imp p_4 p_27_3) q_27_2) :=
  q_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => p_4 : hol.term hol.bool => hyp_1 : hol.proof p_27_3 => hyp_2 : hol.proof (hol.imp p_4 q_1) => hyp_3 : hol.proof (hol.imp p_27_3 p_4) => hyp_4 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_1 q_27_2)) => hyp_5 : hol.proof (hol.imp p_4 p_27_3) => thm_536 q_1 p_4 p_27_3 q_27_2 hyp_1 hyp_5 hyp_2 hyp_3 hyp_4.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p') p)) ((Data.Bool.==> ((Data.Bool.==> p) p')) q')) ;)

(; dict ;)

def thm_538 : q_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> p_27_4 : hol.term hol.bool -> hyp_1 : hol.proof p_27_4 -> hyp_2 : hol.proof (hol.imp p_3 q_1) -> hyp_3 : hol.proof (hol.imp p_27_4 (hol.eq hol.bool q_1 q_27_2)) -> hol.proof (hol.imp (hol.imp p_27_4 p_3) (hol.imp (hol.imp p_3 p_27_4) q_27_2)) :=
  q_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => p_3 : hol.term hol.bool => p_27_4 : hol.term hol.bool => hyp_1 : hol.proof p_27_4 => hyp_2 : hol.proof (hol.imp p_3 q_1) => hyp_3 : hol.proof (hol.imp p_27_4 (hol.eq hol.bool q_1 q_27_2)) => hyp_4 : hol.proof (hol.imp p_27_4 p_3) => thm_537 q_1 q_27_2 p_27_4 p_3 hyp_1 hyp_2 hyp_4 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) p')) q') ;)

(; dict ;)

def thm_539 : q_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> p_27_3 : hol.term hol.bool -> p_4 : hol.term hol.bool -> hyp_1 : hol.proof p_27_3 -> hyp_2 : hol.proof (hol.eq hol.bool p_4 p_27_3) -> hyp_3 : hol.proof (hol.imp p_4 q_1) -> hyp_4 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_1 q_27_2)) -> hol.proof (hol.imp (hol.imp p_4 p_27_3) q_27_2) :=
  q_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => p_4 : hol.term hol.bool => hyp_1 : hol.proof p_27_3 => hyp_2 : hol.proof (hol.eq hol.bool p_4 p_27_3) => hyp_3 : hol.proof (hol.imp p_4 q_1) => hyp_4 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_1 q_27_2)) => thm_538 q_1 q_27_2 p_4 p_27_3 hyp_1 hyp_3 hyp_4 (thm_513 p_4 p_27_3 hyp_2).

(; Theorem: |- q' ;)

(; dict ;)

def thm_540 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> p_27_3 : hol.term hol.bool -> q_27_4 : hol.term hol.bool -> hyp_1 : hol.proof p_27_3 -> hyp_2 : hol.proof (hol.eq hol.bool p_2 p_27_3) -> hyp_3 : hol.proof (hol.imp p_2 q_1) -> hyp_4 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_1 q_27_4)) -> hol.proof q_27_4 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => q_27_4 : hol.term hol.bool => hyp_1 : hol.proof p_27_3 => hyp_2 : hol.proof (hol.eq hol.bool p_2 p_27_3) => hyp_3 : hol.proof (hol.imp p_2 q_1) => hyp_4 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_1 q_27_4)) => thm_539 q_1 q_27_4 p_27_3 p_2 hyp_1 hyp_2 hyp_3 hyp_4 (thm_509 p_27_3 p_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> p') q') ;)

(; dict ;)

def thm_541 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> q_27_3 : hol.term hol.bool -> p_27_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 p_27_4) -> hyp_2 : hol.proof (hol.imp p_2 q_1) -> hyp_3 : hol.proof (hol.imp p_27_4 (hol.eq hol.bool q_1 q_27_3)) -> hol.proof (hol.imp p_27_4 q_27_3) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => q_27_3 : hol.term hol.bool => p_27_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 p_27_4) => hyp_2 : hol.proof (hol.imp p_2 q_1) => hyp_3 : hol.proof (hol.imp p_27_4 (hol.eq hol.bool q_1 q_27_3)) => hyp_4 : hol.proof p_27_4 => thm_540 q_1 p_2 p_27_4 q_27_3 hyp_4 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) q)) ((Data.Bool.==> p') q')) ;)

(; dict ;)

def thm_542 : q_27_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> p_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_4 p_27_2) -> hyp_2 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_3 q_27_1)) -> hol.proof (hol.imp (hol.imp p_4 q_3) (hol.imp p_27_2 q_27_1)) :=
  q_27_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => p_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_4 p_27_2) => hyp_2 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_3 q_27_1)) => hyp_3 : hol.proof (hol.imp p_4 q_3) => thm_541 q_3 p_4 q_27_1 p_27_2 hyp_1 hyp_3 hyp_2.

(; Theorem: |- ((= ((Data.Bool.==> p) q)) ((Data.Bool.==> p') q')) ;)

(; dict ;)

def thm_543 : q_27_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> p_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_4 p_27_2) -> hyp_2 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_3 q_27_1)) -> hol.proof (hol.eq hol.bool (hol.imp p_4 q_3) (hol.imp p_27_2 q_27_1)) :=
  q_27_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => p_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_4 p_27_2) => hyp_2 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_3 q_27_1)) => hol.PROP_EXT (hol.imp p_4 q_3) (hol.imp p_27_2 q_27_1) (hyp_3 : hol.proof (hol.imp p_27_2 q_27_1) => thm_520 q_3 p_4 q_27_1 p_27_2 hyp_1 hyp_2 (thm_474 q_27_1 p_27_2 hyp_3)) (hyp_3 : hol.proof (hol.imp p_4 q_3) => thm_542 q_27_1 p_27_2 q_3 p_4 hyp_1 hyp_2 (thm_526 q_3 p_4 hyp_3)).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p') ((= q) q'))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.==> p') q'))) ;)

(; dict ;)

def thm_544 : p_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> p_27_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 p_27_4) -> hol.proof (hol.imp (hol.imp p_27_4 (hol.eq hol.bool q_3 q_27_2)) (hol.eq hol.bool (hol.imp p_1 q_3) (hol.imp p_27_4 q_27_2))) :=
  p_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => p_27_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 p_27_4) => hyp_2 : hol.proof (hol.imp p_27_4 (hol.eq hol.bool q_3 q_27_2)) => thm_543 q_27_2 p_27_4 q_3 p_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> ((= p) p')) ((Data.Bool.==> ((Data.Bool.==> p') ((= q) q'))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.==> p') q')))) ;)

(; dict ;)

def thm_545 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_27_3 : hol.term hol.bool -> p_4 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_4 p_27_3) (hol.imp (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) (hol.eq hol.bool (hol.imp p_4 q_2) (hol.imp p_27_3 q_27_1)))) :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => p_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_4 p_27_3) => thm_544 p_4 q_27_1 q_2 p_27_3 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda q'. ((Data.Bool.==> ((= p) p')) ((Data.Bool.==> ((Data.Bool.==> p') ((= q) q'))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.==> p') q'))))) ;)

(; dict ;)

def thm_546 : q_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (q_27_4 : hol.term hol.bool => hol.imp (hol.eq hol.bool p_3 p_27_2) (hol.imp (hol.imp p_27_2 (hol.eq hol.bool q_1 q_27_4)) (hol.eq hol.bool (hol.imp p_3 q_1) (hol.imp p_27_2 q_27_4))))) :=
  q_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => p_3 : hol.term hol.bool => q_27_4 : hol.term hol.bool => hol.EQ_MP (hol.imp (hol.eq hol.bool p_3 p_27_2) (hol.imp (hol.imp p_27_2 (hol.eq hol.bool q_1 q_27_4)) (hol.eq hol.bool (hol.imp p_3 q_1) (hol.imp p_27_2 q_27_4)))) (hol.imp (hol.eq hol.bool p_3 p_27_2) (hol.imp (hol.imp p_27_2 (hol.eq hol.bool q_1 q_27_4)) (hol.eq hol.bool (hol.imp p_3 q_1) (hol.imp p_27_2 q_27_4)))) (thm_470 q_27_4 q_1 p_27_2 p_3) (thm_545 q_27_4 q_1 p_27_2 p_3).

(; Theorem: |- (Data.Bool.! \lambda p'. (Data.Bool.! \lambda q'. ((Data.Bool.==> ((= p) p')) ((Data.Bool.==> ((Data.Bool.==> p') ((= q) q'))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.==> p') q')))))) ;)

(; dict ;)

def thm_547 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (p_27_3 : hol.term hol.bool => hol.forall hol.bool (q_27_4 : hol.term hol.bool => hol.imp (hol.eq hol.bool p_2 p_27_3) (hol.imp (hol.imp p_27_3 (hol.eq hol.bool q_1 q_27_4)) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.imp p_27_3 q_27_4)))))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => thm_546 q_1 p_27_3 p_2.

(; Theorem: |- (Data.Bool.! \lambda p'. (Data.Bool.! \lambda q'. ((Data.Bool.==> ((= (Data.Bool.? p)) p')) ((Data.Bool.==> ((Data.Bool.==> p') ((= (p (select p))) q'))) ((= ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) ((Data.Bool.==> p') q')))))) ;)

(; dict ;)

def thm_548 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.forall hol.bool (p_27_2 : hol.term hol.bool => hol.forall hol.bool (q_27_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) p_27_2) (hol.imp (hol.imp p_27_2 (hol.eq hol.bool (p_1 (hol.select A p_1)) q_27_3)) (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) (hol.imp p_27_2 q_27_3)))))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_547 q_1 p_2) (p_1 (hol.select A p_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1).

(; Theorem: |- (Data.Bool.! \lambda q'. ((Data.Bool.==> ((= (Data.Bool.? p)) p')) ((Data.Bool.==> ((Data.Bool.==> p') ((= (p (select p))) q'))) ((= ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) ((Data.Bool.==> p') q'))))) ;)

(; dict ;)

def thm_549 : A : hol.type -> p_27_1 : hol.term hol.bool -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.forall hol.bool (q_27_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) p_27_1) (hol.imp (hol.imp p_27_1 (hol.eq hol.bool (p_2 (hol.select A p_2)) q_27_3)) (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (p_2 (hol.select A p_2))) (hol.imp p_27_1 q_27_3))))) :=
  A : hol.type => p_27_1 : hol.term hol.bool => p_2 : hol.term (hol.arr A hol.bool) => thm_548 A p_2 p_27_1.

(; Theorem: |- ((Data.Bool.==> ((= (Data.Bool.? p)) p')) ((Data.Bool.==> ((Data.Bool.==> p') ((= (p (select p))) q'))) ((= ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) ((Data.Bool.==> p') q')))) ;)

(; dict ;)

def thm_550 : A : hol.type -> q_27_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> p_3 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_3) p_27_2) (hol.imp (hol.imp p_27_2 (hol.eq hol.bool (p_3 (hol.select A p_3)) q_27_1)) (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_3) (p_3 (hol.select A p_3))) (hol.imp p_27_2 q_27_1)))) :=
  A : hol.type => q_27_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => p_3 : hol.term (hol.arr A hol.bool) => thm_549 A p_27_2 p_3 q_27_1.

(; Theorem: |- ((Data.Bool.==> ((= (Data.Bool.? p)) (Data.Bool.? p))) ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.? p)) ((= (p (select p))) q'))) ((= ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) ((Data.Bool.==> (Data.Bool.? p)) q')))) ;)

(; dict ;)

def thm_551 : A : hol.type -> q_27_1 : hol.term hol.bool -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2)) (hol.imp (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.eq hol.bool (p_2 (hol.select A p_2)) q_27_1)) (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (p_2 (hol.select A p_2))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) q_27_1)))) :=
  A : hol.type => q_27_1 : hol.term hol.bool => p_2 : hol.term (hol.arr A hol.bool) => (A : hol.type => q_27_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => p_3 : hol.term (hol.arr A hol.bool) => thm_550 A q_27_1 p_27_2 p_3) A q_27_1 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) p_2.

(; Theorem: |- ((= (Data.Bool.? p)) (Data.Bool.? p)) ;)

(; dict ;)

def thm_552 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.? p)) ((= (p (select p))) q'))) ((= ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) ((Data.Bool.==> (Data.Bool.? p)) q'))) ;)

(; dict ;)

def thm_553 : A : hol.type -> q_27_1 : hol.term hol.bool -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.eq hol.bool (p_2 (hol.select A p_2)) q_27_1)) (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (p_2 (hol.select A p_2))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) q_27_1))) :=
  A : hol.type => q_27_1 : hol.term hol.bool => p_2 : hol.term (hol.arr A hol.bool) => thm_551 A q_27_1 p_2 (thm_552 A p_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.? p)) ((= (p (select p))) Data.Bool.T))) ((= ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) ((Data.Bool.==> (Data.Bool.? p)) Data.Bool.T))) ;)

(; dict ;)

def thm_554 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.eq hol.bool (p_1 (hol.select A p_1)) hol.true)) (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => (A : hol.type => q_27_1 : hol.term hol.bool => p_2 : hol.term (hol.arr A hol.bool) => thm_553 A q_27_1 p_2) A hol.true p_1.

(; Theorem: |- ((= p) p) ;)

(; dict ;)

def thm_555 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) p_1 p_1) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr A hol.bool) p_1.

(; Theorem: |- ((= ((= (select p)) (select p))) ((= (select p)) (select p))) ;)

(; dict ;)

def thm_556 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq A (hol.select A p_1) (hol.select A p_1)) (hol.eq A (hol.select A p_1) (hol.select A p_1))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq A (hol.select A p_1) (hol.select A p_1)).

(; Theorem: |- ((= ((= (select p)) (select p))) ((= (select p)) (select p))) ;)

(; dict ;)

def thm_557 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq A (hol.select A p_1) (hol.select A p_1)) (hol.eq A (hol.select A p_1) (hol.select A p_1))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq A (hol.select A p_1) (hol.select A p_1)) (hol.eq A (hol.select A p_1) (hol.select A p_1)) (hol.eq A (hol.select A p_1) (hol.select A p_1)) (thm_556 A p_1) (thm_556 A p_1).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_558 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) hol.bool) (hol.forall (hol.arr A hol.bool)) (hol.forall (hol.arr A hol.bool))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr (hol.arr A hol.bool) hol.bool) hol.bool) (hol.forall (hol.arr A hol.bool)).

(; Theorem: |- ((= ((= select) select)) ((= select) select)) ;)

(; dict ;)

def thm_559 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr (hol.arr A hol.bool) A) (hol.select A) (hol.select A)) (hol.eq (hol.arr (hol.arr A hol.bool) A) (hol.select A) (hol.select A))) :=
  A : hol.type => hol.REFL hol.bool (hol.eq (hol.arr (hol.arr A hol.bool) A) (hol.select A) (hol.select A)).

(; Theorem: |- ((= ((= select) select)) ((= select) select)) ;)

(; dict ;)

def thm_560 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr (hol.arr A hol.bool) A) (hol.select A) (hol.select A)) (hol.eq (hol.arr (hol.arr A hol.bool) A) (hol.select A) (hol.select A))) :=
  A : hol.type => hol.TRANS hol.bool (hol.eq (hol.arr (hol.arr A hol.bool) A) (hol.select A) (hol.select A)) (hol.eq (hol.arr (hol.arr A hol.bool) A) (hol.select A) (hol.select A)) (hol.eq (hol.arr (hol.arr A hol.bool) A) (hol.select A) (hol.select A)) (thm_559 A) (thm_559 A).

(; Theorem: |- ((= select) select) ;)

(; dict ;)

def thm_561 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) A) (hol.select A) (hol.select A)) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A hol.bool) A) (hol.select A).

(; Theorem: |- ((= (select p)) (select p)) ;)

(; dict ;)

def thm_562 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq A (hol.select A p_1) (hol.select A p_1)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) A (hol.select A) (hol.select A) p_1 p_1 (hol.EQ_MP (hol.eq (hol.arr (hol.arr A hol.bool) A) (hol.select A) (hol.select A)) (hol.eq (hol.arr (hol.arr A hol.bool) A) (hol.select A) (hol.select A)) (thm_560 A) (thm_561 A)) (thm_555 A p_1).

(; Theorem: |- ((= (= (select p))) (= (select p))) ;)

(; dict ;)

def thm_563 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (hol.eq A (hol.select A p_1)) (hol.eq A (hol.select A p_1))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM A (hol.arr A hol.bool) (hol.eq A) (hol.eq A) (hol.select A p_1) (hol.select A p_1) (thm_437 A) (thm_562 A p_1).

(; Theorem: |- ((= (select p)) (select p)) ;)

(; dict ;)

def thm_564 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq A (hol.select A p_1) (hol.select A p_1)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.REFL A (hol.select A p_1).

(; Theorem: |- ((= ((= (select p)) (select p))) ((= (select p)) (select p))) ;)

(; dict ;)

def thm_565 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq A (hol.select A p_1) (hol.select A p_1)) (hol.eq A (hol.select A p_1) (hol.select A p_1))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM A hol.bool (hol.eq A (hol.select A p_1)) (hol.eq A (hol.select A p_1)) (hol.select A p_1) (hol.select A p_1) (thm_563 A p_1) (thm_564 A p_1).

(; Theorem: |- ((= ((= (select p)) (select p))) Data.Bool.T) ;)

(; dict ;)

def thm_566 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq A (hol.select A p_1) (hol.select A p_1)) hol.true) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => (A : hol.type => x_1 : hol.term A => thm_349 A x_1) A (hol.select A p_1).

(; Theorem: |- ((= ((= (select p)) (select p))) Data.Bool.T) ;)

(; dict ;)

def thm_567 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq A (hol.select A p_1) (hol.select A p_1)) hol.true) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq A (hol.select A p_1) (hol.select A p_1)) (hol.eq A (hol.select A p_1) (hol.select A p_1)) hol.true (thm_565 A p_1) (thm_566 A p_1).

(; Theorem: |- ((= \lambda p. ((= (select p)) (select p))) \lambda p. Data.Bool.T) ;)

(; dict ;)

def thm_568 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.eq A (hol.select A p_1) (hol.select A p_1)) (p_1 : hol.term (hol.arr A hol.bool) => hol.true)) :=
  A : hol.type => hol.ABS_THM (hol.arr A hol.bool) hol.bool (p_1 : hol.term (hol.arr A hol.bool) => hol.eq A (hol.select A p_1) (hol.select A p_1)) (p_1 : hol.term (hol.arr A hol.bool) => hol.true) (p_1 : hol.term (hol.arr A hol.bool) => thm_567 A p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda p. ((= (select p)) (select p)))) (Data.Bool.! \lambda p. Data.Bool.T)) ;)

(; dict ;)

def thm_569 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.eq A (hol.select A p_1) (hol.select A p_1))) (hol.forall (hol.arr A hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.true))) :=
  A : hol.type => hol.APP_THM (hol.arr (hol.arr A hol.bool) hol.bool) hol.bool (hol.forall (hol.arr A hol.bool)) (hol.forall (hol.arr A hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.eq A (hol.select A p_1) (hol.select A p_1)) (p_1 : hol.term (hol.arr A hol.bool) => hol.true) (thm_558 A) (thm_568 A).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda p. t)) t)) ((= (Data.Bool.! \lambda p. t)) t)) ;)

(; dict ;)

def thm_570 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (p_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (p_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (p_2 : hol.term A => t_1)) t_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. t)) t)) ((= (Data.Bool.! \lambda p. t)) t)) ;)

(; dict ;)

def thm_571 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (p_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (p_2 : hol.term A => t_1)) t_1) (thm_215 A t_1) (thm_570 A t_1).

(; Theorem: |- ((= (Data.Bool.! \lambda p. t)) t) ;)

(; dict ;)

def thm_572 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall A (p_2 : hol.term A => t_1)) t_1) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (p_2 : hol.term A => t_1)) t_1) (thm_571 A t_1) (thm_217 A t_1).

(; Theorem: |- ((= (Data.Bool.! \lambda p. t)) t) ;)

(; dict ;)

def thm_573 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A hol.bool) (p_2 : hol.term (hol.arr A hol.bool) => t_1)) t_1) :=
  A : hol.type => t_1 : hol.term hol.bool => (A : hol.type => t_1 : hol.term hol.bool => thm_572 A t_1) (hol.arr A hol.bool) t_1.

(; Theorem: |- ((= (Data.Bool.! \lambda p. Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_574 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.true)) hol.true) :=
  A : hol.type => (A : hol.type => t_1 : hol.term hol.bool => thm_573 A t_1) A hol.true.

(; Theorem: |- ((= (Data.Bool.! \lambda p. ((= (select p)) (select p)))) Data.Bool.T) ;)

(; dict ;)

def thm_575 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.eq A (hol.select A p_1) (hol.select A p_1))) hol.true) :=
  A : hol.type => hol.TRANS hol.bool (hol.forall (hol.arr A hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.eq A (hol.select A p_1) (hol.select A p_1))) (hol.forall (hol.arr A hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.true)) hol.true (thm_569 A) (thm_574 A).

(; Theorem: |- ((= Data.Bool.T) (Data.Bool.! \lambda p. ((= (select p)) (select p)))) ;)

(; dict ;)

def thm_576 : A : hol.type -> hol.proof (hol.eq hol.bool hol.true (hol.forall (hol.arr A hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.eq A (hol.select A p_1) (hol.select A p_1)))) :=
  A : hol.type => hol.SYM hol.bool (hol.forall (hol.arr A hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.eq A (hol.select A p_1) (hol.select A p_1))) hol.true (thm_575 A).

(; Theorem: |- (Data.Bool.! \lambda p. ((= (select p)) (select p))) ;)

(; dict ;)

def thm_577 : A : hol.type -> hol.proof (hol.forall (hol.arr A hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.eq A (hol.select A p_1) (hol.select A p_1))) :=
  A : hol.type => hol.EQ_MP hol.true (hol.forall (hol.arr A hol.bool) (p_1 : hol.term (hol.arr A hol.bool) => hol.eq A (hol.select A p_1) (hol.select A p_1))) (thm_576 A) thm_10.

(; Theorem: |- ((= (p (select p))) (p (select p))) ;)

(; dict ;)

def thm_578 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (p_1 (hol.select A p_1)) (p_1 (hol.select A p_1))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM A hol.bool p_1 p_1 (hol.select A p_1) (hol.select A p_1) (thm_555 A p_1) ((A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq A (hol.select A p_1) (hol.select A p_1)) (hol.eq A (hol.select A p_1) (hol.select A p_1)) (thm_557 A p_1) (thm_577 A p_1)) A p_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) ((= (P (select P))) Data.Bool.T))) ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) ((= (P (select P))) Data.Bool.T))) ;)

(; dict ;)

def thm_579 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) ((= (P (select P))) Data.Bool.T))) ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) ((= (P (select P))) Data.Bool.T))) ;)

(; dict ;)

def thm_580 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) (thm_579 A P_1) (thm_579 A P_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) Q))) ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) Q))) ;)

(; dict ;)

def thm_581 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1)) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1))) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1)).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) Q))) ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) Q))) ;)

(; dict ;)

def thm_582 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1)) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1))) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1)) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1)) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1)) (thm_581 A Q_1 P_2) (thm_581 A Q_1 P_2).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> (P x)) Q)) \lambda x. ((Data.Bool.==> (P x)) Q)) ;)

(; dict ;)

def thm_583 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1) (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr A hol.bool) (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> (P x)) Q)) \lambda x. ((Data.Bool.==> (P x)) Q)) ;)

(; dict ;)

def thm_584 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1) (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hol.TRANS (hol.arr A hol.bool) (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1) (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1) (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1) (thm_583 A Q_1 P_2) (thm_583 A Q_1 P_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ;)

(; dict ;)

def thm_585 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1))) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1) (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1) (thm_95 A) (thm_584 A Q_1 P_2).

(; Theorem: |- ((= (\lambda x. (P x) x)) (P x)) ;)

(; dict ;)

def thm_586 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((x_3 : hol.term A => P_2 x_3) x_1) (P_2 x_1)) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.BETA_CONV A hol.bool (x_3 : hol.term A => P_2 x_3) x_1.

(; Theorem: |- ((= (P x)) (\lambda x. (P x) x)) ;)

(; dict ;)

def thm_587 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (P_2 x_1) ((x_3 : hol.term A => P_2 x_3) x_1)) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool ((x_3 : hol.term A => P_2 x_3) x_1) (P_2 x_1) (thm_586 A x_1 P_2).

(; Theorem: |- (P x) ;)

(; dict ;)

def thm_588 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (P_2 x_1) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => hyp_1.

(; Theorem: |- (\lambda x. (P x) x) ;)

(; dict ;)

def thm_589 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof ((x_3 : hol.term A => P_2 x_3) x_1) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => hol.EQ_MP (P_2 x_1) ((x_3 : hol.term A => P_2 x_3) x_1) (thm_587 A x_1 P_2) ((A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_588 A x_1 P_2 hyp_1) A x_1 P_2 hyp_1).

(; Theorem: |- ((= (= (Data.Bool.? P))) (= (Data.Bool.? P))) ;)

(; dict ;)

def thm_590 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)).

(; Theorem: |- ((= (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_591 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.BETA_CONV (hol.arr A hol.bool) hol.bool (p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1.

(; Theorem: |- ((= ((= (Data.Bool.? P)) (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P))) ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ;)

(; dict ;)

def thm_592 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (thm_590 A P_1) (thm_591 A P_1).

(; Theorem: |- ((= P) P) ;)

(; dict ;)

def thm_593 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) P_1 P_1) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr A hol.bool) P_1.

(; Theorem: |- ((= (Data.Bool.? P)) (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P)) ;)

(; dict ;)

def thm_594 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1 P_1 (thm_27 A) (thm_593 A P_1).

(; Theorem: |- ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_595 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) (thm_592 A P_1) (thm_594 A P_1).

(; Theorem: |- ((= (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) (Data.Bool.? P)) ;)

(; dict ;)

def thm_596 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (thm_595 A P_1).

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q)) ;)

(; dict ;)

def thm_597 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => hyp_1.

(; Theorem: |- ((Data.Bool.==> (P x)) Q) ;)

(; dict ;)

def thm_598 : A : hol.type -> Q_1 : hol.term hol.bool -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_1)) -> hol.proof (hol.imp (P_3 x_2) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_1)) => thm_597 A Q_1 P_3 hyp_1 x_2.

(; Theorem: |- Q ;)

(; dict ;)

def thm_599 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> Q_3 : hol.term hol.bool -> hyp_1 : hol.proof (P_2 x_1) -> hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) -> hol.proof Q_3 :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => Q_3 : hol.term hol.bool => hyp_1 : hol.proof (P_2 x_1) => hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) => thm_598 A Q_3 x_1 P_2 hyp_2 (thm_588 A x_1 P_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q) ;)

(; dict ;)

def thm_600 : A : hol.type -> x_1 : hol.term A -> Q_2 : hol.term hol.bool -> P_3 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_3 x_1) -> hol.proof (hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_2)) Q_2) :=
  A : hol.type => x_1 : hol.term A => Q_2 : hol.term hol.bool => P_3 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_3 x_1) => hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_2)) => thm_599 A x_1 P_3 Q_2 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda Q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q)) ;)

(; dict ;)

def thm_601 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (hol.forall hol.bool (Q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) Q_3)) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => Q_3 : hol.term hol.bool => thm_600 A x_1 Q_3 P_2 hyp_1.

(; Theorem: |- (Data.Bool.? P) ;)

(; dict ;)

def thm_602 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => hol.EQ_MP (hol.forall hol.bool (Q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) Q_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) (thm_596 A P_2) (thm_601 A x_1 P_2 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda x. (P x)) ;)

(; dict ;)

def thm_603 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof ((x_3 : hol.term A => P_2 x_3) x_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof ((x_3 : hol.term A => P_2 x_3) x_1) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_602 A x_1 P_2 hyp_1) A x_1 (x_3 : hol.term A => P_2 x_3) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda x. (P x)) ;)

(; dict ;)

def thm_604 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => hol.PROVE_HYP ((x_3 : hol.term A => P_2 x_3) x_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) (thm_589 A x_1 P_2 hyp_1) (hyp_2 : hol.proof ((x_3 : hol.term A => P_2 x_3) x_1) => thm_603 A x_1 P_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) Q) ;)

(; dict ;)

def thm_605 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1) => hyp_1.

(; Theorem: |- (Data.Bool.? \lambda x. (P x)) ;)

(; dict ;)

def thm_606 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) => hyp_1.

(; Theorem: |- Q ;)

(; dict ;)

def thm_607 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_1 x_3)) -> hyp_2 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_1 x_3)) Q_2) -> hol.proof Q_2 :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_1 x_3)) => hyp_2 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_1 x_3)) Q_2) => thm_605 A Q_2 P_1 hyp_2 (thm_606 A P_1 hyp_1).

(; Theorem: |- Q ;)

(; dict ;)

def thm_608 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> Q_3 : hol.term hol.bool -> hyp_1 : hol.proof (P_2 x_1) -> hyp_2 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_4 : hol.term A => P_2 x__1_4)) Q_3) -> hol.proof Q_3 :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => Q_3 : hol.term hol.bool => hyp_1 : hol.proof (P_2 x_1) => hyp_2 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_4 : hol.term A => P_2 x__1_4)) Q_3) => hol.PROVE_HYP (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => P_2 x_4)) Q_3 (thm_604 A x_1 P_2 hyp_1) (hyp_3 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => P_2 x_4)) => (A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_1 x_3)) => hyp_2 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_1 x_3)) Q_2) => thm_607 A P_1 Q_2 hyp_1 hyp_2) A P_2 Q_3 hyp_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> (P x)) Q) ;)

(; dict ;)

def thm_609 : A : hol.type -> Q_1 : hol.term hol.bool -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_4 : hol.term A => P_3 x__1_4)) Q_1) -> hol.proof (hol.imp (P_3 x_2) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_4 : hol.term A => P_3 x__1_4)) Q_1) => hyp_2 : hol.proof (P_3 x_2) => thm_608 A x_2 P_3 Q_1 hyp_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q)) ;)

(; dict ;)

def thm_610 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_3 : hol.term A => P_2 x__1_3)) Q_1) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_3 : hol.term A => P_2 x__1_3)) Q_1) => x_3 : hol.term A => thm_609 A Q_1 x_3 P_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) Q)) (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ;)

(; dict ;)

def thm_611 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1) (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1))) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1) => hol.EQ_MP (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (thm_585 A Q_1 P_2) (thm_610 A Q_1 P_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ((Data.Bool.==> (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ;)

(; dict ;)

def thm_612 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_486 q_1 p_2) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_613 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => thm_612 A P_1 (thm_595 A P_1).

(; Theorem: |- (Data.Bool.? P) ;)

(; dict ;)

def thm_614 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)) ;)

(; dict ;)

def thm_615 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => thm_613 A P_1 (thm_614 A P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q) ;)

(; dict ;)

def thm_616 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) => thm_615 A P_2 hyp_1 Q_1.

(; Theorem: |- Q ;)

(; dict ;)

def thm_617 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) Q_2)) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof Q_2 :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) Q_2)) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => thm_616 A Q_2 P_1 hyp_2 (thm_597 A Q_2 P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? P)) Q) ;)

(; dict ;)

def thm_618 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) => thm_617 A P_2 Q_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ((Data.Bool.==> (Data.Bool.? P)) Q)) ;)

(; dict ;)

def thm_619 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => thm_618 A Q_1 P_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. (P x) x)) Q))) ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) Q)) ;)

(; dict ;)

def thm_620 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp ((x_4 : hol.term A => P_2 x_4) x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_619 A Q_1 P_2) A Q_1 (x_3 : hol.term A => P_2 x_3).

(; Theorem: |- (\lambda x. (P x) x) ;)

(; dict ;)

def thm_621 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof ((x_3 : hol.term A => P_2 x_3) x_1) -> hol.proof ((x_3 : hol.term A => P_2 x_3) x_1) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof ((x_3 : hol.term A => P_2 x_3) x_1) => hyp_1.

(; Theorem: |- (P x) ;)

(; dict ;)

def thm_622 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof ((x_3 : hol.term A => P_2 x_3) x_1) -> hol.proof (P_2 x_1) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof ((x_3 : hol.term A => P_2 x_3) x_1) => hol.EQ_MP ((x_3 : hol.term A => P_2 x_3) x_1) (P_2 x_1) (thm_586 A x_1 P_2) (thm_621 A x_1 P_2 hyp_1).

(; Theorem: |- Q ;)

(; dict ;)

def thm_623 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> Q_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) -> hyp_2 : hol.proof ((x_4 : hol.term A => P_2 x_4) x_1) -> hol.proof Q_3 :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => Q_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) => hyp_2 : hol.proof ((x_4 : hol.term A => P_2 x_4) x_1) => thm_598 A Q_3 x_1 P_2 hyp_1 (thm_622 A x_1 P_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> (\lambda x. (P x) x)) Q) ;)

(; dict ;)

def thm_624 : A : hol.type -> Q_1 : hol.term hol.bool -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_1)) -> hol.proof (hol.imp ((x_4 : hol.term A => P_3 x_4) x_2) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_1)) => hyp_2 : hol.proof ((x_4 : hol.term A => P_3 x_4) x_2) => thm_623 A x_2 P_3 Q_1 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. (P x) x)) Q)) ;)

(; dict ;)

def thm_625 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.imp ((x_4 : hol.term A => P_2 x_4) x_3) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => x_3 : hol.term A => thm_624 A Q_1 x_3 P_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) Q) ;)

(; dict ;)

def thm_626 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => thm_620 A Q_1 P_2 (thm_625 A Q_1 P_2 hyp_1).

(; Theorem: |- Q ;)

(; dict ;)

def thm_627 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) Q_2)) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_1 x_3)) -> hol.proof Q_2 :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) Q_2)) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_1 x_3)) => thm_626 A Q_2 P_1 hyp_1 (thm_606 A P_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) Q)) ;)

(; dict ;)

def thm_628 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) => thm_627 A P_2 Q_1 hyp_1 hyp_2.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) Q)) ;)

(; dict ;)

def thm_629 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hol.PROP_EXT (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1) (hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1) => thm_611 A Q_1 P_2 (thm_605 A Q_1 P_2 hyp_1)) (hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => thm_628 A Q_1 P_2 (thm_597 A Q_1 P_2 hyp_1)).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) ((= (P (select P))) Data.Bool.T)))) ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) ((= (P (select P))) Data.Bool.T))) ;)

(; dict ;)

def thm_630 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.imp (P_1 x_2) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.forall A (x__1_3 : hol.term A => hol.imp (P_2 x__1_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_3 : hol.term A => P_2 x__1_3)) Q_1)) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1)) (thm_582 A Q_1 P_2) ((A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_629 A Q_1 P_2) A Q_1 P_2)) A Q_1 P_2) A (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true) P_1.

(; Theorem: |- ((= ((Data.Bool.==> (P x)) ((= (P (select P))) Data.Bool.T))) ((Data.Bool.==> (P x)) ((= (P (select P))) Data.Bool.T))) ;)

(; dict ;)

def thm_631 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (P_2 x_1) (hol.eq hol.bool (P_2 (hol.select A P_2)) hol.true)) (hol.imp (P_2 x_1) (hol.eq hol.bool (P_2 (hol.select A P_2)) hol.true))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.imp (P_2 x_1) (hol.eq hol.bool (P_2 (hol.select A P_2)) hol.true)).

(; Theorem: |- ((= (P (select P))) ((= (P (select P))) Data.Bool.T)) ;)

(; dict ;)

def thm_632 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (P_1 (hol.select A P_1)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (t_1 : hol.term hol.bool => thm_180 t_1) (P_1 (hol.select A P_1)).

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) (P (select P)))) ;)

(; dict ;)

def thm_633 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.forall A (x_2 : hol.term A => hol.imp (P_1 x_2) (P_1 (hol.select A P_1)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => thm_28 A P_1.

(; Theorem: |- ((Data.Bool.==> (P x)) (P (select P))) ;)

(; dict ;)

def thm_634 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (P_2 x_1) (P_2 (hol.select A P_2))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => thm_633 A P_2 x_1.

(; Theorem: |- (P (select P)) ;)

(; dict ;)

def thm_635 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (P_2 (hol.select A P_2)) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_634 A x_1 P_2 (thm_588 A x_1 P_2 hyp_1).

(; Theorem: |- ((= (P (select P))) Data.Bool.T) ;)

(; dict ;)

def thm_636 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (hol.eq hol.bool (P_2 (hol.select A P_2)) hol.true) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => hol.EQ_MP (P_2 (hol.select A P_2)) (hol.eq hol.bool (P_2 (hol.select A P_2)) hol.true) (thm_632 A P_2) (thm_635 A x_1 P_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> (P x)) ((= (P (select P))) Data.Bool.T)) ;)

(; dict ;)

def thm_637 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (P_2 x_1) (hol.eq hol.bool (P_2 (hol.select A P_2)) hol.true)) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_636 A x_1 P_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) ((= (P (select P))) Data.Bool.T))) ;)

(; dict ;)

def thm_638 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.forall A (x_2 : hol.term A => hol.imp (P_1 x_2) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => x_2 : hol.term A => hol.EQ_MP (hol.imp (P_1 x_2) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) (hol.imp (P_1 x_2) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) (thm_631 A x_2 P_1) (thm_637 A x_2 P_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) ((= (P (select P))) Data.Bool.T)) ;)

(; dict ;)

def thm_639 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.forall A (x_2 : hol.term A => hol.imp (P_1 x_2) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) (thm_630 A P_1) (thm_638 A P_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x. (p x))) ((= (p (select p))) Data.Bool.T)) ;)

(; dict ;)

def thm_640 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2)) (hol.eq hol.bool (p_1 (hol.select A p_1)) hol.true)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => (A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) (thm_580 A P_1) (thm_639 A P_1)) A P_1) A p_1.

(; Theorem: |- ((= Data.Bool.?) Data.Bool.?) ;)

(; dict ;)

def thm_641 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)).

(; Theorem: |- ((= \lambda x. (t x)) t) ;)

(; dict ;)

def thm_642 : B : hol.type -> A : hol.type -> t_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1) :=
  B : hol.type => A : hol.type => t_1 : hol.term (hol.arr A B) => thm_29 B A t_1.

(; Theorem: |- ((= \lambda x. (t x)) t) ;)

(; dict ;)

def thm_643 : A : hol.type -> t_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_2 : hol.term A => t_1 x_2) t_1) :=
  A : hol.type => t_1 : hol.term (hol.arr A hol.bool) => (B : hol.type => A : hol.type => t_1 : hol.term (hol.arr A B) => thm_642 B A t_1) hol.bool A t_1.

(; Theorem: |- ((= \lambda x. (p x)) p) ;)

(; dict ;)

def thm_644 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_2 : hol.term A => p_1 x_2) p_1) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => (A : hol.type => t_1 : hol.term (hol.arr A hol.bool) => thm_643 A t_1) A p_1.

(; Theorem: |- ((= (Data.Bool.? \lambda x. (p x))) (Data.Bool.? p)) ;)

(; dict ;)

def thm_645 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (x_2 : hol.term A => p_1 x_2) p_1 (thm_641 A) (thm_644 A p_1).

(; Theorem: |- ((= ((= (Data.Bool.? p)) Data.Bool.T)) ((= (Data.Bool.? p)) Data.Bool.T)) ;)

(; dict ;)

def thm_646 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true).

(; Theorem: |- ((= ((= (Data.Bool.? p)) Data.Bool.T)) ((= (Data.Bool.? p)) Data.Bool.T)) ;)

(; dict ;)

def thm_647 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) (thm_646 A p_1) (thm_646 A p_1).

(; Theorem: |- ((= (Data.Bool.? p)) ((= (Data.Bool.? p)) Data.Bool.T)) ;)

(; dict ;)

def thm_648 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => (t_1 : hol.term hol.bool => thm_180 t_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1).

(; Theorem: |- (Data.Bool.? p) ;)

(; dict ;)

def thm_649 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) => hyp_1.

(; Theorem: |- ((= (Data.Bool.? p)) Data.Bool.T) ;)

(; dict ;)

def thm_650 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) => hol.EQ_MP (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) (thm_648 A p_1) (thm_649 A p_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x. (p x))) Data.Bool.T) ;)

(; dict ;)

def thm_651 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2)) hol.true) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) => hol.TRANS hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true (thm_645 A p_1) (hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) (thm_647 A p_1) (thm_650 A p_1 hyp_1)).

(; Theorem: |- ((= Data.Bool.T) (Data.Bool.? \lambda x. (p x))) ;)

(; dict ;)

def thm_652 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) -> hol.proof (hol.eq hol.bool hol.true (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) => hol.SYM hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2)) hol.true (thm_651 A p_1 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda x. (p x)) ;)

(; dict ;)

def thm_653 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) => hol.EQ_MP hol.true (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2)) (thm_652 A p_1 hyp_1) thm_10.

(; Theorem: |- ((= (p (select p))) Data.Bool.T) ;)

(; dict ;)

def thm_654 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) -> hol.proof (hol.eq hol.bool (p_1 (hol.select A p_1)) hol.true) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) => thm_640 A p_1 (thm_653 A p_1 hyp_1).

(; Theorem: |- ((= (p (select p))) Data.Bool.T) ;)

(; dict ;)

def thm_655 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) -> hol.proof (hol.eq hol.bool (p_1 (hol.select A p_1)) hol.true) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) => hol.TRANS hol.bool (p_1 (hol.select A p_1)) (p_1 (hol.select A p_1)) hol.true (thm_578 A p_1) (thm_654 A p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? p)) ((= (p (select p))) Data.Bool.T)) ;)

(; dict ;)

def thm_656 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.eq hol.bool (p_1 (hol.select A p_1)) hol.true)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) => thm_655 A p_1 hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) ((Data.Bool.==> (Data.Bool.? p)) Data.Bool.T)) ;)

(; dict ;)

def thm_657 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_554 A p_1 (thm_656 A p_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? p)) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_658 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) hol.true) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => (t_1 : hol.term hol.bool => thm_164 t_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) Data.Bool.T) ;)

(; dict ;)

def thm_659 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) hol.true) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) hol.true (thm_657 A p_1) (thm_658 A p_1).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) ;)

(; dict ;)

def thm_660 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool hol.true (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1)))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) hol.true (thm_659 A p_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? p)) (p (select p))) ;)

(; dict ;)

def thm_661 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP hol.true (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) (thm_660 A p_1) thm_10.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? p)) (p (select p))) ;)

(; dict ;)

def thm_662 : A : hol.type -> B : hol.type -> p_1 : hol.term (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) hol.bool) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) hol.bool) hol.bool) p_1) (p_1 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) p_1))) :=
  A : hol.type => B : hol.type => p_1 : hol.term (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) hol.bool) => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) (thm_468 A p_1) (thm_661 A p_1)) (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) p_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda _10598. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) (\lambda _10598. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))) (select \lambda _10598. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))))) ;)

(; dict ;)

def thm_663 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) hol.bool) hol.bool) (__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5)))))) ((__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5))))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5)))))))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => (A : hol.type => B : hol.type => p_1 : hol.term (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) hol.bool) => thm_662 A B p_1) A B (__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5))))).

(; Theorem: |- ((= Data.Bool.?) Data.Bool.?) ;)

(; dict ;)

def thm_664 : A : hol.type -> B : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) hol.bool) hol.bool))) :=
  A : hol.type => B : hol.type => hol.REFL (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) hol.bool) hol.bool)).

(; Theorem: |- ((= ((= a) b)) ((= a) b)) ;)

(; dict ;)

def thm_665 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1)) -> hol.proof (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1)) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1)) => hyp_1.

(; Theorem: |- ((= ((= a) b)) ((= a) b)) ;)

(; dict ;)

def thm_666 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1)) -> hol.proof (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1)) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1)) => hol.SYM hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1) (thm_665 A b_1 a_2 hyp_1).

(; Theorem: |- ((= ((= ((= a) b)) ((= a) b))) ((= ((= a) b)) ((= a) b))) ;)

(; dict ;)

def thm_667 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1)) (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1))) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => hol.PROP_EXT (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1)) (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1)) => thm_666 A b_1 a_2 hyp_1) (hyp_1 : hol.proof (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1)) => thm_666 A b_1 a_2 hyp_1).

(; Theorem: |- ((= \lambda b. ((= ((= a) b)) ((= a) b))) \lambda b. ((= ((= a) b)) ((= a) b))) ;)

(; dict ;)

def thm_668 : A : hol.type -> a_1 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2)) (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2))) :=
  A : hol.type => a_1 : hol.term A => hol.ABS_THM A hol.bool (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2)) (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2)) (b_2 : hol.term A => thm_667 A b_2 a_1).

(; Theorem: |- ((= (Data.Bool.! \lambda b. ((= ((= a) b)) ((= a) b)))) (Data.Bool.! \lambda b. ((= ((= a) b)) ((= a) b)))) ;)

(; dict ;)

def thm_669 : A : hol.type -> a_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.forall A (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2))) (hol.forall A (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2)))) :=
  A : hol.type => a_1 : hol.term A => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2)) (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2)) (thm_95 A) (thm_668 A a_1).

(; Theorem: |- ((= \lambda a. (Data.Bool.! \lambda b. ((= ((= a) b)) ((= a) b)))) \lambda a. (Data.Bool.! \lambda b. ((= ((= a) b)) ((= a) b)))) ;)

(; dict ;)

def thm_670 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (a_1 : hol.term A => hol.forall A (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2))) (a_1 : hol.term A => hol.forall A (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2)))) :=
  A : hol.type => hol.ABS_THM A hol.bool (a_1 : hol.term A => hol.forall A (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2))) (a_1 : hol.term A => hol.forall A (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2))) (a_1 : hol.term A => thm_669 A a_1).

(; Theorem: |- ((= (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= ((= a) b)) ((= a) b))))) (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= ((= a) b)) ((= a) b))))) ;)

(; dict ;)

def thm_671 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall A (a_1 : hol.term A => hol.forall A (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2)))) (hol.forall A (a_1 : hol.term A => hol.forall A (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2))))) :=
  A : hol.type => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (a_1 : hol.term A => hol.forall A (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2))) (a_1 : hol.term A => hol.forall A (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2))) (thm_95 A) (thm_670 A).

(; Theorem: |- (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= ((= a) b)) ((= a) b)))) ;)

(; dict ;)

def thm_672 : A : hol.type -> hol.proof (hol.forall A (a_1 : hol.term A => hol.forall A (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2)))) :=
  A : hol.type => hol.EQ_MP (hol.forall A (a_1 : hol.term A => hol.forall A (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2)))) (hol.forall A (a_1 : hol.term A => hol.forall A (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2)))) (thm_671 A) (thm_462 A).

(; Theorem: |- (Data.Bool.! \lambda b. ((= ((= a) b)) ((= a) b))) ;)

(; dict ;)

def thm_673 : A : hol.type -> a_1 : hol.term A -> hol.proof (hol.forall A (b_2 : hol.term A => hol.eq hol.bool (hol.eq A a_1 b_2) (hol.eq A a_1 b_2))) :=
  A : hol.type => a_1 : hol.term A => thm_672 A a_1.

(; Theorem: |- ((= ((= a) b)) ((= a) b)) ;)

(; dict ;)

def thm_674 : A : hol.type -> b_1 : hol.term A -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1)) :=
  A : hol.type => b_1 : hol.term A => a_2 : hol.term A => thm_673 A a_2 b_1.

(; Theorem: |- ((= ((= a) b)) ((= a) b)) ;)

(; dict ;)

def thm_675 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A B) a_2 b_1) (hol.eq (hol.arr A B) a_2 b_1)) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_2 : hol.term (hol.arr A B) => (A : hol.type => b_1 : hol.term A => a_2 : hol.term A => hol.EQ_MP (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1)) (hol.eq hol.bool (hol.eq A a_2 b_1) (hol.eq A a_2 b_1)) (thm_434 A b_1 a_2) (thm_674 A b_1 a_2)) (hol.arr A B) b_1 a_2.

(; Theorem: |- ((= ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))) ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))) ;)

(; dict ;)

def thm_676 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> b_3 : hol.term B -> __10598_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A B) (__10598_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_2)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_2 x_5))) (hol.eq (hol.arr A B) (__10598_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_2)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_2 x_5)))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => g_2 : hol.term (hol.arr A B) => b_3 : hol.term B => __10598_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => (B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_2 : hol.term (hol.arr A B) => thm_675 B A b_1 a_2) B A (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_2 x_5)) (__10598_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_2)).

(; Theorem: |- ((= \lambda g. ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))) \lambda g. ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))) ;)

(; dict ;)

def thm_677 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> b_2 : hol.term B -> __10598_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_2 (g_4 x_5))) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_2 (g_4 x_5)))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => b_2 : hol.term B => __10598_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.ABS_THM (hol.arr A B) hol.bool (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_2 (g_4 x_5))) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_2 (g_4 x_5))) (g_4 : hol.term (hol.arr A B) => thm_676 B A a_1 g_4 b_2 __10598_3).

(; Theorem: |- ((= (Data.Bool.! \lambda g. ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))) (Data.Bool.! \lambda g. ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))) ;)

(; dict ;)

def thm_678 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> b_2 : hol.term B -> __10598_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_2 (g_4 x_5)))) (hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_2 (g_4 x_5))))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => b_2 : hol.term B => __10598_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B)) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_2 (g_4 x_5))) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_2 (g_4 x_5))) (thm_76 B A) (thm_677 B A a_1 b_2 __10598_3).

(; Theorem: |- ((= \lambda b. (Data.Bool.! \lambda g. ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))) \lambda b. (Data.Bool.! \lambda g. ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))) ;)

(; dict ;)

def thm_679 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> __10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) -> hol.proof (hol.eq (hol.arr B hol.bool) (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5)))) (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5))))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => __10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.ABS_THM B hol.bool (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5)))) (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5)))) (b_3 : hol.term B => thm_678 B A a_1 b_3 __10598_2).

(; Theorem: |- ((= (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) ;)

(; dict ;)

def thm_680 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> __10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) -> hol.proof (hol.eq hol.bool (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5))))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5)))))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => __10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5)))) (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5)))) (thm_49 B) (thm_679 A B a_1 __10598_2).

(; Theorem: |- ((= \lambda _10598. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) \lambda _10598. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) ;)

(; dict ;)

def thm_681 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> hol.proof (hol.eq (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) hol.bool) (__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5))))) (__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5)))))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => hol.ABS_THM (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) hol.bool (__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5))))) (__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5))))) (__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => thm_680 A B a_1 __10598_2).

(; Theorem: |- ((= (Data.Bool.? \lambda _10598. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) (Data.Bool.? \lambda _10598. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ;)

(; dict ;)

def thm_682 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) hol.bool) hol.bool) (__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) hol.bool) hol.bool) (__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5))))))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => hol.APP_THM (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) hol.bool) hol.bool)) (__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5))))) (__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5))))) (thm_664 A B) (thm_681 A B a_1).

(; Theorem: |- ((= (\lambda _10598. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))) \lambda _10596. \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) _10596)) (((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) _10596) x)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (\lambda _10596. \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) _10596)) (((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) _10596) x)) ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) ;)

(; dict ;)

def thm_683 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> hol.proof (hol.eq hol.bool ((__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5))))) (__10596_2 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => x_3 : hol.term A => hol.cond B (hol.eq A x_3 a_1) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq B (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) a_5))) __10596_2) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) b_6))) __10596_2 x_3))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (g_3 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) ((__10596_4 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) __10596_4) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) b_8))) __10596_4 x_5)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_3)) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_1) b_2 (g_3 x_4)))))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => hol.BETA_CONV (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) hol.bool (__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5))))) (__10596_2 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => x_3 : hol.term A => hol.cond B (hol.eq A x_3 a_1) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq B (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) a_5))) __10596_2) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) b_6))) __10596_2 x_3)).

(; Theorem: |- ((= (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (\lambda _10596. \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) _10596)) (((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) _10596) x)) ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) (\lambda _10598. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))) \lambda _10596. \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) _10596)) (((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) _10596) x)))) ;)

(; dict ;)

def thm_684 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (g_3 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) ((__10596_4 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) __10596_4) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) b_8))) __10596_4 x_5)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_3)) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_1) b_2 (g_3 x_4))))) ((__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5))))) (__10596_2 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => x_3 : hol.term A => hol.cond B (hol.eq A x_3 a_1) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq B (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) a_5))) __10596_2) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) b_6))) __10596_2 x_3)))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => hol.SYM hol.bool ((__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5))))) (__10596_2 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => x_3 : hol.term A => hol.cond B (hol.eq A x_3 a_1) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq B (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) a_5))) __10596_2) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) b_6))) __10596_2 x_3))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (g_3 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) ((__10596_4 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) __10596_4) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) b_8))) __10596_4 x_5)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_3)) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_1) b_2 (g_3 x_4))))) (thm_683 A B a_1).

(; Theorem: |- ((= (\lambda _10596. \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) _10596)) (((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) _10596) x)) ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g))) (((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) ((Data.Pair., b) g)) x))) ;)

(; dict ;)

def thm_685 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> a_3 : hol.term A -> hol.proof (hol.eq (hol.arr A B) ((__10596_4 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) __10596_4) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) b_8))) __10596_4 x_5)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq B (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) a_6))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) b_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1) x_4))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => a_3 : hol.term A => hol.BETA_CONV (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B) (__10596_4 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) __10596_4) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) b_8))) __10596_4 x_5)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1).

(; Theorem: |- ((= (= (\lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) b) (_10593 x)) g))) (= (\lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) b) (_10593 x)) g))) ;)

(; dict ;)

def thm_686 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> a_3 : hol.term A -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (hol.eq (hol.arr A B) ((__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) b_2 (__10593_4 x_5)) g_1)) (hol.eq (hol.arr A B) ((__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) b_2 (__10593_4 x_5)) g_1))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => a_3 : hol.term A => hol.REFL (hol.arr (hol.arr A B) hol.bool) (hol.eq (hol.arr A B) ((__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) b_2 (__10593_4 x_5)) g_1)).

(; Theorem: |- ((= (\lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g))) (_10593 x)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) ((Data.Pair., b) g)))) \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g))) (((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) ((Data.Pair., b) g)) x))) ;)

(; dict ;)

def thm_687 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> a_3 : hol.term A -> hol.proof (hol.eq (hol.arr A B) ((__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (__10593_4 x_5)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) b_6))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1))) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq B (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) a_6))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) b_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1) x_4))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => a_3 : hol.term A => hol.BETA_CONV (hol.arr A B) (hol.arr A B) (__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (__10593_4 x_5)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) b_6))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)).

(; Theorem: |- ((= ((= (\lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) b) (_10593 x)) g)) (\lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g))) (_10593 x)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) ((Data.Pair., b) g))))) ((= (\lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) b) (_10593 x)) g)) \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g))) (((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) ((Data.Pair., b) g)) x)))) ;)

(; dict ;)

def thm_688 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> a_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A B) ((__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) b_2 (__10593_4 x_5)) g_1) ((__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (__10593_4 x_5)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) b_6))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)))) (hol.eq (hol.arr A B) ((__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) b_2 (__10593_4 x_5)) g_1) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq B (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) a_6))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) b_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1) x_4)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => a_3 : hol.term A => hol.APP_THM (hol.arr A B) hol.bool (hol.eq (hol.arr A B) ((__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) b_2 (__10593_4 x_5)) g_1)) (hol.eq (hol.arr A B) ((__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) b_2 (__10593_4 x_5)) g_1)) ((__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (__10593_4 x_5)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) b_6))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1))) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq B (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) a_6))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) b_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1) x_4)) (thm_686 B A g_1 b_2 a_3) (thm_687 B A g_1 b_2 a_3).

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_689 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A B) (hol.arr (hol.arr A B) hol.bool)) (hol.eq (hol.arr A B)) (hol.eq (hol.arr A B))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr A B) (hol.arr (hol.arr A B) hol.bool)) (hol.eq (hol.arr A B)).

(; Theorem: |- ((= (\lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) b) (_10593 x)) g)) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))) ;)

(; dict ;)

def thm_690 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> a_3 : hol.term A -> hol.proof (hol.eq (hol.arr A B) ((__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) b_2 (__10593_4 x_5)) g_1) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) b_2 (g_1 x_4))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => a_3 : hol.term A => hol.BETA_CONV (hol.arr A B) (hol.arr A B) (__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) b_2 (__10593_4 x_5)) g_1.

(; Theorem: |- ((= (= (\lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) b) (_10593 x)) g))) (= \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))) ;)

(; dict ;)

def thm_691 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> a_3 : hol.term A -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (hol.eq (hol.arr A B) ((__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) b_2 (__10593_4 x_5)) g_1)) (hol.eq (hol.arr A B) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) b_2 (g_1 x_4)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => a_3 : hol.term A => hol.APP_THM (hol.arr A B) (hol.arr (hol.arr A B) hol.bool) (hol.eq (hol.arr A B)) (hol.eq (hol.arr A B)) ((__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) b_2 (__10593_4 x_5)) g_1) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) b_2 (g_1 x_4)) (thm_689 B A) (thm_690 B A g_1 b_2 a_3).

(; Theorem: |- ((= \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g))) (((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) ((Data.Pair., b) g)) x))) \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g))) (((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) ((Data.Pair., b) g)) x))) ;)

(; dict ;)

def thm_692 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> a_3 : hol.term A -> hol.proof (hol.eq (hol.arr A B) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq B (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) a_6))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) b_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1) x_4)) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq B (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) a_6))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) b_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1) x_4))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => a_3 : hol.term A => hol.REFL (hol.arr A B) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq B (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) a_6))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) b_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1) x_4)).

(; Theorem: |- ((= ((= (\lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) b) (_10593 x)) g)) \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g))) (((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) ((Data.Pair., b) g)) x)))) ((= \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))) \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g))) (((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) ((Data.Pair., b) g)) x)))) ;)

(; dict ;)

def thm_693 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> a_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A B) ((__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) b_2 (__10593_4 x_5)) g_1) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq B (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) a_6))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) b_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1) x_4))) (hol.eq (hol.arr A B) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) b_2 (g_1 x_4)) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq B (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) a_6))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) b_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1) x_4)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => a_3 : hol.term A => hol.APP_THM (hol.arr A B) hol.bool (hol.eq (hol.arr A B) ((__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) b_2 (__10593_4 x_5)) g_1)) (hol.eq (hol.arr A B) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) b_2 (g_1 x_4))) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq B (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) a_6))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) b_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1) x_4)) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq B (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) a_6))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) b_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1) x_4)) (thm_691 B A g_1 b_2 a_3) (thm_692 B A g_1 b_2 a_3).

(; Theorem: |- ((= ((= (\lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) b) (_10593 x)) g)) (\lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g))) (_10593 x)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) ((Data.Pair., b) g))))) ((= \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))) \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g))) (((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) ((Data.Pair., b) g)) x)))) ;)

(; dict ;)

def thm_694 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> a_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A B) ((__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) b_2 (__10593_4 x_5)) g_1) ((__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (__10593_4 x_5)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) b_6))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)))) (hol.eq (hol.arr A B) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) b_2 (g_1 x_4)) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq B (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) a_6))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) b_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1) x_4)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => a_3 : hol.term A => hol.TRANS hol.bool (hol.eq (hol.arr A B) ((__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) b_2 (__10593_4 x_5)) g_1) ((__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (__10593_4 x_5)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) b_6))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)))) (hol.eq (hol.arr A B) ((__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) b_2 (__10593_4 x_5)) g_1) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq B (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) a_6))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) b_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1) x_4))) (hol.eq (hol.arr A B) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) b_2 (g_1 x_4)) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq B (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) a_6))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) b_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1) x_4))) (thm_688 B A g_1 b_2 a_3) (thm_693 B A g_1 b_2 a_3).

(; Theorem: |- ((= (= (\lambda _10592. \lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) _10592) (_10593 x)) b))) (= (\lambda _10592. \lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) _10592) (_10593 x)) b))) ;)

(; dict ;)

def thm_695 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr A B) (hol.arr A B)) hol.bool) (hol.eq (hol.arr (hol.arr A B) (hol.arr A B)) ((__10592_3 : hol.term B => __10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_2) __10592_3 (__10593_4 x_5)) b_1)) (hol.eq (hol.arr (hol.arr A B) (hol.arr A B)) ((__10592_3 : hol.term B => __10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_2) __10592_3 (__10593_4 x_5)) b_1))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => a_2 : hol.term A => hol.REFL (hol.arr (hol.arr (hol.arr A B) (hol.arr A B)) hol.bool) (hol.eq (hol.arr (hol.arr A B) (hol.arr A B)) ((__10592_3 : hol.term B => __10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_2) __10592_3 (__10593_4 x_5)) b_1)).

(; Theorem: |- ((= (\lambda _10592. \lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) _10592) (_10593 x)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g)))) \lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g))) (_10593 x))) ;)

(; dict ;)

def thm_696 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> a_3 : hol.term A -> hol.proof (hol.eq (hol.arr (hol.arr A B) (hol.arr A B)) ((__10592_4 : hol.term B => __10593_5 : hol.term (hol.arr A B) => x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) __10592_4 (__10593_5 x_6)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq B (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) a_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1))) (__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (__10593_4 x_5))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => a_3 : hol.term A => hol.BETA_CONV B (hol.arr (hol.arr A B) (hol.arr A B)) (__10592_4 : hol.term B => __10593_5 : hol.term (hol.arr A B) => x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) __10592_4 (__10593_5 x_6)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq B (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) a_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)).

(; Theorem: |- ((= ((= (\lambda _10592. \lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) _10592) (_10593 x)) b)) (\lambda _10592. \lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) _10592) (_10593 x)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g))))) ((= (\lambda _10592. \lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) _10592) (_10593 x)) b)) \lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g))) (_10593 x)))) ;)

(; dict ;)

def thm_697 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> a_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr (hol.arr A B) (hol.arr A B)) ((__10592_4 : hol.term B => __10593_5 : hol.term (hol.arr A B) => x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) __10592_4 (__10593_5 x_6)) b_2) ((__10592_4 : hol.term B => __10593_5 : hol.term (hol.arr A B) => x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) __10592_4 (__10593_5 x_6)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq B (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) a_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)))) (hol.eq (hol.arr (hol.arr A B) (hol.arr A B)) ((__10592_4 : hol.term B => __10593_5 : hol.term (hol.arr A B) => x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) __10592_4 (__10593_5 x_6)) b_2) (__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (__10593_4 x_5)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => a_3 : hol.term A => hol.APP_THM (hol.arr (hol.arr A B) (hol.arr A B)) hol.bool (hol.eq (hol.arr (hol.arr A B) (hol.arr A B)) ((__10592_4 : hol.term B => __10593_5 : hol.term (hol.arr A B) => x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) __10592_4 (__10593_5 x_6)) b_2)) (hol.eq (hol.arr (hol.arr A B) (hol.arr A B)) ((__10592_4 : hol.term B => __10593_5 : hol.term (hol.arr A B) => x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) __10592_4 (__10593_5 x_6)) b_2)) ((__10592_4 : hol.term B => __10593_5 : hol.term (hol.arr A B) => x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) __10592_4 (__10593_5 x_6)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq B (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) a_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1))) (__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (__10593_4 x_5)) (thm_695 B A b_2 a_3) (thm_696 B A g_1 b_2 a_3).

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_698 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr A B) (hol.arr A B)) (hol.arr (hol.arr (hol.arr A B) (hol.arr A B)) hol.bool)) (hol.eq (hol.arr (hol.arr A B) (hol.arr A B))) (hol.eq (hol.arr (hol.arr A B) (hol.arr A B)))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr (hol.arr A B) (hol.arr A B)) (hol.arr (hol.arr (hol.arr A B) (hol.arr A B)) hol.bool)) (hol.eq (hol.arr (hol.arr A B) (hol.arr A B))).

(; Theorem: |- ((= (\lambda _10592. \lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) _10592) (_10593 x)) b)) \lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) b) (_10593 x))) ;)

(; dict ;)

def thm_699 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> hol.proof (hol.eq (hol.arr (hol.arr A B) (hol.arr A B)) ((__10592_3 : hol.term B => __10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_2) __10592_3 (__10593_4 x_5)) b_1) (__10593_3 : hol.term (hol.arr A B) => x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_2) b_1 (__10593_3 x_4))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => a_2 : hol.term A => hol.BETA_CONV B (hol.arr (hol.arr A B) (hol.arr A B)) (__10592_3 : hol.term B => __10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_2) __10592_3 (__10593_4 x_5)) b_1.

(; Theorem: |- ((= (= (\lambda _10592. \lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) _10592) (_10593 x)) b))) (= \lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) b) (_10593 x)))) ;)

(; dict ;)

def thm_700 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr A B) (hol.arr A B)) hol.bool) (hol.eq (hol.arr (hol.arr A B) (hol.arr A B)) ((__10592_3 : hol.term B => __10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_2) __10592_3 (__10593_4 x_5)) b_1)) (hol.eq (hol.arr (hol.arr A B) (hol.arr A B)) (__10593_3 : hol.term (hol.arr A B) => x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_2) b_1 (__10593_3 x_4)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => a_2 : hol.term A => hol.APP_THM (hol.arr (hol.arr A B) (hol.arr A B)) (hol.arr (hol.arr (hol.arr A B) (hol.arr A B)) hol.bool) (hol.eq (hol.arr (hol.arr A B) (hol.arr A B))) (hol.eq (hol.arr (hol.arr A B) (hol.arr A B))) ((__10592_3 : hol.term B => __10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_2) __10592_3 (__10593_4 x_5)) b_1) (__10593_3 : hol.term (hol.arr A B) => x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_2) b_1 (__10593_3 x_4)) (thm_698 B A) (thm_699 B A b_1 a_2).

(; Theorem: |- ((= \lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g))) (_10593 x))) \lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g))) (_10593 x))) ;)

(; dict ;)

def thm_701 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> a_3 : hol.term A -> hol.proof (hol.eq (hol.arr (hol.arr A B) (hol.arr A B)) (__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (__10593_4 x_5)) (__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (__10593_4 x_5))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => a_3 : hol.term A => hol.REFL (hol.arr (hol.arr A B) (hol.arr A B)) (__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (__10593_4 x_5)).

(; Theorem: |- ((= ((= (\lambda _10592. \lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) _10592) (_10593 x)) b)) \lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g))) (_10593 x)))) ((= \lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) b) (_10593 x))) \lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g))) (_10593 x)))) ;)

(; dict ;)

def thm_702 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> a_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr (hol.arr A B) (hol.arr A B)) ((__10592_4 : hol.term B => __10593_5 : hol.term (hol.arr A B) => x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) __10592_4 (__10593_5 x_6)) b_2) (__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (__10593_4 x_5))) (hol.eq (hol.arr (hol.arr A B) (hol.arr A B)) (__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) b_2 (__10593_4 x_5)) (__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (__10593_4 x_5)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => a_3 : hol.term A => hol.APP_THM (hol.arr (hol.arr A B) (hol.arr A B)) hol.bool (hol.eq (hol.arr (hol.arr A B) (hol.arr A B)) ((__10592_4 : hol.term B => __10593_5 : hol.term (hol.arr A B) => x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) __10592_4 (__10593_5 x_6)) b_2)) (hol.eq (hol.arr (hol.arr A B) (hol.arr A B)) (__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) b_2 (__10593_4 x_5))) (__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (__10593_4 x_5)) (__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (__10593_4 x_5)) (thm_700 B A b_2 a_3) (thm_701 B A g_1 b_2 a_3).

(; Theorem: |- ((= ((= (\lambda _10592. \lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) _10592) (_10593 x)) b)) (\lambda _10592. \lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) _10592) (_10593 x)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g))))) ((= \lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) b) (_10593 x))) \lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g))) (_10593 x)))) ;)

(; dict ;)

def thm_703 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> a_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr (hol.arr A B) (hol.arr A B)) ((__10592_4 : hol.term B => __10593_5 : hol.term (hol.arr A B) => x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) __10592_4 (__10593_5 x_6)) b_2) ((__10592_4 : hol.term B => __10593_5 : hol.term (hol.arr A B) => x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) __10592_4 (__10593_5 x_6)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq B (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) a_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)))) (hol.eq (hol.arr (hol.arr A B) (hol.arr A B)) (__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) b_2 (__10593_4 x_5)) (__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (__10593_4 x_5)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => a_3 : hol.term A => hol.TRANS hol.bool (hol.eq (hol.arr (hol.arr A B) (hol.arr A B)) ((__10592_4 : hol.term B => __10593_5 : hol.term (hol.arr A B) => x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) __10592_4 (__10593_5 x_6)) b_2) ((__10592_4 : hol.term B => __10593_5 : hol.term (hol.arr A B) => x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) __10592_4 (__10593_5 x_6)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq B (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) a_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)))) (hol.eq (hol.arr (hol.arr A B) (hol.arr A B)) ((__10592_4 : hol.term B => __10593_5 : hol.term (hol.arr A B) => x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) __10592_4 (__10593_5 x_6)) b_2) (__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (__10593_4 x_5))) (hol.eq (hol.arr (hol.arr A B) (hol.arr A B)) (__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) b_2 (__10593_4 x_5)) (__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (__10593_4 x_5))) (thm_697 B A g_1 b_2 a_3) (thm_702 B A g_1 b_2 a_3).

(; Theorem: |- ((= \lambda _10592. \lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) _10592) (_10593 x))) \lambda _10592. \lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) _10592) (_10593 x))) ;)

(; dict ;)

def thm_704 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr A B))) (__10592_2 : hol.term B => __10593_3 : hol.term (hol.arr A B) => x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_1) __10592_2 (__10593_3 x_4)) (__10592_2 : hol.term B => __10593_3 : hol.term (hol.arr A B) => x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_1) __10592_2 (__10593_3 x_4))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => hol.REFL (hol.arr B (hol.arr (hol.arr A B) (hol.arr A B))) (__10592_2 : hol.term B => __10593_3 : hol.term (hol.arr A B) => x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_1) __10592_2 (__10593_3 x_4)).

(; Theorem: |- ((= (= b)) (= b)) ;)

(; dict ;)

def thm_705 : B : hol.type -> b_1 : hol.term B -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B b_1) (hol.eq B b_1)) :=
  B : hol.type => b_1 : hol.term B => hol.REFL (hol.arr B hol.bool) (hol.eq B b_1).

(; Theorem: |- ((= (= (\lambda _10588. _10588 b))) (= (\lambda _10588. _10588 b))) ;)

(; dict ;)

def thm_706 : B : hol.type -> b_1 : hol.term B -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B ((__10588_2 : hol.term B => __10588_2) b_1)) (hol.eq B ((__10588_2 : hol.term B => __10588_2) b_1))) :=
  B : hol.type => b_1 : hol.term B => hol.REFL (hol.arr B hol.bool) (hol.eq B ((__10588_2 : hol.term B => __10588_2) b_1)).

(; Theorem: |- ((= (\lambda _10588. _10588 ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g)))) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g))) ;)

(; dict ;)

def thm_707 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> hol.proof (hol.eq B ((__10588_3 : hol.term B => __10588_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) a_4))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) a_4))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => hol.BETA_CONV B B (__10588_3 : hol.term B => __10588_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) a_4))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)).

(; Theorem: |- ((= ((= (\lambda _10588. _10588 b)) (\lambda _10588. _10588 ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g))))) ((= (\lambda _10588. _10588 b)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g)))) ;)

(; dict ;)

def thm_708 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq B ((__10588_3 : hol.term B => __10588_3) b_2) ((__10588_3 : hol.term B => __10588_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) a_4))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)))) (hol.eq B ((__10588_3 : hol.term B => __10588_3) b_2) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) a_4))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => hol.APP_THM B hol.bool (hol.eq B ((__10588_3 : hol.term B => __10588_3) b_2)) (hol.eq B ((__10588_3 : hol.term B => __10588_3) b_2)) ((__10588_3 : hol.term B => __10588_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) a_4))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) a_4))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (thm_706 B b_2) (thm_707 A B g_1 b_2).

(; Theorem: |- ((= (\lambda _10588. _10588 b)) b) ;)

(; dict ;)

def thm_709 : B : hol.type -> b_1 : hol.term B -> hol.proof (hol.eq B ((__10588_2 : hol.term B => __10588_2) b_1) b_1) :=
  B : hol.type => b_1 : hol.term B => hol.BETA_CONV B B (__10588_2 : hol.term B => __10588_2) b_1.

(; Theorem: |- ((= (= (\lambda _10588. _10588 b))) (= b)) ;)

(; dict ;)

def thm_710 : B : hol.type -> b_1 : hol.term B -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B ((__10588_2 : hol.term B => __10588_2) b_1)) (hol.eq B b_1)) :=
  B : hol.type => b_1 : hol.term B => hol.APP_THM B (hol.arr B hol.bool) (hol.eq B) (hol.eq B) ((__10588_2 : hol.term B => __10588_2) b_1) b_1 (thm_331 B) (thm_709 B b_1).

(; Theorem: |- ((= ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g))) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g))) ;)

(; dict ;)

def thm_711 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> hol.proof (hol.eq B (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) a_4))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) a_4))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => hol.REFL B (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) a_4))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)).

(; Theorem: |- ((= ((= (\lambda _10588. _10588 b)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g)))) ((= b) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g)))) ;)

(; dict ;)

def thm_712 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq B ((__10588_3 : hol.term B => __10588_3) b_2) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) a_4))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1))) (hol.eq B b_2 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) a_4))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => hol.APP_THM B hol.bool (hol.eq B ((__10588_3 : hol.term B => __10588_3) b_2)) (hol.eq B b_2) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) a_4))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) a_4))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (thm_710 B b_2) (thm_711 A B g_1 b_2).

(; Theorem: |- ((= ((= (\lambda _10588. _10588 b)) (\lambda _10588. _10588 ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g))))) ((= b) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g)))) ;)

(; dict ;)

def thm_713 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq B ((__10588_3 : hol.term B => __10588_3) b_2) ((__10588_3 : hol.term B => __10588_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) a_4))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)))) (hol.eq B b_2 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) a_4))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => hol.TRANS hol.bool (hol.eq B ((__10588_3 : hol.term B => __10588_3) b_2) ((__10588_3 : hol.term B => __10588_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) a_4))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)))) (hol.eq B ((__10588_3 : hol.term B => __10588_3) b_2) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) a_4))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1))) (hol.eq B b_2 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) a_4))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1))) (thm_708 A B g_1 b_2) (thm_712 A B g_1 b_2).

(; Theorem: |- ((= \lambda _10588. _10588) \lambda _10588. _10588) ;)

(; dict ;)

def thm_714 : B : hol.type -> hol.proof (hol.eq (hol.arr B B) (__10588_1 : hol.term B => __10588_1) (__10588_1 : hol.term B => __10588_1)) :=
  B : hol.type => hol.REFL (hol.arr B B) (__10588_1 : hol.term B => __10588_1).

(; Theorem: |- ((= (\lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a))) (select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))))) (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., a) b))) a)))) ;)

(; dict ;)

def thm_715 : B : hol.type -> A : hol.type -> hol.proof (hol.eq hol.bool ((fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) a_2))) (hol.select (hol.arr (Data_2EPair_2E_2A A B) A) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) a_2))))) (hol.forall A (a_1 : hol.term A => hol.forall B (b_2 : hol.term B => hol.eq A (hol.select (hol.arr (Data_2EPair_2E_2A A B) A) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq A (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) a_4))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_1 b_2)) a_1)))) :=
  B : hol.type => A : hol.type => hol.BETA_CONV (hol.arr (Data_2EPair_2E_2A A B) A) hol.bool (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) a_2))) (hol.select (hol.arr (Data_2EPair_2E_2A A B) A) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) a_2)))).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? p)) ((= (p (select p))) Data.Bool.T)) ;)

(; dict ;)

def thm_716 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.eq hol.bool (p_1 (hol.select A p_1)) hol.true)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) => thm_654 A p_1 hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) ((Data.Bool.==> (Data.Bool.? p)) Data.Bool.T)) ;)

(; dict ;)

def thm_717 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_554 A p_1 (thm_716 A p_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) Data.Bool.T) ;)

(; dict ;)

def thm_718 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) hol.true) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) hol.true (thm_717 A p_1) (thm_658 A p_1).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) ;)

(; dict ;)

def thm_719 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool hol.true (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1)))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) hol.true (thm_718 A p_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? p)) (p (select p))) ;)

(; dict ;)

def thm_720 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP hol.true (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) (thm_719 A p_1) thm_10.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a))))) (\lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a))) (select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))))) ;)

(; dict ;)

def thm_721 : B : hol.type -> A : hol.type -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) a_2)))) ((fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) a_2))) (hol.select (hol.arr (Data_2EPair_2E_2A A B) A) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) a_2)))))) :=
  B : hol.type => A : hol.type => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_720 A p_1) (hol.arr (Data_2EPair_2E_2A A B) A) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) a_2))).

(; Theorem: |- ((= Data.Bool.?) Data.Bool.?) ;)

(; dict ;)

def thm_722 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) hol.bool) hol.bool))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) hol.bool) hol.bool)).

(; Theorem: |- ((= (= (fn ((Data.Pair., a) b)))) (= (fn ((Data.Pair., a) b)))) ;)

(; dict ;)

def thm_723 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) -> hol.proof (hol.eq (hol.arr A hol.bool) (hol.eq A (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1))) (hol.eq A (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => a_2 : hol.term A => fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.REFL (hol.arr A hol.bool) (hol.eq A (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1))).

(; Theorem: |- ((= (\lambda a. \lambda b. a a)) \lambda b. a) ;)

(; dict ;)

def thm_724 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> hol.proof (hol.eq (hol.arr B A) ((a_2 : hol.term A => b_3 : hol.term B => a_2) a_1) (b_2 : hol.term B => a_1)) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => hol.BETA_CONV A (hol.arr B A) (a_2 : hol.term A => b_3 : hol.term B => a_2) a_1.

(; Theorem: |- ((= b) b) ;)

(; dict ;)

def thm_725 : B : hol.type -> b_1 : hol.term B -> hol.proof (hol.eq B b_1 b_1) :=
  B : hol.type => b_1 : hol.term B => hol.REFL B b_1.

(; Theorem: |- ((= ((\lambda a. \lambda b. a a) b)) (\lambda b. a b)) ;)

(; dict ;)

def thm_726 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> hol.proof (hol.eq A ((a_3 : hol.term A => b_4 : hol.term B => a_3) a_2 b_1) ((b_3 : hol.term B => a_2) b_1)) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => a_2 : hol.term A => hol.APP_THM B A ((a_3 : hol.term A => b_4 : hol.term B => a_3) a_2) (b_3 : hol.term B => a_2) b_1 b_1 (thm_724 A B a_2) (thm_725 B b_1).

(; Theorem: |- ((= (\lambda b. a b)) a) ;)

(; dict ;)

def thm_727 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> hol.proof (hol.eq A ((b_3 : hol.term B => a_2) b_1) a_2) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => a_2 : hol.term A => hol.BETA_CONV B A (b_3 : hol.term B => a_2) b_1.

(; Theorem: |- ((= ((\lambda a. \lambda b. a a) b)) a) ;)

(; dict ;)

def thm_728 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> hol.proof (hol.eq A ((a_3 : hol.term A => b_4 : hol.term B => a_3) a_2 b_1) a_2) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => a_2 : hol.term A => hol.TRANS A ((a_3 : hol.term A => b_4 : hol.term B => a_3) a_2 b_1) ((b_3 : hol.term B => a_2) b_1) a_2 (thm_726 B A b_1 a_2) (thm_727 B A b_1 a_2).

(; Theorem: |- ((= ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. a a) b))) ((= (fn ((Data.Pair., a) b))) a)) ;)

(; dict ;)

def thm_729 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) -> hol.proof (hol.eq hol.bool (hol.eq A (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)) ((a_4 : hol.term A => b_5 : hol.term B => a_4) a_2 b_1)) (hol.eq A (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)) a_2)) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => a_2 : hol.term A => fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.APP_THM A hol.bool (hol.eq A (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1))) (hol.eq A (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1))) ((a_4 : hol.term A => b_5 : hol.term B => a_4) a_2 b_1) a_2 (thm_723 B A b_1 a_2 fn_3) (thm_728 B A b_1 a_2).

(; Theorem: |- ((= \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. a a) b))) \lambda b. ((= (fn ((Data.Pair., a) b))) a)) ;)

(; dict ;)

def thm_730 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) -> hol.proof (hol.eq (hol.arr B hol.bool) (b_3 : hol.term B => hol.eq A (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_1 b_3)) ((a_4 : hol.term A => b_5 : hol.term B => a_4) a_1 b_3)) (b_3 : hol.term B => hol.eq A (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_1 b_3)) a_1)) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.ABS_THM B hol.bool (b_3 : hol.term B => hol.eq A (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_1 b_3)) ((a_4 : hol.term A => b_5 : hol.term B => a_4) a_1 b_3)) (b_3 : hol.term B => hol.eq A (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_1 b_3)) a_1) (b_3 : hol.term B => thm_729 B A b_3 a_1 fn_2).

(; Theorem: |- ((= (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. a a) b)))) (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a))) ;)

(; dict ;)

def thm_731 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) -> hol.proof (hol.eq hol.bool (hol.forall B (b_3 : hol.term B => hol.eq A (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_1 b_3)) ((a_4 : hol.term A => b_5 : hol.term B => a_4) a_1 b_3))) (hol.forall B (b_3 : hol.term B => hol.eq A (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_1 b_3)) a_1))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (b_3 : hol.term B => hol.eq A (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_1 b_3)) ((a_4 : hol.term A => b_5 : hol.term B => a_4) a_1 b_3)) (b_3 : hol.term B => hol.eq A (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_1 b_3)) a_1) (thm_49 B) (thm_730 A B a_1 fn_2).

(; Theorem: |- ((= \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. a a) b)))) \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a))) ;)

(; dict ;)

def thm_732 : B : hol.type -> A : hol.type -> fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) -> hol.proof (hol.eq (hol.arr A hol.bool) (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) ((a_4 : hol.term A => b_5 : hol.term B => a_4) a_2 b_3))) (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) a_2))) :=
  B : hol.type => A : hol.type => fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.ABS_THM A hol.bool (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) ((a_4 : hol.term A => b_5 : hol.term B => a_4) a_2 b_3))) (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) a_2)) (a_2 : hol.term A => thm_731 A B a_2 fn_1).

(; Theorem: |- ((= (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. a a) b))))) (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ;)

(; dict ;)

def thm_733 : B : hol.type -> A : hol.type -> fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) -> hol.proof (hol.eq hol.bool (hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) ((a_4 : hol.term A => b_5 : hol.term B => a_4) a_2 b_3)))) (hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) a_2)))) :=
  B : hol.type => A : hol.type => fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) ((a_4 : hol.term A => b_5 : hol.term B => a_4) a_2 b_3))) (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) a_2)) (thm_95 A) (thm_732 B A fn_1).

(; Theorem: |- ((= \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. a a) b))))) \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ;)

(; dict ;)

def thm_734 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) ((a_4 : hol.term A => b_5 : hol.term B => a_4) a_2 b_3)))) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) a_2)))) :=
  B : hol.type => A : hol.type => hol.ABS_THM (hol.arr (Data_2EPair_2E_2A A B) A) hol.bool (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) ((a_4 : hol.term A => b_5 : hol.term B => a_4) a_2 b_3)))) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) a_2))) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => thm_733 B A fn_1).

(; Theorem: |- ((= (Data.Bool.? \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. a a) b)))))) (Data.Bool.? \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a))))) ;)

(; dict ;)

def thm_735 : B : hol.type -> A : hol.type -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) ((a_4 : hol.term A => b_5 : hol.term B => a_4) a_2 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) a_2))))) :=
  B : hol.type => A : hol.type => hol.APP_THM (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) hol.bool) hol.bool)) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) ((a_4 : hol.term A => b_5 : hol.term B => a_4) a_2 b_3)))) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) a_2))) (thm_722 B A) (thm_734 B A).

(; Theorem: |- (Data.Bool.? \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((f a) b))))) ;)

(; dict ;)

def thm_736 : C : hol.type -> B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B C)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) C) hol.bool) hol.bool) (fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) (f_1 a_3 b_4))))) :=
  C : hol.type => B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr B C)) => thm_30 C B A f_1.

(; Theorem: |- (Data.Bool.? \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. ((_1343 a) b) a) b))))) ;)

(; dict ;)

def thm_737 : C : hol.type -> B : hol.type -> A : hol.type -> __1343_1 : hol.term (hol.arr A (hol.arr B C)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) C) hol.bool) hol.bool) (fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_1 a_5 b_6) a_3 b_4))))) :=
  C : hol.type => B : hol.type => A : hol.type => __1343_1 : hol.term (hol.arr A (hol.arr B C)) => (C : hol.type => B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr B C)) => thm_736 C B A f_1) C B A (a_2 : hol.term A => b_3 : hol.term B => __1343_1 a_2 b_3).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. ((_1343 a) b) a) b)))) x)) (Data.Bool.? \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((_1343 a) b)))))))) ((Data.Bool.==> (Data.Bool.? \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. ((_1343 a) b) a) b)))))) (Data.Bool.? \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((_1343 a) b))))))) ;)

(; dict ;)

def thm_738 : C : hol.type -> B : hol.type -> A : hol.type -> __1343_1 : hol.term (hol.arr A (hol.arr B C)) -> hol.proof (hol.imp (hol.forall (hol.arr (Data_2EPair_2E_2A A B) C) (x_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.imp ((fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) ((a_6 : hol.term A => b_7 : hol.term B => __1343_1 a_6 b_7) a_4 b_5)))) x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) C) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) (__1343_1 a_4 b_5))))))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) C) hol.bool) hol.bool) (fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_1 a_5 b_6) a_3 b_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) C) hol.bool) hol.bool) (fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) (__1343_1 a_3 b_4))))))) :=
  C : hol.type => B : hol.type => A : hol.type => __1343_1 : hol.term (hol.arr A (hol.arr B C)) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_619 A Q_1 P_2) (hol.arr (Data_2EPair_2E_2A A B) C) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) C) hol.bool) hol.bool) (fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) (__1343_1 a_3 b_4))))) (fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_1 a_5 b_6) a_3 b_4)))).

(; Theorem: |- ((= (\lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((_1343 a) b)))) fn)) (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((_1343 a) b))))) ;)

(; dict ;)

def thm_739 : C : hol.type -> B : hol.type -> A : hol.type -> fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) -> __1343_2 : hol.term (hol.arr A (hol.arr B C)) -> hol.proof (hol.eq hol.bool ((fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) (__1343_2 a_4 b_5)))) fn_1) (hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) (__1343_2 a_3 b_4))))) :=
  C : hol.type => B : hol.type => A : hol.type => fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => __1343_2 : hol.term (hol.arr A (hol.arr B C)) => hol.BETA_CONV (hol.arr (Data_2EPair_2E_2A A B) C) hol.bool (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) (__1343_2 a_4 b_5)))) fn_1.

(; Theorem: |- ((= (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((_1343 a) b))))) (\lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((_1343 a) b)))) fn)) ;)

(; dict ;)

def thm_740 : C : hol.type -> B : hol.type -> A : hol.type -> __1343_1 : hol.term (hol.arr A (hol.arr B C)) -> fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) -> hol.proof (hol.eq hol.bool (hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) (__1343_1 a_3 b_4)))) ((fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) (__1343_1 a_4 b_5)))) fn_2)) :=
  C : hol.type => B : hol.type => A : hol.type => __1343_1 : hol.term (hol.arr A (hol.arr B C)) => fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.SYM hol.bool ((fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) (__1343_1 a_4 b_5)))) fn_2) (hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) (__1343_1 a_3 b_4)))) (thm_739 C B A fn_2 __1343_1).

(; Theorem: |- ((= (= (fn ((Data.Pair., a) b)))) (= (fn ((Data.Pair., a) b)))) ;)

(; dict ;)

def thm_741 : B : hol.type -> A : hol.type -> C : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) -> hol.proof (hol.eq (hol.arr C hol.bool) (hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1))) (hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)))) :=
  B : hol.type => A : hol.type => C : hol.type => b_1 : hol.term B => a_2 : hol.term A => fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.REFL (hol.arr C hol.bool) (hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1))).

(; Theorem: |- ((= (\lambda a. \lambda b. ((_1343 a) b) a)) \lambda b. ((_1343 a) b)) ;)

(; dict ;)

def thm_742 : A : hol.type -> C : hol.type -> B : hol.type -> a_1 : hol.term A -> __1343_2 : hol.term (hol.arr A (hol.arr B C)) -> hol.proof (hol.eq (hol.arr B C) ((a_3 : hol.term A => b_4 : hol.term B => __1343_2 a_3 b_4) a_1) (b_3 : hol.term B => __1343_2 a_1 b_3)) :=
  A : hol.type => C : hol.type => B : hol.type => a_1 : hol.term A => __1343_2 : hol.term (hol.arr A (hol.arr B C)) => hol.BETA_CONV A (hol.arr B C) (a_3 : hol.term A => b_4 : hol.term B => __1343_2 a_3 b_4) a_1.

(; Theorem: |- ((= ((\lambda a. \lambda b. ((_1343 a) b) a) b)) (\lambda b. ((_1343 a) b) b)) ;)

(; dict ;)

def thm_743 : B : hol.type -> A : hol.type -> C : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> __1343_3 : hol.term (hol.arr A (hol.arr B C)) -> hol.proof (hol.eq C ((a_4 : hol.term A => b_5 : hol.term B => __1343_3 a_4 b_5) a_2 b_1) ((b_4 : hol.term B => __1343_3 a_2 b_4) b_1)) :=
  B : hol.type => A : hol.type => C : hol.type => b_1 : hol.term B => a_2 : hol.term A => __1343_3 : hol.term (hol.arr A (hol.arr B C)) => hol.APP_THM B C ((a_4 : hol.term A => b_5 : hol.term B => __1343_3 a_4 b_5) a_2) (b_4 : hol.term B => __1343_3 a_2 b_4) b_1 b_1 (thm_742 A C B a_2 __1343_3) (thm_725 B b_1).

(; Theorem: |- ((= (\lambda b. ((_1343 a) b) b)) ((_1343 a) b)) ;)

(; dict ;)

def thm_744 : A : hol.type -> B : hol.type -> C : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> __1343_3 : hol.term (hol.arr A (hol.arr B C)) -> hol.proof (hol.eq C ((b_4 : hol.term B => __1343_3 a_2 b_4) b_1) (__1343_3 a_2 b_1)) :=
  A : hol.type => B : hol.type => C : hol.type => b_1 : hol.term B => a_2 : hol.term A => __1343_3 : hol.term (hol.arr A (hol.arr B C)) => hol.BETA_CONV B C (b_4 : hol.term B => __1343_3 a_2 b_4) b_1.

(; Theorem: |- ((= ((\lambda a. \lambda b. ((_1343 a) b) a) b)) ((_1343 a) b)) ;)

(; dict ;)

def thm_745 : B : hol.type -> A : hol.type -> C : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> __1343_3 : hol.term (hol.arr A (hol.arr B C)) -> hol.proof (hol.eq C ((a_4 : hol.term A => b_5 : hol.term B => __1343_3 a_4 b_5) a_2 b_1) (__1343_3 a_2 b_1)) :=
  B : hol.type => A : hol.type => C : hol.type => b_1 : hol.term B => a_2 : hol.term A => __1343_3 : hol.term (hol.arr A (hol.arr B C)) => hol.TRANS C ((a_4 : hol.term A => b_5 : hol.term B => __1343_3 a_4 b_5) a_2 b_1) ((b_4 : hol.term B => __1343_3 a_2 b_4) b_1) (__1343_3 a_2 b_1) (thm_743 B A C b_1 a_2 __1343_3) (thm_744 A B C b_1 a_2 __1343_3).

(; Theorem: |- ((= ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. ((_1343 a) b) a) b))) ((= (fn ((Data.Pair., a) b))) ((_1343 a) b))) ;)

(; dict ;)

def thm_746 : B : hol.type -> A : hol.type -> C : hol.type -> __1343_1 : hol.term (hol.arr A (hol.arr B C)) -> b_2 : hol.term B -> a_3 : hol.term A -> fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) -> hol.proof (hol.eq hol.bool (hol.eq C (fn_4 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_2)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_1 a_5 b_6) a_3 b_2)) (hol.eq C (fn_4 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_2)) (__1343_1 a_3 b_2))) :=
  B : hol.type => A : hol.type => C : hol.type => __1343_1 : hol.term (hol.arr A (hol.arr B C)) => b_2 : hol.term B => a_3 : hol.term A => fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.APP_THM C hol.bool (hol.eq C (fn_4 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_2))) (hol.eq C (fn_4 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_2))) ((a_5 : hol.term A => b_6 : hol.term B => __1343_1 a_5 b_6) a_3 b_2) (__1343_1 a_3 b_2) (thm_741 B A C b_2 a_3 fn_4) (thm_745 B A C b_2 a_3 __1343_1).

(; Theorem: |- ((= \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. ((_1343 a) b) a) b))) \lambda b. ((= (fn ((Data.Pair., a) b))) ((_1343 a) b))) ;)

(; dict ;)

def thm_747 : A : hol.type -> C : hol.type -> B : hol.type -> __1343_1 : hol.term (hol.arr A (hol.arr B C)) -> a_2 : hol.term A -> fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) -> hol.proof (hol.eq (hol.arr B hol.bool) (b_4 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_1 a_5 b_6) a_2 b_4)) (b_4 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_4)) (__1343_1 a_2 b_4))) :=
  A : hol.type => C : hol.type => B : hol.type => __1343_1 : hol.term (hol.arr A (hol.arr B C)) => a_2 : hol.term A => fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.ABS_THM B hol.bool (b_4 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_1 a_5 b_6) a_2 b_4)) (b_4 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_4)) (__1343_1 a_2 b_4)) (b_4 : hol.term B => thm_746 B A C __1343_1 b_4 a_2 fn_3).

(; Theorem: |- ((= (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. ((_1343 a) b) a) b)))) (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((_1343 a) b)))) ;)

(; dict ;)

def thm_748 : A : hol.type -> C : hol.type -> B : hol.type -> __1343_1 : hol.term (hol.arr A (hol.arr B C)) -> a_2 : hol.term A -> fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) -> hol.proof (hol.eq hol.bool (hol.forall B (b_4 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_1 a_5 b_6) a_2 b_4))) (hol.forall B (b_4 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_4)) (__1343_1 a_2 b_4)))) :=
  A : hol.type => C : hol.type => B : hol.type => __1343_1 : hol.term (hol.arr A (hol.arr B C)) => a_2 : hol.term A => fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (b_4 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_1 a_5 b_6) a_2 b_4)) (b_4 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_4)) (__1343_1 a_2 b_4)) (thm_49 B) (thm_747 A C B __1343_1 a_2 fn_3).

(; Theorem: |- ((= \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. ((_1343 a) b) a) b)))) \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((_1343 a) b)))) ;)

(; dict ;)

def thm_749 : C : hol.type -> B : hol.type -> A : hol.type -> __1343_1 : hol.term (hol.arr A (hol.arr B C)) -> fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) -> hol.proof (hol.eq (hol.arr A hol.bool) (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_1 a_5 b_6) a_3 b_4))) (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) (__1343_1 a_3 b_4)))) :=
  C : hol.type => B : hol.type => A : hol.type => __1343_1 : hol.term (hol.arr A (hol.arr B C)) => fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.ABS_THM A hol.bool (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_1 a_5 b_6) a_3 b_4))) (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) (__1343_1 a_3 b_4))) (a_3 : hol.term A => thm_748 A C B __1343_1 a_3 fn_2).

(; Theorem: |- ((= (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. ((_1343 a) b) a) b))))) (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((_1343 a) b))))) ;)

(; dict ;)

def thm_750 : C : hol.type -> B : hol.type -> A : hol.type -> __1343_1 : hol.term (hol.arr A (hol.arr B C)) -> fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) -> hol.proof (hol.eq hol.bool (hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_1 a_5 b_6) a_3 b_4)))) (hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) (__1343_1 a_3 b_4))))) :=
  C : hol.type => B : hol.type => A : hol.type => __1343_1 : hol.term (hol.arr A (hol.arr B C)) => fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_1 a_5 b_6) a_3 b_4))) (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) (__1343_1 a_3 b_4))) (thm_95 A) (thm_749 C B A __1343_1 fn_2).

(; Theorem: |- (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. ((_1343 a) b) a) b)))) ;)

(; dict ;)

def thm_751 : C : hol.type -> B : hol.type -> A : hol.type -> __1343_1 : hol.term (hol.arr A (hol.arr B C)) -> fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) -> hyp_1 : hol.proof (hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_1 a_5 b_6) a_3 b_4)))) -> hol.proof (hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_1 a_5 b_6) a_3 b_4)))) :=
  C : hol.type => B : hol.type => A : hol.type => __1343_1 : hol.term (hol.arr A (hol.arr B C)) => fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hyp_1 : hol.proof (hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_1 a_5 b_6) a_3 b_4)))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((_1343 a) b)))) ;)

(; dict ;)

def thm_752 : C : hol.type -> B : hol.type -> A : hol.type -> __1343_1 : hol.term (hol.arr A (hol.arr B C)) -> fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) -> hyp_1 : hol.proof (hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_1 a_5 b_6) a_3 b_4)))) -> hol.proof (hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) (__1343_1 a_3 b_4)))) :=
  C : hol.type => B : hol.type => A : hol.type => __1343_1 : hol.term (hol.arr A (hol.arr B C)) => fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hyp_1 : hol.proof (hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_1 a_5 b_6) a_3 b_4)))) => hol.EQ_MP (hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_1 a_5 b_6) a_3 b_4)))) (hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) (__1343_1 a_3 b_4)))) (thm_750 C B A __1343_1 fn_2) (thm_751 C B A __1343_1 fn_2 hyp_1).

(; Theorem: |- (\lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((_1343 a) b)))) fn) ;)

(; dict ;)

def thm_753 : C : hol.type -> B : hol.type -> A : hol.type -> fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) -> __1343_2 : hol.term (hol.arr A (hol.arr B C)) -> hyp_1 : hol.proof (hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_2 a_5 b_6) a_3 b_4)))) -> hol.proof ((fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) (__1343_2 a_4 b_5)))) fn_1) :=
  C : hol.type => B : hol.type => A : hol.type => fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => __1343_2 : hol.term (hol.arr A (hol.arr B C)) => hyp_1 : hol.proof (hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_2 a_5 b_6) a_3 b_4)))) => hol.EQ_MP (hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) (__1343_2 a_3 b_4)))) ((fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) (__1343_2 a_4 b_5)))) fn_1) (thm_740 C B A __1343_2 fn_1) (thm_752 C B A __1343_2 fn_1 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((_1343 a) b))))) ;)

(; dict ;)

def thm_754 : C : hol.type -> B : hol.type -> A : hol.type -> fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) -> __1343_2 : hol.term (hol.arr A (hol.arr B C)) -> hyp_1 : hol.proof ((fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) (__1343_2 a_4 b_5)))) fn_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) C) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) (__1343_2 a_4 b_5))))) :=
  C : hol.type => B : hol.type => A : hol.type => fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => __1343_2 : hol.term (hol.arr A (hol.arr B C)) => hyp_1 : hol.proof ((fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) (__1343_2 a_4 b_5)))) fn_1) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_602 A x_1 P_2 hyp_1) (hol.arr (Data_2EPair_2E_2A A B) C) fn_1 (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) (__1343_2 a_4 b_5)))) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((_1343 a) b))))) ;)

(; dict ;)

def thm_755 : C : hol.type -> B : hol.type -> A : hol.type -> fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) -> __1343_2 : hol.term (hol.arr A (hol.arr B C)) -> hyp_1 : hol.proof (hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_2 a_5 b_6) a_3 b_4)))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) C) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) (__1343_2 a_4 b_5))))) :=
  C : hol.type => B : hol.type => A : hol.type => fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => __1343_2 : hol.term (hol.arr A (hol.arr B C)) => hyp_1 : hol.proof (hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_2 a_5 b_6) a_3 b_4)))) => hol.PROVE_HYP ((fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) (__1343_2 a_4 b_5)))) fn_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) C) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) (__1343_2 a_4 b_5))))) (thm_753 C B A fn_1 __1343_2 hyp_1) (hyp_2 : hol.proof ((fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) (__1343_2 a_4 b_5)))) fn_1) => thm_754 C B A fn_1 __1343_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. ((_1343 a) b) a) b))))) (Data.Bool.? \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((_1343 a) b)))))) ;)

(; dict ;)

def thm_756 : C : hol.type -> B : hol.type -> A : hol.type -> __1343_1 : hol.term (hol.arr A (hol.arr B C)) -> fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) -> hol.proof (hol.imp (hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_1 a_5 b_6) a_3 b_4)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) C) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) (__1343_1 a_4 b_5)))))) :=
  C : hol.type => B : hol.type => A : hol.type => __1343_1 : hol.term (hol.arr A (hol.arr B C)) => fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hyp_1 : hol.proof (hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_1 a_5 b_6) a_3 b_4)))) => thm_755 C B A fn_2 __1343_1 hyp_1.

(; Theorem: |- ((= (\lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. ((_1343 a) b) a) b)))) fn)) (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a_1. \lambda b_1. ((_1343 a_1) b_1) a) b))))) ;)

(; dict ;)

def thm_757 : C : hol.type -> B : hol.type -> A : hol.type -> fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) -> __1343_2 : hol.term (hol.arr A (hol.arr B C)) -> hol.proof (hol.eq hol.bool ((fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) ((a_6 : hol.term A => b_7 : hol.term B => __1343_2 a_6 b_7) a_4 b_5)))) fn_1) (hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) ((a__1_5 : hol.term A => b__1_6 : hol.term B => __1343_2 a__1_5 b__1_6) a_3 b_4))))) :=
  C : hol.type => B : hol.type => A : hol.type => fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => __1343_2 : hol.term (hol.arr A (hol.arr B C)) => hol.BETA_CONV (hol.arr (Data_2EPair_2E_2A A B) C) hol.bool (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) ((a_6 : hol.term A => b_7 : hol.term B => __1343_2 a_6 b_7) a_4 b_5)))) fn_1.

(; Theorem: |- (\lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. ((_1343 a) b) a) b)))) fn) ;)

(; dict ;)

def thm_758 : C : hol.type -> B : hol.type -> A : hol.type -> fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) -> __1343_2 : hol.term (hol.arr A (hol.arr B C)) -> hyp_1 : hol.proof ((fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) ((a_6 : hol.term A => b_7 : hol.term B => __1343_2 a_6 b_7) a_4 b_5)))) fn_1) -> hol.proof ((fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) ((a_6 : hol.term A => b_7 : hol.term B => __1343_2 a_6 b_7) a_4 b_5)))) fn_1) :=
  C : hol.type => B : hol.type => A : hol.type => fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => __1343_2 : hol.term (hol.arr A (hol.arr B C)) => hyp_1 : hol.proof ((fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) ((a_6 : hol.term A => b_7 : hol.term B => __1343_2 a_6 b_7) a_4 b_5)))) fn_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a_1. \lambda b_1. ((_1343 a_1) b_1) a) b)))) ;)

(; dict ;)

def thm_759 : C : hol.type -> B : hol.type -> A : hol.type -> __1343_1 : hol.term (hol.arr A (hol.arr B C)) -> fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) -> hyp_1 : hol.proof ((fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) ((a_6 : hol.term A => b_7 : hol.term B => __1343_1 a_6 b_7) a_4 b_5)))) fn_2) -> hol.proof (hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) ((a__1_5 : hol.term A => b__1_6 : hol.term B => __1343_1 a__1_5 b__1_6) a_3 b_4)))) :=
  C : hol.type => B : hol.type => A : hol.type => __1343_1 : hol.term (hol.arr A (hol.arr B C)) => fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hyp_1 : hol.proof ((fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) ((a_6 : hol.term A => b_7 : hol.term B => __1343_1 a_6 b_7) a_4 b_5)))) fn_2) => hol.EQ_MP ((fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) ((a_6 : hol.term A => b_7 : hol.term B => __1343_1 a_6 b_7) a_4 b_5)))) fn_2) (hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) ((a__1_5 : hol.term A => b__1_6 : hol.term B => __1343_1 a__1_5 b__1_6) a_3 b_4)))) (thm_757 C B A fn_2 __1343_1) (thm_758 C B A fn_2 __1343_1 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((_1343 a) b))))) ;)

(; dict ;)

def thm_760 : C : hol.type -> B : hol.type -> A : hol.type -> fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) -> __1343_2 : hol.term (hol.arr A (hol.arr B C)) -> hyp_1 : hol.proof ((fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) ((a_6 : hol.term A => b_7 : hol.term B => __1343_2 a_6 b_7) a_4 b_5)))) fn_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) C) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) (__1343_2 a_4 b_5))))) :=
  C : hol.type => B : hol.type => A : hol.type => fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => __1343_2 : hol.term (hol.arr A (hol.arr B C)) => hyp_1 : hol.proof ((fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) ((a_6 : hol.term A => b_7 : hol.term B => __1343_2 a_6 b_7) a_4 b_5)))) fn_1) => thm_756 C B A __1343_2 fn_1 (thm_759 C B A __1343_2 fn_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. ((_1343 a) b) a) b)))) fn)) (Data.Bool.? \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((_1343 a) b)))))) ;)

(; dict ;)

def thm_761 : C : hol.type -> B : hol.type -> A : hol.type -> fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) -> __1343_2 : hol.term (hol.arr A (hol.arr B C)) -> hol.proof (hol.imp ((fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) ((a_6 : hol.term A => b_7 : hol.term B => __1343_2 a_6 b_7) a_4 b_5)))) fn_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) C) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) (__1343_2 a_4 b_5)))))) :=
  C : hol.type => B : hol.type => A : hol.type => fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => __1343_2 : hol.term (hol.arr A (hol.arr B C)) => hyp_1 : hol.proof ((fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) ((a_6 : hol.term A => b_7 : hol.term B => __1343_2 a_6 b_7) a_4 b_5)))) fn_1) => thm_760 C B A fn_1 __1343_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda fn. ((Data.Bool.==> (\lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. ((_1343 a) b) a) b)))) fn)) (Data.Bool.? \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((_1343 a) b))))))) ;)

(; dict ;)

def thm_762 : C : hol.type -> B : hol.type -> A : hol.type -> __1343_1 : hol.term (hol.arr A (hol.arr B C)) -> hol.proof (hol.forall (hol.arr (Data_2EPair_2E_2A A B) C) (fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.imp ((fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) ((a_6 : hol.term A => b_7 : hol.term B => __1343_1 a_6 b_7) a_4 b_5)))) fn_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) C) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq C (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) (__1343_1 a_4 b_5))))))) :=
  C : hol.type => B : hol.type => A : hol.type => __1343_1 : hol.term (hol.arr A (hol.arr B C)) => fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => thm_761 C B A fn_2 __1343_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. ((_1343 a) b) a) b)))))) (Data.Bool.? \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((_1343 a) b)))))) ;)

(; dict ;)

def thm_763 : C : hol.type -> B : hol.type -> A : hol.type -> __1343_1 : hol.term (hol.arr A (hol.arr B C)) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) C) hol.bool) hol.bool) (fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_1 a_5 b_6) a_3 b_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) C) hol.bool) hol.bool) (fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) (__1343_1 a_3 b_4)))))) :=
  C : hol.type => B : hol.type => A : hol.type => __1343_1 : hol.term (hol.arr A (hol.arr B C)) => thm_738 C B A __1343_1 (thm_762 C B A __1343_1).

(; Theorem: |- (Data.Bool.? \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. ((_1343 a) b) a) b))))) ;)

(; dict ;)

def thm_764 : C : hol.type -> B : hol.type -> A : hol.type -> __1343_1 : hol.term (hol.arr A (hol.arr B C)) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) C) hol.bool) hol.bool) (fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_1 a_5 b_6) a_3 b_4))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) C) hol.bool) hol.bool) (fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_1 a_5 b_6) a_3 b_4))))) :=
  C : hol.type => B : hol.type => A : hol.type => __1343_1 : hol.term (hol.arr A (hol.arr B C)) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) C) hol.bool) hol.bool) (fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_1 a_5 b_6) a_3 b_4))))) => hyp_1.

(; Theorem: |- (Data.Bool.? \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((_1343 a) b))))) ;)

(; dict ;)

def thm_765 : C : hol.type -> B : hol.type -> A : hol.type -> __1343_1 : hol.term (hol.arr A (hol.arr B C)) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) C) hol.bool) hol.bool) (fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_1 a_5 b_6) a_3 b_4))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) C) hol.bool) hol.bool) (fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) (__1343_1 a_3 b_4))))) :=
  C : hol.type => B : hol.type => A : hol.type => __1343_1 : hol.term (hol.arr A (hol.arr B C)) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) C) hol.bool) hol.bool) (fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_1 a_5 b_6) a_3 b_4))))) => thm_763 C B A __1343_1 (thm_764 C B A __1343_1 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((_1343 a) b))))) ;)

(; dict ;)

def thm_766 : C : hol.type -> B : hol.type -> A : hol.type -> __1343_1 : hol.term (hol.arr A (hol.arr B C)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) C) hol.bool) hol.bool) (fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) (__1343_1 a_3 b_4))))) :=
  C : hol.type => B : hol.type => A : hol.type => __1343_1 : hol.term (hol.arr A (hol.arr B C)) => hol.PROVE_HYP (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) C) hol.bool) hol.bool) (fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_1 a_5 b_6) a_3 b_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) C) hol.bool) hol.bool) (fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) (__1343_1 a_3 b_4))))) (thm_737 C B A __1343_1) (hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) C) hol.bool) hol.bool) (fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) C) => hol.forall A (a_3 : hol.term A => hol.forall B (b_4 : hol.term B => hol.eq C (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_3 b_4)) ((a_5 : hol.term A => b_6 : hol.term B => __1343_1 a_5 b_6) a_3 b_4))))) => thm_765 C B A __1343_1 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. a a) b))))) ;)

(; dict ;)

def thm_767 : B : hol.type -> A : hol.type -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) ((a_4 : hol.term A => b_5 : hol.term B => a_4) a_2 b_3))))) :=
  B : hol.type => A : hol.type => (C : hol.type => B : hol.type => A : hol.type => __1343_1 : hol.term (hol.arr A (hol.arr B C)) => thm_766 C B A __1343_1) A B A (a_1 : hol.term A => b_2 : hol.term B => a_1).

(; Theorem: |- (Data.Bool.? \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ;)

(; dict ;)

def thm_768 : B : hol.type -> A : hol.type -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) a_2)))) :=
  B : hol.type => A : hol.type => hol.EQ_MP (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) ((a_4 : hol.term A => b_5 : hol.term B => a_4) a_2 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) A) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) a_2)))) (thm_735 B A) (thm_767 B A).

(; Theorem: |- (\lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a))) (select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a))))) ;)

(; dict ;)

def thm_769 : B : hol.type -> A : hol.type -> hol.proof ((fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) a_2))) (hol.select (hol.arr (Data_2EPair_2E_2A A B) A) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) a_2))))) :=
  B : hol.type => A : hol.type => thm_721 B A (thm_768 B A).

(; Theorem: |- (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., a) b))) a))) ;)

(; dict ;)

def thm_770 : B : hol.type -> A : hol.type -> hol.proof (hol.forall A (a_1 : hol.term A => hol.forall B (b_2 : hol.term B => hol.eq A (hol.select (hol.arr (Data_2EPair_2E_2A A B) A) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq A (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) a_4))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_1 b_2)) a_1))) :=
  B : hol.type => A : hol.type => hol.EQ_MP ((fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) a_2))) (hol.select (hol.arr (Data_2EPair_2E_2A A B) A) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq A (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) a_2))))) (hol.forall A (a_1 : hol.term A => hol.forall B (b_2 : hol.term B => hol.eq A (hol.select (hol.arr (Data_2EPair_2E_2A A B) A) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq A (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) a_4))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_1 b_2)) a_1))) (thm_715 B A) (thm_769 B A).

(; Theorem: |- (Data.Bool.! \lambda b. ((= ((select \lambda fn. (Data.Bool.! \lambda a_1. (Data.Bool.! \lambda b_1. ((= (fn ((Data.Pair., a_1) b_1))) a_1)))) ((Data.Pair., a) b))) a)) ;)

(; dict ;)

def thm_771 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> hol.proof (hol.forall B (b_2 : hol.term B => hol.eq A (hol.select (hol.arr (Data_2EPair_2E_2A A B) A) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a__1_4 : hol.term A => hol.forall B (b__1_5 : hol.term B => hol.eq A (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a__1_4 b__1_5)) a__1_4))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_1 b_2)) a_1)) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => thm_770 B A a_1.

(; Theorem: |- ((= ((select \lambda fn. (Data.Bool.! \lambda a_1. (Data.Bool.! \lambda b_1. ((= (fn ((Data.Pair., a_1) b_1))) a_1)))) ((Data.Pair., a) b))) a) ;)

(; dict ;)

def thm_772 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> hol.proof (hol.eq A (hol.select (hol.arr (Data_2EPair_2E_2A A B) A) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a__1_4 : hol.term A => hol.forall B (b__1_5 : hol.term B => hol.eq A (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a__1_4 b__1_5)) a__1_4))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)) a_2) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => a_2 : hol.term A => thm_771 A B a_2 b_1.

(; Theorem: |- ((= a) ((select \lambda fn. (Data.Bool.! \lambda a_1. (Data.Bool.! \lambda b_1. ((= (fn ((Data.Pair., a_1) b_1))) a_1)))) ((Data.Pair., a) b))) ;)

(; dict ;)

def thm_773 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> hol.proof (hol.eq A a_2 (hol.select (hol.arr (Data_2EPair_2E_2A A B) A) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a__1_4 : hol.term A => hol.forall B (b__1_5 : hol.term B => hol.eq A (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a__1_4 b__1_5)) a__1_4))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => a_2 : hol.term A => hol.SYM A (hol.select (hol.arr (Data_2EPair_2E_2A A B) A) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) A) => hol.forall A (a__1_4 : hol.term A => hol.forall B (b__1_5 : hol.term B => hol.eq A (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a__1_4 b__1_5)) a__1_4))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)) a_2 (thm_772 B A b_1 a_2).

(; Theorem: |- ((= a) ((select \lambda fn. (Data.Bool.! \lambda a_1. (Data.Bool.! \lambda b_1. ((= (fn ((Data.Pair., a_1) b_1))) a_1)))) ((Data.Pair., a) b))) ;)

(; dict ;)

def thm_774 : A : hol.type -> B : hol.type -> b_1 : hol.term (hol.arr A B) -> a_2 : hol.term B -> hol.proof (hol.eq B a_2 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a__1_4 : hol.term B => hol.forall (hol.arr A B) (b__1_5 : hol.term (hol.arr A B) => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a__1_4 b__1_5)) a__1_4))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_2 b_1))) :=
  A : hol.type => B : hol.type => b_1 : hol.term (hol.arr A B) => a_2 : hol.term B => (B : hol.type => A : hol.type => b_1 : hol.term B => a_2 : hol.term A => thm_773 B A b_1 a_2) (hol.arr A B) B b_1 a_2.

(; Theorem: |- ((= b) ((select \lambda fn. (Data.Bool.! \lambda a_1. (Data.Bool.! \lambda b_1. ((= (fn ((Data.Pair., a_1) b_1))) a_1)))) ((Data.Pair., b) g))) ;)

(; dict ;)

def thm_775 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> hol.proof (hol.eq B b_2 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a__1_4 : hol.term B => hol.forall (hol.arr A B) (b__1_5 : hol.term (hol.arr A B) => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a__1_4 b__1_5)) a__1_4))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => (A : hol.type => B : hol.type => b_1 : hol.term (hol.arr A B) => a_2 : hol.term B => thm_774 A B b_1 a_2) A B g_1 b_2.

(; Theorem: |- ((= (\lambda _10588. _10588 b)) (\lambda _10588. _10588 ((select \lambda fn. (Data.Bool.! \lambda a_1. (Data.Bool.! \lambda b_1. ((= (fn ((Data.Pair., a_1) b_1))) a_1)))) ((Data.Pair., b) g)))) ;)

(; dict ;)

def thm_776 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> hol.proof (hol.eq B ((__10588_3 : hol.term B => __10588_3) b_2) ((__10588_3 : hol.term B => __10588_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a__1_4 : hol.term B => hol.forall (hol.arr A B) (b__1_5 : hol.term (hol.arr A B) => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a__1_4 b__1_5)) a__1_4))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => hol.APP_THM B B (__10588_3 : hol.term B => __10588_3) (__10588_3 : hol.term B => __10588_3) b_2 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a__1_4 : hol.term B => hol.forall (hol.arr A B) (b__1_5 : hol.term (hol.arr A B) => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a__1_4 b__1_5)) a__1_4))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (thm_714 B) (thm_775 A B g_1 b_2).

(; Theorem: |- ((= ((= b) b)) ((= b) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g)))) ;)

(; dict ;)

def thm_777 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq B b_2 b_2) (hol.eq B b_2 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) a_4))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => hol.APP_THM B hol.bool (hol.eq B b_2) (hol.eq B b_2) b_2 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) a_4))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (thm_705 B b_2) (hol.EQ_MP (hol.eq B ((__10588_3 : hol.term B => __10588_3) b_2) ((__10588_3 : hol.term B => __10588_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a__1_4 : hol.term B => hol.forall (hol.arr A B) (b__1_5 : hol.term (hol.arr A B) => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a__1_4 b__1_5)) a__1_4))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)))) (hol.eq B b_2 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) a_4))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1))) (thm_713 A B g_1 b_2) (thm_776 A B g_1 b_2)).

(; Theorem: |- ((= (\lambda _10592. \lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) _10592) (_10593 x)) b)) (\lambda _10592. \lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) _10592) (_10593 x)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g)))) ;)

(; dict ;)

def thm_778 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> a_3 : hol.term A -> hol.proof (hol.eq (hol.arr (hol.arr A B) (hol.arr A B)) ((__10592_4 : hol.term B => __10593_5 : hol.term (hol.arr A B) => x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) __10592_4 (__10593_5 x_6)) b_2) ((__10592_4 : hol.term B => __10593_5 : hol.term (hol.arr A B) => x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) __10592_4 (__10593_5 x_6)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq B (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) a_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => a_3 : hol.term A => hol.APP_THM B (hol.arr (hol.arr A B) (hol.arr A B)) (__10592_4 : hol.term B => __10593_5 : hol.term (hol.arr A B) => x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) __10592_4 (__10593_5 x_6)) (__10592_4 : hol.term B => __10593_5 : hol.term (hol.arr A B) => x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) __10592_4 (__10593_5 x_6)) b_2 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq B (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) a_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (thm_704 A B a_3) (hol.EQ_MP (hol.eq B b_2 b_2) (hol.eq B b_2 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq B (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) a_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1))) (thm_777 A B g_1 b_2) (thm_725 B b_2)).

(; Theorem: |- ((= \lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) b) (_10593 x))) \lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g))) (_10593 x))) ;)

(; dict ;)

def thm_779 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> a_3 : hol.term A -> hol.proof (hol.eq (hol.arr (hol.arr A B) (hol.arr A B)) (__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) b_2 (__10593_4 x_5)) (__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (__10593_4 x_5))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => a_3 : hol.term A => hol.EQ_MP (hol.eq (hol.arr (hol.arr A B) (hol.arr A B)) ((__10592_4 : hol.term B => __10593_5 : hol.term (hol.arr A B) => x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) __10592_4 (__10593_5 x_6)) b_2) ((__10592_4 : hol.term B => __10593_5 : hol.term (hol.arr A B) => x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) __10592_4 (__10593_5 x_6)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq B (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) a_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)))) (hol.eq (hol.arr (hol.arr A B) (hol.arr A B)) (__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) b_2 (__10593_4 x_5)) (__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (__10593_4 x_5))) (thm_703 B A g_1 b_2 a_3) (thm_778 B A g_1 b_2 a_3).

(; Theorem: |- ((= (= g)) (= g)) ;)

(; dict ;)

def thm_780 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (hol.eq (hol.arr A B) g_1) (hol.eq (hol.arr A B) g_1)) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => hol.REFL (hol.arr (hol.arr A B) hol.bool) (hol.eq (hol.arr A B) g_1).

(; Theorem: |- ((= (= (\lambda _10590. _10590 g))) (= (\lambda _10590. _10590 g))) ;)

(; dict ;)

def thm_781 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (hol.eq (hol.arr A B) ((__10590_2 : hol.term (hol.arr A B) => __10590_2) g_1)) (hol.eq (hol.arr A B) ((__10590_2 : hol.term (hol.arr A B) => __10590_2) g_1))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => hol.REFL (hol.arr (hol.arr A B) hol.bool) (hol.eq (hol.arr A B) ((__10590_2 : hol.term (hol.arr A B) => __10590_2) g_1)).

(; Theorem: |- ((= (\lambda _10590. _10590 ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) ((Data.Pair., b) g)))) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) ((Data.Pair., b) g))) ;)

(; dict ;)

def thm_782 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> hol.proof (hol.eq (hol.arr A B) ((__10590_3 : hol.term (hol.arr A B) => __10590_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) b_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) b_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => hol.BETA_CONV (hol.arr A B) (hol.arr A B) (__10590_3 : hol.term (hol.arr A B) => __10590_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) b_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)).

(; Theorem: |- ((= ((= (\lambda _10590. _10590 g)) (\lambda _10590. _10590 ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) ((Data.Pair., b) g))))) ((= (\lambda _10590. _10590 g)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) ((Data.Pair., b) g)))) ;)

(; dict ;)

def thm_783 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A B) ((__10590_3 : hol.term (hol.arr A B) => __10590_3) g_2) ((__10590_3 : hol.term (hol.arr A B) => __10590_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) b_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_1 g_2)))) (hol.eq (hol.arr A B) ((__10590_3 : hol.term (hol.arr A B) => __10590_3) g_2) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) b_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_1 g_2)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr A B) hol.bool (hol.eq (hol.arr A B) ((__10590_3 : hol.term (hol.arr A B) => __10590_3) g_2)) (hol.eq (hol.arr A B) ((__10590_3 : hol.term (hol.arr A B) => __10590_3) g_2)) ((__10590_3 : hol.term (hol.arr A B) => __10590_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) b_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_1 g_2))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) b_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_1 g_2)) (thm_781 B A g_2) (thm_782 B A g_2 b_1).

(; Theorem: |- ((= (\lambda _10590. _10590 g)) g) ;)

(; dict ;)

def thm_784 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A B) ((__10590_2 : hol.term (hol.arr A B) => __10590_2) g_1) g_1) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => hol.BETA_CONV (hol.arr A B) (hol.arr A B) (__10590_2 : hol.term (hol.arr A B) => __10590_2) g_1.

(; Theorem: |- ((= (= (\lambda _10590. _10590 g))) (= g)) ;)

(; dict ;)

def thm_785 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (hol.eq (hol.arr A B) ((__10590_2 : hol.term (hol.arr A B) => __10590_2) g_1)) (hol.eq (hol.arr A B) g_1)) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr A B) (hol.arr (hol.arr A B) hol.bool) (hol.eq (hol.arr A B)) (hol.eq (hol.arr A B)) ((__10590_2 : hol.term (hol.arr A B) => __10590_2) g_1) g_1 (thm_689 B A) (thm_784 B A g_1).

(; Theorem: |- ((= ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) ((Data.Pair., b) g))) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) ((Data.Pair., b) g))) ;)

(; dict ;)

def thm_786 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> hol.proof (hol.eq (hol.arr A B) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) b_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) b_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => hol.REFL (hol.arr A B) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) b_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)).

(; Theorem: |- ((= ((= (\lambda _10590. _10590 g)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) ((Data.Pair., b) g)))) ((= g) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) ((Data.Pair., b) g)))) ;)

(; dict ;)

def thm_787 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A B) ((__10590_3 : hol.term (hol.arr A B) => __10590_3) g_2) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) b_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_1 g_2))) (hol.eq (hol.arr A B) g_2 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) b_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_1 g_2)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr A B) hol.bool (hol.eq (hol.arr A B) ((__10590_3 : hol.term (hol.arr A B) => __10590_3) g_2)) (hol.eq (hol.arr A B) g_2) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) b_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_1 g_2)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) b_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_1 g_2)) (thm_785 B A g_2) (thm_786 B A g_2 b_1).

(; Theorem: |- ((= ((= (\lambda _10590. _10590 g)) (\lambda _10590. _10590 ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) ((Data.Pair., b) g))))) ((= g) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) ((Data.Pair., b) g)))) ;)

(; dict ;)

def thm_788 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A B) ((__10590_3 : hol.term (hol.arr A B) => __10590_3) g_2) ((__10590_3 : hol.term (hol.arr A B) => __10590_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) b_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_1 g_2)))) (hol.eq (hol.arr A B) g_2 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) b_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_1 g_2)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.eq (hol.arr A B) ((__10590_3 : hol.term (hol.arr A B) => __10590_3) g_2) ((__10590_3 : hol.term (hol.arr A B) => __10590_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) b_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_1 g_2)))) (hol.eq (hol.arr A B) ((__10590_3 : hol.term (hol.arr A B) => __10590_3) g_2) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) b_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_1 g_2))) (hol.eq (hol.arr A B) g_2 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) b_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_1 g_2))) (thm_783 B A b_1 g_2) (thm_787 B A b_1 g_2).

(; Theorem: |- ((= \lambda _10590. _10590) \lambda _10590. _10590) ;)

(; dict ;)

def thm_789 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A B) (hol.arr A B)) (__10590_1 : hol.term (hol.arr A B) => __10590_1) (__10590_1 : hol.term (hol.arr A B) => __10590_1)) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr A B) (hol.arr A B)) (__10590_1 : hol.term (hol.arr A B) => __10590_1).

(; Theorem: |- ((= (\lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b))) (select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))))) (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) ((Data.Pair., a) b))) b)))) ;)

(; dict ;)

def thm_790 : B : hol.type -> A : hol.type -> hol.proof (hol.eq hol.bool ((fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) b_3))) (hol.select (hol.arr (Data_2EPair_2E_2A A B) B) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) b_3))))) (hol.forall A (a_1 : hol.term A => hol.forall B (b_2 : hol.term B => hol.eq B (hol.select (hol.arr (Data_2EPair_2E_2A A B) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) b_5))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_1 b_2)) b_2)))) :=
  B : hol.type => A : hol.type => hol.BETA_CONV (hol.arr (Data_2EPair_2E_2A A B) B) hol.bool (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) b_3))) (hol.select (hol.arr (Data_2EPair_2E_2A A B) B) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) b_3)))).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b))))) (\lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b))) (select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))))) ;)

(; dict ;)

def thm_791 : B : hol.type -> A : hol.type -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) b_3)))) ((fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) b_3))) (hol.select (hol.arr (Data_2EPair_2E_2A A B) B) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) b_3)))))) :=
  B : hol.type => A : hol.type => (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_720 A p_1) (hol.arr (Data_2EPair_2E_2A A B) B) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) b_3))).

(; Theorem: |- ((= Data.Bool.?) Data.Bool.?) ;)

(; dict ;)

def thm_792 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) hol.bool) hol.bool))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) hol.bool) hol.bool)).

(; Theorem: |- ((= (= (fn ((Data.Pair., a) b)))) (= (fn ((Data.Pair., a) b)))) ;)

(; dict ;)

def thm_793 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1))) (hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)))) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => a_2 : hol.term A => fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.REFL (hol.arr B hol.bool) (hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1))).

(; Theorem: |- ((= (\lambda a. \lambda b. b a)) \lambda b. b) ;)

(; dict ;)

def thm_794 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> hol.proof (hol.eq (hol.arr B B) ((a_2 : hol.term A => b_3 : hol.term B => b_3) a_1) (b_2 : hol.term B => b_2)) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => hol.BETA_CONV A (hol.arr B B) (a_2 : hol.term A => b_3 : hol.term B => b_3) a_1.

(; Theorem: |- ((= ((\lambda a. \lambda b. b a) b)) (\lambda b. b b)) ;)

(; dict ;)

def thm_795 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> hol.proof (hol.eq B ((a_3 : hol.term A => b_4 : hol.term B => b_4) a_2 b_1) ((b_3 : hol.term B => b_3) b_1)) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => a_2 : hol.term A => hol.APP_THM B B ((a_3 : hol.term A => b_4 : hol.term B => b_4) a_2) (b_3 : hol.term B => b_3) b_1 b_1 (thm_794 A B a_2) (thm_725 B b_1).

(; Theorem: |- ((= (\lambda b. b b)) b) ;)

(; dict ;)

def thm_796 : B : hol.type -> b_1 : hol.term B -> hol.proof (hol.eq B ((b_2 : hol.term B => b_2) b_1) b_1) :=
  B : hol.type => b_1 : hol.term B => hol.BETA_CONV B B (b_2 : hol.term B => b_2) b_1.

(; Theorem: |- ((= ((\lambda a. \lambda b. b a) b)) b) ;)

(; dict ;)

def thm_797 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> hol.proof (hol.eq B ((a_3 : hol.term A => b_4 : hol.term B => b_4) a_2 b_1) b_1) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => a_2 : hol.term A => hol.TRANS B ((a_3 : hol.term A => b_4 : hol.term B => b_4) a_2 b_1) ((b_3 : hol.term B => b_3) b_1) b_1 (thm_795 A B b_1 a_2) (thm_796 B b_1).

(; Theorem: |- ((= ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. b a) b))) ((= (fn ((Data.Pair., a) b))) b)) ;)

(; dict ;)

def thm_798 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) -> hol.proof (hol.eq hol.bool (hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)) ((a_4 : hol.term A => b_5 : hol.term B => b_5) a_2 b_1)) (hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)) b_1)) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => a_2 : hol.term A => fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.APP_THM B hol.bool (hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1))) (hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1))) ((a_4 : hol.term A => b_5 : hol.term B => b_5) a_2 b_1) b_1 (thm_793 A B b_1 a_2 fn_3) (thm_797 A B b_1 a_2).

(; Theorem: |- ((= \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. b a) b))) \lambda b. ((= (fn ((Data.Pair., a) b))) b)) ;)

(; dict ;)

def thm_799 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) -> hol.proof (hol.eq (hol.arr B hol.bool) (b_3 : hol.term B => hol.eq B (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_1 b_3)) ((a_4 : hol.term A => b_5 : hol.term B => b_5) a_1 b_3)) (b_3 : hol.term B => hol.eq B (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_1 b_3)) b_3)) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.ABS_THM B hol.bool (b_3 : hol.term B => hol.eq B (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_1 b_3)) ((a_4 : hol.term A => b_5 : hol.term B => b_5) a_1 b_3)) (b_3 : hol.term B => hol.eq B (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_1 b_3)) b_3) (b_3 : hol.term B => thm_798 A B b_3 a_1 fn_2).

(; Theorem: |- ((= (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. b a) b)))) (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b))) ;)

(; dict ;)

def thm_800 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) -> hol.proof (hol.eq hol.bool (hol.forall B (b_3 : hol.term B => hol.eq B (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_1 b_3)) ((a_4 : hol.term A => b_5 : hol.term B => b_5) a_1 b_3))) (hol.forall B (b_3 : hol.term B => hol.eq B (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_1 b_3)) b_3))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => fn_2 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (b_3 : hol.term B => hol.eq B (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_1 b_3)) ((a_4 : hol.term A => b_5 : hol.term B => b_5) a_1 b_3)) (b_3 : hol.term B => hol.eq B (fn_2 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_1 b_3)) b_3) (thm_49 B) (thm_799 A B a_1 fn_2).

(; Theorem: |- ((= \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. b a) b)))) \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b))) ;)

(; dict ;)

def thm_801 : B : hol.type -> A : hol.type -> fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) -> hol.proof (hol.eq (hol.arr A hol.bool) (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) ((a_4 : hol.term A => b_5 : hol.term B => b_5) a_2 b_3))) (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) b_3))) :=
  B : hol.type => A : hol.type => fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.ABS_THM A hol.bool (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) ((a_4 : hol.term A => b_5 : hol.term B => b_5) a_2 b_3))) (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) b_3)) (a_2 : hol.term A => thm_800 A B a_2 fn_1).

(; Theorem: |- ((= (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. b a) b))))) (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) ;)

(; dict ;)

def thm_802 : B : hol.type -> A : hol.type -> fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) -> hol.proof (hol.eq hol.bool (hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) ((a_4 : hol.term A => b_5 : hol.term B => b_5) a_2 b_3)))) (hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) b_3)))) :=
  B : hol.type => A : hol.type => fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) ((a_4 : hol.term A => b_5 : hol.term B => b_5) a_2 b_3))) (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) b_3)) (thm_95 A) (thm_801 B A fn_1).

(; Theorem: |- ((= \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. b a) b))))) \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) ;)

(; dict ;)

def thm_803 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) ((a_4 : hol.term A => b_5 : hol.term B => b_5) a_2 b_3)))) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) b_3)))) :=
  B : hol.type => A : hol.type => hol.ABS_THM (hol.arr (Data_2EPair_2E_2A A B) B) hol.bool (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) ((a_4 : hol.term A => b_5 : hol.term B => b_5) a_2 b_3)))) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) b_3))) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => thm_802 B A fn_1).

(; Theorem: |- ((= (Data.Bool.? \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. b a) b)))))) (Data.Bool.? \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b))))) ;)

(; dict ;)

def thm_804 : B : hol.type -> A : hol.type -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) ((a_4 : hol.term A => b_5 : hol.term B => b_5) a_2 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) b_3))))) :=
  B : hol.type => A : hol.type => hol.APP_THM (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) hol.bool) hol.bool)) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) ((a_4 : hol.term A => b_5 : hol.term B => b_5) a_2 b_3)))) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) b_3))) (thm_792 B A) (thm_803 B A).

(; Theorem: |- (Data.Bool.? \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((\lambda a. \lambda b. b a) b))))) ;)

(; dict ;)

def thm_805 : B : hol.type -> A : hol.type -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) ((a_4 : hol.term A => b_5 : hol.term B => b_5) a_2 b_3))))) :=
  B : hol.type => A : hol.type => (C : hol.type => B : hol.type => A : hol.type => __1343_1 : hol.term (hol.arr A (hol.arr B C)) => thm_766 C B A __1343_1) B B A (a_1 : hol.term A => b_2 : hol.term B => b_2).

(; Theorem: |- (Data.Bool.? \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) ;)

(; dict ;)

def thm_806 : B : hol.type -> A : hol.type -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) b_3)))) :=
  B : hol.type => A : hol.type => hol.EQ_MP (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) ((a_4 : hol.term A => b_5 : hol.term B => b_5) a_2 b_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A A B) B) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) b_3)))) (thm_804 B A) (thm_805 B A).

(; Theorem: |- (\lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b))) (select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b))))) ;)

(; dict ;)

def thm_807 : B : hol.type -> A : hol.type -> hol.proof ((fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) b_3))) (hol.select (hol.arr (Data_2EPair_2E_2A A B) B) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) b_3))))) :=
  B : hol.type => A : hol.type => thm_791 B A (thm_806 B A).

(; Theorem: |- (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) ((Data.Pair., a) b))) b))) ;)

(; dict ;)

def thm_808 : B : hol.type -> A : hol.type -> hol.proof (hol.forall A (a_1 : hol.term A => hol.forall B (b_2 : hol.term B => hol.eq B (hol.select (hol.arr (Data_2EPair_2E_2A A B) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) b_5))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_1 b_2)) b_2))) :=
  B : hol.type => A : hol.type => hol.EQ_MP ((fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) b_3))) (hol.select (hol.arr (Data_2EPair_2E_2A A B) B) (fn_1 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a_2 : hol.term A => hol.forall B (b_3 : hol.term B => hol.eq B (fn_1 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_3)) b_3))))) (hol.forall A (a_1 : hol.term A => hol.forall B (b_2 : hol.term B => hol.eq B (hol.select (hol.arr (Data_2EPair_2E_2A A B) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a_4 : hol.term A => hol.forall B (b_5 : hol.term B => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_4 b_5)) b_5))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_1 b_2)) b_2))) (thm_790 B A) (thm_807 B A).

(; Theorem: |- (Data.Bool.! \lambda b. ((= ((select \lambda fn. (Data.Bool.! \lambda a_1. (Data.Bool.! \lambda b_1. ((= (fn ((Data.Pair., a_1) b_1))) b_1)))) ((Data.Pair., a) b))) b)) ;)

(; dict ;)

def thm_809 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> hol.proof (hol.forall B (b_2 : hol.term B => hol.eq B (hol.select (hol.arr (Data_2EPair_2E_2A A B) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a__1_4 : hol.term A => hol.forall B (b__1_5 : hol.term B => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a__1_4 b__1_5)) b__1_5))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_1 b_2)) b_2)) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => thm_808 B A a_1.

(; Theorem: |- ((= ((select \lambda fn. (Data.Bool.! \lambda a_1. (Data.Bool.! \lambda b_1. ((= (fn ((Data.Pair., a_1) b_1))) b_1)))) ((Data.Pair., a) b))) b) ;)

(; dict ;)

def thm_810 : A : hol.type -> B : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> hol.proof (hol.eq B (hol.select (hol.arr (Data_2EPair_2E_2A A B) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a__1_4 : hol.term A => hol.forall B (b__1_5 : hol.term B => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a__1_4 b__1_5)) b__1_5))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_2 b_1)) b_1) :=
  A : hol.type => B : hol.type => b_1 : hol.term B => a_2 : hol.term A => thm_809 A B a_2 b_1.

(; Theorem: |- ((= b) ((select \lambda fn. (Data.Bool.! \lambda a_1. (Data.Bool.! \lambda b_1. ((= (fn ((Data.Pair., a_1) b_1))) b_1)))) ((Data.Pair., a) b))) ;)

(; dict ;)

def thm_811 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> b_2 : hol.term B -> hol.proof (hol.eq B b_2 (hol.select (hol.arr (Data_2EPair_2E_2A A B) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a__1_4 : hol.term A => hol.forall B (b__1_5 : hol.term B => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a__1_4 b__1_5)) b__1_5))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_1 b_2))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => b_2 : hol.term B => hol.SYM B (hol.select (hol.arr (Data_2EPair_2E_2A A B) B) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A A B) B) => hol.forall A (a__1_4 : hol.term A => hol.forall B (b__1_5 : hol.term B => hol.eq B (fn_3 (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a__1_4 b__1_5)) b__1_5))) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) a_1 b_2)) b_2 (thm_810 A B b_2 a_1).

(; Theorem: |- ((= b) ((select \lambda fn. (Data.Bool.! \lambda a_1. (Data.Bool.! \lambda b_1. ((= (fn ((Data.Pair., a_1) b_1))) b_1)))) ((Data.Pair., a) b))) ;)

(; dict ;)

def thm_812 : B : hol.type -> A : hol.type -> a_1 : hol.term B -> b_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A B) b_2 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a__1_4 : hol.term B => hol.forall (hol.arr A B) (b__1_5 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a__1_4 b__1_5)) b__1_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_1 b_2))) :=
  B : hol.type => A : hol.type => a_1 : hol.term B => b_2 : hol.term (hol.arr A B) => (A : hol.type => B : hol.type => a_1 : hol.term A => b_2 : hol.term B => thm_811 A B a_1 b_2) B (hol.arr A B) a_1 b_2.

(; Theorem: |- ((= g) ((select \lambda fn. (Data.Bool.! \lambda a_1. (Data.Bool.! \lambda b_1. ((= (fn ((Data.Pair., a_1) b_1))) b_1)))) ((Data.Pair., b) g))) ;)

(; dict ;)

def thm_813 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A B) g_2 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a__1_4 : hol.term B => hol.forall (hol.arr A B) (b__1_5 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a__1_4 b__1_5)) b__1_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_1 g_2))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A B) => (B : hol.type => A : hol.type => a_1 : hol.term B => b_2 : hol.term (hol.arr A B) => thm_812 B A a_1 b_2) B A b_1 g_2.

(; Theorem: |- ((= (\lambda _10590. _10590 g)) (\lambda _10590. _10590 ((select \lambda fn. (Data.Bool.! \lambda a_1. (Data.Bool.! \lambda b_1. ((= (fn ((Data.Pair., a_1) b_1))) b_1)))) ((Data.Pair., b) g)))) ;)

(; dict ;)

def thm_814 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A B) ((__10590_3 : hol.term (hol.arr A B) => __10590_3) g_2) ((__10590_3 : hol.term (hol.arr A B) => __10590_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a__1_4 : hol.term B => hol.forall (hol.arr A B) (b__1_5 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a__1_4 b__1_5)) b__1_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_1 g_2)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr A B) (hol.arr A B) (__10590_3 : hol.term (hol.arr A B) => __10590_3) (__10590_3 : hol.term (hol.arr A B) => __10590_3) g_2 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a__1_4 : hol.term B => hol.forall (hol.arr A B) (b__1_5 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a__1_4 b__1_5)) b__1_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_1 g_2)) (thm_789 B A) (thm_813 B A b_1 g_2).

(; Theorem: |- ((= ((= g) g)) ((= g) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) ((Data.Pair., b) g)))) ;)

(; dict ;)

def thm_815 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A B) g_2 g_2) (hol.eq (hol.arr A B) g_2 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) b_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_1 g_2)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => g_2 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr A B) hol.bool (hol.eq (hol.arr A B) g_2) (hol.eq (hol.arr A B) g_2) g_2 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) b_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_1 g_2)) (thm_780 B A g_2) (hol.EQ_MP (hol.eq (hol.arr A B) ((__10590_3 : hol.term (hol.arr A B) => __10590_3) g_2) ((__10590_3 : hol.term (hol.arr A B) => __10590_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a__1_4 : hol.term B => hol.forall (hol.arr A B) (b__1_5 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a__1_4 b__1_5)) b__1_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_1 g_2)))) (hol.eq (hol.arr A B) g_2 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_3 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_4 : hol.term B => hol.forall (hol.arr A B) (b_5 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_3 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_5)) b_5))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_1 g_2))) (thm_788 B A b_1 g_2) (thm_814 B A b_1 g_2)).

(; Theorem: |- ((= g) g) ;)

(; dict ;)

def thm_816 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A B) g_1 g_1) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => hol.REFL (hol.arr A B) g_1.

(; Theorem: |- ((= (\lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) b) (_10593 x)) g)) (\lambda _10593. \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g))) (_10593 x)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) ((Data.Pair., b) g)))) ;)

(; dict ;)

def thm_817 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> a_3 : hol.term A -> hol.proof (hol.eq (hol.arr A B) ((__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) b_2 (__10593_4 x_5)) g_1) ((__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (__10593_4 x_5)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) b_6))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => a_3 : hol.term A => hol.APP_THM (hol.arr A B) (hol.arr A B) (__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) b_2 (__10593_4 x_5)) (__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (__10593_4 x_5)) g_1 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) b_6))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (thm_779 B A g_1 b_2 a_3) (hol.EQ_MP (hol.eq (hol.arr A B) g_1 g_1) (hol.eq (hol.arr A B) g_1 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) b_6))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1))) (thm_815 B A b_2 g_1) (thm_816 B A g_1)).

(; Theorem: |- ((= \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))) \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g))) (((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) ((Data.Pair., b) g)) x))) ;)

(; dict ;)

def thm_818 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> a_3 : hol.term A -> hol.proof (hol.eq (hol.arr A B) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) b_2 (g_1 x_4)) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq B (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) a_6))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) b_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1) x_4))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => a_3 : hol.term A => hol.EQ_MP (hol.eq (hol.arr A B) ((__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) b_2 (__10593_4 x_5)) g_1) ((__10593_4 : hol.term (hol.arr A B) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (__10593_4 x_5)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) b_6))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)))) (hol.eq (hol.arr A B) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) b_2 (g_1 x_4)) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq B (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) a_6))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) b_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1) x_4))) (thm_694 B A g_1 b_2 a_3) (thm_817 B A g_1 b_2 a_3).

(; Theorem: |- ((= \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) ((Data.Pair., b) g))) (((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) ((Data.Pair., b) g)) x))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))) ;)

(; dict ;)

def thm_819 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> a_3 : hol.term A -> hol.proof (hol.eq (hol.arr A B) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq B (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) a_6))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) b_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1) x_4)) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) b_2 (g_1 x_4))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => a_3 : hol.term A => hol.SYM (hol.arr A B) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) b_2 (g_1 x_4)) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq B (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) a_6))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) b_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1) x_4)) (thm_818 B A g_1 b_2 a_3).

(; Theorem: |- ((= (\lambda _10596. \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) _10596)) (((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) _10596) x)) ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))) ;)

(; dict ;)

def thm_820 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> a_3 : hol.term A -> hol.proof (hol.eq (hol.arr A B) ((__10596_4 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) __10596_4) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) b_8))) __10596_4 x_5)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) b_2 (g_1 x_4))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => a_3 : hol.term A => hol.TRANS (hol.arr A B) ((__10596_4 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) __10596_4) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) b_8))) __10596_4 x_5)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq B (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) a_6))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_6 : hol.term B => hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7)) b_7))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1) x_4)) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) b_2 (g_1 x_4)) (thm_685 B A g_1 b_2 a_3) (thm_819 B A g_1 b_2 a_3).

(; Theorem: |- (Data.Bool.! \lambda g. ((= (\lambda _10596. \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) _10596)) (((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) _10596) x)) ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))) ;)

(; dict ;)

def thm_821 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> hol.proof (hol.forall (hol.arr A B) (g_3 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) ((__10596_4 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_2) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) __10596_4) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) b_8))) __10596_4 x_5)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_1 g_3)) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_2) b_1 (g_3 x_4)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => a_2 : hol.term A => g_3 : hol.term (hol.arr A B) => thm_820 B A g_3 b_1 a_2.

(; Theorem: |- (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (\lambda _10596. \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) _10596)) (((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) _10596) x)) ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))) ;)

(; dict ;)

def thm_822 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> hol.proof (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (g_3 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) ((__10596_4 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) __10596_4) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) b_8))) __10596_4 x_5)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_3)) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_1) b_2 (g_3 x_4))))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => b_2 : hol.term B => thm_821 B A b_2 a_1.

(; Theorem: |- (\lambda _10598. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))) \lambda _10596. \lambda x. (((Data.Bool.cond ((= x) a)) ((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) a)))) _10596)) (((select \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) b)))) _10596) x))) ;)

(; dict ;)

def thm_823 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> hol.proof ((__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5))))) (__10596_2 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => x_3 : hol.term A => hol.cond B (hol.eq A x_3 a_1) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq B (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) a_5))) __10596_2) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) b_6))) __10596_2 x_3))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => hol.EQ_MP (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (g_3 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) ((__10596_4 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq B (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) a_7))) __10596_4) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_7 : hol.term B => hol.forall (hol.arr A B) (b_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_7 b_8)) b_8))) __10596_4 x_5)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_3)) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_1) b_2 (g_3 x_4))))) ((__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5))))) (__10596_2 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => x_3 : hol.term A => hol.cond B (hol.eq A x_3 a_1) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq B (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) a_5))) __10596_2) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) b_6))) __10596_2 x_3))) (thm_684 A B a_1) (thm_822 A B a_1).

(; Theorem: |- (Data.Bool.? \lambda _10598. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) ;)

(; dict ;)

def thm_824 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> hyp_1 : hol.proof ((__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5))))) (__10596_2 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => x_3 : hol.term A => hol.cond B (hol.eq A x_3 a_1) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq B (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) a_5))) __10596_2) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) b_6))) __10596_2 x_3))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) hol.bool) hol.bool) (__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5)))))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => hyp_1 : hol.proof ((__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5))))) (__10596_2 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => x_3 : hol.term A => hol.cond B (hol.eq A x_3 a_1) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq B (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) a_5))) __10596_2) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) b_6))) __10596_2 x_3))) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_602 A x_1 P_2 hyp_1) (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10596_2 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => x_3 : hol.term A => hol.cond B (hol.eq A x_3 a_1) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq B (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) a_5))) __10596_2) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) b_6))) __10596_2 x_3)) (__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5))))) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda _10598. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) ;)

(; dict ;)

def thm_825 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) hol.bool) hol.bool) (__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5)))))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => hol.PROVE_HYP ((__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5))))) (__10596_2 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => x_3 : hol.term A => hol.cond B (hol.eq A x_3 a_1) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq B (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) a_5))) __10596_2) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) b_6))) __10596_2 x_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) hol.bool) hol.bool) (__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5)))))) (thm_823 A B a_1) (hyp_1 : hol.proof ((__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5))))) (__10596_2 : hol.term (Data_2EPair_2E_2A B (hol.arr A B)) => x_3 : hol.term A => hol.cond B (hol.eq A x_3 a_1) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) B) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq B (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) a_5))) __10596_2) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (fn_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (a_5 : hol.term B => hol.forall (hol.arr A B) (b_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (fn_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_6)) b_6))) __10596_2 x_3))) => thm_824 A B a_1 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda _10598. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) ;)

(; dict ;)

def thm_826 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) hol.bool) hol.bool) (__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5)))))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => hol.EQ_MP (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) hol.bool) hol.bool) (__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) hol.bool) hol.bool) (__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5)))))) (thm_682 A B a_1) (thm_825 A B a_1).

(; Theorem: |- (\lambda _10598. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))) (select \lambda _10598. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ;)

(; dict ;)

def thm_827 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> hol.proof ((__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5))))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5))))))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => thm_663 A B a_1 (thm_826 A B a_1).

(; Theorem: |- (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= ((select \lambda _10598. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))) ;)

(; dict ;)

def thm_828 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> hol.proof (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (g_3 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_5 : hol.term B => hol.forall (hol.arr A B) (g_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_5 g_6)) (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_1) b_5 (g_6 x_7))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_3)) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_1) b_2 (g_3 x_4))))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => hol.EQ_MP ((__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5))))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_2 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (g_4 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_2 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_3 g_4)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) b_3 (g_4 x_5))))))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (g_3 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_5 : hol.term B => hol.forall (hol.arr A B) (g_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_5 g_6)) (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_1) b_5 (g_6 x_7))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_3)) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_1) b_2 (g_3 x_4))))) (thm_466 A B a_1) (thm_827 A B a_1).

(; Theorem: |- (Data.Bool.! \lambda g. ((= ((select \lambda _10598. (Data.Bool.! \lambda b_1. (Data.Bool.! \lambda g_1. ((= (_10598 ((Data.Pair., b_1) g_1))) \lambda x. (((Data.Bool.cond ((= x) a)) b_1) (g_1 x)))))) ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))) ;)

(; dict ;)

def thm_829 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> hol.proof (hol.forall (hol.arr A B) (g_3 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b__1_5 : hol.term B => hol.forall (hol.arr A B) (g__1_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b__1_5 g__1_6)) (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_2) b__1_5 (g__1_6 x_7))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_1 g_3)) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_2) b_1 (g_3 x_4)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => a_2 : hol.term A => thm_828 A B a_2 b_1.

(; Theorem: |- ((= ((select \lambda _10598. (Data.Bool.! \lambda b_1. (Data.Bool.! \lambda g_1. ((= (_10598 ((Data.Pair., b_1) g_1))) \lambda x. (((Data.Bool.cond ((= x) a)) b_1) (g_1 x)))))) ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))) ;)

(; dict ;)

def thm_830 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> a_3 : hol.term A -> hol.proof (hol.eq (hol.arr A B) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b__1_5 : hol.term B => hol.forall (hol.arr A B) (g__1_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b__1_5 g__1_6)) (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_3) b__1_5 (g__1_6 x_7))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) b_2 (g_1 x_4))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => a_3 : hol.term A => thm_829 B A b_2 a_3 g_1.

(; Theorem: |- ((= ((select \lambda _10598. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (_10598 ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x)))))) ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))) ;)

(; dict ;)

def thm_831 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> a_3 : hol.term A -> hol.proof (hol.eq (hol.arr A B) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_5 : hol.term B => hol.forall (hol.arr A B) (g_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_5 g_6)) (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_3) b_5 (g_6 x_7))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) b_2 (g_1 x_4))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => a_3 : hol.term A => hol.EQ_MP (hol.eq (hol.arr A B) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b__1_5 : hol.term B => hol.forall (hol.arr A B) (g__1_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b__1_5 g__1_6)) (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_3) b__1_5 (g__1_6 x_7))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) b_2 (g_1 x_4))) (hol.eq (hol.arr A B) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_5 : hol.term B => hol.forall (hol.arr A B) (g_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_5 g_6)) (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_3) b_5 (g_6 x_7))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_2 g_1)) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) b_2 (g_1 x_4))) (thm_465 B A g_1 b_2 a_3) (thm_830 B A g_1 b_2 a_3).

(; Theorem: |- ((= ((select \lambda _10598. (Data.Bool.! \lambda b_1. (Data.Bool.! \lambda g_1. ((= (_10598 ((Data.Pair., b_1) g_1))) \lambda x. (((Data.Bool.cond ((= x) a)) b_1) (g_1 x)))))) ((Data.Pair., a) b))) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x))) ;)

(; dict ;)

def thm_832 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_2 : hol.term B -> a_3 : hol.term A -> hol.proof (hol.eq (hol.arr A B) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_4 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b__1_5 : hol.term B => hol.forall (hol.arr A B) (g__1_6 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_4 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b__1_5 g__1_6)) (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_3) b__1_5 (g__1_6 x_7))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_2 b_1)) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) a_2 (b_1 x_4))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_2 : hol.term B => a_3 : hol.term A => (B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => a_3 : hol.term A => (B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => b_2 : hol.term B => a_3 : hol.term A => thm_831 B A g_1 b_2 a_3) B A g_1 b_2 a_3) B A b_1 a_2 a_3.

(; Theorem: |- ((= ((= x) ((select \lambda _10598. (Data.Bool.! \lambda b_1. (Data.Bool.! \lambda g_1. ((= (_10598 ((Data.Pair., b_1) g_1))) \lambda x. (((Data.Bool.cond ((= x) a)) b_1) (g_1 x)))))) ((Data.Pair., a) b)))) ((= x) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ;)

(; dict ;)

def thm_833 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_2 : hol.term B -> a_3 : hol.term A -> x_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A B) x_4 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b__1_6 : hol.term B => hol.forall (hol.arr A B) (g__1_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b__1_6 g__1_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) b__1_6 (g__1_7 x_8))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_2 b_1))) (hol.eq (hol.arr A B) x_4 (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) a_2 (b_1 x_5)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_2 : hol.term B => a_3 : hol.term A => x_4 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr A B) hol.bool (hol.eq (hol.arr A B) x_4) (hol.eq (hol.arr A B) x_4) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b__1_6 : hol.term B => hol.forall (hol.arr A B) (g__1_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b__1_6 g__1_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) b__1_6 (g__1_7 x_8))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_2 b_1)) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) a_2 (b_1 x_5)) (thm_432 B A x_4) (thm_832 B A b_1 a_2 a_3).

(; Theorem: |- ((= (Data.Bool./\ ((= x) ((select \lambda _10598. (Data.Bool.! \lambda b_1. (Data.Bool.! \lambda g_1. ((= (_10598 ((Data.Pair., b_1) g_1))) \lambda x. (((Data.Bool.cond ((= x) a)) b_1) (g_1 x)))))) ((Data.Pair., a) b))))) (Data.Bool./\ ((= x) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x))))) ;)

(; dict ;)

def thm_834 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_2 : hol.term B -> a_3 : hol.term A -> x_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq (hol.arr A B) x_4 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b__1_6 : hol.term B => hol.forall (hol.arr A B) (g__1_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b__1_6 g__1_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) b__1_6 (g__1_7 x_8))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_2 b_1)))) (hol.and (hol.eq (hol.arr A B) x_4 (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) a_2 (b_1 x_5))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_2 : hol.term B => a_3 : hol.term A => x_4 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.eq (hol.arr A B) x_4 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b__1_6 : hol.term B => hol.forall (hol.arr A B) (g__1_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b__1_6 g__1_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) b__1_6 (g__1_7 x_8))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_2 b_1))) (hol.eq (hol.arr A B) x_4 (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) a_2 (b_1 x_5))) thm_94 (thm_833 B A b_1 a_2 a_3 x_4).

(; Theorem: |- ((= ((= ((Set.member ((Data.Pair., x) y)) ((Set.cross s) t))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))) ((= ((Set.member ((Data.Pair., x) y)) ((Set.cross s) t))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))) ;)

(; dict ;)

def thm_835 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1))) (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => x_4 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1))).

(; Theorem: |- ((= ((= ((Set.member ((Data.Pair., x) y)) ((Set.cross s) t))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))) ((= ((Set.member ((Data.Pair., x) y)) ((Set.cross s) t))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))) ;)

(; dict ;)

def thm_836 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1))) (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => x_4 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1))) (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1))) (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1))) (thm_835 B A t_1 s_2 y_3 x_4) (thm_835 B A t_1 s_2 y_3 x_4).

(; Theorem: |- (Data.Bool.! \lambda y. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= ((Set.member ((Data.Pair., x) y)) ((Set.cross s) t))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))))) ;)

(; dict ;)

def thm_837 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> hol.proof (hol.forall B (y_2 : hol.term B => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_1 y_2) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_4)))))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => thm_31 B A x_1.

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= ((Set.member ((Data.Pair., x) y)) ((Set.cross s) t))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t))))) ;)

(; dict ;)

def thm_838 : B : hol.type -> A : hol.type -> y_1 : hol.term B -> x_2 : hol.term A -> hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_2 y_1) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_3 t_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_1 t_4))))) :=
  B : hol.type => A : hol.type => y_1 : hol.term B => x_2 : hol.term A => thm_837 A B x_2 y_1.

(; Theorem: |- (Data.Bool.! \lambda t. ((= ((Set.member ((Data.Pair., x) y)) ((Set.cross s) t))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))) ;)

(; dict ;)

def thm_839 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> y_2 : hol.term B -> x_3 : hol.term A -> hol.proof (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_3 y_2) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_1 t_4)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_2 t_4)))) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => y_2 : hol.term B => x_3 : hol.term A => thm_838 B A y_2 x_3 s_1.

(; Theorem: |- ((= ((Set.member ((Data.Pair., x) y)) ((Set.cross s) t))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t))) ;)

(; dict ;)

def thm_840 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> s_2 : hol.term (Set_2Eset A) -> y_3 : hol.term B -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => x_4 : hol.term A => thm_839 A B s_2 y_3 x_4 t_1.

(; Theorem: |- ((= ((Set.member ((Data.Pair., x) y)) ((Set.cross s) t))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t))) ;)

(; dict ;)

def thm_841 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset (hol.arr A B)) -> s_2 : hol.term (Set_2Eset B) -> y_3 : hol.term (hol.arr A B) -> x_4 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) x_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) s_2 t_1)) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) y_3 t_1))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset (hol.arr A B)) => s_2 : hol.term (Set_2Eset B) => y_3 : hol.term (hol.arr A B) => x_4 : hol.term B => (B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => s_2 : hol.term (Set_2Eset A) => y_3 : hol.term B => x_4 : hol.term A => hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1))) (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A A B) (hol.arr (Set_2Eset (Data_2EPair_2E_2A A B)) hol.bool)) (Data_2EPair_2E_2C (hol.arr A (hol.arr B (Data_2EPair_2E_2A A B))) x_4 y_3) (Set_2Ecross (hol.arr (Set_2Eset A) (hol.arr (Set_2Eset B) (Set_2Eset (Data_2EPair_2E_2A A B)))) s_2 t_1)) (hol.and (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) y_3 t_1))) (thm_836 B A t_1 s_2 y_3 x_4) (thm_840 B A t_1 s_2 y_3 x_4)) (hol.arr A B) B t_1 s_2 y_3 x_4.

(; Theorem: |- ((= ((Set.member ((Data.Pair., a) b)) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) ((Data.Bool./\ ((Set.member a) t)) ((Set.member b) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) ;)

(; dict ;)

def thm_842 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> b_4 : hol.term (hol.arr A B) -> a_5 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_4) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (f_7 x_8) d_1))))))))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_5 t_3) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) b_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (f_7 x_8) d_1)))))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => b_4 : hol.term (hol.arr A B) => a_5 : hol.term B => (A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset (hol.arr A B)) => s_2 : hol.term (Set_2Eset B) => y_3 : hol.term (hol.arr A B) => x_4 : hol.term B => thm_841 A B t_1 s_2 y_3 x_4) A B (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (f_7 x_8) d_1))))))) t_3 b_4 a_5.

(; Theorem: |- ((= (Data.Bool./\ ((Set.member a) t))) (Data.Bool./\ ((Set.member a) t))) ;)

(; dict ;)

def thm_843 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> a_2 : hol.term B -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_2 t_1)) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_2 t_1))) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => a_2 : hol.term B => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_2 t_1)).

(; Theorem: |- ((= ((Set.member b) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))) (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))) b)) ;)

(; dict ;)

def thm_844 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> b_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) b_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))) ((v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))) b_4)) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => b_4 : hol.term (hol.arr A B) => (B : hol.type => A : hol.type => p_1 : hol.term (hol.arr (hol.arr A B) hol.bool) => x_2 : hol.term (hol.arr A B) => thm_82 B A p_1 x_2) B A (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))) b_4.

(; Theorem: |- ((= (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))) v)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) ;)

(; dict ;)

def thm_845 : B : hol.type -> A : hol.type -> v_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) v_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_1 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (hol.eq B (f_5 x_6) d_2))))))) :=
  B : hol.type => A : hol.type => v_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hol.BETA_CONV (hol.arr A B) hol.bool (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) v_1.

(; Theorem: |- ((= \lambda v. (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))) v)) \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) ;)

(; dict ;)

def thm_846 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (v_4 : hol.term (hol.arr A B) => (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))) v_4) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => hol.ABS_THM (hol.arr A B) hol.bool (v_4 : hol.term (hol.arr A B) => (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))) v_4) (v_4 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1)))))) (v_4 : hol.term (hol.arr A B) => thm_845 B A v_4 d_1 t_2 s_3).

(; Theorem: |- ((= b) b) ;)

(; dict ;)

def thm_847 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A B) b_1 b_1) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => hol.REFL (hol.arr A B) b_1.

(; Theorem: |- ((= (\lambda v. (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))) v) b)) (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))) b)) ;)

(; dict ;)

def thm_848 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((v_5 : hol.term (hol.arr A B) => (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_2)))))) v_5) b_1) ((v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) b_1)) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr A B) hol.bool (v_5 : hol.term (hol.arr A B) => (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_2)))))) v_5) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) b_1 b_1 (thm_846 B A d_2 t_3 s_4) (thm_847 B A b_1).

(; Theorem: |- ((= (= (\lambda v. (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))) v) b))) (= (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))) b))) ;)

(; dict ;)

def thm_849 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((v_5 : hol.term (hol.arr A B) => (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_2)))))) v_5) b_1)) (hol.eq hol.bool ((v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) b_1))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((v_5 : hol.term (hol.arr A B) => (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_2)))))) v_5) b_1) ((v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) b_1) thm_77 (thm_848 B A b_1 d_2 t_3 s_4).

(; Theorem: |- ((= (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))) b)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) ;)

(; dict ;)

def thm_850 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) b_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_1 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (hol.eq B (f_5 x_6) d_2))))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hol.BETA_CONV (hol.arr A B) hol.bool (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) b_1.

(; Theorem: |- ((= ((= (\lambda v. (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))) v) b)) (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))) b))) ((= (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))) b)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))) ;)

(; dict ;)

def thm_851 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((v_5 : hol.term (hol.arr A B) => (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_2)))))) v_5) b_1) ((v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) b_1)) (hol.eq hol.bool ((v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) b_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_1 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (hol.eq B (f_5 x_6) d_2)))))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((v_5 : hol.term (hol.arr A B) => (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_2)))))) v_5) b_1)) (hol.eq hol.bool ((v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) b_1)) ((v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) b_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_1 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (hol.eq B (f_5 x_6) d_2)))))) (thm_849 B A b_1 d_2 t_3 s_4) (thm_850 B A b_1 d_2 t_3 s_4).

(; Theorem: |- ((= ((Set.member b) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) ;)

(; dict ;)

def thm_852 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> b_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) b_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => b_4 : hol.term (hol.arr A B) => hol.TRANS hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) b_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))) ((v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))) b_4) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1)))))) (thm_844 B A d_1 t_2 s_3 b_4) (hol.EQ_MP (hol.eq hol.bool ((v_5 : hol.term (hol.arr A B) => (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)) (hol.eq B (f_7 x_8) d_1)))))) v_5) b_4) ((v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))) b_4)) (hol.eq hol.bool ((v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))) b_4) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1))))))) (thm_851 B A b_4 d_1 t_2 s_3) (thm_848 B A b_4 d_1 t_2 s_3)).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member a) t)) ((Set.member b) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))) ;)

(; dict ;)

def thm_853 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term (hol.arr A B) -> t_4 : hol.term (Set_2Eset B) -> a_5 : hol.term B -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_5 t_4) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) b_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (f_7 x_8) d_1))))))))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_5 t_4) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_3 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (f_6 x_7) d_1)))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term (hol.arr A B) => t_4 : hol.term (Set_2Eset B) => a_5 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_5 t_4)) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_5 t_4)) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) b_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (f_7 x_8) d_1)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_3 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (f_6 x_7) d_1)))))) (thm_843 B t_4 a_5) (thm_852 B A d_1 t_4 s_2 b_3).

(; Theorem: |- ((= ((Set.member ((Data.Pair., a) b)) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))) ;)

(; dict ;)

def thm_854 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> b_4 : hol.term (hol.arr A B) -> a_5 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_4) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (f_7 x_8) d_1))))))))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_5 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_4 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (f_6 x_7) d_1)))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => b_4 : hol.term (hol.arr A B) => a_5 : hol.term B => hol.TRANS hol.bool (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_4) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (f_7 x_8) d_1))))))))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_5 t_3) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) b_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (f_7 x_8) d_1))))))))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_5 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_4 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (f_6 x_7) d_1))))))) (thm_842 A B d_1 s_2 t_3 b_4 a_5) (thm_853 A B d_1 s_2 b_4 t_3 a_5).

(; Theorem: |- ((= ((Data.Bool./\ ((= x) ((select \lambda _10598. (Data.Bool.! \lambda b_1. (Data.Bool.! \lambda g_1. ((= (_10598 ((Data.Pair., b_1) g_1))) \lambda x. (((Data.Bool.cond ((= x) a)) b_1) (g_1 x)))))) ((Data.Pair., a) b)))) ((Set.member ((Data.Pair., a) b)) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) ((Data.Bool./\ ((= x) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))) ;)

(; dict ;)

def thm_855 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> b_4 : hol.term (hol.arr A B) -> a_5 : hol.term B -> a_6 : hol.term A -> x_7 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq (hol.arr A B) x_7 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b__1_9 : hol.term B => hol.forall (hol.arr A B) (g__1_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b__1_9 g__1_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_6) b__1_9 (g__1_10 x_11))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_4))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_4) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1)))))))))) (hol.and (hol.eq (hol.arr A B) x_7 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_5 (b_4 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_5 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_4 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => b_4 : hol.term (hol.arr A B) => a_5 : hol.term B => a_6 : hol.term A => x_7 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq (hol.arr A B) x_7 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b__1_9 : hol.term B => hol.forall (hol.arr A B) (g__1_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b__1_9 g__1_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_6) b__1_9 (g__1_10 x_11))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_4)))) (hol.and (hol.eq (hol.arr A B) x_7 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_5 (b_4 x_8)))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_5 b_4) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1))))))))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_5 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_4 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1))))))) (thm_834 B A b_4 a_5 a_6 x_7) (thm_854 A B d_1 s_2 t_3 b_4 a_5).

(; Theorem: |- ((= \lambda b. ((Data.Bool./\ ((= x) ((select \lambda _10598. (Data.Bool.! \lambda b_1. (Data.Bool.! \lambda g_1. ((= (_10598 ((Data.Pair., b_1) g_1))) \lambda x. (((Data.Bool.cond ((= x) a)) b_1) (g_1 x)))))) ((Data.Pair., a) b)))) ((Set.member ((Data.Pair., a) b)) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) \lambda b. ((Data.Bool./\ ((= x) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))) ;)

(; dict ;)

def thm_856 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term B -> a_5 : hol.term A -> x_6 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_6 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b__1_9 : hol.term B => hol.forall (hol.arr A B) (g__1_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b__1_9 g__1_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_5) b__1_9 (g__1_10 x_11))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_7))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_7) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1)))))))))) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_4 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term B => a_5 : hol.term A => x_6 : hol.term (hol.arr A B) => hol.ABS_THM (hol.arr A B) hol.bool (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_6 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b__1_9 : hol.term B => hol.forall (hol.arr A B) (g__1_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b__1_9 g__1_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_5) b__1_9 (g__1_10 x_11))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_7))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_7) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1)))))))))) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_4 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1)))))))) (b_7 : hol.term (hol.arr A B) => thm_855 B A d_1 s_2 t_3 b_7 a_4 a_5 x_6).

(; Theorem: |- ((= (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) ((select \lambda _10598. (Data.Bool.! \lambda b_1. (Data.Bool.! \lambda g_1. ((= (_10598 ((Data.Pair., b_1) g_1))) \lambda x. (((Data.Bool.cond ((= x) a)) b_1) (g_1 x)))))) ((Data.Pair., a) b)))) ((Set.member ((Data.Pair., a) b)) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) ;)

(; dict ;)

def thm_857 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term B -> a_5 : hol.term A -> x_6 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_6 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b__1_9 : hol.term B => hol.forall (hol.arr A B) (g__1_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b__1_9 g__1_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_5) b__1_9 (g__1_10 x_11))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_7))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_7) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1))))))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_4 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1)))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term B => a_5 : hol.term A => x_6 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool)) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_6 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b__1_9 : hol.term B => hol.forall (hol.arr A B) (g__1_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b__1_9 g__1_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_5) b__1_9 (g__1_10 x_11))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_7))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_4 b_7) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1)))))))))) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_4 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1)))))))) (thm_92 B A) (thm_856 B A d_1 s_2 t_3 a_4 a_5 x_6).

(; Theorem: |- ((= \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) ((select \lambda _10598. (Data.Bool.! \lambda b_1. (Data.Bool.! \lambda g_1. ((= (_10598 ((Data.Pair., b_1) g_1))) \lambda x. (((Data.Bool.cond ((= x) a)) b_1) (g_1 x)))))) ((Data.Pair., a) b)))) ((Set.member ((Data.Pair., a) b)) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) ;)

(; dict ;)

def thm_858 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> x_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b__1_9 : hol.term B => hol.forall (hol.arr A B) (g__1_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b__1_9 g__1_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_4) b__1_9 (g__1_10 x_11))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1))))))))))) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1)))))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => x_5 : hol.term (hol.arr A B) => hol.ABS_THM B hol.bool (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b__1_9 : hol.term B => hol.forall (hol.arr A B) (g__1_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b__1_9 g__1_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_4) b__1_9 (g__1_10 x_11))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1))))))))))) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1))))))))) (a_6 : hol.term B => thm_857 B A d_1 s_2 t_3 a_6 a_4 x_5).

(; Theorem: |- ((= (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) ((select \lambda _10598. (Data.Bool.! \lambda b_1. (Data.Bool.! \lambda g_1. ((= (_10598 ((Data.Pair., b_1) g_1))) \lambda x. (((Data.Bool.cond ((= x) a)) b_1) (g_1 x)))))) ((Data.Pair., a) b)))) ((Set.member ((Data.Pair., a) b)) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) ;)

(; dict ;)

def thm_859 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> x_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b__1_9 : hol.term B => hol.forall (hol.arr A B) (g__1_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b__1_9 g__1_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_4) b__1_9 (g__1_10 x_11))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1)))))))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1))))))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => x_5 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr B hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool)) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (__10598_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b__1_9 : hol.term B => hol.forall (hol.arr A B) (g__1_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (__10598_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b__1_9 g__1_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_4) b__1_9 (g__1_10 x_11))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1))))))))))) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1))))))))) (thm_418 B) (thm_858 A B d_1 s_2 t_3 a_4 x_5).

(; Theorem: |- ((= ((Set.member x) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) ;)

(; dict ;)

def thm_860 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> x_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_7 : hol.term B => hol.forall (hol.arr A B) (g_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_7 g_8)) (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_4) b_7 (g_8 x_9)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (f_7 x_8) d_1)))))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => x_5 : hol.term (hol.arr A B) => hol.TRANS hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_7 : hol.term B => hol.forall (hol.arr A B) (g_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_7 g_8)) (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_4) b_7 (g_8 x_9)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (f_7 x_8) d_1)))))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_8 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_9 : hol.term B => hol.forall (hol.arr A B) (g_10 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_8 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_9 g_10)) (x_11 : hol.term A => hol.cond B (hol.eq A x_11 a_4) b_9 (g_10 x_11))))) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7))) (Set_2Emember (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) hol.bool)) (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) a_6 b_7) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_8 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_9 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_8 f_9) (hol.and (hol.forall A (x_10 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_9 x_10) t_3))) (hol.forall A (x_10 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_10 s_2)) (hol.eq B (f_9 x_10) d_1)))))))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1)))))))))) (thm_431 B A d_1 s_2 t_3 a_4 x_5) (thm_859 A B d_1 s_2 t_3 a_4 x_5).

(; Theorem: |- ((= ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d))))))))) ((Set.member x) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ;)

(; dict ;)

def thm_861 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> x_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_7 x_8) d_1)))))))) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_7 : hol.term B => hol.forall (hol.arr A B) (g_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_7 g_8)) (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_4) b_7 (g_8 x_9)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)) (hol.eq B (f_7 x_8) d_1))))))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1)))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => x_5 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_7 x_8) d_1))))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_7 : hol.term B => hol.forall (hol.arr A B) (g_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_7 g_8)) (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_4) b_7 (g_8 x_9)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)) (hol.eq B (f_7 x_8) d_1)))))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1)))))))))) (thm_405 B A d_1 t_2 s_3 a_4 x_5) (thm_860 B A d_1 s_3 t_2 a_4 x_5).

(; Theorem: |- ((= \lambda x. ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d))))))))) ((Set.member x) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) \lambda x. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ;)

(; dict ;)

def thm_862 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_7 x_8) d_1)))))))) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_7 : hol.term B => hol.forall (hol.arr A B) (g_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_7 g_8)) (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_4) b_7 (g_8 x_9)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)) (hol.eq B (f_7 x_8) d_1))))))))))) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1)))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hol.ABS_THM (hol.arr A B) hol.bool (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_7 x_8) d_1)))))))) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_7 : hol.term B => hol.forall (hol.arr A B) (g_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_7 g_8)) (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_4) b_7 (g_8 x_9)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)) (hol.eq B (f_7 x_8) d_1))))))))))) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1))))))))))) (x_5 : hol.term (hol.arr A B) => thm_861 B A d_1 t_2 s_3 a_4 x_5).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d))))))))) ((Set.member x) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))) ;)

(; dict ;)

def thm_863 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_7 x_8) d_1)))))))) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_7 : hol.term B => hol.forall (hol.arr A B) (g_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_7 g_8)) (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_4) b_7 (g_8 x_9)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)) (hol.eq B (f_7 x_8) d_1)))))))))))) (hol.forall (hol.arr A B) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1))))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B)) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_7 x_8) d_1)))))))) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_7 : hol.term B => hol.forall (hol.arr A B) (g_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_7 g_8)) (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_4) b_7 (g_8 x_9)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)) (hol.eq B (f_7 x_8) d_1))))))))))) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1))))))))))) (thm_76 B A) (thm_862 B A d_1 t_2 s_3 a_4).

(; Theorem: |- ((= ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))) ;)

(; dict ;)

def thm_864 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))) (hol.forall (hol.arr A B) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1))))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hol.TRANS hol.bool (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))) (hol.forall (hol.arr A B) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_7 x_8) d_1)))))))) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_7 : hol.term B => hol.forall (hol.arr A B) (g_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_7 g_8)) (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_4) b_7 (g_8 x_9)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)) (hol.eq B (f_7 x_8) d_1)))))))))))) (hol.forall (hol.arr A B) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1)))))))))))) (thm_375 B A d_1 t_2 s_3 a_4) (thm_863 B A d_1 t_2 s_3 a_4).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))) ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) ;)

(; dict ;)

def thm_865 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1)))))))))))) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hol.SYM hol.bool (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))) (hol.forall (hol.arr A B) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1)))))))))))) (thm_864 B A d_1 t_2 s_3 a_4).

(; Theorem: |- ((= \lambda g. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) \lambda g. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ;)

(; dict ;)

def thm_866 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (g_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1))))))))))) (g_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1)))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hol.REFL (hol.arr (hol.arr A B) hol.bool) (g_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1))))))))))).

(; Theorem: |- ((= \lambda x. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) \lambda x. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ;)

(; dict ;)

def thm_867 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1))))))))))) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1)))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hol.REFL (hol.arr (hol.arr A B) hol.bool) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1))))))))))).

(; Theorem: |- ((= \lambda g. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) \lambda x. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ;)

(; dict ;)

def thm_868 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (g_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1))))))))))) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1)))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hol.TRANS (hol.arr (hol.arr A B) hol.bool) (g_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1))))))))))) (g_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1))))))))))) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1))))))))))) (thm_866 B A d_1 t_2 s_3 a_4) (thm_867 B A d_1 t_2 s_3 a_4).

(; Theorem: |- ((= (Data.Bool.! \lambda g. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))) ;)

(; dict ;)

def thm_869 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (g_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1)))))))))))) (hol.forall (hol.arr A B) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1))))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B)) (g_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1))))))))))) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1))))))))))) (thm_76 B A) (thm_868 B A d_1 t_2 s_3 a_4).

(; Theorem: |- ((= (\lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d)))) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d))))) ;)

(; dict ;)

def thm_870 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hol.proof (hol.eq hol.bool ((f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) (hol.eq B (f_6 x_7) d_2)))) f_1) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (f_1 x_6) d_2))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hol.BETA_CONV (hol.arr A B) hol.bool (f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) (hol.eq B (f_6 x_7) d_2)))) f_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= g) f)) (\lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d)))) f))) ((Data.Bool./\ ((= g) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d)))))) ;)

(; dict ;)

def thm_871 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> g_6 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq (hol.arr A B) g_6 f_5) ((f_7 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3))) (hol.eq B (f_7 x_8) d_1)))) f_5)) (hol.and (hol.eq (hol.arr A B) g_6 f_5) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_5 x_7) d_1)))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => f_5 : hol.term (hol.arr A B) => g_6 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq (hol.arr A B) g_6 f_5)) (hol.and (hol.eq (hol.arr A B) g_6 f_5)) ((f_7 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3))) (hol.eq B (f_7 x_8) d_1)))) f_5) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_5 x_7) d_1)))) (thm_296 B A f_5 g_6) (thm_870 B A f_5 d_1 t_2 s_3 a_4).

(; Theorem: |- ((= \lambda f. ((Data.Bool./\ ((= g) f)) (\lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d)))) f))) \lambda f. ((Data.Bool./\ ((= g) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d)))))) ;)

(; dict ;)

def thm_872 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) ((f_7 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3))) (hol.eq B (f_7 x_8) d_1)))) f_6)) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hol.ABS_THM (hol.arr A B) hol.bool (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) ((f_7 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3))) (hol.eq B (f_7 x_8) d_1)))) f_6)) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1))))) (f_6 : hol.term (hol.arr A B) => thm_871 B A d_1 t_2 s_3 a_4 f_6 g_5).

(; Theorem: |- ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) (\lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d)))) f)))) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d))))))) ;)

(; dict ;)

def thm_873 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) ((f_7 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3))) (hol.eq B (f_7 x_8) d_1)))) f_6))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool)) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) ((f_7 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3))) (hol.eq B (f_7 x_8) d_1)))) f_6)) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1))))) (thm_92 B A) (thm_872 B A d_1 t_2 s_3 a_4 g_5).

(; Theorem: |- ((= (= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) (\lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d)))) f))))) (= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d)))))))) ;)

(; dict ;)

def thm_874 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) ((f_7 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3))) (hol.eq B (f_7 x_8) d_1)))) f_6)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) ((f_7 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3))) (hol.eq B (f_7 x_8) d_1)))) f_6))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) thm_77 (thm_873 B A d_1 t_2 s_3 a_4 g_5).

(; Theorem: |- ((= (\lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d)))) g)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d))))) ;)

(; dict ;)

def thm_875 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hol.proof (hol.eq hol.bool ((f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) (hol.eq B (f_6 x_7) d_2)))) g_1) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_1 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_1 x_6) d_2))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hol.BETA_CONV (hol.arr A B) hol.bool (f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) (hol.eq B (f_6 x_7) d_2)))) g_1.

(; Theorem: |- ((= ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) (\lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d)))) f)))) (\lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d)))) g))) ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d))))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d)))))) ;)

(; dict ;)

def thm_876 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) ((f_7 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3))) (hol.eq B (f_7 x_8) d_1)))) f_6))) ((f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))) g_5)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (hol.eq B (g_5 x_6) d_1)))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) ((f_7 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3))) (hol.eq B (f_7 x_8) d_1)))) f_6)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1))))))) ((f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))) g_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (hol.eq B (g_5 x_6) d_1)))) (thm_874 B A d_1 t_2 s_3 a_4 g_5) (thm_875 B A g_5 d_1 t_2 s_3 a_4).

(; Theorem: |- ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) (\lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d)))) f)))) (\lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d)))) g)) ;)

(; dict ;)

def thm_877 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) ((f_7 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3))) (hol.eq B (f_7 x_8) d_1)))) f_6))) ((f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))) g_5)) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => (B : hol.type => A : hol.type => p_1 : hol.term (hol.arr (hol.arr A B) hol.bool) => a_2 : hol.term (hol.arr A B) => thm_310 B A p_1 a_2) B A (f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))) g_5.

(; Theorem: |- ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d))))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d))))) ;)

(; dict ;)

def thm_878 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (hol.eq B (g_5 x_6) d_1))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) ((f_7 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3))) (hol.eq B (f_7 x_8) d_1)))) f_6))) ((f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))) g_5)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (hol.eq B (g_5 x_6) d_1))))) (thm_876 B A d_1 t_2 s_3 a_4 g_5) (thm_877 B A d_1 t_2 s_3 a_4 g_5).

(; Theorem: |- ((= (= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d)))))))) (= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d)))))) ;)

(; dict ;)

def thm_879 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (hol.eq hol.bool (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (hol.eq B (g_5 x_6) d_1)))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (hol.eq B (g_5 x_6) d_1)))) thm_77 (thm_878 B A d_1 t_2 s_3 a_4 g_5).

(; Theorem: |- ((= (Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x))))) (Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x))))) ;)

(; dict ;)

def thm_880 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_2 : hol.term B -> a_3 : hol.term A -> g_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq (hol.arr A B) g_4 (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) a_2 (b_1 x_5)))) (hol.and (hol.eq (hol.arr A B) g_4 (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) a_2 (b_1 x_5))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_2 : hol.term B => a_3 : hol.term A => g_4 : hol.term (hol.arr A B) => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (hol.eq (hol.arr A B) g_4 (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) a_2 (b_1 x_5)))).

(; Theorem: |- ((= (Data.Bool./\ ((= b) f))) (Data.Bool./\ ((= b) f))) ;)

(; dict ;)

def thm_881 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> b_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq (hol.arr A B) b_2 f_1)) (hol.and (hol.eq (hol.arr A B) b_2 f_1))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => b_2 : hol.term (hol.arr A B) => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (hol.eq (hol.arr A B) b_2 f_1)).

(; Theorem: |- ((= (\lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))) ;)

(; dict ;)

def thm_882 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((f_5 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (hol.eq B (f_5 x_6) d_2)))) f_1) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_1 x_5) t_3))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (f_1 x_5) d_2))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hol.BETA_CONV (hol.arr A B) hol.bool (f_5 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (hol.eq B (f_5 x_6) d_2)))) f_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= b) f)) (\lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))) f))) ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))) ;)

(; dict ;)

def thm_883 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> b_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq (hol.arr A B) b_5 f_4) ((f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))) f_4)) (hol.and (hol.eq (hol.arr A B) b_5 f_4) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_4 x_6) d_1)))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => b_5 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq (hol.arr A B) b_5 f_4)) (hol.and (hol.eq (hol.arr A B) b_5 f_4)) ((f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))) f_4) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_4 x_6) d_1)))) (thm_881 B A f_4 b_5) (thm_882 B A f_4 d_1 t_2 s_3).

(; Theorem: |- ((= \lambda f. ((Data.Bool./\ ((= b) f)) (\lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))) f))) \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))) ;)

(; dict ;)

def thm_884 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> b_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_4 f_5) ((f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))) f_5)) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1)))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => b_4 : hol.term (hol.arr A B) => hol.ABS_THM (hol.arr A B) hol.bool (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_4 f_5) ((f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))) f_5)) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1))))) (f_5 : hol.term (hol.arr A B) => thm_883 B A d_1 t_2 s_3 f_5 b_4).

(; Theorem: |- ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) (\lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))) f)))) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) ;)

(; dict ;)

def thm_885 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> b_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_4 f_5) ((f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))) f_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => b_4 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool)) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_4 f_5) ((f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))) f_5)) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1))))) (thm_92 B A) (thm_884 B A d_1 t_2 s_3 b_4).

(; Theorem: |- ((= (= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) (\lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))) f))))) (= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))) ;)

(; dict ;)

def thm_886 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> b_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_4 f_5) ((f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))) f_5)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1)))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => b_4 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_4 f_5) ((f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))) f_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1)))))) thm_77 (thm_885 B A d_1 t_2 s_3 b_4).

(; Theorem: |- ((= (\lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))) b)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))) ;)

(; dict ;)

def thm_887 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((f_5 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (hol.eq B (f_5 x_6) d_2)))) b_1) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_5) t_3))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (b_1 x_5) d_2))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hol.BETA_CONV (hol.arr A B) hol.bool (f_5 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (hol.eq B (f_5 x_6) d_2)))) b_1.

(; Theorem: |- ((= ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) (\lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))) f)))) (\lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))) b))) ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))) ;)

(; dict ;)

def thm_888 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> b_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_4 f_5) ((f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))) f_5))) ((f_5 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1)))) b_4)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1)))))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (hol.eq B (b_4 x_5) d_1)))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => b_4 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_4 f_5) ((f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))) f_5)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1))))))) ((f_5 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1)))) b_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (hol.eq B (b_4 x_5) d_1)))) (thm_886 B A d_1 t_2 s_3 b_4) (thm_887 B A b_4 d_1 t_2 s_3).

(; Theorem: |- ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) (\lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))) f)))) (\lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))) b)) ;)

(; dict ;)

def thm_889 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> b_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_4 f_5) ((f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))) f_5))) ((f_5 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1)))) b_4)) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => b_4 : hol.term (hol.arr A B) => (B : hol.type => A : hol.type => p_1 : hol.term (hol.arr (hol.arr A B) hol.bool) => a_2 : hol.term (hol.arr A B) => thm_310 B A p_1 a_2) B A (f_5 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1)))) b_4.

(; Theorem: |- ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))) ;)

(; dict ;)

def thm_890 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> b_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1)))))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (hol.eq B (b_4 x_5) d_1))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => b_4 : hol.term (hol.arr A B) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_4 f_5) ((f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))) f_5))) ((f_5 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1)))) b_4)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1)))))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (hol.eq B (b_4 x_5) d_1))))) (thm_888 B A d_1 t_2 s_3 b_4) (thm_889 B A d_1 t_2 s_3 b_4).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))) ;)

(; dict ;)

def thm_891 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> b_3 : hol.term (hol.arr A B) -> t_4 : hol.term (Set_2Eset B) -> a_5 : hol.term B -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_5 t_4) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_3 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (f_6 x_7) d_1))))))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_5 t_4) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_6) t_4))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (b_3 x_6) d_1)))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => b_3 : hol.term (hol.arr A B) => t_4 : hol.term (Set_2Eset B) => a_5 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_5 t_4)) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_5 t_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_3 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (f_6 x_7) d_1)))))) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_6) t_4))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (b_3 x_6) d_1)))) (thm_843 B t_4 a_5) (thm_890 B A d_1 t_4 s_2 b_3).

(; Theorem: |- ((= ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))) ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))) ;)

(; dict ;)

def thm_892 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> b_4 : hol.term (hol.arr A B) -> a_5 : hol.term B -> a_6 : hol.term A -> g_7 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq (hol.arr A B) g_7 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_5 (b_4 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_5 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_4 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1)))))))) (hol.and (hol.eq (hol.arr A B) g_7 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_5 (b_4 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_5 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_4 x_8) d_1))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => b_4 : hol.term (hol.arr A B) => a_5 : hol.term B => a_6 : hol.term A => g_7 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq (hol.arr A B) g_7 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_5 (b_4 x_8)))) (hol.and (hol.eq (hol.arr A B) g_7 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_5 (b_4 x_8)))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_5 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_4 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1))))))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_5 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_4 x_8) d_1))))) (thm_880 B A b_4 a_5 a_6 g_7) (thm_891 A B d_1 s_2 b_4 t_3 a_5).

(; Theorem: |- ((= \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))) \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))) ;)

(; dict ;)

def thm_893 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term B -> a_5 : hol.term A -> g_6 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_4 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1)))))))) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_4 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_4 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term B => a_5 : hol.term A => g_6 : hol.term (hol.arr A B) => hol.ABS_THM (hol.arr A B) hol.bool (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_4 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1)))))))) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_4 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_4 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))) (b_7 : hol.term (hol.arr A B) => thm_892 B A d_1 s_2 t_3 b_7 a_4 a_5 g_6).

(; Theorem: |- ((= (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))))) ;)

(; dict ;)

def thm_894 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term B -> a_5 : hol.term A -> g_6 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_4 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1))))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_4 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_4 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term B => a_5 : hol.term A => g_6 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool)) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_4 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_4 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1)))))))) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_4 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_4 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))) (thm_92 B A) (thm_893 B A d_1 s_2 t_3 a_4 a_5 g_6).

(; Theorem: |- ((= \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))))) ;)

(; dict ;)

def thm_895 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr B hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1))))))))) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hol.ABS_THM B hol.bool (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1))))))))) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1))))))) (a_6 : hol.term B => thm_894 B A d_1 s_2 t_3 a_6 a_4 g_5).

(; Theorem: |- ((= (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))))) ;)

(; dict ;)

def thm_896 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1)))))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1))))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr B hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool)) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (f_8 x_9) d_1))))))))) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1))))))) (thm_418 B) (thm_895 A B d_1 s_2 t_3 a_4 g_5).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))))))) ;)

(; dict ;)

def thm_897 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1))))))))))) (hol.eq hol.bool (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (hol.eq B (g_5 x_6) d_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)) (hol.eq B (b_7 x_8) d_1)))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (hol.eq hol.bool (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (hol.eq B (g_5 x_6) d_1))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1)))))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)) (hol.eq B (b_7 x_8) d_1)))))))) (thm_879 B A d_1 t_2 s_3 a_4 g_5) (thm_896 A B d_1 s_3 t_2 a_4 g_5).

(; Theorem: |- ((= ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))))))) ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ;)

(; dict ;)

def thm_898 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> g_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_3 x_6) d_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_3 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (b_7 x_8) d_1))))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_3 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_3 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_1)))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => g_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hol.SYM hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_3 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_3 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_1))))))))))) (hol.eq hol.bool (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_3 x_6) d_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_3 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (b_7 x_8) d_1))))))))) (thm_897 B A d_1 t_2 s_4 a_5 g_3).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))) x)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d))))))) ((Data.Bool.==> (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d)))))) ;)

(; dict ;)

def thm_899 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hol.proof (hol.imp (hol.forall B (x_6 : hol.term B => hol.imp ((a_7 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_4) a_7 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_7 t_3) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (b_8 x_9) d_1))))))) x_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))) (hol.eq B (g_5 x_7) d_1)))))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))))) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) (hol.eq B (g_5 x_6) d_1)))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_619 A Q_1 P_2) B (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) (hol.eq B (g_5 x_6) d_1)))) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1))))))).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)))) ((Data.Bool./\ ((Set.member a') t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))) x)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d))))))) ((Data.Bool.==> (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)))) ((Data.Bool./\ ((Set.member a') t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d)))))) ;)

(; dict ;)

def thm_900 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> g_6 : hol.term (hol.arr A B) -> hol.proof (hol.imp (hol.forall (hol.arr A B) (x_7 : hol.term (hol.arr A B) => hol.imp ((b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_5) a_27_4 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_3) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (b_8 x_9) d_1)))))) x_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2))) (hol.eq B (g_6 x_8) d_1)))))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1))))))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))) (hol.eq B (g_6 x_7) d_1)))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_27_4 : hol.term B => a_5 : hol.term A => g_6 : hol.term (hol.arr A B) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_619 A Q_1 P_2) (hol.arr A B) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))) (hol.eq B (g_6 x_7) d_1)))) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))).

(; Theorem: |- ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)))) ((Data.Bool./\ ((Set.member a') t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))) ;)

(; dict ;)

def thm_901 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> b_4 : hol.term (hol.arr A B) -> a_27_5 : hol.term B -> a_6 : hol.term A -> g_7 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (hol.eq (hol.arr A B) g_7 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_5 (b_4 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_4 x_8) d_1)))))) -> hol.proof (hol.and (hol.eq (hol.arr A B) g_7 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_5 (b_4 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_4 x_8) d_1)))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => b_4 : hol.term (hol.arr A B) => a_27_5 : hol.term B => a_6 : hol.term A => g_7 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (hol.eq (hol.arr A B) g_7 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_5 (b_4 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_4 x_8) d_1)))))) => hyp_1.

(; Theorem: |- ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x))) ;)

(; dict ;)

def thm_902 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> b_4 : hol.term (hol.arr A B) -> a_27_5 : hol.term B -> a_6 : hol.term A -> g_7 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (hol.eq (hol.arr A B) g_7 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_5 (b_4 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_4 x_8) d_1)))))) -> hol.proof (hol.eq (hol.arr A B) g_7 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_5 (b_4 x_8))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => b_4 : hol.term (hol.arr A B) => a_27_5 : hol.term B => a_6 : hol.term A => g_7 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (hol.eq (hol.arr A B) g_7 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_5 (b_4 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_4 x_8) d_1)))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_208 q_1 p_2 hyp_1) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_4 x_8) d_1))))) (hol.eq (hol.arr A B) g_7 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_5 (b_4 x_8))) hyp_1.

(; Theorem: |- ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x))) ;)

(; dict ;)

def thm_903 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> b_4 : hol.term (hol.arr A B) -> a_27_5 : hol.term B -> a_6 : hol.term A -> g_7 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (hol.eq (hol.arr A B) g_7 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_5 (b_4 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_4 x_8) d_1)))))) -> hol.proof (hol.eq (hol.arr A B) g_7 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_5 (b_4 x_8))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => b_4 : hol.term (hol.arr A B) => a_27_5 : hol.term B => a_6 : hol.term A => g_7 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (hol.eq (hol.arr A B) g_7 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_5 (b_4 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_4 x_8) d_1)))))) => hol.PROVE_HYP (hol.and (hol.eq (hol.arr A B) g_7 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_5 (b_4 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_4 x_8) d_1)))))) (hol.eq (hol.arr A B) g_7 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_5 (b_4 x_8))) (thm_901 B A d_1 s_2 t_3 b_4 a_27_5 a_6 g_7 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq (hol.arr A B) g_7 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_5 (b_4 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_4 x_8) d_1)))))) => thm_902 B A d_1 s_2 t_3 b_4 a_27_5 a_6 g_7 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((Set.member a') t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))) ;)

(; dict ;)

def thm_904 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> b_4 : hol.term (hol.arr A B) -> s_5 : hol.term (Set_2Eset A) -> t_6 : hol.term (Set_2Eset B) -> a_27_7 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq (hol.arr A B) g_2 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_27_7 (b_4 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_7 t_6) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_8) t_6))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)) (hol.eq B (b_4 x_8) d_3)))))) -> hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_7 t_6) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_8) t_6))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)) (hol.eq B (b_4 x_8) d_3))))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => g_2 : hol.term (hol.arr A B) => d_3 : hol.term B => b_4 : hol.term (hol.arr A B) => s_5 : hol.term (Set_2Eset A) => t_6 : hol.term (Set_2Eset B) => a_27_7 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq (hol.arr A B) g_2 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_27_7 (b_4 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_7 t_6) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_8) t_6))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)) (hol.eq B (b_4 x_8) d_3)))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_151 p_1 q_2 hyp_1) (hol.eq (hol.arr A B) g_2 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_27_7 (b_4 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_7 t_6) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_8) t_6))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)) (hol.eq B (b_4 x_8) d_3))))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((Set.member a') t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))) ;)

(; dict ;)

def thm_905 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> b_4 : hol.term (hol.arr A B) -> s_5 : hol.term (Set_2Eset A) -> t_6 : hol.term (Set_2Eset B) -> a_27_7 : hol.term B -> hyp_1 : hol.proof (hol.and (hol.eq (hol.arr A B) g_2 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_27_7 (b_4 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_7 t_6) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_8) t_6))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)) (hol.eq B (b_4 x_8) d_3)))))) -> hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_7 t_6) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_8) t_6))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)) (hol.eq B (b_4 x_8) d_3))))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => g_2 : hol.term (hol.arr A B) => d_3 : hol.term B => b_4 : hol.term (hol.arr A B) => s_5 : hol.term (Set_2Eset A) => t_6 : hol.term (Set_2Eset B) => a_27_7 : hol.term B => hyp_1 : hol.proof (hol.and (hol.eq (hol.arr A B) g_2 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_27_7 (b_4 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_7 t_6) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_8) t_6))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)) (hol.eq B (b_4 x_8) d_3)))))) => hol.PROVE_HYP (hol.and (hol.eq (hol.arr A B) g_2 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_27_7 (b_4 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_7 t_6) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_8) t_6))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)) (hol.eq B (b_4 x_8) d_3)))))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_7 t_6) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_8) t_6))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)) (hol.eq B (b_4 x_8) d_3))))) (thm_901 B A d_3 s_5 t_6 b_4 a_27_7 a_1 g_2 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq (hol.arr A B) g_2 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_27_7 (b_4 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_7 t_6) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_8) t_6))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)) (hol.eq B (b_4 x_8) d_3)))))) => thm_904 A B a_1 g_2 d_3 b_4 s_5 t_6 a_27_7 hyp_2).

(; Theorem: |- ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x))) ;)

(; dict ;)

def thm_906 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> g_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq (hol.arr A B) g_4 (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) a_27_2 (b_1 x_5))) -> hol.proof (hol.eq (hol.arr A B) g_4 (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) a_27_2 (b_1 x_5))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => a_3 : hol.term A => g_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq (hol.arr A B) g_4 (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) a_27_2 (b_1 x_5))) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((Set.member a') t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))) ;)

(; dict ;)

def thm_907 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> b_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> t_4 : hol.term (Set_2Eset B) -> a_27_5 : hol.term B -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_6) t_4))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (b_2 x_6) d_1))))) -> hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_6) t_4))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (b_2 x_6) d_1))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => b_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => t_4 : hol.term (Set_2Eset B) => a_27_5 : hol.term B => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_6) t_4))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (b_2 x_6) d_1))))) => hyp_1.

(; Theorem: |- ((Set.member a') t) ;)

(; dict ;)

def thm_908 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> b_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> t_4 : hol.term (Set_2Eset B) -> a_27_5 : hol.term B -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_6) t_4))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (b_2 x_6) d_1))))) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => b_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => t_4 : hol.term (Set_2Eset B) => a_27_5 : hol.term B => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_6) t_4))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (b_2 x_6) d_1))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_208 q_1 p_2 hyp_1) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_6) t_4))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (b_2 x_6) d_1)))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) hyp_1.

(; Theorem: |- ((Set.member a') t) ;)

(; dict ;)

def thm_909 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> b_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> t_4 : hol.term (Set_2Eset B) -> a_27_5 : hol.term B -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_6) t_4))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (b_2 x_6) d_1))))) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => b_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => t_4 : hol.term (Set_2Eset B) => a_27_5 : hol.term B => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_6) t_4))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (b_2 x_6) d_1))))) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_6) t_4))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (b_2 x_6) d_1))))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) (thm_907 A B d_1 b_2 s_3 t_4 a_27_5 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_6) t_4))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (b_2 x_6) d_1))))) => thm_908 A B d_1 b_2 s_3 t_4 a_27_5 hyp_2).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))) ;)

(; dict ;)

def thm_910 : B : hol.type -> A : hol.type -> a_27_1 : hol.term B -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> b_4 : hol.term (hol.arr A B) -> s_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (b_4 x_6) d_2))))) -> hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (b_4 x_6) d_2)))) :=
  B : hol.type => A : hol.type => a_27_1 : hol.term B => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => b_4 : hol.term (hol.arr A B) => s_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (b_4 x_6) d_2))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_151 p_1 q_2 hyp_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (b_4 x_6) d_2)))) hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))) ;)

(; dict ;)

def thm_911 : B : hol.type -> A : hol.type -> a_27_1 : hol.term B -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> b_4 : hol.term (hol.arr A B) -> s_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (b_4 x_6) d_2))))) -> hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (b_4 x_6) d_2)))) :=
  B : hol.type => A : hol.type => a_27_1 : hol.term B => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => b_4 : hol.term (hol.arr A B) => s_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (b_4 x_6) d_2))))) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (b_4 x_6) d_2))))) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (b_4 x_6) d_2)))) (thm_907 A B d_2 b_4 s_5 t_3 a_27_1 hyp_1) (hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (b_4 x_6) d_2))))) => thm_910 B A a_27_1 d_2 t_3 b_4 s_5 hyp_2).

(; Theorem: |- ((Set.member a') t) ;)

(; dict ;)

def thm_912 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> a_27_2 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_1) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_1) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => a_27_2 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))) ;)

(; dict ;)

def thm_913 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (b_3 x_5) d_1)))) -> hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (b_3 x_5) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (b_3 x_5) d_1)))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t))) ;)

(; dict ;)

def thm_914 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (b_3 x_5) d_1)))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_5) t_2))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (b_3 x_5) d_1)))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_208 q_1 p_2 hyp_1) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (b_3 x_5) d_1))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_5) t_2))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t))) ;)

(; dict ;)

def thm_915 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (b_3 x_5) d_1)))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_5) t_2))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (b_3 x_5) d_1)))) => hol.PROVE_HYP (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (b_3 x_5) d_1)))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_5) t_2))) (thm_913 B A d_1 t_2 b_3 s_4 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (b_3 x_5) d_1)))) => thm_914 B A d_1 t_2 b_3 s_4 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))) ;)

(; dict ;)

def thm_916 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> d_2 : hol.term B -> b_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_5) t_1))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (b_3 x_5) d_2)))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (b_3 x_5) d_2))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => d_2 : hol.term B => b_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_5) t_1))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (b_3 x_5) d_2)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_151 p_1 q_2 hyp_1) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_5) t_1))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (b_3 x_5) d_2))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))) ;)

(; dict ;)

def thm_917 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> d_2 : hol.term B -> b_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_5) t_1))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (b_3 x_5) d_2)))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (b_3 x_5) d_2))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => d_2 : hol.term B => b_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_5) t_1))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (b_3 x_5) d_2)))) => hol.PROVE_HYP (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_5) t_1))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (b_3 x_5) d_2)))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (b_3 x_5) d_2))) (thm_913 B A d_2 t_1 b_3 s_4 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_5) t_1))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (b_3 x_5) d_2)))) => thm_916 B A t_1 d_2 b_3 s_4 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t))) ;)

(; dict ;)

def thm_918 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> b_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_4) t_1))) -> hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_4) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_4) t_1))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))) ;)

(; dict ;)

def thm_919 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> b_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (hol.eq B (b_2 x_4) d_1))) -> hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (hol.eq B (b_2 x_4) d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => b_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (hol.eq B (b_2 x_4) d_1))) => hyp_1.

(; Theorem: |- ((= (= (\lambda _10618. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (_10618 x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (_10618 x)) d)))) g))) (= (\lambda _10618. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (_10618 x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (_10618 x)) d)))) g))) ;)

(; dict ;)

def thm_920 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10618_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) (hol.eq B (__10618_6 x_7) d_2)))) g_1)) (hol.eq hol.bool ((__10618_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) (hol.eq B (__10618_6 x_7) d_2)))) g_1))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10618_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) (hol.eq B (__10618_6 x_7) d_2)))) g_1)).

(; Theorem: |- ((= (\lambda _10618. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (_10618 x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (_10618 x)) d)))) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d))))) ;)

(; dict ;)

def thm_921 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> d_3 : hol.term B -> t_4 : hol.term (Set_2Eset B) -> s_5 : hol.term (Set_2Eset A) -> a_6 : hol.term A -> hol.proof (hol.eq hol.bool ((__10618_7 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_7 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (hol.eq B (__10618_7 x_8) d_3)))) (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_6) a_27_2 (b_1 x_7))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_2 (b_1 x_8)) x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_2 (b_1 x_8)) x_7) d_3))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => d_3 : hol.term B => t_4 : hol.term (Set_2Eset B) => s_5 : hol.term (Set_2Eset A) => a_6 : hol.term A => hol.BETA_CONV (hol.arr A B) hol.bool (__10618_7 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_7 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5))) (hol.eq B (__10618_7 x_8) d_3)))) (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_6) a_27_2 (b_1 x_7)).

(; Theorem: |- ((= ((= (\lambda _10618. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (_10618 x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (_10618 x)) d)))) g)) (\lambda _10618. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (_10618 x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (_10618 x)) d)))) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x))))) ((= (\lambda _10618. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (_10618 x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (_10618 x)) d)))) g)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d)))))) ;)

(; dict ;)

def thm_922 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> g_3 : hol.term (hol.arr A B) -> d_4 : hol.term B -> t_5 : hol.term (Set_2Eset B) -> s_6 : hol.term (Set_2Eset A) -> a_7 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10618_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_8 x_9) t_5))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6))) (hol.eq B (__10618_8 x_9) d_4)))) g_3) ((__10618_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_8 x_9) t_5))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6))) (hol.eq B (__10618_8 x_9) d_4)))) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8)))) (hol.eq hol.bool ((__10618_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_8 x_9) t_5))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6))) (hol.eq B (__10618_8 x_9) d_4)))) g_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_7) a_27_2 (b_1 x_9)) x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_7) a_27_2 (b_1 x_9)) x_8) d_4)))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => g_3 : hol.term (hol.arr A B) => d_4 : hol.term B => t_5 : hol.term (Set_2Eset B) => s_6 : hol.term (Set_2Eset A) => a_7 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10618_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_8 x_9) t_5))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6))) (hol.eq B (__10618_8 x_9) d_4)))) g_3)) (hol.eq hol.bool ((__10618_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_8 x_9) t_5))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6))) (hol.eq B (__10618_8 x_9) d_4)))) g_3)) ((__10618_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_8 x_9) t_5))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6))) (hol.eq B (__10618_8 x_9) d_4)))) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_7) a_27_2 (b_1 x_9)) x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_7) a_27_2 (b_1 x_9)) x_8) d_4)))) (thm_920 B A g_3 d_4 t_5 s_6 a_7) (thm_921 B A b_1 a_27_2 d_4 t_5 s_6 a_7).

(; Theorem: |- ((= (\lambda _10618. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (_10618 x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (_10618 x)) d)))) g)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d))))) ;)

(; dict ;)

def thm_923 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hol.proof (hol.eq hol.bool ((__10618_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) (hol.eq B (__10618_6 x_7) d_2)))) g_1) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_1 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_1 x_6) d_2))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hol.BETA_CONV (hol.arr A B) hol.bool (__10618_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) (hol.eq B (__10618_6 x_7) d_2)))) g_1.

(; Theorem: |- ((= (= (\lambda _10618. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (_10618 x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (_10618 x)) d)))) g))) (= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d)))))) ;)

(; dict ;)

def thm_924 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10618_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) (hol.eq B (__10618_6 x_7) d_2)))) g_1)) (hol.eq hol.bool (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_1 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_1 x_6) d_2)))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__10618_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4))) (hol.eq B (__10618_6 x_7) d_2)))) g_1) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_1 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_1 x_6) d_2)))) thm_77 (thm_923 B A g_1 d_2 t_3 s_4 a_5).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d))))) ;)

(; dict ;)

def thm_925 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> s_5 : hol.term (Set_2Eset A) -> a_6 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) d_1)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) d_1))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => s_5 : hol.term (Set_2Eset A) => a_6 : hol.term A => hol.REFL hol.bool (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) d_1)))).

(; Theorem: |- ((= ((= (\lambda _10618. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (_10618 x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (_10618 x)) d)))) g)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d)))))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d)))))) ;)

(; dict ;)

def thm_926 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> g_3 : hol.term (hol.arr A B) -> d_4 : hol.term B -> t_5 : hol.term (Set_2Eset B) -> s_6 : hol.term (Set_2Eset A) -> a_7 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10618_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_8 x_9) t_5))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6))) (hol.eq B (__10618_8 x_9) d_4)))) g_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_7) a_27_2 (b_1 x_9)) x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_7) a_27_2 (b_1 x_9)) x_8) d_4))))) (hol.eq hol.bool (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_3 x_8) d_4)))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_7) a_27_2 (b_1 x_9)) x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_7) a_27_2 (b_1 x_9)) x_8) d_4)))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => g_3 : hol.term (hol.arr A B) => d_4 : hol.term B => t_5 : hol.term (Set_2Eset B) => s_6 : hol.term (Set_2Eset A) => a_7 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10618_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_8 x_9) t_5))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6))) (hol.eq B (__10618_8 x_9) d_4)))) g_3)) (hol.eq hol.bool (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_3 x_8) d_4))))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_7) a_27_2 (b_1 x_9)) x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_7) a_27_2 (b_1 x_9)) x_8) d_4)))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_7) a_27_2 (b_1 x_9)) x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_7) a_27_2 (b_1 x_9)) x_8) d_4)))) (thm_924 B A g_3 d_4 t_5 s_6 a_7) (thm_925 B A d_4 t_5 b_1 a_27_2 s_6 a_7).

(; Theorem: |- ((= ((= (\lambda _10618. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (_10618 x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (_10618 x)) d)))) g)) (\lambda _10618. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (_10618 x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (_10618 x)) d)))) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x))))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d)))))) ;)

(; dict ;)

def thm_927 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> g_3 : hol.term (hol.arr A B) -> d_4 : hol.term B -> t_5 : hol.term (Set_2Eset B) -> s_6 : hol.term (Set_2Eset A) -> a_7 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10618_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_8 x_9) t_5))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6))) (hol.eq B (__10618_8 x_9) d_4)))) g_3) ((__10618_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_8 x_9) t_5))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6))) (hol.eq B (__10618_8 x_9) d_4)))) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8)))) (hol.eq hol.bool (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_3 x_8) d_4)))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_7) a_27_2 (b_1 x_9)) x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_7) a_27_2 (b_1 x_9)) x_8) d_4)))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => g_3 : hol.term (hol.arr A B) => d_4 : hol.term B => t_5 : hol.term (Set_2Eset B) => s_6 : hol.term (Set_2Eset A) => a_7 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool ((__10618_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_8 x_9) t_5))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6))) (hol.eq B (__10618_8 x_9) d_4)))) g_3) ((__10618_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_8 x_9) t_5))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6))) (hol.eq B (__10618_8 x_9) d_4)))) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8)))) (hol.eq hol.bool ((__10618_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_8 x_9) t_5))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6))) (hol.eq B (__10618_8 x_9) d_4)))) g_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_7) a_27_2 (b_1 x_9)) x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_7) a_27_2 (b_1 x_9)) x_8) d_4))))) (hol.eq hol.bool (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_3 x_8) d_4)))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_7) a_27_2 (b_1 x_9)) x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_7) a_27_2 (b_1 x_9)) x_8) d_4))))) (thm_922 B A b_1 a_27_2 g_3 d_4 t_5 s_6 a_7) (thm_926 B A b_1 a_27_2 g_3 d_4 t_5 s_6 a_7).

(; Theorem: |- ((= \lambda _10618. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (_10618 x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (_10618 x)) d))))) \lambda _10618. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (_10618 x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (_10618 x)) d))))) ;)

(; dict ;)

def thm_928 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (__10618_5 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (hol.eq B (__10618_5 x_6) d_1)))) (__10618_5 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (hol.eq B (__10618_5 x_6) d_1))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hol.REFL (hol.arr (hol.arr A B) hol.bool) (__10618_5 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (hol.eq B (__10618_5 x_6) d_1)))).

(; Theorem: |- ((= (\lambda _10618. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (_10618 x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (_10618 x)) d)))) g)) (\lambda _10618. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (_10618 x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (_10618 x)) d)))) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)))) ;)

(; dict ;)

def thm_929 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> g_3 : hol.term (hol.arr A B) -> d_4 : hol.term B -> t_5 : hol.term (Set_2Eset B) -> s_6 : hol.term (Set_2Eset A) -> a_7 : hol.term A -> hyp_1 : hol.proof (hol.eq (hol.arr A B) g_3 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8))) -> hol.proof (hol.eq hol.bool ((__10618_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_8 x_9) t_5))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6))) (hol.eq B (__10618_8 x_9) d_4)))) g_3) ((__10618_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_8 x_9) t_5))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6))) (hol.eq B (__10618_8 x_9) d_4)))) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => g_3 : hol.term (hol.arr A B) => d_4 : hol.term B => t_5 : hol.term (Set_2Eset B) => s_6 : hol.term (Set_2Eset A) => a_7 : hol.term A => hyp_1 : hol.proof (hol.eq (hol.arr A B) g_3 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8))) => hol.APP_THM (hol.arr A B) hol.bool (__10618_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_8 x_9) t_5))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6))) (hol.eq B (__10618_8 x_9) d_4)))) (__10618_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_8 x_9) t_5))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6))) (hol.eq B (__10618_8 x_9) d_4)))) g_3 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8)) (thm_928 B A d_4 t_5 s_6 a_7) (thm_906 B A b_1 a_27_2 a_7 g_3 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d))))) ;)

(; dict ;)

def thm_930 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> d_3 : hol.term B -> t_4 : hol.term (Set_2Eset B) -> g_5 : hol.term (hol.arr A B) -> s_6 : hol.term (Set_2Eset A) -> a_7 : hol.term A -> hyp_1 : hol.proof (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8))) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_5 x_8) d_3)))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_7) a_27_2 (b_1 x_9)) x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_7) a_27_2 (b_1 x_9)) x_8) d_3))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => d_3 : hol.term B => t_4 : hol.term (Set_2Eset B) => g_5 : hol.term (hol.arr A B) => s_6 : hol.term (Set_2Eset A) => a_7 : hol.term A => hyp_1 : hol.proof (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8))) => hol.EQ_MP (hol.eq hol.bool ((__10618_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_8 x_9) t_4))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6))) (hol.eq B (__10618_8 x_9) d_3)))) g_5) ((__10618_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10618_8 x_9) t_4))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_9 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6))) (hol.eq B (__10618_8 x_9) d_3)))) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8)))) (hol.eq hol.bool (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_5 x_8) d_3)))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_7) a_27_2 (b_1 x_9)) x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_7) a_27_2 (b_1 x_9)) x_8) d_3))))) (thm_927 B A b_1 a_27_2 g_5 d_3 t_4 s_6 a_7) (thm_929 B A b_1 a_27_2 g_5 d_3 t_4 s_6 a_7 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d))))) ;)

(; dict ;)

def thm_931 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> b_4 : hol.term (hol.arr A B) -> a_27_5 : hol.term B -> s_6 : hol.term (Set_2Eset A) -> a_7 : hol.term A -> hyp_1 : hol.proof (hol.eq (hol.arr A B) g_1 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_5 (b_4 x_8))) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_7) a_27_5 (b_4 x_9)) x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_7) a_27_5 (b_4 x_9)) x_8) d_2)))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_1 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_1 x_8) d_2))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => b_4 : hol.term (hol.arr A B) => a_27_5 : hol.term B => s_6 : hol.term (Set_2Eset A) => a_7 : hol.term A => hyp_1 : hol.proof (hol.eq (hol.arr A B) g_1 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_5 (b_4 x_8))) => hol.SYM hol.bool (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_1 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_1 x_8) d_2)))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_7) a_27_5 (b_4 x_9)) x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_7) a_27_5 (b_4 x_9)) x_8) d_2)))) (thm_930 B A b_4 a_27_5 d_2 t_3 g_1 s_6 a_7 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ ((Set.member a) s))) (Data.Bool.~ ((Set.member a) s))) ;)

(; dict ;)

def thm_932 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => hol.REFL hol.bool (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1)).

(; Theorem: |- (Data.Bool.~ ((Set.member a) s)) ;)

(; dict ;)

def thm_933 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1)) -> hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1)) => hyp_1.

(; Theorem: |- ((= (Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) (Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ;)

(; dict ;)

def thm_934 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) (hol.imp (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => x_3 : hol.term A => hol.REFL (hol.arr hol.bool hol.bool) (hol.imp (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))).

(; Theorem: |- ((= Set.member) Set.member) ;)

(; dict ;)

def thm_935 : B : hol.type -> hol.proof (hol.eq (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)))) :=
  B : hol.type => hol.REFL (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool))).

(; Theorem: |- ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) (((Data.Bool.cond ((= x) a)) a') (b x))) ;)

(; dict ;)

def thm_936 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> hol.proof (hol.eq B ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) x_1) (hol.cond B (hol.eq A x_1 a_4) a_27_3 (b_2 x_1))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => hol.BETA_CONV A B (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) x_1.

(; Theorem: |- ((= \lambda x. (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x))) ;)

(; dict ;)

def thm_937 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> hol.proof (hol.eq (hol.arr A B) (x_4 : hol.term A => (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) a_27_2 (b_1 x_5)) x_4) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => a_3 : hol.term A => hol.ABS_THM A B (x_4 : hol.term A => (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) a_27_2 (b_1 x_5)) x_4) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4)) (x_4 : hol.term A => thm_936 A B x_4 b_1 a_27_2 a_3).

(; Theorem: |- ((= (\lambda x. (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x) x)) (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) ;)

(; dict ;)

def thm_938 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> hol.proof (hol.eq B ((x_5 : hol.term A => (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) x_5) x_1) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) x_1)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => hol.APP_THM A B (x_5 : hol.term A => (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) x_5) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) x_1 x_1 (thm_937 B A b_2 a_27_3 a_4) (thm_334 A x_1).

(; Theorem: |- ((= (= (\lambda x. (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x) x))) (= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x))) ;)

(; dict ;)

def thm_939 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B ((x_5 : hol.term A => (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) x_5) x_1)) (hol.eq B ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) x_1))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => hol.APP_THM B (hol.arr B hol.bool) (hol.eq B) (hol.eq B) ((x_5 : hol.term A => (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) x_5) x_1) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) x_1) (thm_331 B) (thm_938 A B x_1 b_2 a_27_3 a_4).

(; Theorem: |- ((= ((= (\lambda x. (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x) x)) (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) (((Data.Bool.cond ((= x) a)) a') (b x)))) ;)

(; dict ;)

def thm_940 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq B ((x_5 : hol.term A => (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) x_5) x_1) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) x_1)) (hol.eq B ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) x_1) (hol.cond B (hol.eq A x_1 a_4) a_27_3 (b_2 x_1)))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => hol.APP_THM B hol.bool (hol.eq B ((x_5 : hol.term A => (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) x_5) x_1)) (hol.eq B ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) x_1)) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) x_1) (hol.cond B (hol.eq A x_1 a_4) a_27_3 (b_2 x_1)) (thm_939 A B x_1 b_2 a_27_3 a_4) (thm_936 A B x_1 b_2 a_27_3 a_4).

(; Theorem: |- ((= (Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x))) (Set.member (((Data.Bool.cond ((= x) a)) a') (b x)))) ;)

(; dict ;)

def thm_941 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> hol.proof (hol.eq (hol.arr (Set_2Eset B) hol.bool) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) x_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_1 a_4) a_27_3 (b_2 x_1)))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => hol.APP_THM B (hol.arr (Set_2Eset B) hol.bool) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool))) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) x_1) (hol.cond B (hol.eq A x_1 a_4) a_27_3 (b_2 x_1)) (thm_935 B) (hol.EQ_MP (hol.eq B ((x_5 : hol.term A => (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) x_5) x_1) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) x_1)) (hol.eq B ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) x_1) (hol.cond B (hol.eq A x_1 a_4) a_27_3 (b_2 x_1))) (thm_940 A B x_1 b_2 a_27_3 a_4) (thm_938 A B x_1 b_2 a_27_3 a_4)).

(; Theorem: |- ((= t) t) ;)

(; dict ;)

def thm_942 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (Set_2Eset B) t_1 t_1) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => hol.REFL (Set_2Eset B) t_1.

(; Theorem: |- ((= ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t)) ;)

(; dict ;)

def thm_943 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> x_2 : hol.term A -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) x_2) t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_2 a_5) a_27_4 (b_3 x_2)) t_1)) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => x_2 : hol.term A => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => a_5 : hol.term A => hol.APP_THM (Set_2Eset B) hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) x_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_2 a_5) a_27_4 (b_3 x_2))) t_1 t_1 (thm_941 A B x_2 b_3 a_27_4 a_5) (thm_942 B t_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t))) ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t))) ;)

(; dict ;)

def thm_944 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> x_6 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_5) a_27_3 (b_2 x_7)) x_6) t_1)) (hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => x_6 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_5) a_27_3 (b_2 x_7)) x_6) t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) t_1) (thm_934 A s_4 a_5 x_6) (thm_943 A B t_1 x_6 b_2 a_27_3 a_5).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t))) \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t))) ;)

(; dict ;)

def thm_945 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_5) a_27_3 (b_2 x_7)) x_6) t_1)) (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hol.ABS_THM A hol.bool (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_5) a_27_3 (b_2 x_7)) x_6) t_1)) (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) t_1)) (x_6 : hol.term A => thm_944 B A t_1 b_2 a_27_3 s_4 a_5 x_6).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t)))) ;)

(; dict ;)

def thm_946 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_5) a_27_3 (b_2 x_7)) x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_5) a_27_3 (b_2 x_7)) x_6) t_1)) (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) t_1)) (thm_95 A) (thm_945 B A t_1 b_2 a_27_3 s_4 a_5).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t))))) (Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t))))) ;)

(; dict ;)

def thm_947 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_5) a_27_3 (b_2 x_7)) x_6) t_1)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_5) a_27_3 (b_2 x_7)) x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) t_1))) thm_94 (thm_946 B A t_1 b_2 a_27_3 s_4 a_5).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ;)

(; dict ;)

def thm_948 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1)))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ;)

(; dict ;)

def thm_949 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1)))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (thm_948 t2_1 t1_2) (thm_948 t2_1 t1_2).

(; Theorem: |- ((= \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))))) \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))))) ;)

(; dict ;)

def thm_950 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))).

(; Theorem: |- ((= \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))))) \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))))) ;)

(; dict ;)

def thm_951 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) thm_950 thm_950.

(; Theorem: |- ((= (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))))))) (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))))))) ;)

(; dict ;)

def thm_952 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))))) (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) thm_123 thm_951.

(; Theorem: |- ((= \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))))) \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))))) ;)

(; dict ;)

def thm_953 : t1_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))) (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) :=
  t1_1 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))).

(; Theorem: |- ((= \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))))) \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))))) ;)

(; dict ;)

def thm_954 : t1_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))) (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) :=
  t1_1 : hol.term hol.bool => hol.TRANS (hol.arr hol.bool hol.bool) (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))) (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))) (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))) (thm_953 t1_1) (thm_953 t1_1).

(; Theorem: |- ((= (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))))) (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))))) ;)

(; dict ;)

def thm_955 : t1_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))))) :=
  t1_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))) (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))) thm_123 (thm_954 t1_1).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ;)

(; dict ;)

def thm_956 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1)))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))).

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ;)

(; dict ;)

def thm_957 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1)))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (thm_956 t2_1 t1_2) (thm_956 t2_1 t1_2).

(; Theorem: |- (Data.Bool.! \lambda t2. ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ;)

(; dict ;)

def thm_958 : t1_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2)))) :=
  t1_1 : hol.term hol.bool => thm_32 t1_1.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2))) ;)

(; dict ;)

def thm_959 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => thm_958 t1_2 t2_1.

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))))) ;)

(; dict ;)

def thm_960 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.and (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) hyp_1.

(; Theorem: |- ((= ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))))) ;)

(; dict ;)

def thm_961 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.and (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.and (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (thm_957 t2_1 t1_2) (thm_959 t2_1 t1_2)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) => thm_960 t2_1 t1_2 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda t2. ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ;)

(; dict ;)

def thm_962 : t1_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))) :=
  t1_1 : hol.term hol.bool => thm_33 t1_1.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))) ;)

(; dict ;)

def thm_963 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => thm_962 t1_2 t2_1.

(; Theorem: |- ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ;)

(; dict ;)

def thm_964 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1)))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.and (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1)))) (thm_961 t2_1 t1_2) (hol.EQ_MP (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (thm_948 t2_1 t1_2) (thm_963 t2_1 t1_2)).

(; Theorem: |- (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))))) ;)

(; dict ;)

def thm_965 : t1_1 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) :=
  t1_1 : hol.term hol.bool => t2_2 : hol.term hol.bool => thm_964 t2_2 t1_1.

(; Theorem: |- (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2)))) ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2)))))) ;)

(; dict ;)

def thm_966 : hol.proof (hol.forall hol.bool (t1_1 : hol.term hol.bool => hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2)))))) :=
  t1_1 : hol.term hol.bool => hol.EQ_MP (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) (hol.forall hol.bool (t2_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_1 t2_2)) (hol.or (hol.not t1_1) (hol.not t2_2))) (hol.eq hol.bool (hol.not (hol.or t1_1 t2_2)) (hol.and (hol.not t1_1) (hol.not t2_2))))) (thm_955 t1_1) (thm_965 t1_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))) ;)

(; dict ;)

def thm_967 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1)))) -> hol.proof (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_151 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) hyp_1.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))) ;)

(; dict ;)

def thm_968 : t2_1 : hol.term hol.bool -> t1_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) :=
  t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1)))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.EQ_MP (hol.forall hol.bool (t1_3 : hol.term hol.bool => hol.forall hol.bool (t2_4 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_3 t2_4)) (hol.or (hol.not t1_3) (hol.not t2_4))) (hol.eq hol.bool (hol.not (hol.or t1_3 t2_4)) (hol.and (hol.not t1_3) (hol.not t2_4)))))) (hol.forall hol.bool (t1_3 : hol.term hol.bool => hol.forall hol.bool (t2_4 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.not (hol.and t1_3 t2_4)) (hol.or (hol.not t1_3) (hol.not t2_4))) (hol.eq hol.bool (hol.not (hol.or t1_3 t2_4)) (hol.and (hol.not t1_3) (hol.not t2_4)))))) thm_952 thm_966 t1_2 t2_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.not (hol.and t1_2 t2_1)) (hol.or (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1)))) => thm_967 t2_1 t1_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((Data.Bool./\ (Data.Bool.~ ((= x) a))) (Data.Bool.~ ((Set.member x) s)))) ;)

(; dict ;)

def thm_969 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.not (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) (hol.and (hol.not (hol.eq A x_3 a_2)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => x_3 : hol.term A => (t2_1 : hol.term hol.bool => t1_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (hol.eq hol.bool (hol.not (hol.or t1_2 t2_1)) (hol.and (hol.not t1_2) (hol.not t2_1))) (thm_949 t2_1 t1_2) (thm_968 t2_1 t1_2)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (hol.eq A x_3 a_2).

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))))) (Data.Bool.==> ((Data.Bool./\ (Data.Bool.~ ((= x) a))) (Data.Bool.~ ((Set.member x) s))))) ;)

(; dict ;)

def thm_970 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.not (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)))) (hol.imp (hol.and (hol.not (hol.eq A x_3 a_2)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => x_3 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.not (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) (hol.and (hol.not (hol.eq A x_3 a_2)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) thm_96 (thm_969 A s_1 a_2 x_3).

(; Theorem: |- ((= (= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x))) (= (((Data.Bool.cond ((= x) a)) a') (b x)))) ;)

(; dict ;)

def thm_971 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) x_1)) (hol.eq B (hol.cond B (hol.eq A x_1 a_4) a_27_3 (b_2 x_1)))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => hol.APP_THM B (hol.arr B hol.bool) (hol.eq B) (hol.eq B) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) x_1) (hol.cond B (hol.eq A x_1 a_4) a_27_3 (b_2 x_1)) (thm_331 B) (thm_936 A B x_1 b_2 a_27_3 a_4).

(; Theorem: |- ((= d) d) ;)

(; dict ;)

def thm_972 : B : hol.type -> d_1 : hol.term B -> hol.proof (hol.eq B d_1 d_1) :=
  B : hol.type => d_1 : hol.term B => hol.REFL B d_1.

(; Theorem: |- ((= ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d)) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d)) ;)

(; dict ;)

def thm_973 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> x_2 : hol.term A -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq B ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) x_2) d_1) (hol.eq B (hol.cond B (hol.eq A x_2 a_5) a_27_4 (b_3 x_2)) d_1)) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => x_2 : hol.term A => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => a_5 : hol.term A => hol.APP_THM B hol.bool (hol.eq B ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) x_2)) (hol.eq B (hol.cond B (hol.eq A x_2 a_5) a_27_4 (b_3 x_2))) d_1 d_1 (thm_971 A B x_2 b_3 a_27_4 a_5) (thm_972 B d_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d))) ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.~ ((= x) a))) (Data.Bool.~ ((Set.member x) s)))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d))) ;)

(; dict ;)

def thm_974 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> x_6 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_5) a_27_3 (b_2 x_7)) x_6) d_1)) (hol.imp (hol.and (hol.not (hol.eq A x_6 a_5)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => x_6 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)))) (hol.imp (hol.and (hol.not (hol.eq A x_6 a_5)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)))) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_5) a_27_3 (b_2 x_7)) x_6) d_1) (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) d_1) (thm_970 A s_4 a_5 x_6) (thm_973 A B d_1 x_6 b_2 a_27_3 a_5).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d))) \lambda x. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.~ ((= x) a))) (Data.Bool.~ ((Set.member x) s)))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d))) ;)

(; dict ;)

def thm_975 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_5) a_27_3 (b_2 x_7)) x_6) d_1)) (x_6 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_6 a_5)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hol.ABS_THM A hol.bool (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_5) a_27_3 (b_2 x_7)) x_6) d_1)) (x_6 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_6 a_5)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) d_1)) (x_6 : hol.term A => thm_974 B A d_1 b_2 a_27_3 s_4 a_5 x_6).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.~ ((= x) a))) (Data.Bool.~ ((Set.member x) s)))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d)))) ;)

(; dict ;)

def thm_976 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_5) a_27_3 (b_2 x_7)) x_6) d_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_6 a_5)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_5) a_27_3 (b_2 x_7)) x_6) d_1)) (x_6 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_6 a_5)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) d_1)) (thm_95 A) (thm_975 B A d_1 b_2 a_27_3 s_4 a_5).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.~ ((= x) a))) (Data.Bool.~ ((Set.member x) s)))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d))))) ;)

(; dict ;)

def thm_977 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> s_5 : hol.term (Set_2Eset A) -> a_6 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) d_1)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_7 a_6)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) d_1))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => s_5 : hol.term (Set_2Eset A) => a_6 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) t_2)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) t_2)))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) d_1))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_7 a_6)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) d_1))) (thm_947 B A t_2 b_3 a_27_4 s_5 a_6) (thm_976 B A d_1 b_3 a_27_4 s_5 a_6).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.~ ((= x) a))) (Data.Bool.~ ((Set.member x) s)))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d))))) ;)

(; dict ;)

def thm_978 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> s_5 : hol.term (Set_2Eset A) -> a_6 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_7 a_6)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) d_1)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) d_1))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => s_5 : hol.term (Set_2Eset A) => a_6 : hol.term A => hol.SYM hol.bool (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) d_1)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_7 a_6)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) d_1)))) (thm_977 B A d_1 t_2 b_3 a_27_4 s_5 a_6).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t))) \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t))) ;)

(; dict ;)

def thm_979 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) t_1)) (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hol.REFL (hol.arr A hol.bool) (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) t_1)).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t))) \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t))) ;)

(; dict ;)

def thm_980 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) t_1)) (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hol.TRANS (hol.arr A hol.bool) (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) t_1)) (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) t_1)) (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) t_1)) (thm_979 B A t_1 b_2 a_27_3 s_4 a_5) (thm_979 B A t_1 b_2 a_27_3 s_4 a_5).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t)))) ;)

(; dict ;)

def thm_981 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) t_1)) (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) t_1)) (thm_95 A) (thm_980 B A t_1 b_2 a_27_3 s_4 a_5).

(; Theorem: |- ((Set.member x) s) ;)

(; dict ;)

def thm_982 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hyp_1.

(; Theorem: |- ((= (\lambda _10628. ((Set.member _10628) t) (((Data.Bool.cond ((= x) a)) a') (b x)))) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t)) ;)

(; dict ;)

def thm_983 : A : hol.type -> B : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> x_4 : hol.term A -> t_5 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool ((__10628_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_6 t_5) (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4)) t_5)) :=
  A : hol.type => B : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => a_3 : hol.term A => x_4 : hol.term A => t_5 : hol.term (Set_2Eset B) => hol.BETA_CONV B hol.bool (__10628_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_6 t_5) (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4)).

(; Theorem: |- ((= (= (\lambda _10628. ((Set.member _10628) t) (((Data.Bool.cond ((= x) a)) a') (b x))))) (= ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t))) ;)

(; dict ;)

def thm_984 : A : hol.type -> B : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> x_4 : hol.term A -> t_5 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10628_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_6 t_5) (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4)))) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4)) t_5))) :=
  A : hol.type => B : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => a_3 : hol.term A => x_4 : hol.term A => t_5 : hol.term (Set_2Eset B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__10628_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_6 t_5) (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4)) t_5) thm_77 (thm_983 A B b_1 a_27_2 a_3 x_4 t_5).

(; Theorem: |- ((= (Data.Bool.==> ((= x) a))) (Data.Bool.==> ((= x) a))) ;)

(; dict ;)

def thm_985 : A : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.eq A x_2 a_1)) (hol.imp (hol.eq A x_2 a_1))) :=
  A : hol.type => a_1 : hol.term A => x_2 : hol.term A => hol.REFL (hol.arr hol.bool hol.bool) (hol.imp (hol.eq A x_2 a_1)).

(; Theorem: |- ((= (\lambda _10628. ((Set.member _10628) t) a')) ((Set.member a') t)) ;)

(; dict ;)

def thm_986 : B : hol.type -> a_27_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool ((__10628_3 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_3 t_2) a_27_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_2)) :=
  B : hol.type => a_27_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => hol.BETA_CONV B hol.bool (__10628_3 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_3 t_2) a_27_1.

(; Theorem: |- ((= ((Data.Bool.==> ((= x) a)) (\lambda _10628. ((Set.member _10628) t) a'))) ((Data.Bool.==> ((= x) a)) ((Set.member a') t))) ;)

(; dict ;)

def thm_987 : B : hol.type -> A : hol.type -> a_27_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> a_3 : hol.term A -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq A x_4 a_3) ((__10628_5 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_5 t_2) a_27_1)) (hol.imp (hol.eq A x_4 a_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_2))) :=
  B : hol.type => A : hol.type => a_27_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => a_3 : hol.term A => x_4 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (hol.eq A x_4 a_3)) (hol.imp (hol.eq A x_4 a_3)) ((__10628_5 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_5 t_2) a_27_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_2) (thm_985 A a_3 x_4) (thm_986 B a_27_1 t_2).

(; Theorem: |- ((= (Data.Bool./\ ((Data.Bool.==> ((= x) a)) (\lambda _10628. ((Set.member _10628) t) a')))) (Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((Set.member a') t)))) ;)

(; dict ;)

def thm_988 : B : hol.type -> A : hol.type -> a_27_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> a_3 : hol.term A -> x_4 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.imp (hol.eq A x_4 a_3) ((__10628_5 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_5 t_2) a_27_1))) (hol.and (hol.imp (hol.eq A x_4 a_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_2)))) :=
  B : hol.type => A : hol.type => a_27_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => a_3 : hol.term A => x_4 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.imp (hol.eq A x_4 a_3) ((__10628_5 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_5 t_2) a_27_1)) (hol.imp (hol.eq A x_4 a_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_2)) thm_94 (thm_987 B A a_27_1 t_2 a_3 x_4).

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.~ ((= x) a)))) (Data.Bool.==> (Data.Bool.~ ((= x) a)))) ;)

(; dict ;)

def thm_989 : A : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.not (hol.eq A x_2 a_1))) (hol.imp (hol.not (hol.eq A x_2 a_1)))) :=
  A : hol.type => a_1 : hol.term A => x_2 : hol.term A => hol.REFL (hol.arr hol.bool hol.bool) (hol.imp (hol.not (hol.eq A x_2 a_1))).

(; Theorem: |- ((= (\lambda _10628. ((Set.member _10628) t) (b x))) ((Set.member (b x)) t)) ;)

(; dict ;)

def thm_990 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> b_2 : hol.term (hol.arr A B) -> t_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool ((__10628_4 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_4 t_3) (b_2 x_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_1) t_3)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => b_2 : hol.term (hol.arr A B) => t_3 : hol.term (Set_2Eset B) => hol.BETA_CONV B hol.bool (__10628_4 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_4 t_3) (b_2 x_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= x) a))) (\lambda _10628. ((Set.member _10628) t) (b x)))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((Set.member (b x)) t))) ;)

(; dict ;)

def thm_991 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> t_2 : hol.term (Set_2Eset B) -> a_3 : hol.term A -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 a_3)) ((__10628_5 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_5 t_2) (b_1 x_4))) (hol.imp (hol.not (hol.eq A x_4 a_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_4) t_2))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => t_2 : hol.term (Set_2Eset B) => a_3 : hol.term A => x_4 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (hol.not (hol.eq A x_4 a_3))) (hol.imp (hol.not (hol.eq A x_4 a_3))) ((__10628_5 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_5 t_2) (b_1 x_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_4) t_2) (thm_989 A a_3 x_4) (thm_990 A B x_4 b_1 t_2).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) (\lambda _10628. ((Set.member _10628) t) a'))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) (\lambda _10628. ((Set.member _10628) t) (b x))))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((Set.member a') t))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((Set.member (b x)) t)))) ;)

(; dict ;)

def thm_992 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> x_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (hol.imp (hol.eq A x_5 a_4) ((__10628_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_6 t_3) a_27_2)) (hol.imp (hol.not (hol.eq A x_5 a_4)) ((__10628_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_6 t_3) (b_1 x_5)))) (hol.and (hol.imp (hol.eq A x_5 a_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_3)) (hol.imp (hol.not (hol.eq A x_5 a_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_5) t_3)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => x_5 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.and (hol.imp (hol.eq A x_5 a_4) ((__10628_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_6 t_3) a_27_2))) (hol.and (hol.imp (hol.eq A x_5 a_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_3))) (hol.imp (hol.not (hol.eq A x_5 a_4)) ((__10628_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_6 t_3) (b_1 x_5))) (hol.imp (hol.not (hol.eq A x_5 a_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_5) t_3)) (thm_988 B A a_27_2 t_3 a_4 x_5) (thm_991 B A b_1 t_3 a_4 x_5).

(; Theorem: |- ((= ((= (\lambda _10628. ((Set.member _10628) t) (((Data.Bool.cond ((= x) a)) a') (b x)))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) (\lambda _10628. ((Set.member _10628) t) a'))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) (\lambda _10628. ((Set.member _10628) t) (b x)))))) ((= ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t)) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((Set.member a') t))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((Set.member (b x)) t))))) ;)

(; dict ;)

def thm_993 : A : hol.type -> B : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> x_4 : hol.term A -> t_5 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10628_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_6 t_5) (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4))) (hol.and (hol.imp (hol.eq A x_4 a_3) ((__10628_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_6 t_5) a_27_2)) (hol.imp (hol.not (hol.eq A x_4 a_3)) ((__10628_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_6 t_5) (b_1 x_4))))) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4)) t_5) (hol.and (hol.imp (hol.eq A x_4 a_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_5)) (hol.imp (hol.not (hol.eq A x_4 a_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_4) t_5))))) :=
  A : hol.type => B : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => a_3 : hol.term A => x_4 : hol.term A => t_5 : hol.term (Set_2Eset B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10628_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_6 t_5) (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4)))) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4)) t_5)) (hol.and (hol.imp (hol.eq A x_4 a_3) ((__10628_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_6 t_5) a_27_2)) (hol.imp (hol.not (hol.eq A x_4 a_3)) ((__10628_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_6 t_5) (b_1 x_4)))) (hol.and (hol.imp (hol.eq A x_4 a_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_5)) (hol.imp (hol.not (hol.eq A x_4 a_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_4) t_5))) (thm_984 A B b_1 a_27_2 a_3 x_4 t_5) (thm_992 B A b_1 a_27_2 t_5 a_3 x_4).

(; Theorem: |- (Data.Bool.! \lambda c. (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((= (p (((Data.Bool.cond c) x) y))) ((Data.Bool./\ ((Data.Bool.==> c) (p x))) ((Data.Bool.==> (Data.Bool.~ c)) (p y))))))) ;)

(; dict ;)

def thm_994 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.forall hol.bool (c_2 : hol.term hol.bool => hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.eq hol.bool (p_1 (hol.cond A c_2 x_3 y_4)) (hol.and (hol.imp c_2 (p_1 x_3)) (hol.imp (hol.not c_2) (p_1 y_4))))))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_34 A p_1.

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((= (p (((Data.Bool.cond c) x) y))) ((Data.Bool./\ ((Data.Bool.==> c) (p x))) ((Data.Bool.==> (Data.Bool.~ c)) (p y)))))) ;)

(; dict ;)

def thm_995 : A : hol.type -> c_1 : hol.term hol.bool -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.eq hol.bool (p_2 (hol.cond A c_1 x_3 y_4)) (hol.and (hol.imp c_1 (p_2 x_3)) (hol.imp (hol.not c_1) (p_2 y_4)))))) :=
  A : hol.type => c_1 : hol.term hol.bool => p_2 : hol.term (hol.arr A hol.bool) => thm_994 A p_2 c_1.

(; Theorem: |- (Data.Bool.! \lambda y. ((= (p (((Data.Bool.cond c) x) y))) ((Data.Bool./\ ((Data.Bool.==> c) (p x))) ((Data.Bool.==> (Data.Bool.~ c)) (p y))))) ;)

(; dict ;)

def thm_996 : A : hol.type -> x_1 : hol.term A -> c_2 : hol.term hol.bool -> p_3 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.forall A (y_4 : hol.term A => hol.eq hol.bool (p_3 (hol.cond A c_2 x_1 y_4)) (hol.and (hol.imp c_2 (p_3 x_1)) (hol.imp (hol.not c_2) (p_3 y_4))))) :=
  A : hol.type => x_1 : hol.term A => c_2 : hol.term hol.bool => p_3 : hol.term (hol.arr A hol.bool) => thm_995 A c_2 p_3 x_1.

(; Theorem: |- ((= (p (((Data.Bool.cond c) x) y))) ((Data.Bool./\ ((Data.Bool.==> c) (p x))) ((Data.Bool.==> (Data.Bool.~ c)) (p y)))) ;)

(; dict ;)

def thm_997 : A : hol.type -> y_1 : hol.term A -> x_2 : hol.term A -> c_3 : hol.term hol.bool -> p_4 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (p_4 (hol.cond A c_3 x_2 y_1)) (hol.and (hol.imp c_3 (p_4 x_2)) (hol.imp (hol.not c_3) (p_4 y_1)))) :=
  A : hol.type => y_1 : hol.term A => x_2 : hol.term A => c_3 : hol.term hol.bool => p_4 : hol.term (hol.arr A hol.bool) => thm_996 A x_2 c_3 p_4 y_1.

(; Theorem: |- ((= (_484 (((Data.Bool.cond _483) _482) _485))) ((Data.Bool./\ ((Data.Bool.==> _483) (_484 _482))) ((Data.Bool.==> (Data.Bool.~ _483)) (_484 _485)))) ;)

(; dict ;)

def thm_998 : A : hol.type -> __485_1 : hol.term A -> __482_2 : hol.term A -> __483_3 : hol.term hol.bool -> __484_4 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (__484_4 (hol.cond A __483_3 __482_2 __485_1)) (hol.and (hol.imp __483_3 (__484_4 __482_2)) (hol.imp (hol.not __483_3) (__484_4 __485_1)))) :=
  A : hol.type => __485_1 : hol.term A => __482_2 : hol.term A => __483_3 : hol.term hol.bool => __484_4 : hol.term (hol.arr A hol.bool) => (A : hol.type => y_1 : hol.term A => x_2 : hol.term A => c_3 : hol.term hol.bool => p_4 : hol.term (hol.arr A hol.bool) => thm_997 A y_1 x_2 c_3 p_4) A __485_1 __482_2 __483_3 __484_4.

(; Theorem: |- ((= (_484 (((Data.Bool.cond _483) _482) _485))) ((Data.Bool./\ ((Data.Bool.==> _483) (_484 _482))) ((Data.Bool.==> (Data.Bool.~ _483)) (_484 _485)))) ;)

(; dict ;)

def thm_999 : B : hol.type -> __485_1 : hol.term B -> __482_2 : hol.term B -> __483_3 : hol.term hol.bool -> __484_4 : hol.term (hol.arr B hol.bool) -> hol.proof (hol.eq hol.bool (__484_4 (hol.cond B __483_3 __482_2 __485_1)) (hol.and (hol.imp __483_3 (__484_4 __482_2)) (hol.imp (hol.not __483_3) (__484_4 __485_1)))) :=
  B : hol.type => __485_1 : hol.term B => __482_2 : hol.term B => __483_3 : hol.term hol.bool => __484_4 : hol.term (hol.arr B hol.bool) => (A : hol.type => __485_1 : hol.term A => __482_2 : hol.term A => __483_3 : hol.term hol.bool => __484_4 : hol.term (hol.arr A hol.bool) => thm_998 A __485_1 __482_2 __483_3 __484_4) B __485_1 __482_2 __483_3 __484_4.

(; Theorem: |- ((= (\lambda _10628. ((Set.member _10628) t) (((Data.Bool.cond _483) _482) _485))) ((Data.Bool./\ ((Data.Bool.==> _483) (\lambda _10628. ((Set.member _10628) t) _482))) ((Data.Bool.==> (Data.Bool.~ _483)) (\lambda _10628. ((Set.member _10628) t) _485)))) ;)

(; dict ;)

def thm_1000 : B : hol.type -> __485_1 : hol.term B -> __482_2 : hol.term B -> __483_3 : hol.term hol.bool -> t_4 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool ((__10628_5 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_5 t_4) (hol.cond B __483_3 __482_2 __485_1)) (hol.and (hol.imp __483_3 ((__10628_5 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_5 t_4) __482_2)) (hol.imp (hol.not __483_3) ((__10628_5 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_5 t_4) __485_1)))) :=
  B : hol.type => __485_1 : hol.term B => __482_2 : hol.term B => __483_3 : hol.term hol.bool => t_4 : hol.term (Set_2Eset B) => (B : hol.type => __485_1 : hol.term B => __482_2 : hol.term B => __483_3 : hol.term hol.bool => __484_4 : hol.term (hol.arr B hol.bool) => thm_999 B __485_1 __482_2 __483_3 __484_4) B __485_1 __482_2 __483_3 (__10628_5 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_5 t_4).

(; Theorem: |- ((= (\lambda _10628. ((Set.member _10628) t) (((Data.Bool.cond ((= x) a)) a') (b x)))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) (\lambda _10628. ((Set.member _10628) t) a'))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) (\lambda _10628. ((Set.member _10628) t) (b x))))) ;)

(; dict ;)

def thm_1001 : A : hol.type -> B : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> x_4 : hol.term A -> t_5 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool ((__10628_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_6 t_5) (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4))) (hol.and (hol.imp (hol.eq A x_4 a_3) ((__10628_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_6 t_5) a_27_2)) (hol.imp (hol.not (hol.eq A x_4 a_3)) ((__10628_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_6 t_5) (b_1 x_4))))) :=
  A : hol.type => B : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => a_3 : hol.term A => x_4 : hol.term A => t_5 : hol.term (Set_2Eset B) => (B : hol.type => __485_1 : hol.term B => __482_2 : hol.term B => __483_3 : hol.term hol.bool => t_4 : hol.term (Set_2Eset B) => thm_1000 B __485_1 __482_2 __483_3 t_4) B (b_1 x_4) a_27_2 (hol.eq A x_4 a_3) t_5.

(; Theorem: |- ((= ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t)) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((Set.member a') t))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((Set.member (b x)) t)))) ;)

(; dict ;)

def thm_1002 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> x_5 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) t_1) (hol.and (hol.imp (hol.eq A x_5 a_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_1)) (hol.imp (hol.not (hol.eq A x_5 a_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_5) t_1)))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => x_5 : hol.term A => hol.EQ_MP (hol.eq hol.bool ((__10628_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_6 t_1) (hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5))) (hol.and (hol.imp (hol.eq A x_5 a_4) ((__10628_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_6 t_1) a_27_3)) (hol.imp (hol.not (hol.eq A x_5 a_4)) ((__10628_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10628_6 t_1) (b_2 x_5))))) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) t_1) (hol.and (hol.imp (hol.eq A x_5 a_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_1)) (hol.imp (hol.not (hol.eq A x_5 a_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_5) t_1)))) (thm_993 A B b_2 a_27_3 a_4 x_5 t_1) (thm_1001 A B b_2 a_27_3 a_4 x_5 t_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((Set.member a') t))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((Set.member (b x)) t)))) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t)) ;)

(; dict ;)

def thm_1003 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> t_2 : hol.term (Set_2Eset B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> x_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (hol.imp (hol.eq A x_5 a_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_2)) (hol.imp (hol.not (hol.eq A x_5 a_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_5) t_2))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_1 x_5)) t_2)) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => t_2 : hol.term (Set_2Eset B) => a_27_3 : hol.term B => a_4 : hol.term A => x_5 : hol.term A => hol.SYM hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_1 x_5)) t_2) (hol.and (hol.imp (hol.eq A x_5 a_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_2)) (hol.imp (hol.not (hol.eq A x_5 a_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_5) t_2))) (thm_1002 A B t_2 b_1 a_27_3 a_4 x_5).

(; Theorem: |- ((= x) a) ;)

(; dict ;)

def thm_1004 : A : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_2 a_1) -> hol.proof (hol.eq A x_2 a_1) :=
  A : hol.type => a_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.eq A x_2 a_1) => hyp_1.

(; Theorem: |- ((= ((Set.member a') t)) ((Set.member a') t)) ;)

(; dict ;)

def thm_1005 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> a_27_2 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_1)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => a_27_2 : hol.term B => hol.REFL hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_1).

(; Theorem: |- ((= ((Set.member a') t)) ((Set.member a') t)) ;)

(; dict ;)

def thm_1006 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> a_27_2 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_1)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => a_27_2 : hol.term B => hol.SYM hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_1) (thm_1005 B t_1 a_27_2).

(; Theorem: |- ((= Set.member) Set.member) ;)

(; dict ;)

def thm_1007 : A : hol.type -> hol.proof (hol.eq (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)))) :=
  A : hol.type => hol.REFL (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool))).

(; Theorem: |- ((= (Set.member x)) (Set.member a)) ;)

(; dict ;)

def thm_1008 : A : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_2 a_1) -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1)) :=
  A : hol.type => a_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.eq A x_2 a_1) => hol.APP_THM A (hol.arr (Set_2Eset A) hol.bool) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool))) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool))) x_2 a_1 (thm_1007 A) (thm_1004 A a_1 x_2 hyp_1).

(; Theorem: |- ((= s) s) ;)

(; dict ;)

def thm_1009 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (Set_2Eset A) s_1 s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => hol.REFL (Set_2Eset A) s_1.

(; Theorem: |- ((= ((Set.member x) s)) ((Set.member a) s)) ;)

(; dict ;)

def thm_1010 : A : hol.type -> a_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_3 a_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_2)) :=
  A : hol.type => a_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_3 a_1) => hol.APP_THM (Set_2Eset A) hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1) s_2 s_2 (thm_1008 A a_1 x_3 hyp_1) (thm_1009 A s_2).

(; Theorem: |- ((= ((= ((Set.member a) s)) Data.Bool.F)) ((= ((Set.member a) s)) Data.Bool.F)) ;)

(; dict ;)

def thm_1011 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) hol.false) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) hol.false)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) hol.false).

(; Theorem: |- ((= ((= ((Set.member a) s)) Data.Bool.F)) ((= ((Set.member a) s)) Data.Bool.F)) ;)

(; dict ;)

def thm_1012 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) hol.false) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) hol.false)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) hol.false) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) hol.false) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) hol.false) (thm_1011 A s_1 a_2) (thm_1011 A s_1 a_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((Set.member a) s))) ((= ((Set.member a) s)) Data.Bool.F)) ;)

(; dict ;)

def thm_1013 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> hol.proof (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) hol.false)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => (P_1 : hol.term hol.bool => thm_114 P_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1).

(; Theorem: |- ((= ((Set.member a) s)) Data.Bool.F) ;)

(; dict ;)

def thm_1014 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1)) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) hol.false) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1)) => thm_1013 A s_1 a_2 (thm_933 A s_1 a_2 hyp_1).

(; Theorem: |- ((= ((Set.member x) s)) Data.Bool.F) ;)

(; dict ;)

def thm_1015 : A : hol.type -> a_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_2)) -> hyp_2 : hol.proof (hol.eq A x_3 a_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) hol.false) :=
  A : hol.type => a_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_2)) => hyp_2 : hol.proof (hol.eq A x_3 a_1) => hol.TRANS hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_2) hol.false (thm_1010 A a_1 s_2 x_3 hyp_2) (hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_2) hol.false) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_2) hol.false) (thm_1012 A s_2 a_1) (thm_1014 A s_2 a_1 hyp_1)).

(; Theorem: |- ((= (Data.Bool.==> ((Set.member x) s))) (Data.Bool.==> Data.Bool.F)) ;)

(; dict ;)

def thm_1016 : A : hol.type -> a_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_2)) -> hyp_2 : hol.proof (hol.eq A x_3 a_1) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) (hol.imp hol.false)) :=
  A : hol.type => a_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_2)) => hyp_2 : hol.proof (hol.eq A x_3 a_1) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) hol.false thm_96 (thm_1015 A a_1 s_2 x_3 hyp_1 hyp_2).

(; Theorem: |- ((= ((= ((Set.member a') t)) Data.Bool.T)) ((= ((Set.member a') t)) Data.Bool.T)) ;)

(; dict ;)

def thm_1017 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> a_27_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_1) hol.true)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => a_27_2 : hol.term B => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_1) hol.true).

(; Theorem: |- ((= ((= ((Set.member a') t)) Data.Bool.T)) ((= ((Set.member a') t)) Data.Bool.T)) ;)

(; dict ;)

def thm_1018 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> a_27_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_1) hol.true)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => a_27_2 : hol.term B => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_1) hol.true) (thm_1017 B t_1 a_27_2) (thm_1017 B t_1 a_27_2).

(; Theorem: |- ((= ((Set.member a') t)) ((= ((Set.member a') t)) Data.Bool.T)) ;)

(; dict ;)

def thm_1019 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> a_27_2 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_1) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_1) hol.true)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => a_27_2 : hol.term B => (t_1 : hol.term hol.bool => thm_180 t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_1).

(; Theorem: |- ((= ((Set.member a') t)) Data.Bool.T) ;)

(; dict ;)

def thm_1020 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> a_27_2 : hol.term B -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_1) hol.true) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => a_27_2 : hol.term B => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_1) => hol.EQ_MP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_1) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_1) hol.true) (thm_1019 B t_1 a_27_2) (thm_912 B t_1 a_27_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) s)) ((Set.member a') t))) ((Data.Bool.==> Data.Bool.F) Data.Bool.T)) ;)

(; dict ;)

def thm_1021 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> t_2 : hol.term (Set_2Eset B) -> a_27_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4)) -> hyp_2 : hol.proof (hol.eq A x_5 a_1) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_2) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_2)) (hol.imp hol.false hol.true)) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => t_2 : hol.term (Set_2Eset B) => a_27_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4)) => hyp_2 : hol.proof (hol.eq A x_5 a_1) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_2) => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.imp hol.false) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_2) hol.true (thm_1016 A a_1 s_4 x_5 hyp_1 hyp_2) (hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_2) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_2) hol.true) (thm_1018 B t_2 a_27_3) (thm_1020 B t_2 a_27_3 hyp_3)).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_1022 : hol.proof (hol.eq hol.bool (hol.imp hol.false hol.true) hol.true) :=
  (t_1 : hol.term hol.bool => thm_167 t_1) hol.true.

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) s)) ((Set.member a') t))) Data.Bool.T) ;)

(; dict ;)

def thm_1023 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> t_2 : hol.term (Set_2Eset B) -> a_27_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4)) -> hyp_2 : hol.proof (hol.eq A x_5 a_1) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_2) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_2)) hol.true) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => t_2 : hol.term (Set_2Eset B) => a_27_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4)) => hyp_2 : hol.proof (hol.eq A x_5 a_1) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_2) => hol.TRANS hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_2)) (hol.imp hol.false hol.true) hol.true (thm_1021 B A a_1 t_2 a_27_3 s_4 x_5 hyp_1 hyp_2 hyp_3) thm_1022.

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> ((Set.member x) s)) ((Set.member a') t))) ;)

(; dict ;)

def thm_1024 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> t_2 : hol.term (Set_2Eset B) -> a_27_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4)) -> hyp_2 : hol.proof (hol.eq A x_5 a_1) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_2) -> hol.proof (hol.eq hol.bool hol.true (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_2))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => t_2 : hol.term (Set_2Eset B) => a_27_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4)) => hyp_2 : hol.proof (hol.eq A x_5 a_1) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_2) => hol.SYM hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_2)) hol.true (thm_1023 B A a_1 t_2 a_27_3 s_4 x_5 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Set.member x) s)) ((Set.member a') t)) ;)

(; dict ;)

def thm_1025 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> t_2 : hol.term (Set_2Eset B) -> a_27_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4)) -> hyp_2 : hol.proof (hol.eq A x_5 a_1) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_2) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_2)) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => t_2 : hol.term (Set_2Eset B) => a_27_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4)) => hyp_2 : hol.proof (hol.eq A x_5 a_1) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_2) => hol.EQ_MP hol.true (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_2)) (thm_1024 B A a_1 t_2 a_27_3 s_4 x_5 hyp_1 hyp_2 hyp_3) thm_10.

(; Theorem: |- ((Set.member a') t) ;)

(; dict ;)

def thm_1026 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> a_3 : hol.term A -> t_4 : hol.term (Set_2Eset B) -> a_27_5 : hol.term B -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_3 s_2)) -> hyp_2 : hol.proof (hol.eq A x_1 a_3) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) -> hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => a_3 : hol.term A => t_4 : hol.term (Set_2Eset B) => a_27_5 : hol.term B => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_3 s_2)) => hyp_2 : hol.proof (hol.eq A x_1 a_3) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) => hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) => thm_1025 B A a_3 t_4 a_27_5 s_2 x_1 hyp_1 hyp_2 hyp_4 (thm_982 A s_2 x_1 hyp_3).

(; Theorem: |- ((Set.member a') t) ;)

(; dict ;)

def thm_1027 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> a_3 : hol.term A -> t_4 : hol.term (Set_2Eset B) -> a_27_5 : hol.term B -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_3 s_2)) -> hyp_2 : hol.proof (hol.eq A x_1 a_3) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) -> hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => a_3 : hol.term A => t_4 : hol.term (Set_2Eset B) => a_27_5 : hol.term B => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_3 s_2)) => hyp_2 : hol.proof (hol.eq A x_1 a_3) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) => hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) => hol.PROVE_HYP (hol.eq A x_1 a_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) (thm_1004 A a_3 x_1 hyp_2) (hyp_5 : hol.proof (hol.eq A x_1 a_3) => hol.EQ_MP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) (thm_1006 B t_4 a_27_5) (thm_1026 A B x_1 s_2 a_3 t_4 a_27_5 hyp_1 hyp_5 hyp_3 hyp_4)).

(; Theorem: |- ((Data.Bool.==> ((= x) a)) ((Set.member a') t)) ;)

(; dict ;)

def thm_1028 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_1)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_2) -> hol.proof (hol.imp (hol.eq A x_5 a_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_2)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => a_27_3 : hol.term B => a_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_1)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_2) => hyp_4 : hol.proof (hol.eq A x_5 a_4) => thm_1027 A B x_5 s_1 a_4 t_2 a_27_3 hyp_1 hyp_4 hyp_2 hyp_3.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((Set.member (b x)) t))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((Set.member a') t))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((Set.member (b x)) t)))) ;)

(; dict ;)

def thm_1029 : B : hol.type -> A : hol.type -> a_27_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> a_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.imp (hol.eq A x_5 a_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_2)) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_5 a_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_5) t_2)) (hol.and (hol.imp (hol.eq A x_5 a_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_2)) (hol.imp (hol.not (hol.eq A x_5 a_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_5) t_2)))) :=
  B : hol.type => A : hol.type => a_27_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => a_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.imp (hol.eq A x_5 a_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_2)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.imp (hol.eq A x_5 a_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_2)) (hol.imp (hol.not (hol.eq A x_5 a_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_5) t_2)) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((Set.member (b x)) t))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((Set.member a') t))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((Set.member (b x)) t)))) ;)

(; dict ;)

def thm_1030 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_27_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> b_4 : hol.term (hol.arr A B) -> a_5 : hol.term A -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_1)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_3) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_6 a_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_6) t_3)) (hol.and (hol.imp (hol.eq A x_6 a_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_3)) (hol.imp (hol.not (hol.eq A x_6 a_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_6) t_3)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => a_27_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => b_4 : hol.term (hol.arr A B) => a_5 : hol.term A => x_6 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_1)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_3) => hol.PROVE_HYP (hol.imp (hol.eq A x_6 a_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_3)) (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_6 a_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_6) t_3)) (hol.and (hol.imp (hol.eq A x_6 a_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_3)) (hol.imp (hol.not (hol.eq A x_6 a_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_6) t_3)))) (thm_1028 B A s_1 t_3 a_27_2 a_5 x_6 hyp_1 hyp_2 hyp_3) (hyp_4 : hol.proof (hol.imp (hol.eq A x_6 a_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_3)) => thm_1029 B A a_27_2 t_3 b_4 a_5 x_6 hyp_4).

(; Theorem: |- ((= ((Set.member (b x)) t)) ((Set.member (b x)) t)) ;)

(; dict ;)

def thm_1031 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> x_2 : hol.term A -> b_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_2) t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_2) t_1)) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => x_2 : hol.term A => b_3 : hol.term (hol.arr A B) => hol.REFL hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_2) t_1).

(; Theorem: |- ((= ((Set.member (b x)) t)) ((Set.member (b x)) t)) ;)

(; dict ;)

def thm_1032 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> x_2 : hol.term A -> b_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_2) t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_2) t_1)) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => x_2 : hol.term A => b_3 : hol.term (hol.arr A B) => hol.SYM hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_2) t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_2) t_1) (thm_1031 A B t_1 x_2 b_3).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t))) ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t))) ;)

(; dict ;)

def thm_1033 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> b_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_4) t_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_4) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.REFL hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_4) t_1)).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t))) ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t))) ;)

(; dict ;)

def thm_1034 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> b_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_4) t_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_4) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.TRANS hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_4) t_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_4) t_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_4) t_1)) (thm_1033 B A t_1 b_2 s_3 x_4) (thm_1033 B A t_1 b_2 s_3 x_4).

(; Theorem: |- ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)) ;)

(; dict ;)

def thm_1035 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> b_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_5) t_1))) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_4) t_1)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_5) t_1))) => thm_918 B A t_1 b_2 s_3 hyp_1 x_4.

(; Theorem: |- ((Set.member (b x)) t) ;)

(; dict ;)

def thm_1036 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> x_3 : hol.term A -> b_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_5) t_2))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_3) t_2) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => x_3 : hol.term A => b_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_5) t_2))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) => (B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_5) t_1))) => hol.EQ_MP (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_4) t_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_4) t_1)) (thm_1034 B A t_1 b_2 s_3 x_4) (thm_1035 B A t_1 b_2 s_3 x_4 hyp_1)) B A t_2 b_4 s_1 x_3 hyp_1 (thm_982 A s_1 x_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((Set.member (b x)) t)) ;)

(; dict ;)

def thm_1037 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> a_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_6) t_2))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) -> hol.proof (hol.imp (hol.not (hol.eq A x_5 a_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_5) t_2)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => a_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_6) t_2))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) => hyp_3 : hol.proof (hol.not (hol.eq A x_5 a_4)) => hol.EQ_MP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_5) t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_5) t_2) (thm_1032 A B t_2 x_5 b_3) (thm_1036 A B s_1 t_2 x_5 b_3 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((Set.member a') t))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((Set.member (b x)) t))) ;)

(; dict ;)

def thm_1038 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> b_2 : hol.term (hol.arr A B) -> t_3 : hol.term (Set_2Eset B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_7) t_3))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_1)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) -> hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_3) -> hol.proof (hol.and (hol.imp (hol.eq A x_6 a_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_3)) (hol.imp (hol.not (hol.eq A x_6 a_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_6) t_3))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => b_2 : hol.term (hol.arr A B) => t_3 : hol.term (Set_2Eset B) => a_27_4 : hol.term B => a_5 : hol.term A => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_7) t_3))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_1)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) => hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_3) => hol.EQ_MP (hol.imp (hol.not (hol.eq A x_6 a_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_6) t_3)) (hol.and (hol.imp (hol.eq A x_6 a_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_3)) (hol.imp (hol.not (hol.eq A x_6 a_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_6) t_3))) (thm_1030 B A s_1 a_27_4 t_3 b_2 a_5 x_6 hyp_2 hyp_3 hyp_4) (thm_1037 B A s_1 t_3 b_2 a_5 x_6 hyp_1 hyp_3).

(; Theorem: |- ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t) ;)

(; dict ;)

def thm_1039 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_1)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) -> hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) t_2) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => a_5 : hol.term A => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_1)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) => hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) => hol.EQ_MP (hol.and (hol.imp (hol.eq A x_6 a_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2)) (hol.imp (hol.not (hol.eq A x_6 a_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_6) t_2))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) t_2) (thm_1003 B A b_3 t_2 a_27_4 a_5 x_6) (thm_1038 B A s_1 b_3 t_2 a_27_4 a_5 x_6 hyp_1 hyp_2 hyp_3 hyp_4).

(; Theorem: |- ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t) ;)

(; dict ;)

def thm_1040 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_1)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) -> hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) t_2) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => a_5 : hol.term A => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_1)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) => hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) t_2) (thm_982 A s_1 x_6 hyp_3) (hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) => thm_1039 A B s_1 t_2 b_3 a_27_4 a_5 x_6 hyp_1 hyp_2 hyp_5 hyp_4).

(; Theorem: |- ((Data.Bool.==> ((Set.member x) s)) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t)) ;)

(; dict ;)

def thm_1041 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> s_5 : hol.term (Set_2Eset A) -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_7) t_1))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_5)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_1) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) t_1)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => s_5 : hol.term (Set_2Eset A) => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_7) t_1))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_5)) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_1) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) => thm_1040 A B s_5 t_1 b_2 a_27_3 a_4 x_6 hyp_1 hyp_2 hyp_4 hyp_3.

(; Theorem: |- ((= Data.Bool.cond) Data.Bool.cond) ;)

(; dict ;)

def thm_1042 : B : hol.type -> hol.proof (hol.eq (hol.arr hol.bool (hol.arr B (hol.arr B B))) (hol.cond B) (hol.cond B)) :=
  B : hol.type => hol.REFL (hol.arr hol.bool (hol.arr B (hol.arr B B))) (hol.cond B).

(; Theorem: |- ((= (= x)) (= a)) ;)

(; dict ;)

def thm_1043 : A : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_2 a_1) -> hol.proof (hol.eq (hol.arr A hol.bool) (hol.eq A x_2) (hol.eq A a_1)) :=
  A : hol.type => a_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.eq A x_2 a_1) => hol.APP_THM A (hol.arr A hol.bool) (hol.eq A) (hol.eq A) x_2 a_1 (thm_437 A) (thm_1004 A a_1 x_2 hyp_1).

(; Theorem: |- ((= ((= x) a)) ((= a) a)) ;)

(; dict ;)

def thm_1044 : A : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_2 a_1) -> hol.proof (hol.eq hol.bool (hol.eq A x_2 a_1) (hol.eq A a_1 a_1)) :=
  A : hol.type => a_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.eq A x_2 a_1) => hol.APP_THM A hol.bool (hol.eq A x_2) (hol.eq A a_1) a_1 a_1 (thm_1043 A a_1 x_2 hyp_1) (thm_438 A a_1).

(; Theorem: |- ((= ((= a) a)) Data.Bool.T) ;)

(; dict ;)

def thm_1045 : A : hol.type -> a_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A a_1 a_1) hol.true) :=
  A : hol.type => a_1 : hol.term A => (A : hol.type => x_1 : hol.term A => thm_349 A x_1) A a_1.

(; Theorem: |- ((= ((= x) a)) Data.Bool.T) ;)

(; dict ;)

def thm_1046 : A : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_2 a_1) -> hol.proof (hol.eq hol.bool (hol.eq A x_2 a_1) hol.true) :=
  A : hol.type => a_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.eq A x_2 a_1) => hol.TRANS hol.bool (hol.eq A x_2 a_1) (hol.eq A a_1 a_1) hol.true (thm_1044 A a_1 x_2 hyp_1) (thm_1045 A a_1).

(; Theorem: |- ((= (Data.Bool.cond ((= x) a))) (Data.Bool.cond Data.Bool.T)) ;)

(; dict ;)

def thm_1047 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_2 a_1) -> hol.proof (hol.eq (hol.arr B (hol.arr B B)) (hol.cond B (hol.eq A x_2 a_1)) (hol.cond B hol.true)) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.eq A x_2 a_1) => hol.APP_THM hol.bool (hol.arr B (hol.arr B B)) (hol.cond B) (hol.cond B) (hol.eq A x_2 a_1) hol.true (thm_1042 B) (thm_1046 A a_1 x_2 hyp_1).

(; Theorem: |- ((= a') a') ;)

(; dict ;)

def thm_1048 : B : hol.type -> a_27_1 : hol.term B -> hol.proof (hol.eq B a_27_1 a_27_1) :=
  B : hol.type => a_27_1 : hol.term B => hol.REFL B a_27_1.

(; Theorem: |- ((= ((Data.Bool.cond ((= x) a)) a')) ((Data.Bool.cond Data.Bool.T) a')) ;)

(; dict ;)

def thm_1049 : A : hol.type -> B : hol.type -> a_27_1 : hol.term B -> a_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_3 a_2) -> hol.proof (hol.eq (hol.arr B B) (hol.cond B (hol.eq A x_3 a_2) a_27_1) (hol.cond B hol.true a_27_1)) :=
  A : hol.type => B : hol.type => a_27_1 : hol.term B => a_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_3 a_2) => hol.APP_THM B (hol.arr B B) (hol.cond B (hol.eq A x_3 a_2)) (hol.cond B hol.true) a_27_1 a_27_1 (thm_1047 A B a_2 x_3 hyp_1) (thm_1048 B a_27_1).

(; Theorem: |- ((= (b x)) (b a)) ;)

(; dict ;)

def thm_1050 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> b_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq A x_2 a_1) -> hol.proof (hol.eq B (b_3 x_2) (b_3 a_1)) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => x_2 : hol.term A => b_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq A x_2 a_1) => hol.APP_THM A B b_3 b_3 x_2 a_1 (thm_847 B A b_3) (thm_1004 A a_1 x_2 hyp_1).

(; Theorem: |- ((= (((Data.Bool.cond ((= x) a)) a') (b x))) (((Data.Bool.cond Data.Bool.T) a') (b a))) ;)

(; dict ;)

def thm_1051 : A : hol.type -> B : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_4 a_3) -> hol.proof (hol.eq B (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4)) (hol.cond B hol.true a_27_2 (b_1 a_3))) :=
  A : hol.type => B : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => a_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.eq A x_4 a_3) => hol.APP_THM B B (hol.cond B (hol.eq A x_4 a_3) a_27_2) (hol.cond B hol.true a_27_2) (b_1 x_4) (b_1 a_3) (thm_1049 A B a_27_2 a_3 x_4 hyp_1) (thm_1050 A B a_3 x_4 b_1 hyp_1).

(; Theorem: |- ((= ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ;)

(; dict ;)

def thm_1052 : A : hol.type -> t2_1 : hol.term A -> t1_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2)) :=
  A : hol.type => t2_1 : hol.term A => t1_2 : hol.term A => hol.REFL hol.bool (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2).

(; Theorem: |- ((= ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ;)

(; dict ;)

def thm_1053 : A : hol.type -> t2_1 : hol.term A -> t1_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2)) :=
  A : hol.type => t2_1 : hol.term A => t1_2 : hol.term A => hol.TRANS hol.bool (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (thm_1052 A t2_1 t1_2) (thm_1052 A t2_1 t1_2).

(; Theorem: |- ((= \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2)))) \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2)))) ;)

(; dict ;)

def thm_1054 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (t1_1 : hol.term A => hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))) (t1_1 : hol.term A => hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2)))) :=
  A : hol.type => hol.REFL (hol.arr A hol.bool) (t1_1 : hol.term A => hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))).

(; Theorem: |- ((= \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2)))) \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2)))) ;)

(; dict ;)

def thm_1055 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (t1_1 : hol.term A => hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))) (t1_1 : hol.term A => hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2)))) :=
  A : hol.type => hol.TRANS (hol.arr A hol.bool) (t1_1 : hol.term A => hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))) (t1_1 : hol.term A => hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))) (t1_1 : hol.term A => hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))) (thm_1054 A) (thm_1054 A).

(; Theorem: |- ((= (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2))))) (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2))))) ;)

(; dict ;)

def thm_1056 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall A (t1_1 : hol.term A => hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2)))) (hol.forall A (t1_1 : hol.term A => hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))))) :=
  A : hol.type => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (t1_1 : hol.term A => hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))) (t1_1 : hol.term A => hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))) (thm_95 A) (thm_1055 A).

(; Theorem: |- ((= \lambda t2. ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2))) \lambda t2. ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2))) ;)

(; dict ;)

def thm_1057 : A : hol.type -> t1_1 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2)) (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))) :=
  A : hol.type => t1_1 : hol.term A => hol.REFL (hol.arr A hol.bool) (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2)).

(; Theorem: |- ((= \lambda t2. ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2))) \lambda t2. ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2))) ;)

(; dict ;)

def thm_1058 : A : hol.type -> t1_1 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2)) (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))) :=
  A : hol.type => t1_1 : hol.term A => hol.TRANS (hol.arr A hol.bool) (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2)) (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2)) (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2)) (thm_1057 A t1_1) (thm_1057 A t1_1).

(; Theorem: |- ((= (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2)))) (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2)))) ;)

(; dict ;)

def thm_1059 : A : hol.type -> t1_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))) (hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2)))) :=
  A : hol.type => t1_1 : hol.term A => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2)) (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2)) (thm_95 A) (thm_1058 A t1_1).

(; Theorem: |- (Data.Bool.! \lambda t2. ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ;)

(; dict ;)

def thm_1060 : A : hol.type -> t1_1 : hol.term A -> hol.proof (hol.forall A (t2_2 : hol.term A => hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1)) :=
  A : hol.type => t1_1 : hol.term A => thm_35 A t1_1.

(; Theorem: |- ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1) ;)

(; dict ;)

def thm_1061 : A : hol.type -> t2_1 : hol.term A -> t1_2 : hol.term A -> hol.proof (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) :=
  A : hol.type => t2_1 : hol.term A => t1_2 : hol.term A => thm_1060 A t1_2 t2_1.

(; Theorem: |- ((= ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2)) ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2))) ;)

(; dict ;)

def thm_1062 : A : hol.type -> t2_1 : hol.term A -> t1_2 : hol.term A -> hyp_1 : hol.proof (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) -> hol.proof (hol.eq hol.bool (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) (hol.and (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1))) :=
  A : hol.type => t2_1 : hol.term A => t1_2 : hol.term A => hyp_1 : hol.proof (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) hyp_1.

(; Theorem: |- ((= ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2)) ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2))) ;)

(; dict ;)

def thm_1063 : A : hol.type -> t2_1 : hol.term A -> t1_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) (hol.and (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1))) :=
  A : hol.type => t2_1 : hol.term A => t1_2 : hol.term A => hol.PROVE_HYP (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq hol.bool (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) (hol.and (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1))) ((A : hol.type => t2_1 : hol.term A => t1_2 : hol.term A => hol.EQ_MP (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (thm_1052 A t2_1 t1_2) (thm_1061 A t2_1 t1_2)) A t2_1 t1_2) (hyp_1 : hol.proof (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) => thm_1062 A t2_1 t1_2 hyp_1).

(; Theorem: |- ((= ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2)) ;)

(; dict ;)

def thm_1064 : A : hol.type -> t2_1 : hol.term A -> t1_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1)) :=
  A : hol.type => t2_1 : hol.term A => t1_2 : hol.term A => hol.REFL hol.bool (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1).

(; Theorem: |- ((= ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2)) ;)

(; dict ;)

def thm_1065 : A : hol.type -> t2_1 : hol.term A -> t1_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1)) :=
  A : hol.type => t2_1 : hol.term A => t1_2 : hol.term A => hol.TRANS hol.bool (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) (thm_1064 A t2_1 t1_2) (thm_1064 A t2_1 t1_2).

(; Theorem: |- (Data.Bool.! \lambda t2. ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2)) ;)

(; dict ;)

def thm_1066 : A : hol.type -> t1_1 : hol.term A -> hol.proof (hol.forall A (t2_2 : hol.term A => hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2)) :=
  A : hol.type => t1_1 : hol.term A => thm_36 A t1_1.

(; Theorem: |- ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2) ;)

(; dict ;)

def thm_1067 : A : hol.type -> t2_1 : hol.term A -> t1_2 : hol.term A -> hol.proof (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) :=
  A : hol.type => t2_1 : hol.term A => t1_2 : hol.term A => thm_1066 A t1_2 t2_1.

(; Theorem: |- ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2)) ;)

(; dict ;)

def thm_1068 : A : hol.type -> t2_1 : hol.term A -> t1_2 : hol.term A -> hol.proof (hol.and (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1)) :=
  A : hol.type => t2_1 : hol.term A => t1_2 : hol.term A => hol.EQ_MP (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) (hol.and (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1)) (thm_1063 A t2_1 t1_2) ((A : hol.type => t2_1 : hol.term A => t1_2 : hol.term A => hol.EQ_MP (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) (thm_1065 A t2_1 t1_2) (thm_1067 A t2_1 t1_2)) A t2_1 t1_2).

(; Theorem: |- (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2))) ;)

(; dict ;)

def thm_1069 : A : hol.type -> t1_1 : hol.term A -> hol.proof (hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))) :=
  A : hol.type => t1_1 : hol.term A => t2_2 : hol.term A => thm_1068 A t2_2 t1_1.

(; Theorem: |- (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. ((Data.Bool./\ ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1)) ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2)))) ;)

(; dict ;)

def thm_1070 : A : hol.type -> hol.proof (hol.forall A (t1_1 : hol.term A => hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2)))) :=
  A : hol.type => t1_1 : hol.term A => hol.EQ_MP (hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))) (hol.forall A (t2_2 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_1 t2_2) t1_1) (hol.eq A (hol.cond A hol.false t1_1 t2_2) t2_2))) (thm_1059 A t1_1) (thm_1069 A t1_1).

(; Theorem: |- ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1) ;)

(; dict ;)

def thm_1071 : A : hol.type -> t2_1 : hol.term A -> t1_2 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1)) -> hol.proof (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) :=
  A : hol.type => t2_1 : hol.term A => t1_2 : hol.term A => hyp_1 : hol.proof (hol.and (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1)) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_208 q_1 p_2 hyp_1) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1) (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) hyp_1.

(; Theorem: |- ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1) ;)

(; dict ;)

def thm_1072 : A : hol.type -> t2_1 : hol.term A -> t1_2 : hol.term A -> hol.proof (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) :=
  A : hol.type => t2_1 : hol.term A => t1_2 : hol.term A => hol.PROVE_HYP (hol.and (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1)) (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.EQ_MP (hol.forall A (t1_3 : hol.term A => hol.forall A (t2_4 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_3 t2_4) t1_3) (hol.eq A (hol.cond A hol.false t1_3 t2_4) t2_4)))) (hol.forall A (t1_3 : hol.term A => hol.forall A (t2_4 : hol.term A => hol.and (hol.eq A (hol.cond A hol.true t1_3 t2_4) t1_3) (hol.eq A (hol.cond A hol.false t1_3 t2_4) t2_4)))) (thm_1056 A) (thm_1070 A) t1_2 t2_1) (hyp_1 : hol.proof (hol.and (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.false t1_2 t2_1) t2_1)) => thm_1071 A t2_1 t1_2 hyp_1).

(; Theorem: |- ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1) ;)

(; dict ;)

def thm_1073 : B : hol.type -> t2_1 : hol.term B -> t1_2 : hol.term B -> hol.proof (hol.eq B (hol.cond B hol.true t1_2 t2_1) t1_2) :=
  B : hol.type => t2_1 : hol.term B => t1_2 : hol.term B => (A : hol.type => t2_1 : hol.term A => t1_2 : hol.term A => hol.EQ_MP (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (hol.eq A (hol.cond A hol.true t1_2 t2_1) t1_2) (thm_1053 A t2_1 t1_2) (thm_1072 A t2_1 t1_2)) B t2_1 t1_2.

(; Theorem: |- ((= (((Data.Bool.cond Data.Bool.T) a') (b a))) a') ;)

(; dict ;)

def thm_1074 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> hol.proof (hol.eq B (hol.cond B hol.true a_27_3 (b_2 a_1)) a_27_3) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => (B : hol.type => t2_1 : hol.term B => t1_2 : hol.term B => thm_1073 B t2_1 t1_2) B (b_2 a_1) a_27_3.

(; Theorem: |- ((= (((Data.Bool.cond ((= x) a)) a') (b x))) a') ;)

(; dict ;)

def thm_1075 : A : hol.type -> B : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_4 a_3) -> hol.proof (hol.eq B (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4)) a_27_2) :=
  A : hol.type => B : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => a_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.eq A x_4 a_3) => hol.TRANS B (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4)) (hol.cond B hol.true a_27_2 (b_1 a_3)) a_27_2 (thm_1051 A B b_1 a_27_2 a_3 x_4 hyp_1) (thm_1074 A B a_3 b_1 a_27_2).

(; Theorem: |- ((= (Set.member (((Data.Bool.cond ((= x) a)) a') (b x)))) (Set.member a')) ;)

(; dict ;)

def thm_1076 : A : hol.type -> B : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_4 a_3) -> hol.proof (hol.eq (hol.arr (Set_2Eset B) hol.bool) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2)) :=
  A : hol.type => B : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => a_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.eq A x_4 a_3) => hol.APP_THM B (hol.arr (Set_2Eset B) hol.bool) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool))) (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4)) a_27_2 (thm_935 B) (thm_1075 A B b_1 a_27_2 a_3 x_4 hyp_1).

(; Theorem: |- ((= ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t)) ((Set.member a') t)) ;)

(; dict ;)

def thm_1077 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_5 a_4) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_1)) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.eq A x_5 a_4) => hol.APP_THM (Set_2Eset B) hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3) t_1 t_1 (thm_1076 A B b_2 a_27_3 a_4 x_5 hyp_1) (thm_942 B t_1).

(; Theorem: |- ((= ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t)) Data.Bool.T) ;)

(; dict ;)

def thm_1078 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_5 a_4) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) t_1) hol.true) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.eq A x_5 a_4) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_1) => hol.TRANS hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_1) hol.true (thm_1077 A B t_1 b_2 a_27_3 a_4 x_5 hyp_1) (thm_1020 B t_1 a_27_3 hyp_2).

(; Theorem: |- ((= Data.Bool.T) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t)) ;)

(; dict ;)

def thm_1079 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_5 a_4) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_1) -> hol.proof (hol.eq hol.bool hol.true (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) t_1)) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.eq A x_5 a_4) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_1) => hol.SYM hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) t_1) hol.true (thm_1078 A B t_1 b_2 a_27_3 a_4 x_5 hyp_1 hyp_2).

(; Theorem: |- ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t) ;)

(; dict ;)

def thm_1080 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_5 a_4) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_1) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) t_1) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.eq A x_5 a_4) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_1) => hol.EQ_MP hol.true (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) t_1) (thm_1079 A B t_1 b_2 a_27_3 a_4 x_5 hyp_1 hyp_2) thm_10.

(; Theorem: |- ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t) ;)

(; dict ;)

def thm_1081 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_5 a_4) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_1) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) t_1) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.eq A x_5 a_4) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_1) => hol.PROVE_HYP (hol.eq A x_5 a_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) t_1) (thm_1004 A a_4 x_5 hyp_1) (hyp_3 : hol.proof (hol.eq A x_5 a_4) => thm_1080 A B t_1 b_2 a_27_3 a_4 x_5 hyp_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((= x) a)) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t)) ;)

(; dict ;)

def thm_1082 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_1) -> hol.proof (hol.imp (hol.eq A x_5 a_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) t_1)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_1) => hyp_2 : hol.proof (hol.eq A x_5 a_4) => thm_1081 A B t_1 b_2 a_27_3 a_4 x_5 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)) ;)

(; dict ;)

def thm_1083 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) -> hol.proof (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) => hyp_1.

(; Theorem: |- ((= (= ((Data.Bool.\/ P) Q))) (= ((Data.Bool.\/ P) Q))) ;)

(; dict ;)

def thm_1084 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or P_2 Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or P_2 Q_1)).

(; Theorem: |- ((= (\lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) Q)) (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r)))) ;)

(; dict ;)

def thm_1085 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3)))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1.

(; Theorem: |- ((= ((= ((Data.Bool.\/ P) Q)) (\lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) Q))) ((= ((Data.Bool.\/ P) Q)) (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r))))) ;)

(; dict ;)

def thm_1086 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or P_2 Q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or P_2 Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1)) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) (thm_1084 Q_1 P_2) (thm_1085 Q_1 P_2).

(; Theorem: |- ((= (= (Data.Bool.\/ P))) (= (Data.Bool.\/ P))) ;)

(; dict ;)

def thm_1087 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1))) :=
  P_1 : hol.term hol.bool => hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)).

(; Theorem: |- ((= (\lambda p. \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> p) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) P)) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r)))) ;)

(; dict ;)

def thm_1088 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))) :=
  P_1 : hol.term hol.bool => hol.BETA_CONV hol.bool (hol.arr hol.bool hol.bool) (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1.

(; Theorem: |- ((= ((= (Data.Bool.\/ P)) (\lambda p. \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> p) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) P))) ((= (Data.Bool.\/ P)) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))))) ;)

(; dict ;)

def thm_1089 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3))))) :=
  P_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3))) (thm_1087 P_1) (thm_1088 P_1).

(; Theorem: |- ((= (Data.Bool.\/ P)) (\lambda p. \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> p) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) P)) ;)

(; dict ;)

def thm_1090 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1)) :=
  P_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1 P_1 thm_37 (thm_106 P_1).

(; Theorem: |- ((= (Data.Bool.\/ P)) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r)))) ;)

(; dict ;)

def thm_1091 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))) :=
  P_1 : hol.term hol.bool => hol.EQ_MP (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))) (thm_1089 P_1) (thm_1090 P_1).

(; Theorem: |- ((= Q) Q) ;)

(; dict ;)

def thm_1092 : Q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool Q_1 Q_1) :=
  Q_1 : hol.term hol.bool => hol.REFL hol.bool Q_1.

(; Theorem: |- ((= ((Data.Bool.\/ P) Q)) (\lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) Q)) ;)

(; dict ;)

def thm_1093 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or P_2 Q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1)) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.or P_2) (q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1 Q_1 (thm_1091 P_2) (thm_1092 Q_1).

(; Theorem: |- ((= ((Data.Bool.\/ P) Q)) (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r)))) ;)

(; dict ;)

def thm_1094 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3)))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or P_2 Q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3)))) (thm_1086 Q_1 P_2) (thm_1093 Q_1 P_2).

(; Theorem: |- ((Data.Bool.\/ P) Q) ;)

(; dict ;)

def thm_1095 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.or P_2 Q_1) -> hol.proof (hol.or P_2 Q_1) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.or P_2 Q_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r))) ;)

(; dict ;)

def thm_1096 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.or P_2 Q_1) -> hol.proof (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.or P_2 Q_1) => hol.EQ_MP (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) (thm_1094 Q_1 P_2) (thm_1095 Q_1 P_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> P) R)) ((Data.Bool.==> ((Data.Bool.==> Q) R)) R)) ;)

(; dict ;)

def thm_1097 : Q_1 : hol.term hol.bool -> R_2 : hol.term hol.bool -> P_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.or P_3 Q_1) -> hol.proof (hol.imp (hol.imp P_3 R_2) (hol.imp (hol.imp Q_1 R_2) R_2)) :=
  Q_1 : hol.term hol.bool => R_2 : hol.term hol.bool => P_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.or P_3 Q_1) => thm_1096 Q_1 P_3 hyp_1 R_2.

(; Theorem: |- ((Data.Bool.==> P) R) ;)

(; dict ;)

def thm_1098 : R_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp P_2 R_1) -> hol.proof (hol.imp P_2 R_1) :=
  R_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_1) => hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> Q) R)) R) ;)

(; dict ;)

def thm_1099 : P_1 : hol.term hol.bool -> R_2 : hol.term hol.bool -> Q_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp P_1 R_2) -> hyp_2 : hol.proof (hol.or P_1 Q_3) -> hol.proof (hol.imp (hol.imp Q_3 R_2) R_2) :=
  P_1 : hol.term hol.bool => R_2 : hol.term hol.bool => Q_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_1 R_2) => hyp_2 : hol.proof (hol.or P_1 Q_3) => thm_1097 Q_3 R_2 P_1 hyp_2 (thm_1098 R_2 P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> Q) R) ;)

(; dict ;)

def thm_1100 : R_1 : hol.term hol.bool -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp Q_2 R_1) -> hol.proof (hol.imp Q_2 R_1) :=
  R_1 : hol.term hol.bool => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp Q_2 R_1) => hyp_1.

(; Theorem: |- R ;)

(; dict ;)

def thm_1101 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> R_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp P_2 R_3) -> hyp_2 : hol.proof (hol.imp Q_1 R_3) -> hyp_3 : hol.proof (hol.or P_2 Q_1) -> hol.proof R_3 :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_1099 P_2 R_3 Q_1 hyp_1 hyp_3 (thm_1100 R_3 Q_1 hyp_2).

(; Theorem: |- ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t) ;)

(; dict ;)

def thm_1102 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.imp (hol.eq A x_6 a_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) t_2)) -> hyp_2 : hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) t_2)) -> hyp_3 : hol.proof (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) t_2) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => a_5 : hol.term A => x_6 : hol.term A => hyp_1 : hol.proof (hol.imp (hol.eq A x_6 a_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) t_2)) => hyp_2 : hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) t_2)) => hyp_3 : hol.proof (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_1101 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) (hol.eq A x_6 a_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) t_2) hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t) ;)

(; dict ;)

def thm_1103 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.imp (hol.eq A x_6 a_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) t_2)) -> hyp_2 : hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) t_2)) -> hyp_3 : hol.proof (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) t_2) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => a_5 : hol.term A => x_6 : hol.term A => hyp_1 : hol.proof (hol.imp (hol.eq A x_6 a_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) t_2)) => hyp_2 : hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) t_2)) => hyp_3 : hol.proof (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) => hol.PROVE_HYP (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) t_2) (thm_1083 A s_1 a_5 x_6 hyp_3) (hyp_4 : hol.proof (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) => thm_1102 A B s_1 t_2 b_3 a_27_4 a_5 x_6 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t) ;)

(; dict ;)

def thm_1104 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) t_2)) -> hyp_2 : hol.proof (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) t_2) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => a_5 : hol.term A => x_6 : hol.term A => hyp_1 : hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) t_2)) => hyp_2 : hol.proof (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) => hol.PROVE_HYP (hol.imp (hol.eq A x_6 a_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) t_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) t_2) (thm_1082 B A t_2 b_3 a_27_4 a_5 x_6 hyp_3) (hyp_4 : hol.proof (hol.imp (hol.eq A x_6 a_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) t_2)) => thm_1103 A B s_1 t_2 b_3 a_27_4 a_5 x_6 hyp_4 hyp_1 hyp_2).

(; Theorem: |- ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t) ;)

(; dict ;)

def thm_1105 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_1)) -> hyp_3 : hol.proof (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) -> hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) t_2) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => a_5 : hol.term A => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_1)) => hyp_3 : hol.proof (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) => hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) => hol.PROVE_HYP (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) t_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) t_2) (thm_1041 B A t_2 b_3 a_27_4 a_5 s_1 x_6 hyp_1 hyp_2 hyp_4) (hyp_5 : hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) t_2)) => thm_1104 A B s_1 t_2 b_3 a_27_4 a_5 x_6 hyp_5 hyp_3 hyp_4).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t)) ;)

(; dict ;)

def thm_1106 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_7) t_1))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_4)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_1) -> hol.proof (hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) t_1)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_7) t_1))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_4)) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_1) => hyp_4 : hol.proof (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) => thm_1105 A B s_4 t_1 b_2 a_27_3 a_5 x_6 hyp_1 hyp_2 hyp_4 hyp_3.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t))) ;)

(; dict ;)

def thm_1107 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_6) t_1))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_4)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_1) -> hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_6) t_1))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_4)) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_1) => x_6 : hol.term A => thm_1106 B A t_1 b_2 a_27_3 s_4 a_5 x_6 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.~ ((= x) a))) (Data.Bool.~ ((Set.member x) s)))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.~ ((= x) a))) (Data.Bool.~ ((Set.member x) s)))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d))))) ;)

(; dict ;)

def thm_1108 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> d_2 : hol.term B -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> s_5 : hol.term (Set_2Eset A) -> a_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) t_1))) -> hol.proof (hol.eq hol.bool (hol.forall A (x_7 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_7 a_6)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) d_2))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) t_1))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_7 a_6)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) d_2))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => d_2 : hol.term B => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => s_5 : hol.term (Set_2Eset A) => a_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) t_1))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) t_1))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_7 a_6)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) d_2))) hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.~ ((= x) a))) (Data.Bool.~ ((Set.member x) s)))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.~ ((= x) a))) (Data.Bool.~ ((Set.member x) s)))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d))))) ;)

(; dict ;)

def thm_1109 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> d_2 : hol.term B -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> s_5 : hol.term (Set_2Eset A) -> a_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_1))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_5)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_1) -> hol.proof (hol.eq hol.bool (hol.forall A (x_7 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_7 a_6)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) d_2))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) t_1))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_7 a_6)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) d_2))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => d_2 : hol.term B => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => s_5 : hol.term (Set_2Eset A) => a_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_1))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_5)) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_1) => hol.PROVE_HYP (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) t_1))) (hol.eq hol.bool (hol.forall A (x_7 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_7 a_6)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) d_2))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) t_1))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_7 a_6)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) d_2))))) (hol.EQ_MP (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) t_1))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) t_1))) (thm_981 B A t_1 b_3 a_27_4 s_5 a_6) (thm_1107 B A t_1 b_3 a_27_4 s_5 a_6 hyp_1 hyp_2 hyp_3)) (hyp_4 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) t_1))) => thm_1108 B A t_1 d_2 b_3 a_27_4 s_5 a_6 hyp_4).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.~ ((= x) a))) (Data.Bool.~ ((Set.member x) s)))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d))) \lambda x. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.~ ((= x) a))) (Data.Bool.~ ((Set.member x) s)))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d))) ;)

(; dict ;)

def thm_1110 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (x_6 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_6 a_5)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) d_1)) (x_6 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_6 a_5)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hol.REFL (hol.arr A hol.bool) (x_6 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_6 a_5)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) d_1)).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.~ ((= x) a))) (Data.Bool.~ ((Set.member x) s)))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d))) \lambda x. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.~ ((= x) a))) (Data.Bool.~ ((Set.member x) s)))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d))) ;)

(; dict ;)

def thm_1111 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hol.proof (hol.eq (hol.arr A hol.bool) (x_6 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_6 a_5)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) d_1)) (x_6 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_6 a_5)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hol.TRANS (hol.arr A hol.bool) (x_6 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_6 a_5)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) d_1)) (x_6 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_6 a_5)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) d_1)) (x_6 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_6 a_5)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) d_1)) (thm_1110 B A d_1 b_2 a_27_3 s_4 a_5) (thm_1110 B A d_1 b_2 a_27_3 s_4 a_5).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.~ ((= x) a))) (Data.Bool.~ ((Set.member x) s)))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.~ ((= x) a))) (Data.Bool.~ ((Set.member x) s)))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d)))) ;)

(; dict ;)

def thm_1112 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.forall A (x_6 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_6 a_5)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) d_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_6 a_5)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_6 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_6 a_5)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) d_1)) (x_6 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_6 a_5)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) d_1)) (thm_95 A) (thm_1111 B A d_1 b_2 a_27_3 s_4 a_5).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.~ ((= x) a))) (Data.Bool.~ ((Set.member x) s))) ;)

(; dict ;)

def thm_1113 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.not (hol.eq A x_3 a_2)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) -> hol.proof (hol.and (hol.not (hol.eq A x_3 a_2)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.and (hol.not (hol.eq A x_3 a_2)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) => hyp_1.

(; Theorem: |- (Data.Bool.~ ((= x) a)) ;)

(; dict ;)

def thm_1114 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.not (hol.eq A x_3 a_2)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) -> hol.proof (hol.not (hol.eq A x_3 a_2)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.and (hol.not (hol.eq A x_3 a_2)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_208 q_1 p_2 hyp_1) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) (hol.not (hol.eq A x_3 a_2)) hyp_1.

(; Theorem: |- (Data.Bool.~ ((= x) a)) ;)

(; dict ;)

def thm_1115 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.not (hol.eq A x_3 a_2)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) -> hol.proof (hol.not (hol.eq A x_3 a_2)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.and (hol.not (hol.eq A x_3 a_2)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) => hol.PROVE_HYP (hol.and (hol.not (hol.eq A x_3 a_2)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) (hol.not (hol.eq A x_3 a_2)) (thm_1113 A s_1 a_2 x_3 hyp_1) (hyp_2 : hol.proof (hol.and (hol.not (hol.eq A x_3 a_2)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) => thm_1114 A s_1 a_2 x_3 hyp_2).

(; Theorem: |- (Data.Bool.~ ((Set.member x) s)) ;)

(; dict ;)

def thm_1116 : A : hol.type -> a_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.not (hol.eq A x_3 a_1)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2))) -> hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) :=
  A : hol.type => a_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.and (hol.not (hol.eq A x_3 a_1)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_151 p_1 q_2 hyp_1) (hol.not (hol.eq A x_3 a_1)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) hyp_1.

(; Theorem: |- (Data.Bool.~ ((Set.member x) s)) ;)

(; dict ;)

def thm_1117 : A : hol.type -> a_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.not (hol.eq A x_3 a_1)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2))) -> hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) :=
  A : hol.type => a_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.and (hol.not (hol.eq A x_3 a_1)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2))) => hol.PROVE_HYP (hol.and (hol.not (hol.eq A x_3 a_1)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2))) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) (thm_1113 A s_2 a_1 x_3 hyp_1) (hyp_2 : hol.proof (hol.and (hol.not (hol.eq A x_3 a_1)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2))) => thm_1116 A a_1 s_2 x_3 hyp_2).

(; Theorem: |- (Data.Bool.~ ((= x) a)) ;)

(; dict ;)

def thm_1118 : A : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.not (hol.eq A x_2 a_1)) -> hol.proof (hol.not (hol.eq A x_2 a_1)) :=
  A : hol.type => a_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_2 a_1)) => hyp_1.

(; Theorem: |- (Data.Bool.~ ((Set.member x) s)) ;)

(; dict ;)

def thm_1119 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) -> hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) => hyp_1.

(; Theorem: |- ((= ((= ((= x) a)) Data.Bool.F)) ((= ((= x) a)) Data.Bool.F)) ;)

(; dict ;)

def thm_1120 : A : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_2 a_1) hol.false) (hol.eq hol.bool (hol.eq A x_2 a_1) hol.false)) :=
  A : hol.type => a_1 : hol.term A => x_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (hol.eq A x_2 a_1) hol.false).

(; Theorem: |- ((= ((= ((= x) a)) Data.Bool.F)) ((= ((= x) a)) Data.Bool.F)) ;)

(; dict ;)

def thm_1121 : A : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_2 a_1) hol.false) (hol.eq hol.bool (hol.eq A x_2 a_1) hol.false)) :=
  A : hol.type => a_1 : hol.term A => x_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq A x_2 a_1) hol.false) (hol.eq hol.bool (hol.eq A x_2 a_1) hol.false) (hol.eq hol.bool (hol.eq A x_2 a_1) hol.false) (thm_1120 A a_1 x_2) (thm_1120 A a_1 x_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= ((= x) a)) Data.Bool.F)) ;)

(; dict ;)

def thm_1122 : A : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> hol.proof (hol.imp (hol.not (hol.eq A x_2 a_1)) (hol.eq hol.bool (hol.eq A x_2 a_1) hol.false)) :=
  A : hol.type => a_1 : hol.term A => x_2 : hol.term A => (P_1 : hol.term hol.bool => thm_114 P_1) (hol.eq A x_2 a_1).

(; Theorem: |- ((= ((= x) a)) Data.Bool.F) ;)

(; dict ;)

def thm_1123 : A : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.not (hol.eq A x_2 a_1)) -> hol.proof (hol.eq hol.bool (hol.eq A x_2 a_1) hol.false) :=
  A : hol.type => a_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_2 a_1)) => thm_1122 A a_1 x_2 (thm_1118 A a_1 x_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.cond ((= x) a))) (Data.Bool.cond Data.Bool.F)) ;)

(; dict ;)

def thm_1124 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.not (hol.eq A x_2 a_1)) -> hol.proof (hol.eq (hol.arr B (hol.arr B B)) (hol.cond B (hol.eq A x_2 a_1)) (hol.cond B hol.false)) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_2 a_1)) => hol.APP_THM hol.bool (hol.arr B (hol.arr B B)) (hol.cond B) (hol.cond B) (hol.eq A x_2 a_1) hol.false (thm_1042 B) (hol.EQ_MP (hol.eq hol.bool (hol.eq A x_2 a_1) hol.false) (hol.eq hol.bool (hol.eq A x_2 a_1) hol.false) (thm_1121 A a_1 x_2) (thm_1123 A a_1 x_2 hyp_1)).

(; Theorem: |- ((= ((Data.Bool.cond ((= x) a)) a')) ((Data.Bool.cond Data.Bool.F) a')) ;)

(; dict ;)

def thm_1125 : A : hol.type -> B : hol.type -> a_27_1 : hol.term B -> a_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_2)) -> hol.proof (hol.eq (hol.arr B B) (hol.cond B (hol.eq A x_3 a_2) a_27_1) (hol.cond B hol.false a_27_1)) :=
  A : hol.type => B : hol.type => a_27_1 : hol.term B => a_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_2)) => hol.APP_THM B (hol.arr B B) (hol.cond B (hol.eq A x_3 a_2)) (hol.cond B hol.false) a_27_1 a_27_1 (thm_1124 A B a_2 x_3 hyp_1) (thm_1048 B a_27_1).

(; Theorem: |- ((= (b x)) (b x)) ;)

(; dict ;)

def thm_1126 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> b_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq B (b_2 x_1) (b_2 x_1)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => b_2 : hol.term (hol.arr A B) => hol.REFL B (b_2 x_1).

(; Theorem: |- ((= (((Data.Bool.cond ((= x) a)) a') (b x))) (((Data.Bool.cond Data.Bool.F) a') (b x))) ;)

(; dict ;)

def thm_1127 : A : hol.type -> B : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.not (hol.eq A x_4 a_3)) -> hol.proof (hol.eq B (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4)) (hol.cond B hol.false a_27_2 (b_1 x_4))) :=
  A : hol.type => B : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => a_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_4 a_3)) => hol.APP_THM B B (hol.cond B (hol.eq A x_4 a_3) a_27_2) (hol.cond B hol.false a_27_2) (b_1 x_4) (b_1 x_4) (thm_1125 A B a_27_2 a_3 x_4 hyp_1) (thm_1126 A B x_4 b_1).

(; Theorem: |- ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2) ;)

(; dict ;)

def thm_1128 : B : hol.type -> t2_1 : hol.term B -> t1_2 : hol.term B -> hol.proof (hol.eq B (hol.cond B hol.false t1_2 t2_1) t2_1) :=
  B : hol.type => t2_1 : hol.term B => t1_2 : hol.term B => (A : hol.type => t2_1 : hol.term A => t1_2 : hol.term A => thm_1067 A t2_1 t1_2) B t2_1 t1_2.

(; Theorem: |- ((= (((Data.Bool.cond Data.Bool.F) a') (b x))) (b x)) ;)

(; dict ;)

def thm_1129 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> hol.proof (hol.eq B (hol.cond B hol.false a_27_3 (b_2 x_1)) (b_2 x_1)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => (B : hol.type => t2_1 : hol.term B => t1_2 : hol.term B => thm_1128 B t2_1 t1_2) B (b_2 x_1) a_27_3.

(; Theorem: |- ((= (((Data.Bool.cond ((= x) a)) a') (b x))) (b x)) ;)

(; dict ;)

def thm_1130 : A : hol.type -> B : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.not (hol.eq A x_4 a_3)) -> hol.proof (hol.eq B (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4)) (b_1 x_4)) :=
  A : hol.type => B : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => a_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_4 a_3)) => hol.TRANS B (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4)) (hol.cond B hol.false a_27_2 (b_1 x_4)) (b_1 x_4) (thm_1127 A B b_1 a_27_2 a_3 x_4 hyp_1) (thm_1129 A B x_4 b_1 a_27_2).

(; Theorem: |- ((= (= (((Data.Bool.cond ((= x) a)) a') (b x)))) (= (b x))) ;)

(; dict ;)

def thm_1131 : A : hol.type -> B : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.not (hol.eq A x_4 a_3)) -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4))) (hol.eq B (b_1 x_4))) :=
  A : hol.type => B : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => a_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_4 a_3)) => hol.APP_THM B (hol.arr B hol.bool) (hol.eq B) (hol.eq B) (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4)) (b_1 x_4) (thm_331 B) (thm_1130 A B b_1 a_27_2 a_3 x_4 hyp_1).

(; Theorem: |- ((= ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d)) ((= (b x)) d)) ;)

(; dict ;)

def thm_1132 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.not (hol.eq A x_5 a_4)) -> hol.proof (hol.eq hol.bool (hol.eq B (hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) d_1) (hol.eq B (b_2 x_5) d_1)) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_5 a_4)) => hol.APP_THM B hol.bool (hol.eq B (hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5))) (hol.eq B (b_2 x_5)) d_1 d_1 (thm_1131 A B b_2 a_27_3 a_4 x_5 hyp_1) (thm_972 B d_1).

(; Theorem: |- ((= ((= (b x)) d)) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d)) ;)

(; dict ;)

def thm_1133 : A : hol.type -> B : hol.type -> a_27_1 : hol.term B -> a_2 : hol.term A -> d_3 : hol.term B -> x_4 : hol.term A -> b_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.not (hol.eq A x_4 a_2)) -> hol.proof (hol.eq hol.bool (hol.eq B (b_5 x_4) d_3) (hol.eq B (hol.cond B (hol.eq A x_4 a_2) a_27_1 (b_5 x_4)) d_3)) :=
  A : hol.type => B : hol.type => a_27_1 : hol.term B => a_2 : hol.term A => d_3 : hol.term B => x_4 : hol.term A => b_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.not (hol.eq A x_4 a_2)) => hol.SYM hol.bool (hol.eq B (hol.cond B (hol.eq A x_4 a_2) a_27_1 (b_5 x_4)) d_3) (hol.eq B (b_5 x_4) d_3) (thm_1132 A B d_3 b_5 a_27_1 a_2 x_4 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))) ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))) ;)

(; dict ;)

def thm_1134 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> b_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (hol.eq B (b_2 x_4) d_1)) (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (hol.eq B (b_2 x_4) d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => b_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.REFL hol.bool (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (hol.eq B (b_2 x_4) d_1)).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))) ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))) ;)

(; dict ;)

def thm_1135 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> b_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (hol.eq B (b_2 x_4) d_1)) (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (hol.eq B (b_2 x_4) d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => b_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.TRANS hol.bool (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (hol.eq B (b_2 x_4) d_1)) (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (hol.eq B (b_2 x_4) d_1)) (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (hol.eq B (b_2 x_4) d_1)) (thm_1134 B A d_1 b_2 s_3 x_4) (thm_1134 B A d_1 b_2 s_3 x_4).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)) ;)

(; dict ;)

def thm_1136 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> b_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (hol.eq B (b_2 x_5) d_1))) -> hol.proof (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (hol.eq B (b_2 x_4) d_1)) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => b_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (hol.eq B (b_2 x_5) d_1))) => thm_919 B A d_1 b_2 s_3 hyp_1 x_4.

(; Theorem: |- ((= (b x)) d) ;)

(; dict ;)

def thm_1137 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> d_2 : hol.term B -> x_3 : hol.term A -> b_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) (hol.eq B (b_4 x_5) d_2))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) -> hol.proof (hol.eq B (b_4 x_3) d_2) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => d_2 : hol.term B => x_3 : hol.term A => b_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) (hol.eq B (b_4 x_5) d_2))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) => (B : hol.type => A : hol.type => d_1 : hol.term B => b_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (hol.eq B (b_2 x_5) d_1))) => hol.EQ_MP (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (hol.eq B (b_2 x_4) d_1)) (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (hol.eq B (b_2 x_4) d_1)) (thm_1135 B A d_1 b_2 s_3 x_4) (thm_1136 B A d_1 b_2 s_3 x_4 hyp_1)) B A d_2 b_4 s_1 x_3 hyp_1 (thm_1119 A s_1 x_3 hyp_2).

(; Theorem: |- ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d) ;)

(; dict ;)

def thm_1138 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> d_2 : hol.term B -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)) (hol.eq B (b_3 x_7) d_2))) -> hyp_2 : hol.proof (hol.not (hol.eq A x_6 a_5)) -> hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) -> hol.proof (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) d_2) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => d_2 : hol.term B => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => a_5 : hol.term A => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)) (hol.eq B (b_3 x_7) d_2))) => hyp_2 : hol.proof (hol.not (hol.eq A x_6 a_5)) => hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) => hol.EQ_MP (hol.eq B (b_3 x_6) d_2) (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) d_2) (thm_1133 A B a_27_4 a_5 d_2 x_6 b_3 hyp_2) (thm_1137 A B s_1 d_2 x_6 b_3 hyp_1 hyp_3).

(; Theorem: |- ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d) ;)

(; dict ;)

def thm_1139 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> d_2 : hol.term B -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)) (hol.eq B (b_3 x_7) d_2))) -> hyp_2 : hol.proof (hol.not (hol.eq A x_6 a_5)) -> hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) -> hol.proof (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) d_2) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => d_2 : hol.term B => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => a_5 : hol.term A => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)) (hol.eq B (b_3 x_7) d_2))) => hyp_2 : hol.proof (hol.not (hol.eq A x_6 a_5)) => hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) => hol.PROVE_HYP (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) d_2) (thm_1119 A s_1 x_6 hyp_3) (hyp_4 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) => thm_1138 A B s_1 d_2 b_3 a_27_4 a_5 x_6 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d) ;)

(; dict ;)

def thm_1140 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> d_2 : hol.term B -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)) (hol.eq B (b_3 x_7) d_2))) -> hyp_2 : hol.proof (hol.not (hol.eq A x_6 a_5)) -> hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) -> hol.proof (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) d_2) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => d_2 : hol.term B => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => a_5 : hol.term A => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)) (hol.eq B (b_3 x_7) d_2))) => hyp_2 : hol.proof (hol.not (hol.eq A x_6 a_5)) => hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) => hol.PROVE_HYP (hol.not (hol.eq A x_6 a_5)) (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) d_2) (thm_1118 A a_5 x_6 hyp_2) (hyp_4 : hol.proof (hol.not (hol.eq A x_6 a_5)) => thm_1139 A B s_1 d_2 b_3 a_27_4 a_5 x_6 hyp_1 hyp_4 hyp_3).

(; Theorem: |- ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d) ;)

(; dict ;)

def thm_1141 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> d_2 : hol.term B -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)) (hol.eq B (b_3 x_7) d_2))) -> hyp_2 : hol.proof (hol.not (hol.eq A x_6 a_5)) -> hyp_3 : hol.proof (hol.and (hol.not (hol.eq A x_6 a_5)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) -> hol.proof (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) d_2) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => d_2 : hol.term B => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => a_5 : hol.term A => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)) (hol.eq B (b_3 x_7) d_2))) => hyp_2 : hol.proof (hol.not (hol.eq A x_6 a_5)) => hyp_3 : hol.proof (hol.and (hol.not (hol.eq A x_6 a_5)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) => hol.PROVE_HYP (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) d_2) (thm_1117 A a_5 s_1 x_6 hyp_3) (hyp_4 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) => thm_1140 A B s_1 d_2 b_3 a_27_4 a_5 x_6 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d) ;)

(; dict ;)

def thm_1142 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> d_2 : hol.term B -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)) (hol.eq B (b_3 x_7) d_2))) -> hyp_2 : hol.proof (hol.and (hol.not (hol.eq A x_6 a_5)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) -> hol.proof (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) d_2) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => d_2 : hol.term B => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => a_5 : hol.term A => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)) (hol.eq B (b_3 x_7) d_2))) => hyp_2 : hol.proof (hol.and (hol.not (hol.eq A x_6 a_5)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) => hol.PROVE_HYP (hol.not (hol.eq A x_6 a_5)) (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) d_2) (thm_1115 A s_1 a_5 x_6 hyp_2) (hyp_3 : hol.proof (hol.not (hol.eq A x_6 a_5)) => thm_1141 A B s_1 d_2 b_3 a_27_4 a_5 x_6 hyp_1 hyp_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.~ ((= x) a))) (Data.Bool.~ ((Set.member x) s)))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d)) ;)

(; dict ;)

def thm_1143 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (b_2 x_7) d_1))) -> hol.proof (hol.imp (hol.and (hol.not (hol.eq A x_6 a_5)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) d_1)) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (b_2 x_7) d_1))) => hyp_2 : hol.proof (hol.and (hol.not (hol.eq A x_6 a_5)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) => thm_1142 A B s_4 d_1 b_2 a_27_3 a_5 x_6 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.~ ((= x) a))) (Data.Bool.~ ((Set.member x) s)))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d))) ;)

(; dict ;)

def thm_1144 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (hol.eq B (b_2 x_6) d_1))) -> hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_6 a_5)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_3 (b_2 x_6)) d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (hol.eq B (b_2 x_6) d_1))) => x_6 : hol.term A => thm_1143 B A d_1 b_2 a_27_3 s_4 a_5 x_6 hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.~ ((= x) a))) (Data.Bool.~ ((Set.member x) s)))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d)))) ;)

(; dict ;)

def thm_1145 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> s_5 : hol.term (Set_2Eset A) -> a_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (hol.eq B (b_3 x_7) d_1))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) -> hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_5)) -> hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) -> hol.proof (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_7 a_6)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => s_5 : hol.term (Set_2Eset A) => a_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (hol.eq B (b_3 x_7) d_1))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) => hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_5)) => hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) => hol.EQ_MP (hol.forall A (x_7 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_7 a_6)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) d_1))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_7 a_6)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) d_1)))) (thm_1109 B A t_2 d_1 b_3 a_27_4 s_5 a_6 hyp_2 hyp_3 hyp_4) (hol.EQ_MP (hol.forall A (x_7 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_7 a_6)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) d_1))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_7 a_6)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) d_1))) (thm_1112 B A d_1 b_3 a_27_4 s_5 a_6) (thm_1144 B A d_1 b_3 a_27_4 s_5 a_6 hyp_1)).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d)))) ;)

(; dict ;)

def thm_1146 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> s_5 : hol.term (Set_2Eset A) -> a_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (hol.eq B (b_3 x_7) d_1))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) -> hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_5)) -> hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) -> hol.proof (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => s_5 : hol.term (Set_2Eset A) => a_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (hol.eq B (b_3 x_7) d_1))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) => hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_5)) => hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) => hol.EQ_MP (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.and (hol.not (hol.eq A x_7 a_6)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B (hol.cond B (hol.eq A x_7 a_6) a_27_4 (b_3 x_7)) d_1)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) d_1)))) (thm_978 B A d_1 t_2 b_3 a_27_4 s_5 a_6) (thm_1145 B A d_1 t_2 b_3 a_27_4 s_5 a_6 hyp_1 hyp_2 hyp_3 hyp_4).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d)))) ;)

(; dict ;)

def thm_1147 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> s_5 : hol.term (Set_2Eset A) -> a_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (hol.eq B (b_3 x_7) d_1))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) -> hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_5)) -> hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) -> hol.proof (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => s_5 : hol.term (Set_2Eset A) => a_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (hol.eq B (b_3 x_7) d_1))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) => hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_5)) => hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) => hol.PROVE_HYP (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (hol.eq B (b_3 x_7) d_1))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) d_1)))) (thm_919 B A d_1 b_3 s_5 hyp_1) (hyp_5 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (hol.eq B (b_3 x_7) d_1))) => thm_1146 B A d_1 t_2 b_3 a_27_4 s_5 a_6 hyp_5 hyp_2 hyp_3 hyp_4).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d)))) ;)

(; dict ;)

def thm_1148 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> s_5 : hol.term (Set_2Eset A) -> a_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (hol.eq B (b_3 x_7) d_1))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) -> hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_5)) -> hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) -> hol.proof (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => s_5 : hol.term (Set_2Eset A) => a_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (hol.eq B (b_3 x_7) d_1))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) => hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_5)) => hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) => hol.PROVE_HYP (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) d_1)))) (thm_918 B A t_2 b_3 s_5 hyp_2) (hyp_5 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) => thm_1147 B A d_1 t_2 b_3 a_27_4 s_5 a_6 hyp_1 hyp_5 hyp_3 hyp_4).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d)))) ;)

(; dict ;)

def thm_1149 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> s_5 : hol.term (Set_2Eset A) -> a_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (hol.eq B (b_3 x_7) d_1))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) -> hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_5)) -> hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) -> hol.proof (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => s_5 : hol.term (Set_2Eset A) => a_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (hol.eq B (b_3 x_7) d_1))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) => hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_5)) => hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) => hol.PROVE_HYP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) d_1)))) (thm_912 B t_2 a_27_4 hyp_4) (hyp_5 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) => thm_1148 B A d_1 t_2 b_3 a_27_4 s_5 a_6 hyp_1 hyp_2 hyp_3 hyp_5).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d)))) ;)

(; dict ;)

def thm_1150 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> s_5 : hol.term (Set_2Eset A) -> a_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (hol.eq B (b_3 x_7) d_1))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) -> hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_5)) -> hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) -> hol.proof (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => s_5 : hol.term (Set_2Eset A) => a_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (hol.eq B (b_3 x_7) d_1))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) => hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_5)) => hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) => hol.PROVE_HYP (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_5)) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_4 (b_3 x_8)) x_7) d_1)))) (hol.EQ_MP (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_5)) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_5)) (thm_932 A s_5 a_6) (thm_933 A s_5 a_6 hyp_3)) (hyp_5 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_5)) => thm_1149 B A d_1 t_2 b_3 a_27_4 s_5 a_6 hyp_1 hyp_2 hyp_5 hyp_4).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1151 : B : hol.type -> A : hol.type -> a_27_1 : hol.term B -> b_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> t_4 : hol.term (Set_2Eset B) -> g_5 : hol.term (hol.arr A B) -> s_6 : hol.term (Set_2Eset A) -> a_7 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_2 x_8) d_3))) -> hyp_2 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_8) t_4))) -> hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_7 s_6)) -> hyp_4 : hol.proof (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_1 (b_2 x_8))) -> hyp_5 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_4) -> hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_5 x_8) d_3)))) :=
  B : hol.type => A : hol.type => a_27_1 : hol.term B => b_2 : hol.term (hol.arr A B) => d_3 : hol.term B => t_4 : hol.term (Set_2Eset B) => g_5 : hol.term (hol.arr A B) => s_6 : hol.term (Set_2Eset A) => a_7 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_2 x_8) d_3))) => hyp_2 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_8) t_4))) => hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_7 s_6)) => hyp_4 : hol.proof (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_1 (b_2 x_8))) => hyp_5 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_4) => hol.EQ_MP (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_7) a_27_1 (b_2 x_9)) x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_7) a_27_1 (b_2 x_9)) x_8) d_3)))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_5 x_8) d_3)))) (thm_931 B A g_5 d_3 t_4 b_2 a_27_1 s_6 a_7 hyp_4) (thm_1150 B A d_3 t_4 b_2 a_27_1 s_6 a_7 hyp_1 hyp_2 hyp_3 hyp_5).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1152 : B : hol.type -> A : hol.type -> a_27_1 : hol.term B -> b_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> t_4 : hol.term (Set_2Eset B) -> g_5 : hol.term (hol.arr A B) -> s_6 : hol.term (Set_2Eset A) -> a_7 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_2 x_8) d_3))) -> hyp_2 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_8) t_4))) -> hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_7 s_6)) -> hyp_4 : hol.proof (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_1 (b_2 x_8))) -> hyp_5 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_4) -> hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_5 x_8) d_3)))) :=
  B : hol.type => A : hol.type => a_27_1 : hol.term B => b_2 : hol.term (hol.arr A B) => d_3 : hol.term B => t_4 : hol.term (Set_2Eset B) => g_5 : hol.term (hol.arr A B) => s_6 : hol.term (Set_2Eset A) => a_7 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_2 x_8) d_3))) => hyp_2 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_8) t_4))) => hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_7 s_6)) => hyp_4 : hol.proof (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_1 (b_2 x_8))) => hyp_5 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_4) => hol.PROVE_HYP (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_2 x_8) d_3))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_5 x_8) d_3)))) (thm_919 B A d_3 b_2 s_6 hyp_1) (hyp_6 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_2 x_8) d_3))) => thm_1151 B A a_27_1 b_2 d_3 t_4 g_5 s_6 a_7 hyp_6 hyp_2 hyp_3 hyp_4 hyp_5).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1153 : B : hol.type -> A : hol.type -> a_27_1 : hol.term B -> b_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> t_4 : hol.term (Set_2Eset B) -> g_5 : hol.term (hol.arr A B) -> s_6 : hol.term (Set_2Eset A) -> a_7 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_2 x_8) d_3))) -> hyp_2 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_8) t_4))) -> hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_7 s_6)) -> hyp_4 : hol.proof (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_1 (b_2 x_8))) -> hyp_5 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_4) -> hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_5 x_8) d_3)))) :=
  B : hol.type => A : hol.type => a_27_1 : hol.term B => b_2 : hol.term (hol.arr A B) => d_3 : hol.term B => t_4 : hol.term (Set_2Eset B) => g_5 : hol.term (hol.arr A B) => s_6 : hol.term (Set_2Eset A) => a_7 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_2 x_8) d_3))) => hyp_2 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_8) t_4))) => hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_7 s_6)) => hyp_4 : hol.proof (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_1 (b_2 x_8))) => hyp_5 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_4) => hol.PROVE_HYP (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_8) t_4))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_5 x_8) d_3)))) (thm_918 B A t_4 b_2 s_6 hyp_2) (hyp_6 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_8) t_4))) => thm_1152 B A a_27_1 b_2 d_3 t_4 g_5 s_6 a_7 hyp_1 hyp_6 hyp_3 hyp_4 hyp_5).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1154 : B : hol.type -> A : hol.type -> a_27_1 : hol.term B -> b_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> t_4 : hol.term (Set_2Eset B) -> g_5 : hol.term (hol.arr A B) -> s_6 : hol.term (Set_2Eset A) -> a_7 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_8) t_4))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_7 s_6)) -> hyp_3 : hol.proof (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_1 (b_2 x_8))) -> hyp_4 : hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_2 x_8) d_3)))) -> hyp_5 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_4) -> hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_5 x_8) d_3)))) :=
  B : hol.type => A : hol.type => a_27_1 : hol.term B => b_2 : hol.term (hol.arr A B) => d_3 : hol.term B => t_4 : hol.term (Set_2Eset B) => g_5 : hol.term (hol.arr A B) => s_6 : hol.term (Set_2Eset A) => a_7 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_8) t_4))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_7 s_6)) => hyp_3 : hol.proof (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_1 (b_2 x_8))) => hyp_4 : hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_2 x_8) d_3)))) => hyp_5 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_4) => hol.PROVE_HYP (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_2 x_8) d_3))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_5 x_8) d_3)))) (thm_917 B A t_4 d_3 b_2 s_6 hyp_4) (hyp_6 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_2 x_8) d_3))) => thm_1153 B A a_27_1 b_2 d_3 t_4 g_5 s_6 a_7 hyp_6 hyp_1 hyp_2 hyp_3 hyp_5).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1155 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> d_3 : hol.term B -> t_4 : hol.term (Set_2Eset B) -> g_5 : hol.term (hol.arr A B) -> s_6 : hol.term (Set_2Eset A) -> a_7 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_7 s_6)) -> hyp_2 : hol.proof (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8))) -> hyp_3 : hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_1 x_8) d_3)))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_4) -> hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_5 x_8) d_3)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => d_3 : hol.term B => t_4 : hol.term (Set_2Eset B) => g_5 : hol.term (hol.arr A B) => s_6 : hol.term (Set_2Eset A) => a_7 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_7 s_6)) => hyp_2 : hol.proof (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8))) => hyp_3 : hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_1 x_8) d_3)))) => hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_4) => hol.PROVE_HYP (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_4))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_5 x_8) d_3)))) (thm_915 B A d_3 t_4 b_1 s_6 hyp_3) (hyp_5 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_4))) => thm_1154 B A a_27_2 b_1 d_3 t_4 g_5 s_6 a_7 hyp_5 hyp_1 hyp_2 hyp_3 hyp_4).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1156 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> d_3 : hol.term B -> t_4 : hol.term (Set_2Eset B) -> g_5 : hol.term (hol.arr A B) -> s_6 : hol.term (Set_2Eset A) -> a_7 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_7 s_6)) -> hyp_2 : hol.proof (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8))) -> hyp_3 : hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_1 x_8) d_3)))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_4) -> hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_5 x_8) d_3)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => d_3 : hol.term B => t_4 : hol.term (Set_2Eset B) => g_5 : hol.term (hol.arr A B) => s_6 : hol.term (Set_2Eset A) => a_7 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_7 s_6)) => hyp_2 : hol.proof (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8))) => hyp_3 : hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_1 x_8) d_3)))) => hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_4) => hol.PROVE_HYP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_4) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_5 x_8) d_3)))) (thm_912 B t_4 a_27_2 hyp_4) (hyp_5 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_4) => thm_1155 B A b_1 a_27_2 d_3 t_4 g_5 s_6 a_7 hyp_1 hyp_2 hyp_3 hyp_5).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1157 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> d_3 : hol.term B -> t_4 : hol.term (Set_2Eset B) -> g_5 : hol.term (hol.arr A B) -> s_6 : hol.term (Set_2Eset A) -> a_7 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_7 s_6)) -> hyp_2 : hol.proof (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8))) -> hyp_3 : hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_4) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_1 x_8) d_3))))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_4) -> hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_5 x_8) d_3)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => d_3 : hol.term B => t_4 : hol.term (Set_2Eset B) => g_5 : hol.term (hol.arr A B) => s_6 : hol.term (Set_2Eset A) => a_7 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_7 s_6)) => hyp_2 : hol.proof (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8))) => hyp_3 : hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_4) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_1 x_8) d_3))))) => hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_4) => hol.PROVE_HYP (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_1 x_8) d_3)))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_5 x_8) d_3)))) (thm_911 B A a_27_2 d_3 t_4 b_1 s_6 hyp_3) (hyp_5 : hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_1 x_8) d_3)))) => thm_1156 B A b_1 a_27_2 d_3 t_4 g_5 s_6 a_7 hyp_1 hyp_2 hyp_5 hyp_4).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1158 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> d_3 : hol.term B -> t_4 : hol.term (Set_2Eset B) -> g_5 : hol.term (hol.arr A B) -> s_6 : hol.term (Set_2Eset A) -> a_7 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_7 s_6)) -> hyp_2 : hol.proof (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8))) -> hyp_3 : hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_4) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_1 x_8) d_3))))) -> hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_5 x_8) d_3)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => d_3 : hol.term B => t_4 : hol.term (Set_2Eset B) => g_5 : hol.term (hol.arr A B) => s_6 : hol.term (Set_2Eset A) => a_7 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_7 s_6)) => hyp_2 : hol.proof (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8))) => hyp_3 : hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_4) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_1 x_8) d_3))))) => hol.PROVE_HYP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_4) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_5 x_8) d_3)))) (thm_909 A B d_3 b_1 s_6 t_4 a_27_2 hyp_3) (hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_4) => thm_1157 B A b_1 a_27_2 d_3 t_4 g_5 s_6 a_7 hyp_1 hyp_2 hyp_3 hyp_4).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1159 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> d_3 : hol.term B -> t_4 : hol.term (Set_2Eset B) -> g_5 : hol.term (hol.arr A B) -> s_6 : hol.term (Set_2Eset A) -> a_7 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_7 s_6)) -> hyp_2 : hol.proof (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8))) -> hyp_3 : hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_4) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_1 x_8) d_3))))) -> hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_5 x_8) d_3)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => d_3 : hol.term B => t_4 : hol.term (Set_2Eset B) => g_5 : hol.term (hol.arr A B) => s_6 : hol.term (Set_2Eset A) => a_7 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_7 s_6)) => hyp_2 : hol.proof (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8))) => hyp_3 : hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_4) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_1 x_8) d_3))))) => hol.PROVE_HYP (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_5 x_8) d_3)))) (thm_906 B A b_1 a_27_2 a_7 g_5 hyp_2) (hyp_4 : hol.proof (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8))) => thm_1158 B A b_1 a_27_2 d_3 t_4 g_5 s_6 a_7 hyp_1 hyp_4 hyp_3).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1160 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> d_3 : hol.term B -> t_4 : hol.term (Set_2Eset B) -> g_5 : hol.term (hol.arr A B) -> s_6 : hol.term (Set_2Eset A) -> a_7 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_7 s_6)) -> hyp_2 : hol.proof (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8))) -> hyp_3 : hol.proof (hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_4) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_1 x_8) d_3)))))) -> hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_5 x_8) d_3)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => d_3 : hol.term B => t_4 : hol.term (Set_2Eset B) => g_5 : hol.term (hol.arr A B) => s_6 : hol.term (Set_2Eset A) => a_7 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_7 s_6)) => hyp_2 : hol.proof (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8))) => hyp_3 : hol.proof (hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_4) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_1 x_8) d_3)))))) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_4) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_1 x_8) d_3))))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_5 x_8) d_3)))) (thm_905 A B a_7 g_5 d_3 b_1 s_6 t_4 a_27_2 hyp_3) (hyp_4 : hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_4) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_1 x_8) d_3))))) => thm_1159 B A b_1 a_27_2 d_3 t_4 g_5 s_6 a_7 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1161 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> d_3 : hol.term B -> t_4 : hol.term (Set_2Eset B) -> g_5 : hol.term (hol.arr A B) -> s_6 : hol.term (Set_2Eset A) -> a_7 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_7 s_6)) -> hyp_2 : hol.proof (hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_4) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_1 x_8) d_3)))))) -> hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_5 x_8) d_3)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => d_3 : hol.term B => t_4 : hol.term (Set_2Eset B) => g_5 : hol.term (hol.arr A B) => s_6 : hol.term (Set_2Eset A) => a_7 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_7 s_6)) => hyp_2 : hol.proof (hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_4) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_1 x_8) d_3)))))) => hol.PROVE_HYP (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_5 x_8) d_3)))) (thm_903 B A d_3 s_6 t_4 b_1 a_27_2 a_7 g_5 hyp_2) (hyp_3 : hol.proof (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_7) a_27_2 (b_1 x_8))) => thm_1160 B A b_1 a_27_2 d_3 t_4 g_5 s_6 a_7 hyp_1 hyp_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)))) ((Data.Bool./\ ((Set.member a') t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d))))) ;)

(; dict ;)

def thm_1162 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> b_4 : hol.term (hol.arr A B) -> a_27_5 : hol.term B -> a_6 : hol.term A -> g_7 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_2)) -> hol.proof (hol.imp (hol.and (hol.eq (hol.arr A B) g_7 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_5 (b_4 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_4 x_8) d_1)))))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2))) (hol.eq B (g_7 x_8) d_1))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => b_4 : hol.term (hol.arr A B) => a_27_5 : hol.term B => a_6 : hol.term A => g_7 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_2)) => hyp_2 : hol.proof (hol.and (hol.eq (hol.arr A B) g_7 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_5 (b_4 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_4 x_8) d_1)))))) => thm_1161 B A b_4 a_27_5 d_1 t_3 g_7 s_2 a_6 hyp_1 hyp_2.

(; Theorem: |- ((= (\lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)))) ((Data.Bool./\ ((Set.member a') t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))) b)) ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)))) ((Data.Bool./\ ((Set.member a') t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))) ;)

(; dict ;)

def thm_1163 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> t_4 : hol.term (Set_2Eset B) -> a_27_5 : hol.term B -> a_6 : hol.term A -> g_7 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_7 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_6) a_27_5 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_4))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (b_8 x_9) d_2)))))) b_1) (hol.and (hol.eq (hol.arr A B) g_7 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_5 (b_1 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)) (hol.eq B (b_1 x_8) d_2))))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => d_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => t_4 : hol.term (Set_2Eset B) => a_27_5 : hol.term B => a_6 : hol.term A => g_7 : hol.term (hol.arr A B) => hol.BETA_CONV (hol.arr A B) hol.bool (b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_7 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_6) a_27_5 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_4))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (b_8 x_9) d_2)))))) b_1.

(; Theorem: |- (\lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)))) ((Data.Bool./\ ((Set.member a') t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))) b) ;)

(; dict ;)

def thm_1164 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> t_4 : hol.term (Set_2Eset B) -> a_27_5 : hol.term B -> a_6 : hol.term A -> g_7 : hol.term (hol.arr A B) -> hyp_1 : hol.proof ((b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_7 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_6) a_27_5 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_4))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (b_8 x_9) d_2)))))) b_1) -> hol.proof ((b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_7 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_6) a_27_5 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_4))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (b_8 x_9) d_2)))))) b_1) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => d_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => t_4 : hol.term (Set_2Eset B) => a_27_5 : hol.term B => a_6 : hol.term A => g_7 : hol.term (hol.arr A B) => hyp_1 : hol.proof ((b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_7 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_6) a_27_5 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_4))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (b_8 x_9) d_2)))))) b_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)))) ((Data.Bool./\ ((Set.member a') t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))) ;)

(; dict ;)

def thm_1165 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> b_4 : hol.term (hol.arr A B) -> a_27_5 : hol.term B -> a_6 : hol.term A -> g_7 : hol.term (hol.arr A B) -> hyp_1 : hol.proof ((b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_7 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_6) a_27_5 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_3) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (b_8 x_9) d_1)))))) b_4) -> hol.proof (hol.and (hol.eq (hol.arr A B) g_7 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_5 (b_4 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_4 x_8) d_1)))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => b_4 : hol.term (hol.arr A B) => a_27_5 : hol.term B => a_6 : hol.term A => g_7 : hol.term (hol.arr A B) => hyp_1 : hol.proof ((b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_7 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_6) a_27_5 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_3) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (b_8 x_9) d_1)))))) b_4) => hol.EQ_MP ((b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_7 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_6) a_27_5 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_3) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (b_8 x_9) d_1)))))) b_4) (hol.and (hol.eq (hol.arr A B) g_7 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_5 (b_4 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_4 x_8) d_1)))))) (thm_1163 B A b_4 d_1 s_2 t_3 a_27_5 a_6 g_7) (thm_1164 B A b_4 d_1 s_2 t_3 a_27_5 a_6 g_7 hyp_1).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1166 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> d_3 : hol.term B -> t_4 : hol.term (Set_2Eset B) -> g_5 : hol.term (hol.arr A B) -> s_6 : hol.term (Set_2Eset A) -> a_7 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_7 s_6)) -> hyp_2 : hol.proof ((b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_7) a_27_2 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_4) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_4))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6)) (hol.eq B (b_8 x_9) d_3)))))) b_1) -> hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_7) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6))) (hol.eq B (g_5 x_8) d_3)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => d_3 : hol.term B => t_4 : hol.term (Set_2Eset B) => g_5 : hol.term (hol.arr A B) => s_6 : hol.term (Set_2Eset A) => a_7 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_7 s_6)) => hyp_2 : hol.proof ((b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_7) a_27_2 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_4) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_4))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6)) (hol.eq B (b_8 x_9) d_3)))))) b_1) => thm_1162 B A d_3 s_6 t_4 b_1 a_27_2 a_7 g_5 hyp_1 (thm_1165 B A d_3 s_6 t_4 b_1 a_27_2 a_7 g_5 hyp_2).

(; Theorem: |- ((Data.Bool.==> (\lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)))) ((Data.Bool./\ ((Set.member a') t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))) b)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d))))) ;)

(; dict ;)

def thm_1167 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> t_4 : hol.term (Set_2Eset B) -> a_27_5 : hol.term B -> a_6 : hol.term A -> g_7 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_3)) -> hol.proof (hol.imp ((b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_7 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_6) a_27_5 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_4))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (b_8 x_9) d_2)))))) b_1) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_7 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3))) (hol.eq B (g_7 x_8) d_2))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => d_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => t_4 : hol.term (Set_2Eset B) => a_27_5 : hol.term B => a_6 : hol.term A => g_7 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_3)) => hyp_2 : hol.proof ((b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_7 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_6) a_27_5 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_4))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (b_8 x_9) d_2)))))) b_1) => thm_1166 B A b_1 a_27_5 d_2 t_4 g_7 s_3 a_6 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda b. ((Data.Bool.==> (\lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)))) ((Data.Bool./\ ((Set.member a') t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))) b)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d)))))) ;)

(; dict ;)

def thm_1168 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> g_6 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_2)) -> hol.proof (hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.imp ((b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_5) a_27_4 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_3) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (b_8 x_9) d_1)))))) b_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (hol.or (hol.eq A x_8 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_8 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2))) (hol.eq B (g_6 x_8) d_1)))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_27_4 : hol.term B => a_5 : hol.term A => g_6 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_2)) => b_7 : hol.term (hol.arr A B) => thm_1167 B A b_7 d_1 s_2 t_3 a_27_4 a_5 g_6 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)))) ((Data.Bool./\ ((Set.member a') t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d))))) ;)

(; dict ;)

def thm_1169 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> g_6 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_2)) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1))))))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))) (hol.eq B (g_6 x_7) d_1))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_27_4 : hol.term B => a_5 : hol.term A => g_6 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_2)) => thm_900 B A d_1 s_2 t_3 a_27_4 a_5 g_6 (thm_1168 B A d_1 s_2 t_3 a_27_4 a_5 g_6 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)))) ((Data.Bool./\ ((Set.member a') t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))) ;)

(; dict ;)

def thm_1170 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> g_6 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1))))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_27_4 : hol.term B => a_5 : hol.term A => g_6 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1))))))) => hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1171 : B : hol.type -> A : hol.type -> a_27_1 : hol.term B -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> g_4 : hol.term (hol.arr A B) -> s_5 : hol.term (Set_2Eset A) -> a_6 : hol.term A -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_1 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)) (hol.eq B (b_7 x_8) d_2))))))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_5)) -> hol.proof (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B (g_4 x_7) d_2)))) :=
  B : hol.type => A : hol.type => a_27_1 : hol.term B => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => g_4 : hol.term (hol.arr A B) => s_5 : hol.term (Set_2Eset A) => a_6 : hol.term A => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_1 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)) (hol.eq B (b_7 x_8) d_2))))))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_5)) => thm_1169 B A d_2 s_5 t_3 a_27_1 a_6 g_4 hyp_2 (thm_1170 B A d_2 s_5 t_3 a_27_1 a_6 g_4 hyp_1).

(; Theorem: |- ((= (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))) a')) (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)))) ((Data.Bool./\ ((Set.member a') t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))))) ;)

(; dict ;)

def thm_1172 : A : hol.type -> B : hol.type -> a_27_1 : hol.term B -> d_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> t_4 : hol.term (Set_2Eset B) -> a_5 : hol.term A -> g_6 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((a_7 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_5) a_7 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_7 t_4) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_4))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (b_8 x_9) d_2))))))) a_27_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_1 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_4) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)) (hol.eq B (b_7 x_8) d_2)))))))) :=
  A : hol.type => B : hol.type => a_27_1 : hol.term B => d_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => t_4 : hol.term (Set_2Eset B) => a_5 : hol.term A => g_6 : hol.term (hol.arr A B) => hol.BETA_CONV B hol.bool (a_7 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_5) a_7 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_7 t_4) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_4))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (b_8 x_9) d_2))))))) a_27_1.

(; Theorem: |- (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))) a') ;)

(; dict ;)

def thm_1173 : A : hol.type -> B : hol.type -> a_27_1 : hol.term B -> d_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> t_4 : hol.term (Set_2Eset B) -> a_5 : hol.term A -> g_6 : hol.term (hol.arr A B) -> hyp_1 : hol.proof ((a_7 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_5) a_7 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_7 t_4) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_4))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (b_8 x_9) d_2))))))) a_27_1) -> hol.proof ((a_7 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_5) a_7 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_7 t_4) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_4))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (b_8 x_9) d_2))))))) a_27_1) :=
  A : hol.type => B : hol.type => a_27_1 : hol.term B => d_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => t_4 : hol.term (Set_2Eset B) => a_5 : hol.term A => g_6 : hol.term (hol.arr A B) => hyp_1 : hol.proof ((a_7 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_5) a_7 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_7 t_4) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_4))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (b_8 x_9) d_2))))))) a_27_1) => hyp_1.

(; Theorem: |- (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)))) ((Data.Bool./\ ((Set.member a') t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))) ;)

(; dict ;)

def thm_1174 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> g_6 : hol.term (hol.arr A B) -> hyp_1 : hol.proof ((a_7 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_5) a_7 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_7 t_3) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (b_8 x_9) d_1))))))) a_27_4) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_27_4 : hol.term B => a_5 : hol.term A => g_6 : hol.term (hol.arr A B) => hyp_1 : hol.proof ((a_7 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_5) a_7 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_7 t_3) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (b_8 x_9) d_1))))))) a_27_4) => hol.EQ_MP ((a_7 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_5) a_7 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_7 t_3) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (b_8 x_9) d_1))))))) a_27_4) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1))))))) (thm_1172 A B a_27_4 d_1 s_2 t_3 a_5 g_6) (thm_1173 A B a_27_4 d_1 s_2 t_3 a_5 g_6 hyp_1).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1175 : B : hol.type -> A : hol.type -> a_27_1 : hol.term B -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> g_4 : hol.term (hol.arr A B) -> s_5 : hol.term (Set_2Eset A) -> a_6 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_5)) -> hyp_2 : hol.proof ((a_7 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_6) a_7 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_7 t_3) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_5)) (hol.eq B (b_8 x_9) d_2))))))) a_27_1) -> hol.proof (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5))) (hol.eq B (g_4 x_7) d_2)))) :=
  B : hol.type => A : hol.type => a_27_1 : hol.term B => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => g_4 : hol.term (hol.arr A B) => s_5 : hol.term (Set_2Eset A) => a_6 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_5)) => hyp_2 : hol.proof ((a_7 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_6) a_7 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_7 t_3) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_5)) (hol.eq B (b_8 x_9) d_2))))))) a_27_1) => (hyp_3 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_1 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)) (hol.eq B (b_7 x_8) d_2))))))) => thm_1171 B A a_27_1 d_2 t_3 g_4 s_5 a_6 hyp_3 hyp_1) (thm_1174 B A d_2 s_5 t_3 a_27_1 a_6 g_4 hyp_2).

(; Theorem: |- ((Data.Bool.==> (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))) a')) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d))))) ;)

(; dict ;)

def thm_1176 : A : hol.type -> B : hol.type -> a_27_1 : hol.term B -> d_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> t_4 : hol.term (Set_2Eset B) -> a_5 : hol.term A -> g_6 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_3)) -> hol.proof (hol.imp ((a_7 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_5) a_7 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_7 t_4) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_4))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (b_8 x_9) d_2))))))) a_27_1) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (g_6 x_7) d_2))))) :=
  A : hol.type => B : hol.type => a_27_1 : hol.term B => d_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => t_4 : hol.term (Set_2Eset B) => a_5 : hol.term A => g_6 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_3)) => hyp_2 : hol.proof ((a_7 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_5) a_7 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_7 t_4) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_4))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (b_8 x_9) d_2))))))) a_27_1) => thm_1175 B A a_27_1 d_2 t_4 g_6 s_3 a_5 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda a'. ((Data.Bool.==> (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))) a')) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d)))))) ;)

(; dict ;)

def thm_1177 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2)) -> hol.proof (hol.forall B (a_27_6 : hol.term B => hol.imp ((a_7 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_4) a_7 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_7 t_3) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (b_8 x_9) d_1))))))) a_27_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2))) (hol.eq B (g_5 x_7) d_1)))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2)) => a_27_6 : hol.term B => thm_1176 A B a_27_6 d_1 s_2 t_3 a_4 g_5 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d))))) ;)

(; dict ;)

def thm_1178 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2)) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))))) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) (hol.eq B (g_5 x_6) d_1))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2)) => thm_899 A B d_1 s_2 t_3 a_4 g_5 (thm_1177 A B d_1 s_2 t_3 a_4 g_5 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))))) ;)

(; dict ;)

def thm_1179 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))))) => hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1180 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> g_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_3 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (b_7 x_8) d_1)))))))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_4)) -> hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_3 x_6) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => g_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_3 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (b_7 x_8) d_1)))))))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_4)) => thm_1178 A B d_1 s_4 t_2 a_5 g_3 hyp_2 (thm_1179 A B d_1 s_4 t_2 a_5 g_3 hyp_1).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1181 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> g_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_3 x_6) d_1)))) -> hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_3 x_6) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => g_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hyp_1 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_3 x_6) d_1)))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t))) ;)

(; dict ;)

def thm_1182 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> g_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_3 x_6) d_1)))) -> hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_2))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => g_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hyp_1 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_3 x_6) d_1)))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_208 q_1 p_2 hyp_1) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_3 x_6) d_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_2))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t))) ;)

(; dict ;)

def thm_1183 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> g_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_3 x_6) d_1)))) -> hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_2))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => g_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hyp_1 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_3 x_6) d_1)))) => hol.PROVE_HYP (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_3 x_6) d_1)))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_2))) (thm_1181 B A d_1 t_2 g_3 s_4 a_5 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_3 x_6) d_1)))) => thm_1182 B A d_1 t_2 g_3 s_4 a_5 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d))) ;)

(; dict ;)

def thm_1184 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> d_2 : hol.term B -> g_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_3 x_6) d_2)))) -> hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_3 x_6) d_2))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => d_2 : hol.term B => g_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hyp_1 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_3 x_6) d_2)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_151 p_1 q_2 hyp_1) (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_3 x_6) d_2))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d))) ;)

(; dict ;)

def thm_1185 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> d_2 : hol.term B -> g_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hyp_1 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_3 x_6) d_2)))) -> hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_3 x_6) d_2))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => d_2 : hol.term B => g_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hyp_1 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_3 x_6) d_2)))) => hol.PROVE_HYP (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_3 x_6) d_2)))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_3 x_6) d_2))) (thm_1181 B A d_2 t_1 g_3 s_4 a_5 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_3 x_6) d_2)))) => thm_1184 B A t_1 d_2 g_3 s_4 a_5 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t))) ;)

(; dict ;)

def thm_1186 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> g_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_5) t_1))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_5) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => g_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_5) t_1))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d))) ;)

(; dict ;)

def thm_1187 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3))) (hol.eq B (g_2 x_5) d_1))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3))) (hol.eq B (g_2 x_5) d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3))) (hol.eq B (g_2 x_5) d_1))) => hyp_1.

(; Theorem: |- ((= (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))) (g a))) (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (b x)))) ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))))) ;)

(; dict ;)

def thm_1188 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1))))))) (g_5 a_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1)))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hol.BETA_CONV B hol.bool (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1))))))) (g_5 a_4).

(; Theorem: |- ((= (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (b x)))) ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))))) (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))) (g a))) ;)

(; dict ;)

def thm_1189 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1))))))) ((a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1))))))) (g_5 a_4))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hol.SYM hol.bool ((a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1))))))) (g_5 a_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1))))))) (thm_1188 A B d_1 s_2 t_3 a_4 g_5).

(; Theorem: |- ((= (\lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (b x)))) ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))) \lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)))) ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)))) ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) d))))))) ;)

(; dict ;)

def thm_1190 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1)))))) (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) d_1 (g_5 x_6))) (hol.and (hol.eq (hol.arr A B) g_5 (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_5 a_4) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6) d_1))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hol.BETA_CONV (hol.arr A B) hol.bool (b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1)))))) (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) d_1 (g_5 x_6)).

(; Theorem: |- ((= ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)))) ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) d))))))) (\lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (b x)))) ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))) \lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)))) ;)

(; dict ;)

def thm_1191 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> d_3 : hol.term B -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq (hol.arr A B) g_5 (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_5 a_4) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_5 x_7)) x_6))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_2) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_5 x_7)) x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_5 x_7)) x_6) d_3)))))) ((b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_2) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)) (hol.eq B (b_6 x_7) d_3)))))) (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) d_3 (g_5 x_6)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => d_3 : hol.term B => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hol.SYM hol.bool ((b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_2) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)) (hol.eq B (b_6 x_7) d_3)))))) (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) d_3 (g_5 x_6))) (hol.and (hol.eq (hol.arr A B) g_5 (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_5 a_4) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_5 x_7)) x_6))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_2) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_5 x_7)) x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_5 x_7)) x_6) d_3)))))) (thm_1190 B A d_3 s_1 t_2 a_4 g_5).

(; Theorem: |- ((= ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)))) (Data.Bool.! \lambda x. ((= (g x)) (\lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) x)))) ;)

(; dict ;)

def thm_1192 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> a_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A B) g_3 (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_2) d_1 (g_3 x_5)) x_4))) (hol.forall A (x_4 : hol.term A => hol.eq B (g_3 x_4) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_2) (g_3 a_2) ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_2) d_1 (g_3 x_6)) x_5)) x_4)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => a_2 : hol.term A => g_3 : hol.term (hol.arr A B) => (B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => f_2 : hol.term (hol.arr A B) => thm_328 B A g_1 f_2) B A (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_2) d_1 (g_3 x_5)) x_4)) g_3.

(; Theorem: |- ((= (\lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) x)) (((Data.Bool.cond ((= x) a)) (g a)) (\lambda x_1. (((Data.Bool.cond ((= x_1) a)) d) (g x_1)) x))) ;)

(; dict ;)

def thm_1193 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> d_2 : hol.term B -> g_3 : hol.term (hol.arr A B) -> a_4 : hol.term A -> hol.proof (hol.eq B ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) (g_3 a_4) ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) d_2 (g_3 x_6)) x_5)) x_1) (hol.cond B (hol.eq A x_1 a_4) (g_3 a_4) ((x__1_5 : hol.term A => hol.cond B (hol.eq A x__1_5 a_4) d_2 (g_3 x__1_5)) x_1))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => d_2 : hol.term B => g_3 : hol.term (hol.arr A B) => a_4 : hol.term A => hol.BETA_CONV A B (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) (g_3 a_4) ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) d_2 (g_3 x_6)) x_5)) x_1.

(; Theorem: |- ((= \lambda x. (\lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) x)) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (\lambda x_1. (((Data.Bool.cond ((= x_1) a)) d) (g x_1)) x))) ;)

(; dict ;)

def thm_1194 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> a_3 : hol.term A -> hol.proof (hol.eq (hol.arr A B) (x_4 : hol.term A => (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (g_2 a_3) ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) d_1 (g_2 x_6)) x_5)) x_4) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (g_2 a_3) ((x__1_5 : hol.term A => hol.cond B (hol.eq A x__1_5 a_3) d_1 (g_2 x__1_5)) x_4))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => a_3 : hol.term A => hol.ABS_THM A B (x_4 : hol.term A => (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (g_2 a_3) ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) d_1 (g_2 x_6)) x_5)) x_4) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (g_2 a_3) ((x__1_5 : hol.term A => hol.cond B (hol.eq A x__1_5 a_3) d_1 (g_2 x__1_5)) x_4)) (x_4 : hol.term A => thm_1193 A B x_4 d_1 g_2 a_3).

(; Theorem: |- ((= (\lambda x. (\lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) x) x)) (\lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (\lambda x_1. (((Data.Bool.cond ((= x_1) a)) d) (g x_1)) x)) x)) ;)

(; dict ;)

def thm_1195 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> d_2 : hol.term B -> g_3 : hol.term (hol.arr A B) -> a_4 : hol.term A -> hol.proof (hol.eq B ((x_5 : hol.term A => (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_3 a_4) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_2 (g_3 x_7)) x_6)) x_5) x_1) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) (g_3 a_4) ((x__1_6 : hol.term A => hol.cond B (hol.eq A x__1_6 a_4) d_2 (g_3 x__1_6)) x_5)) x_1)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => d_2 : hol.term B => g_3 : hol.term (hol.arr A B) => a_4 : hol.term A => hol.APP_THM A B (x_5 : hol.term A => (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_3 a_4) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_2 (g_3 x_7)) x_6)) x_5) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) (g_3 a_4) ((x__1_6 : hol.term A => hol.cond B (hol.eq A x__1_6 a_4) d_2 (g_3 x__1_6)) x_5)) x_1 x_1 (thm_1194 B A d_2 g_3 a_4) (thm_334 A x_1).

(; Theorem: |- ((= (= (\lambda x. (\lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) x) x))) (= (\lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (\lambda x_1. (((Data.Bool.cond ((= x_1) a)) d) (g x_1)) x)) x))) ;)

(; dict ;)

def thm_1196 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> d_2 : hol.term B -> g_3 : hol.term (hol.arr A B) -> a_4 : hol.term A -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B ((x_5 : hol.term A => (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_3 a_4) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_2 (g_3 x_7)) x_6)) x_5) x_1)) (hol.eq B ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) (g_3 a_4) ((x__1_6 : hol.term A => hol.cond B (hol.eq A x__1_6 a_4) d_2 (g_3 x__1_6)) x_5)) x_1))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => d_2 : hol.term B => g_3 : hol.term (hol.arr A B) => a_4 : hol.term A => hol.APP_THM B (hol.arr B hol.bool) (hol.eq B) (hol.eq B) ((x_5 : hol.term A => (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_3 a_4) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_2 (g_3 x_7)) x_6)) x_5) x_1) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) (g_3 a_4) ((x__1_6 : hol.term A => hol.cond B (hol.eq A x__1_6 a_4) d_2 (g_3 x__1_6)) x_5)) x_1) (thm_331 B) (thm_1195 A B x_1 d_2 g_3 a_4).

(; Theorem: |- ((= ((= (\lambda x. (\lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) x) x)) (\lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) x))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (\lambda x_1. (((Data.Bool.cond ((= x_1) a)) d) (g x_1)) x)) x)) (((Data.Bool.cond ((= x) a)) (g a)) (\lambda x_1. (((Data.Bool.cond ((= x_1) a)) d) (g x_1)) x)))) ;)

(; dict ;)

def thm_1197 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> d_2 : hol.term B -> g_3 : hol.term (hol.arr A B) -> a_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq B ((x_5 : hol.term A => (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_3 a_4) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_2 (g_3 x_7)) x_6)) x_5) x_1) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) (g_3 a_4) ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) d_2 (g_3 x_6)) x_5)) x_1)) (hol.eq B ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) (g_3 a_4) ((x__1_6 : hol.term A => hol.cond B (hol.eq A x__1_6 a_4) d_2 (g_3 x__1_6)) x_5)) x_1) (hol.cond B (hol.eq A x_1 a_4) (g_3 a_4) ((x__1_5 : hol.term A => hol.cond B (hol.eq A x__1_5 a_4) d_2 (g_3 x__1_5)) x_1)))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => d_2 : hol.term B => g_3 : hol.term (hol.arr A B) => a_4 : hol.term A => hol.APP_THM B hol.bool (hol.eq B ((x_5 : hol.term A => (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_3 a_4) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_2 (g_3 x_7)) x_6)) x_5) x_1)) (hol.eq B ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) (g_3 a_4) ((x__1_6 : hol.term A => hol.cond B (hol.eq A x__1_6 a_4) d_2 (g_3 x__1_6)) x_5)) x_1)) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) (g_3 a_4) ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) d_2 (g_3 x_6)) x_5)) x_1) (hol.cond B (hol.eq A x_1 a_4) (g_3 a_4) ((x__1_5 : hol.term A => hol.cond B (hol.eq A x__1_5 a_4) d_2 (g_3 x__1_5)) x_1)) (thm_1196 A B x_1 d_2 g_3 a_4) (thm_1193 A B x_1 d_2 g_3 a_4).

(; Theorem: |- ((= ((Data.Bool.cond ((= x) a)) (g a))) ((Data.Bool.cond ((= x) a)) (g a))) ;)

(; dict ;)

def thm_1198 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A B) -> a_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq (hol.arr B B) (hol.cond B (hol.eq A x_3 a_2) (g_1 a_2)) (hol.cond B (hol.eq A x_3 a_2) (g_1 a_2))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A B) => a_2 : hol.term A => x_3 : hol.term A => hol.REFL (hol.arr B B) (hol.cond B (hol.eq A x_3 a_2) (g_1 a_2)).

(; Theorem: |- ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) (((Data.Bool.cond ((= x) a)) d) (g x))) ;)

(; dict ;)

def thm_1199 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> a_4 : hol.term A -> hol.proof (hol.eq B ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) d_3 (g_2 x_5)) x_1) (hol.cond B (hol.eq A x_1 a_4) d_3 (g_2 x_1))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A B) => d_3 : hol.term B => a_4 : hol.term A => hol.BETA_CONV A B (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) d_3 (g_2 x_5)) x_1.

(; Theorem: |- ((= \lambda x. (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) \lambda x. (((Data.Bool.cond ((= x) a)) d) (g x))) ;)

(; dict ;)

def thm_1200 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> a_3 : hol.term A -> hol.proof (hol.eq (hol.arr A B) (x_4 : hol.term A => (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) d_2 (g_1 x_5)) x_4) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) d_2 (g_1 x_4))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => d_2 : hol.term B => a_3 : hol.term A => hol.ABS_THM A B (x_4 : hol.term A => (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) d_2 (g_1 x_5)) x_4) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) d_2 (g_1 x_4)) (x_4 : hol.term A => thm_1199 A B x_4 g_1 d_2 a_3).

(; Theorem: |- ((= (\lambda x. (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x) x)) (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) ;)

(; dict ;)

def thm_1201 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> a_4 : hol.term A -> hol.proof (hol.eq B ((x_5 : hol.term A => (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) d_3 (g_2 x_6)) x_5) x_1) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) d_3 (g_2 x_5)) x_1)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A B) => d_3 : hol.term B => a_4 : hol.term A => hol.APP_THM A B (x_5 : hol.term A => (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) d_3 (g_2 x_6)) x_5) (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) d_3 (g_2 x_5)) x_1 x_1 (thm_1200 B A g_2 d_3 a_4) (thm_334 A x_1).

(; Theorem: |- ((= (= (\lambda x. (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x) x))) (= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x))) ;)

(; dict ;)

def thm_1202 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> a_4 : hol.term A -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B ((x_5 : hol.term A => (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) d_3 (g_2 x_6)) x_5) x_1)) (hol.eq B ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) d_3 (g_2 x_5)) x_1))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A B) => d_3 : hol.term B => a_4 : hol.term A => hol.APP_THM B (hol.arr B hol.bool) (hol.eq B) (hol.eq B) ((x_5 : hol.term A => (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) d_3 (g_2 x_6)) x_5) x_1) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) d_3 (g_2 x_5)) x_1) (thm_331 B) (thm_1201 A B x_1 g_2 d_3 a_4).

(; Theorem: |- ((= ((= (\lambda x. (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x) x)) (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) (((Data.Bool.cond ((= x) a)) d) (g x)))) ;)

(; dict ;)

def thm_1203 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> a_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq B ((x_5 : hol.term A => (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) d_3 (g_2 x_6)) x_5) x_1) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) d_3 (g_2 x_5)) x_1)) (hol.eq B ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) d_3 (g_2 x_5)) x_1) (hol.cond B (hol.eq A x_1 a_4) d_3 (g_2 x_1)))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A B) => d_3 : hol.term B => a_4 : hol.term A => hol.APP_THM B hol.bool (hol.eq B ((x_5 : hol.term A => (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) d_3 (g_2 x_6)) x_5) x_1)) (hol.eq B ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) d_3 (g_2 x_5)) x_1)) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) d_3 (g_2 x_5)) x_1) (hol.cond B (hol.eq A x_1 a_4) d_3 (g_2 x_1)) (thm_1202 A B x_1 g_2 d_3 a_4) (thm_1199 A B x_1 g_2 d_3 a_4).

(; Theorem: |- ((= (((Data.Bool.cond ((= x) a)) (g a)) (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x))) (((Data.Bool.cond ((= x) a)) (g a)) (((Data.Bool.cond ((= x) a)) d) (g x)))) ;)

(; dict ;)

def thm_1204 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> a_3 : hol.term A -> x_4 : hol.term A -> hol.proof (hol.eq B (hol.cond B (hol.eq A x_4 a_3) (g_2 a_3) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) d_1 (g_2 x_5)) x_4)) (hol.cond B (hol.eq A x_4 a_3) (g_2 a_3) (hol.cond B (hol.eq A x_4 a_3) d_1 (g_2 x_4)))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => a_3 : hol.term A => x_4 : hol.term A => hol.APP_THM B B (hol.cond B (hol.eq A x_4 a_3) (g_2 a_3)) (hol.cond B (hol.eq A x_4 a_3) (g_2 a_3)) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) d_1 (g_2 x_5)) x_4) (hol.cond B (hol.eq A x_4 a_3) d_1 (g_2 x_4)) (thm_1198 A B g_2 a_3 x_4) (hol.EQ_MP (hol.eq B ((x_5 : hol.term A => (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) d_1 (g_2 x_6)) x_5) x_4) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) d_1 (g_2 x_5)) x_4)) (hol.eq B ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) d_1 (g_2 x_5)) x_4) (hol.cond B (hol.eq A x_4 a_3) d_1 (g_2 x_4))) (thm_1203 A B x_4 g_2 d_1 a_3) (thm_1201 A B x_4 g_2 d_1 a_3)).

(; Theorem: |- ((= (\lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (\lambda x_1. (((Data.Bool.cond ((= x_1) a)) d) (g x_1)) x)) x)) (((Data.Bool.cond ((= x) a)) (g a)) (((Data.Bool.cond ((= x) a)) d) (g x)))) ;)

(; dict ;)

def thm_1205 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> d_2 : hol.term B -> g_3 : hol.term (hol.arr A B) -> a_4 : hol.term A -> hol.proof (hol.eq B ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) (g_3 a_4) ((x__1_6 : hol.term A => hol.cond B (hol.eq A x__1_6 a_4) d_2 (g_3 x__1_6)) x_5)) x_1) (hol.cond B (hol.eq A x_1 a_4) (g_3 a_4) (hol.cond B (hol.eq A x_1 a_4) d_2 (g_3 x_1)))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => d_2 : hol.term B => g_3 : hol.term (hol.arr A B) => a_4 : hol.term A => hol.TRANS B ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) (g_3 a_4) ((x__1_6 : hol.term A => hol.cond B (hol.eq A x__1_6 a_4) d_2 (g_3 x__1_6)) x_5)) x_1) (hol.cond B (hol.eq A x_1 a_4) (g_3 a_4) ((x__1_5 : hol.term A => hol.cond B (hol.eq A x__1_5 a_4) d_2 (g_3 x__1_5)) x_1)) (hol.cond B (hol.eq A x_1 a_4) (g_3 a_4) (hol.cond B (hol.eq A x_1 a_4) d_2 (g_3 x_1))) (hol.EQ_MP (hol.eq B ((x_5 : hol.term A => (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_3 a_4) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_2 (g_3 x_7)) x_6)) x_5) x_1) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) (g_3 a_4) ((x__1_6 : hol.term A => hol.cond B (hol.eq A x__1_6 a_4) d_2 (g_3 x__1_6)) x_5)) x_1)) (hol.eq B ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) (g_3 a_4) ((x__1_6 : hol.term A => hol.cond B (hol.eq A x__1_6 a_4) d_2 (g_3 x__1_6)) x_5)) x_1) (hol.cond B (hol.eq A x_1 a_4) (g_3 a_4) ((x__1_5 : hol.term A => hol.cond B (hol.eq A x__1_5 a_4) d_2 (g_3 x__1_5)) x_1))) (thm_1197 A B x_1 d_2 g_3 a_4) (thm_1195 A B x_1 d_2 g_3 a_4)) (thm_1204 A B d_2 g_3 a_4 x_1).

(; Theorem: |- ((= ((= (g x)) (\lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (\lambda x_1. (((Data.Bool.cond ((= x_1) a)) d) (g x_1)) x)) x))) ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (((Data.Bool.cond ((= x) a)) d) (g x))))) ;)

(; dict ;)

def thm_1206 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> a_2 : hol.term A -> x_3 : hol.term A -> g_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B (g_4 x_3) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_2) (g_4 a_2) ((x__1_6 : hol.term A => hol.cond B (hol.eq A x__1_6 a_2) d_1 (g_4 x__1_6)) x_5)) x_3)) (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_2) (g_4 a_2) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => a_2 : hol.term A => x_3 : hol.term A => g_4 : hol.term (hol.arr A B) => hol.APP_THM B hol.bool (hol.eq B (g_4 x_3)) (hol.eq B (g_4 x_3)) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_2) (g_4 a_2) ((x__1_6 : hol.term A => hol.cond B (hol.eq A x__1_6 a_2) d_1 (g_4 x__1_6)) x_5)) x_3) (hol.cond B (hol.eq A x_3 a_2) (g_4 a_2) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3))) (thm_330 A B x_3 g_4) (thm_1205 A B x_3 d_1 g_4 a_2).

(; Theorem: |- ((= \lambda x. ((= (g x)) (\lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (\lambda x_1. (((Data.Bool.cond ((= x_1) a)) d) (g x_1)) x)) x))) \lambda x. ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (((Data.Bool.cond ((= x) a)) d) (g x))))) ;)

(; dict ;)

def thm_1207 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> a_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_4 : hol.term A => hol.eq B (g_3 x_4) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_2) (g_3 a_2) ((x__1_6 : hol.term A => hol.cond B (hol.eq A x__1_6 a_2) d_1 (g_3 x__1_6)) x_5)) x_4)) (x_4 : hol.term A => hol.eq B (g_3 x_4) (hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) (hol.cond B (hol.eq A x_4 a_2) d_1 (g_3 x_4))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => a_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hol.ABS_THM A hol.bool (x_4 : hol.term A => hol.eq B (g_3 x_4) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_2) (g_3 a_2) ((x__1_6 : hol.term A => hol.cond B (hol.eq A x__1_6 a_2) d_1 (g_3 x__1_6)) x_5)) x_4)) (x_4 : hol.term A => hol.eq B (g_3 x_4) (hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) (hol.cond B (hol.eq A x_4 a_2) d_1 (g_3 x_4)))) (x_4 : hol.term A => thm_1206 A B d_1 a_2 x_4 g_3).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= (g x)) (\lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (\lambda x_1. (((Data.Bool.cond ((= x_1) a)) d) (g x_1)) x)) x)))) (Data.Bool.! \lambda x. ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (((Data.Bool.cond ((= x) a)) d) (g x)))))) ;)

(; dict ;)

def thm_1208 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> a_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.eq B (g_3 x_4) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_2) (g_3 a_2) ((x__1_6 : hol.term A => hol.cond B (hol.eq A x__1_6 a_2) d_1 (g_3 x__1_6)) x_5)) x_4))) (hol.forall A (x_4 : hol.term A => hol.eq B (g_3 x_4) (hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) (hol.cond B (hol.eq A x_4 a_2) d_1 (g_3 x_4)))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => a_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_4 : hol.term A => hol.eq B (g_3 x_4) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_2) (g_3 a_2) ((x__1_6 : hol.term A => hol.cond B (hol.eq A x__1_6 a_2) d_1 (g_3 x__1_6)) x_5)) x_4)) (x_4 : hol.term A => hol.eq B (g_3 x_4) (hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) (hol.cond B (hol.eq A x_4 a_2) d_1 (g_3 x_4)))) (thm_95 A) (thm_1207 B A d_1 a_2 g_3).

(; Theorem: |- ((= ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)))) (Data.Bool.! \lambda x. ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (((Data.Bool.cond ((= x) a)) d) (g x)))))) ;)

(; dict ;)

def thm_1209 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> a_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A B) g_3 (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_2) d_1 (g_3 x_5)) x_4))) (hol.forall A (x_4 : hol.term A => hol.eq B (g_3 x_4) (hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) (hol.cond B (hol.eq A x_4 a_2) d_1 (g_3 x_4)))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => a_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.eq (hol.arr A B) g_3 (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_2) d_1 (g_3 x_5)) x_4))) (hol.forall A (x_4 : hol.term A => hol.eq B (g_3 x_4) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_2) (g_3 a_2) ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_2) d_1 (g_3 x_6)) x_5)) x_4))) (hol.forall A (x_4 : hol.term A => hol.eq B (g_3 x_4) (hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) (hol.cond B (hol.eq A x_4 a_2) d_1 (g_3 x_4))))) (thm_1192 B A d_1 a_2 g_3) (thm_1208 B A d_1 a_2 g_3).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (((Data.Bool.cond ((= x) a)) d) (g x)))))) ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)))) ;)

(; dict ;)

def thm_1210 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> a_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.eq B (g_3 x_4) (hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) (hol.cond B (hol.eq A x_4 a_2) d_1 (g_3 x_4))))) (hol.eq (hol.arr A B) g_3 (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_2) d_1 (g_3 x_5)) x_4)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => a_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hol.SYM hol.bool (hol.eq (hol.arr A B) g_3 (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_2) d_1 (g_3 x_5)) x_4))) (hol.forall A (x_4 : hol.term A => hol.eq B (g_3 x_4) (hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) (hol.cond B (hol.eq A x_4 a_2) d_1 (g_3 x_4))))) (thm_1209 B A d_1 a_2 g_3).

(; Theorem: |- ((= \lambda x. ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (((Data.Bool.cond ((= x) a)) d) (g x))))) \lambda x. ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (((Data.Bool.cond ((= x) a)) d) (g x))))) ;)

(; dict ;)

def thm_1211 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> a_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_4 : hol.term A => hol.eq B (g_3 x_4) (hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) (hol.cond B (hol.eq A x_4 a_2) d_1 (g_3 x_4)))) (x_4 : hol.term A => hol.eq B (g_3 x_4) (hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) (hol.cond B (hol.eq A x_4 a_2) d_1 (g_3 x_4))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => a_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hol.REFL (hol.arr A hol.bool) (x_4 : hol.term A => hol.eq B (g_3 x_4) (hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) (hol.cond B (hol.eq A x_4 a_2) d_1 (g_3 x_4)))).

(; Theorem: |- ((= \lambda x. ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (((Data.Bool.cond ((= x) a)) d) (g x))))) \lambda x. ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (((Data.Bool.cond ((= x) a)) d) (g x))))) ;)

(; dict ;)

def thm_1212 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> a_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_4 : hol.term A => hol.eq B (g_3 x_4) (hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) (hol.cond B (hol.eq A x_4 a_2) d_1 (g_3 x_4)))) (x_4 : hol.term A => hol.eq B (g_3 x_4) (hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) (hol.cond B (hol.eq A x_4 a_2) d_1 (g_3 x_4))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => a_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hol.TRANS (hol.arr A hol.bool) (x_4 : hol.term A => hol.eq B (g_3 x_4) (hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) (hol.cond B (hol.eq A x_4 a_2) d_1 (g_3 x_4)))) (x_4 : hol.term A => hol.eq B (g_3 x_4) (hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) (hol.cond B (hol.eq A x_4 a_2) d_1 (g_3 x_4)))) (x_4 : hol.term A => hol.eq B (g_3 x_4) (hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) (hol.cond B (hol.eq A x_4 a_2) d_1 (g_3 x_4)))) (thm_1211 B A d_1 a_2 g_3) (thm_1211 B A d_1 a_2 g_3).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (((Data.Bool.cond ((= x) a)) d) (g x)))))) (Data.Bool.! \lambda x. ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (((Data.Bool.cond ((= x) a)) d) (g x)))))) ;)

(; dict ;)

def thm_1213 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> a_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall A (x_4 : hol.term A => hol.eq B (g_3 x_4) (hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) (hol.cond B (hol.eq A x_4 a_2) d_1 (g_3 x_4))))) (hol.forall A (x_4 : hol.term A => hol.eq B (g_3 x_4) (hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) (hol.cond B (hol.eq A x_4 a_2) d_1 (g_3 x_4)))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => a_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_4 : hol.term A => hol.eq B (g_3 x_4) (hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) (hol.cond B (hol.eq A x_4 a_2) d_1 (g_3 x_4)))) (x_4 : hol.term A => hol.eq B (g_3 x_4) (hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) (hol.cond B (hol.eq A x_4 a_2) d_1 (g_3 x_4)))) (thm_95 A) (thm_1212 B A d_1 a_2 g_3).

(; Theorem: |- ((= (\lambda _10600. ((= (g x)) _10600) (((Data.Bool.cond ((= x) a)) (g a)) (((Data.Bool.cond ((= x) a)) d) (g x))))) ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (((Data.Bool.cond ((= x) a)) d) (g x))))) ;)

(; dict ;)

def thm_1214 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> a_2 : hol.term A -> x_3 : hol.term A -> g_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((__10600_5 : hol.term B => hol.eq B (g_4 x_3) __10600_5) (hol.cond B (hol.eq A x_3 a_2) (g_4 a_2) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3)))) (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_2) (g_4 a_2) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => a_2 : hol.term A => x_3 : hol.term A => g_4 : hol.term (hol.arr A B) => hol.BETA_CONV B hol.bool (__10600_5 : hol.term B => hol.eq B (g_4 x_3) __10600_5) (hol.cond B (hol.eq A x_3 a_2) (g_4 a_2) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3))).

(; Theorem: |- ((= (= (\lambda _10600. ((= (g x)) _10600) (((Data.Bool.cond ((= x) a)) (g a)) (((Data.Bool.cond ((= x) a)) d) (g x)))))) (= ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (((Data.Bool.cond ((= x) a)) d) (g x)))))) ;)

(; dict ;)

def thm_1215 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> a_2 : hol.term A -> x_3 : hol.term A -> g_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10600_5 : hol.term B => hol.eq B (g_4 x_3) __10600_5) (hol.cond B (hol.eq A x_3 a_2) (g_4 a_2) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3))))) (hol.eq hol.bool (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_2) (g_4 a_2) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3)))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => a_2 : hol.term A => x_3 : hol.term A => g_4 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__10600_5 : hol.term B => hol.eq B (g_4 x_3) __10600_5) (hol.cond B (hol.eq A x_3 a_2) (g_4 a_2) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3)))) (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_2) (g_4 a_2) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3)))) thm_77 (thm_1214 A B d_1 a_2 x_3 g_4).

(; Theorem: |- ((= (\lambda _10600. ((= (g x)) _10600) (g a))) ((= (g x)) (g a))) ;)

(; dict ;)

def thm_1216 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((__10600_4 : hol.term B => hol.eq B (g_3 x_2) __10600_4) (g_3 a_1)) (hol.eq B (g_3 x_2) (g_3 a_1))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hol.BETA_CONV B hol.bool (__10600_4 : hol.term B => hol.eq B (g_3 x_2) __10600_4) (g_3 a_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= x) a)) (\lambda _10600. ((= (g x)) _10600) (g a)))) ((Data.Bool.==> ((= x) a)) ((= (g x)) (g a)))) ;)

(; dict ;)

def thm_1217 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> a_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq A x_3 a_2) ((__10600_4 : hol.term B => hol.eq B (g_1 x_3) __10600_4) (g_1 a_2))) (hol.imp (hol.eq A x_3 a_2) (hol.eq B (g_1 x_3) (g_1 a_2)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => a_2 : hol.term A => x_3 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (hol.eq A x_3 a_2)) (hol.imp (hol.eq A x_3 a_2)) ((__10600_4 : hol.term B => hol.eq B (g_1 x_3) __10600_4) (g_1 a_2)) (hol.eq B (g_1 x_3) (g_1 a_2)) (thm_985 A a_2 x_3) (thm_1216 A B a_2 x_3 g_1).

(; Theorem: |- ((= (Data.Bool./\ ((Data.Bool.==> ((= x) a)) (\lambda _10600. ((= (g x)) _10600) (g a))))) (Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= (g x)) (g a))))) ;)

(; dict ;)

def thm_1218 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> a_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.imp (hol.eq A x_3 a_2) ((__10600_4 : hol.term B => hol.eq B (g_1 x_3) __10600_4) (g_1 a_2)))) (hol.and (hol.imp (hol.eq A x_3 a_2) (hol.eq B (g_1 x_3) (g_1 a_2))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => a_2 : hol.term A => x_3 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.imp (hol.eq A x_3 a_2) ((__10600_4 : hol.term B => hol.eq B (g_1 x_3) __10600_4) (g_1 a_2))) (hol.imp (hol.eq A x_3 a_2) (hol.eq B (g_1 x_3) (g_1 a_2))) thm_94 (thm_1217 B A g_1 a_2 x_3).

(; Theorem: |- ((= (\lambda _10600. ((= (g x)) _10600) (((Data.Bool.cond ((= x) a)) d) (g x)))) ((= (g x)) (((Data.Bool.cond ((= x) a)) d) (g x)))) ;)

(; dict ;)

def thm_1219 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> a_2 : hol.term A -> x_3 : hol.term A -> g_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((__10600_5 : hol.term B => hol.eq B (g_4 x_3) __10600_5) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3))) (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3)))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => a_2 : hol.term A => x_3 : hol.term A => g_4 : hol.term (hol.arr A B) => hol.BETA_CONV B hol.bool (__10600_5 : hol.term B => hol.eq B (g_4 x_3) __10600_5) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3)).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= x) a))) (\lambda _10600. ((= (g x)) _10600) (((Data.Bool.cond ((= x) a)) d) (g x))))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) (((Data.Bool.cond ((= x) a)) d) (g x))))) ;)

(; dict ;)

def thm_1220 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> a_3 : hol.term A -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 a_3)) ((__10600_5 : hol.term B => hol.eq B (g_2 x_4) __10600_5) (hol.cond B (hol.eq A x_4 a_3) d_1 (g_2 x_4)))) (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (g_2 x_4) (hol.cond B (hol.eq A x_4 a_3) d_1 (g_2 x_4))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => a_3 : hol.term A => x_4 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (hol.not (hol.eq A x_4 a_3))) (hol.imp (hol.not (hol.eq A x_4 a_3))) ((__10600_5 : hol.term B => hol.eq B (g_2 x_4) __10600_5) (hol.cond B (hol.eq A x_4 a_3) d_1 (g_2 x_4))) (hol.eq B (g_2 x_4) (hol.cond B (hol.eq A x_4 a_3) d_1 (g_2 x_4))) (thm_989 A a_3 x_4) (thm_1219 A B d_1 a_3 x_4 g_2).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) (\lambda _10600. ((= (g x)) _10600) (g a)))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) (\lambda _10600. ((= (g x)) _10600) (((Data.Bool.cond ((= x) a)) d) (g x)))))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= (g x)) (g a)))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) (((Data.Bool.cond ((= x) a)) d) (g x)))))) ;)

(; dict ;)

def thm_1221 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> a_3 : hol.term A -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (hol.imp (hol.eq A x_4 a_3) ((__10600_5 : hol.term B => hol.eq B (g_2 x_4) __10600_5) (g_2 a_3))) (hol.imp (hol.not (hol.eq A x_4 a_3)) ((__10600_5 : hol.term B => hol.eq B (g_2 x_4) __10600_5) (hol.cond B (hol.eq A x_4 a_3) d_1 (g_2 x_4))))) (hol.and (hol.imp (hol.eq A x_4 a_3) (hol.eq B (g_2 x_4) (g_2 a_3))) (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (g_2 x_4) (hol.cond B (hol.eq A x_4 a_3) d_1 (g_2 x_4)))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => a_3 : hol.term A => x_4 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.and (hol.imp (hol.eq A x_4 a_3) ((__10600_5 : hol.term B => hol.eq B (g_2 x_4) __10600_5) (g_2 a_3)))) (hol.and (hol.imp (hol.eq A x_4 a_3) (hol.eq B (g_2 x_4) (g_2 a_3)))) (hol.imp (hol.not (hol.eq A x_4 a_3)) ((__10600_5 : hol.term B => hol.eq B (g_2 x_4) __10600_5) (hol.cond B (hol.eq A x_4 a_3) d_1 (g_2 x_4)))) (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (g_2 x_4) (hol.cond B (hol.eq A x_4 a_3) d_1 (g_2 x_4)))) (thm_1218 B A g_2 a_3 x_4) (thm_1220 B A d_1 g_2 a_3 x_4).

(; Theorem: |- ((= ((= (\lambda _10600. ((= (g x)) _10600) (((Data.Bool.cond ((= x) a)) (g a)) (((Data.Bool.cond ((= x) a)) d) (g x))))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) (\lambda _10600. ((= (g x)) _10600) (g a)))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) (\lambda _10600. ((= (g x)) _10600) (((Data.Bool.cond ((= x) a)) d) (g x))))))) ((= ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (((Data.Bool.cond ((= x) a)) d) (g x))))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= (g x)) (g a)))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) (((Data.Bool.cond ((= x) a)) d) (g x))))))) ;)

(; dict ;)

def thm_1222 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> a_2 : hol.term A -> x_3 : hol.term A -> g_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10600_5 : hol.term B => hol.eq B (g_4 x_3) __10600_5) (hol.cond B (hol.eq A x_3 a_2) (g_4 a_2) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3)))) (hol.and (hol.imp (hol.eq A x_3 a_2) ((__10600_5 : hol.term B => hol.eq B (g_4 x_3) __10600_5) (g_4 a_2))) (hol.imp (hol.not (hol.eq A x_3 a_2)) ((__10600_5 : hol.term B => hol.eq B (g_4 x_3) __10600_5) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3)))))) (hol.eq hol.bool (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_2) (g_4 a_2) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3)))) (hol.and (hol.imp (hol.eq A x_3 a_2) (hol.eq B (g_4 x_3) (g_4 a_2))) (hol.imp (hol.not (hol.eq A x_3 a_2)) (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => a_2 : hol.term A => x_3 : hol.term A => g_4 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10600_5 : hol.term B => hol.eq B (g_4 x_3) __10600_5) (hol.cond B (hol.eq A x_3 a_2) (g_4 a_2) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3))))) (hol.eq hol.bool (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_2) (g_4 a_2) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3))))) (hol.and (hol.imp (hol.eq A x_3 a_2) ((__10600_5 : hol.term B => hol.eq B (g_4 x_3) __10600_5) (g_4 a_2))) (hol.imp (hol.not (hol.eq A x_3 a_2)) ((__10600_5 : hol.term B => hol.eq B (g_4 x_3) __10600_5) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3))))) (hol.and (hol.imp (hol.eq A x_3 a_2) (hol.eq B (g_4 x_3) (g_4 a_2))) (hol.imp (hol.not (hol.eq A x_3 a_2)) (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3))))) (thm_1215 A B d_1 a_2 x_3 g_4) (thm_1221 B A d_1 g_4 a_2 x_3).

(; Theorem: |- ((= (\lambda _10600. ((= (g x)) _10600) (((Data.Bool.cond _483) _482) _485))) ((Data.Bool./\ ((Data.Bool.==> _483) (\lambda _10600. ((= (g x)) _10600) _482))) ((Data.Bool.==> (Data.Bool.~ _483)) (\lambda _10600. ((= (g x)) _10600) _485)))) ;)

(; dict ;)

def thm_1223 : A : hol.type -> B : hol.type -> __485_1 : hol.term B -> __482_2 : hol.term B -> __483_3 : hol.term hol.bool -> x_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((__10600_6 : hol.term B => hol.eq B (g_5 x_4) __10600_6) (hol.cond B __483_3 __482_2 __485_1)) (hol.and (hol.imp __483_3 ((__10600_6 : hol.term B => hol.eq B (g_5 x_4) __10600_6) __482_2)) (hol.imp (hol.not __483_3) ((__10600_6 : hol.term B => hol.eq B (g_5 x_4) __10600_6) __485_1)))) :=
  A : hol.type => B : hol.type => __485_1 : hol.term B => __482_2 : hol.term B => __483_3 : hol.term hol.bool => x_4 : hol.term A => g_5 : hol.term (hol.arr A B) => (B : hol.type => __485_1 : hol.term B => __482_2 : hol.term B => __483_3 : hol.term hol.bool => __484_4 : hol.term (hol.arr B hol.bool) => thm_999 B __485_1 __482_2 __483_3 __484_4) B __485_1 __482_2 __483_3 (__10600_6 : hol.term B => hol.eq B (g_5 x_4) __10600_6).

(; Theorem: |- ((= (\lambda _10600. ((= (g x)) _10600) (((Data.Bool.cond ((= x) a)) (g a)) (((Data.Bool.cond ((= x) a)) d) (g x))))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) (\lambda _10600. ((= (g x)) _10600) (g a)))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) (\lambda _10600. ((= (g x)) _10600) (((Data.Bool.cond ((= x) a)) d) (g x)))))) ;)

(; dict ;)

def thm_1224 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> a_2 : hol.term A -> x_3 : hol.term A -> g_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((__10600_5 : hol.term B => hol.eq B (g_4 x_3) __10600_5) (hol.cond B (hol.eq A x_3 a_2) (g_4 a_2) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3)))) (hol.and (hol.imp (hol.eq A x_3 a_2) ((__10600_5 : hol.term B => hol.eq B (g_4 x_3) __10600_5) (g_4 a_2))) (hol.imp (hol.not (hol.eq A x_3 a_2)) ((__10600_5 : hol.term B => hol.eq B (g_4 x_3) __10600_5) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3)))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => a_2 : hol.term A => x_3 : hol.term A => g_4 : hol.term (hol.arr A B) => (A : hol.type => B : hol.type => __485_1 : hol.term B => __482_2 : hol.term B => __483_3 : hol.term hol.bool => x_4 : hol.term A => g_5 : hol.term (hol.arr A B) => thm_1223 A B __485_1 __482_2 __483_3 x_4 g_5) A B (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3)) (g_4 a_2) (hol.eq A x_3 a_2) x_3 g_4.

(; Theorem: |- ((= ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (((Data.Bool.cond ((= x) a)) d) (g x))))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= (g x)) (g a)))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) (((Data.Bool.cond ((= x) a)) d) (g x)))))) ;)

(; dict ;)

def thm_1225 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> a_2 : hol.term A -> x_3 : hol.term A -> g_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_2) (g_4 a_2) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3)))) (hol.and (hol.imp (hol.eq A x_3 a_2) (hol.eq B (g_4 x_3) (g_4 a_2))) (hol.imp (hol.not (hol.eq A x_3 a_2)) (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3)))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => a_2 : hol.term A => x_3 : hol.term A => g_4 : hol.term (hol.arr A B) => hol.EQ_MP (hol.eq hol.bool ((__10600_5 : hol.term B => hol.eq B (g_4 x_3) __10600_5) (hol.cond B (hol.eq A x_3 a_2) (g_4 a_2) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3)))) (hol.and (hol.imp (hol.eq A x_3 a_2) ((__10600_5 : hol.term B => hol.eq B (g_4 x_3) __10600_5) (g_4 a_2))) (hol.imp (hol.not (hol.eq A x_3 a_2)) ((__10600_5 : hol.term B => hol.eq B (g_4 x_3) __10600_5) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3)))))) (hol.eq hol.bool (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_2) (g_4 a_2) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3)))) (hol.and (hol.imp (hol.eq A x_3 a_2) (hol.eq B (g_4 x_3) (g_4 a_2))) (hol.imp (hol.not (hol.eq A x_3 a_2)) (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3)))))) (thm_1222 A B d_1 a_2 x_3 g_4) (thm_1224 A B d_1 a_2 x_3 g_4).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= (g x)) (g a)))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) (((Data.Bool.cond ((= x) a)) d) (g x)))))) ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (((Data.Bool.cond ((= x) a)) d) (g x))))) ;)

(; dict ;)

def thm_1226 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> a_3 : hol.term A -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (hol.imp (hol.eq A x_4 a_3) (hol.eq B (g_2 x_4) (g_2 a_3))) (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (g_2 x_4) (hol.cond B (hol.eq A x_4 a_3) d_1 (g_2 x_4))))) (hol.eq B (g_2 x_4) (hol.cond B (hol.eq A x_4 a_3) (g_2 a_3) (hol.cond B (hol.eq A x_4 a_3) d_1 (g_2 x_4))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => a_3 : hol.term A => x_4 : hol.term A => hol.SYM hol.bool (hol.eq B (g_2 x_4) (hol.cond B (hol.eq A x_4 a_3) (g_2 a_3) (hol.cond B (hol.eq A x_4 a_3) d_1 (g_2 x_4)))) (hol.and (hol.imp (hol.eq A x_4 a_3) (hol.eq B (g_2 x_4) (g_2 a_3))) (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (g_2 x_4) (hol.cond B (hol.eq A x_4 a_3) d_1 (g_2 x_4))))) (thm_1225 A B d_1 a_3 x_4 g_2).

(; Theorem: |- ((= ((= (g x)) (g a))) ((= (g x)) (g a))) ;)

(; dict ;)

def thm_1227 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B (g_3 x_2) (g_3 a_1)) (hol.eq B (g_3 x_2) (g_3 a_1))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.eq B (g_3 x_2) (g_3 a_1)).

(; Theorem: |- ((= ((= (g x)) (g a))) ((= (g x)) (g a))) ;)

(; dict ;)

def thm_1228 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B (g_3 x_2) (g_3 a_1)) (hol.eq B (g_3 x_2) (g_3 a_1))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hol.SYM hol.bool (hol.eq B (g_3 x_2) (g_3 a_1)) (hol.eq B (g_3 x_2) (g_3 a_1)) (thm_1227 A B a_1 x_2 g_3).

(; Theorem: |- ((= (g x)) (g a)) ;)

(; dict ;)

def thm_1229 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq A x_2 a_1) -> hol.proof (hol.eq B (g_3 x_2) (g_3 a_1)) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq A x_2 a_1) => hol.APP_THM A B g_3 g_3 x_2 a_1 (thm_816 B A g_3) (thm_1004 A a_1 x_2 hyp_1).

(; Theorem: |- ((= (= (g x))) (= (g a))) ;)

(; dict ;)

def thm_1230 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq A x_2 a_1) -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B (g_3 x_2)) (hol.eq B (g_3 a_1))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq A x_2 a_1) => hol.APP_THM B (hol.arr B hol.bool) (hol.eq B) (hol.eq B) (g_3 x_2) (g_3 a_1) (thm_331 B) (thm_1229 A B a_1 x_2 g_3 hyp_1).

(; Theorem: |- ((= (g a)) (g a)) ;)

(; dict ;)

def thm_1231 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq B (g_2 a_1) (g_2 a_1)) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => g_2 : hol.term (hol.arr A B) => hol.REFL B (g_2 a_1).

(; Theorem: |- ((= ((= (g x)) (g a))) ((= (g a)) (g a))) ;)

(; dict ;)

def thm_1232 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq A x_2 a_1) -> hol.proof (hol.eq hol.bool (hol.eq B (g_3 x_2) (g_3 a_1)) (hol.eq B (g_3 a_1) (g_3 a_1))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq A x_2 a_1) => hol.APP_THM B hol.bool (hol.eq B (g_3 x_2)) (hol.eq B (g_3 a_1)) (g_3 a_1) (g_3 a_1) (thm_1230 A B a_1 x_2 g_3 hyp_1) (thm_1231 A B a_1 g_3).

(; Theorem: |- ((= ((= x) x)) Data.Bool.T) ;)

(; dict ;)

def thm_1233 : B : hol.type -> x_1 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq B x_1 x_1) hol.true) :=
  B : hol.type => x_1 : hol.term B => (A : hol.type => x_1 : hol.term A => thm_349 A x_1) B x_1.

(; Theorem: |- ((= ((= (g a)) (g a))) Data.Bool.T) ;)

(; dict ;)

def thm_1234 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B (g_2 a_1) (g_2 a_1)) hol.true) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => g_2 : hol.term (hol.arr A B) => (B : hol.type => x_1 : hol.term B => thm_1233 B x_1) B (g_2 a_1).

(; Theorem: |- ((= ((= (g x)) (g a))) Data.Bool.T) ;)

(; dict ;)

def thm_1235 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq A x_2 a_1) -> hol.proof (hol.eq hol.bool (hol.eq B (g_3 x_2) (g_3 a_1)) hol.true) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq A x_2 a_1) => hol.TRANS hol.bool (hol.eq B (g_3 x_2) (g_3 a_1)) (hol.eq B (g_3 a_1) (g_3 a_1)) hol.true (thm_1232 A B a_1 x_2 g_3 hyp_1) (thm_1234 A B a_1 g_3).

(; Theorem: |- ((= Data.Bool.T) ((= (g x)) (g a))) ;)

(; dict ;)

def thm_1236 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq A x_2 a_1) -> hol.proof (hol.eq hol.bool hol.true (hol.eq B (g_3 x_2) (g_3 a_1))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq A x_2 a_1) => hol.SYM hol.bool (hol.eq B (g_3 x_2) (g_3 a_1)) hol.true (thm_1235 A B a_1 x_2 g_3 hyp_1).

(; Theorem: |- ((= (g x)) (g a)) ;)

(; dict ;)

def thm_1237 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq A x_2 a_1) -> hol.proof (hol.eq B (g_3 x_2) (g_3 a_1)) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq A x_2 a_1) => hol.PROVE_HYP (hol.eq A x_2 a_1) (hol.eq B (g_3 x_2) (g_3 a_1)) (thm_1004 A a_1 x_2 hyp_1) (hyp_2 : hol.proof (hol.eq A x_2 a_1) => hol.EQ_MP (hol.eq B (g_3 x_2) (g_3 a_1)) (hol.eq B (g_3 x_2) (g_3 a_1)) (thm_1228 A B a_1 x_2 g_3) (hol.EQ_MP hol.true (hol.eq B (g_3 x_2) (g_3 a_1)) (thm_1236 A B a_1 x_2 g_3 hyp_2) thm_10)).

(; Theorem: |- ((Data.Bool.==> ((= x) a)) ((= (g x)) (g a))) ;)

(; dict ;)

def thm_1238 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> a_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.imp (hol.eq A x_3 a_2) (hol.eq B (g_1 x_3) (g_1 a_2))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => a_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_3 a_2) => thm_1237 A B a_2 x_3 g_1 hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) (((Data.Bool.cond ((= x) a)) d) (g x))))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= (g x)) (g a)))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) (((Data.Bool.cond ((= x) a)) d) (g x)))))) ;)

(; dict ;)

def thm_1239 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> a_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.imp (hol.eq A x_4 a_3) (hol.eq B (g_2 x_4) (g_2 a_3))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (g_2 x_4) (hol.cond B (hol.eq A x_4 a_3) d_1 (g_2 x_4)))) (hol.and (hol.imp (hol.eq A x_4 a_3) (hol.eq B (g_2 x_4) (g_2 a_3))) (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (g_2 x_4) (hol.cond B (hol.eq A x_4 a_3) d_1 (g_2 x_4)))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => a_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.imp (hol.eq A x_4 a_3) (hol.eq B (g_2 x_4) (g_2 a_3))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.imp (hol.eq A x_4 a_3) (hol.eq B (g_2 x_4) (g_2 a_3))) (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (g_2 x_4) (hol.cond B (hol.eq A x_4 a_3) d_1 (g_2 x_4)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) (((Data.Bool.cond ((= x) a)) d) (g x))))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= (g x)) (g a)))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) (((Data.Bool.cond ((= x) a)) d) (g x)))))) ;)

(; dict ;)

def thm_1240 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> a_3 : hol.term A -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (g_2 x_4) (hol.cond B (hol.eq A x_4 a_3) d_1 (g_2 x_4)))) (hol.and (hol.imp (hol.eq A x_4 a_3) (hol.eq B (g_2 x_4) (g_2 a_3))) (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (g_2 x_4) (hol.cond B (hol.eq A x_4 a_3) d_1 (g_2 x_4)))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => a_3 : hol.term A => x_4 : hol.term A => hol.PROVE_HYP (hol.imp (hol.eq A x_4 a_3) (hol.eq B (g_2 x_4) (g_2 a_3))) (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (g_2 x_4) (hol.cond B (hol.eq A x_4 a_3) d_1 (g_2 x_4)))) (hol.and (hol.imp (hol.eq A x_4 a_3) (hol.eq B (g_2 x_4) (g_2 a_3))) (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (g_2 x_4) (hol.cond B (hol.eq A x_4 a_3) d_1 (g_2 x_4)))))) (thm_1238 B A g_2 a_3 x_4) (hyp_1 : hol.proof (hol.imp (hol.eq A x_4 a_3) (hol.eq B (g_2 x_4) (g_2 a_3))) => thm_1239 B A d_1 g_2 a_3 x_4 hyp_1).

(; Theorem: |- ((= (= (\lambda _10604. ((= (g x)) (((Data.Bool.cond _10604) d) (g x))) ((= x) a)))) (= (\lambda _10604. ((= (g x)) (((Data.Bool.cond _10604) d) (g x))) ((= x) a)))) ;)

(; dict ;)

def thm_1241 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> x_3 : hol.term A -> g_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10604_5 : hol.term hol.bool => hol.eq B (g_4 x_3) (hol.cond B __10604_5 d_2 (g_4 x_3))) (hol.eq A x_3 a_1))) (hol.eq hol.bool ((__10604_5 : hol.term hol.bool => hol.eq B (g_4 x_3) (hol.cond B __10604_5 d_2 (g_4 x_3))) (hol.eq A x_3 a_1)))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => d_2 : hol.term B => x_3 : hol.term A => g_4 : hol.term (hol.arr A B) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10604_5 : hol.term hol.bool => hol.eq B (g_4 x_3) (hol.cond B __10604_5 d_2 (g_4 x_3))) (hol.eq A x_3 a_1))).

(; Theorem: |- ((= (\lambda _10604. ((= (g x)) (((Data.Bool.cond _10604) d) (g x))) Data.Bool.F)) ((= (g x)) (((Data.Bool.cond Data.Bool.F) d) (g x)))) ;)

(; dict ;)

def thm_1242 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((__10604_4 : hol.term hol.bool => hol.eq B (g_3 x_2) (hol.cond B __10604_4 d_1 (g_3 x_2))) hol.false) (hol.eq B (g_3 x_2) (hol.cond B hol.false d_1 (g_3 x_2)))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hol.BETA_CONV hol.bool hol.bool (__10604_4 : hol.term hol.bool => hol.eq B (g_3 x_2) (hol.cond B __10604_4 d_1 (g_3 x_2))) hol.false.

(; Theorem: |- ((= ((= (\lambda _10604. ((= (g x)) (((Data.Bool.cond _10604) d) (g x))) ((= x) a))) (\lambda _10604. ((= (g x)) (((Data.Bool.cond _10604) d) (g x))) Data.Bool.F))) ((= (\lambda _10604. ((= (g x)) (((Data.Bool.cond _10604) d) (g x))) ((= x) a))) ((= (g x)) (((Data.Bool.cond Data.Bool.F) d) (g x))))) ;)

(; dict ;)

def thm_1243 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> x_3 : hol.term A -> g_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10604_5 : hol.term hol.bool => hol.eq B (g_4 x_3) (hol.cond B __10604_5 d_2 (g_4 x_3))) (hol.eq A x_3 a_1)) ((__10604_5 : hol.term hol.bool => hol.eq B (g_4 x_3) (hol.cond B __10604_5 d_2 (g_4 x_3))) hol.false)) (hol.eq hol.bool ((__10604_5 : hol.term hol.bool => hol.eq B (g_4 x_3) (hol.cond B __10604_5 d_2 (g_4 x_3))) (hol.eq A x_3 a_1)) (hol.eq B (g_4 x_3) (hol.cond B hol.false d_2 (g_4 x_3))))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => d_2 : hol.term B => x_3 : hol.term A => g_4 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10604_5 : hol.term hol.bool => hol.eq B (g_4 x_3) (hol.cond B __10604_5 d_2 (g_4 x_3))) (hol.eq A x_3 a_1))) (hol.eq hol.bool ((__10604_5 : hol.term hol.bool => hol.eq B (g_4 x_3) (hol.cond B __10604_5 d_2 (g_4 x_3))) (hol.eq A x_3 a_1))) ((__10604_5 : hol.term hol.bool => hol.eq B (g_4 x_3) (hol.cond B __10604_5 d_2 (g_4 x_3))) hol.false) (hol.eq B (g_4 x_3) (hol.cond B hol.false d_2 (g_4 x_3))) (thm_1241 A B a_1 d_2 x_3 g_4) (thm_1242 A B d_2 x_3 g_4).

(; Theorem: |- ((= (\lambda _10604. ((= (g x)) (((Data.Bool.cond _10604) d) (g x))) ((= x) a))) ((= (g x)) (((Data.Bool.cond ((= x) a)) d) (g x)))) ;)

(; dict ;)

def thm_1244 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> x_3 : hol.term A -> g_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((__10604_5 : hol.term hol.bool => hol.eq B (g_4 x_3) (hol.cond B __10604_5 d_2 (g_4 x_3))) (hol.eq A x_3 a_1)) (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_1) d_2 (g_4 x_3)))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => d_2 : hol.term B => x_3 : hol.term A => g_4 : hol.term (hol.arr A B) => hol.BETA_CONV hol.bool hol.bool (__10604_5 : hol.term hol.bool => hol.eq B (g_4 x_3) (hol.cond B __10604_5 d_2 (g_4 x_3))) (hol.eq A x_3 a_1).

(; Theorem: |- ((= (= (\lambda _10604. ((= (g x)) (((Data.Bool.cond _10604) d) (g x))) ((= x) a)))) (= ((= (g x)) (((Data.Bool.cond ((= x) a)) d) (g x))))) ;)

(; dict ;)

def thm_1245 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> x_3 : hol.term A -> g_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10604_5 : hol.term hol.bool => hol.eq B (g_4 x_3) (hol.cond B __10604_5 d_2 (g_4 x_3))) (hol.eq A x_3 a_1))) (hol.eq hol.bool (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_1) d_2 (g_4 x_3))))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => d_2 : hol.term B => x_3 : hol.term A => g_4 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__10604_5 : hol.term hol.bool => hol.eq B (g_4 x_3) (hol.cond B __10604_5 d_2 (g_4 x_3))) (hol.eq A x_3 a_1)) (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_1) d_2 (g_4 x_3))) thm_77 (thm_1244 A B a_1 d_2 x_3 g_4).

(; Theorem: |- ((= ((= (g x)) (((Data.Bool.cond Data.Bool.F) d) (g x)))) ((= (g x)) (((Data.Bool.cond Data.Bool.F) d) (g x)))) ;)

(; dict ;)

def thm_1246 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B (g_3 x_2) (hol.cond B hol.false d_1 (g_3 x_2))) (hol.eq B (g_3 x_2) (hol.cond B hol.false d_1 (g_3 x_2)))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.eq B (g_3 x_2) (hol.cond B hol.false d_1 (g_3 x_2))).

(; Theorem: |- ((= ((= (\lambda _10604. ((= (g x)) (((Data.Bool.cond _10604) d) (g x))) ((= x) a))) ((= (g x)) (((Data.Bool.cond Data.Bool.F) d) (g x))))) ((= ((= (g x)) (((Data.Bool.cond ((= x) a)) d) (g x)))) ((= (g x)) (((Data.Bool.cond Data.Bool.F) d) (g x))))) ;)

(; dict ;)

def thm_1247 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> x_3 : hol.term A -> g_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10604_5 : hol.term hol.bool => hol.eq B (g_4 x_3) (hol.cond B __10604_5 d_2 (g_4 x_3))) (hol.eq A x_3 a_1)) (hol.eq B (g_4 x_3) (hol.cond B hol.false d_2 (g_4 x_3)))) (hol.eq hol.bool (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_1) d_2 (g_4 x_3))) (hol.eq B (g_4 x_3) (hol.cond B hol.false d_2 (g_4 x_3))))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => d_2 : hol.term B => x_3 : hol.term A => g_4 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10604_5 : hol.term hol.bool => hol.eq B (g_4 x_3) (hol.cond B __10604_5 d_2 (g_4 x_3))) (hol.eq A x_3 a_1))) (hol.eq hol.bool (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_1) d_2 (g_4 x_3)))) (hol.eq B (g_4 x_3) (hol.cond B hol.false d_2 (g_4 x_3))) (hol.eq B (g_4 x_3) (hol.cond B hol.false d_2 (g_4 x_3))) (thm_1245 A B a_1 d_2 x_3 g_4) (thm_1246 A B d_2 x_3 g_4).

(; Theorem: |- ((= ((= (\lambda _10604. ((= (g x)) (((Data.Bool.cond _10604) d) (g x))) ((= x) a))) (\lambda _10604. ((= (g x)) (((Data.Bool.cond _10604) d) (g x))) Data.Bool.F))) ((= ((= (g x)) (((Data.Bool.cond ((= x) a)) d) (g x)))) ((= (g x)) (((Data.Bool.cond Data.Bool.F) d) (g x))))) ;)

(; dict ;)

def thm_1248 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> x_3 : hol.term A -> g_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10604_5 : hol.term hol.bool => hol.eq B (g_4 x_3) (hol.cond B __10604_5 d_2 (g_4 x_3))) (hol.eq A x_3 a_1)) ((__10604_5 : hol.term hol.bool => hol.eq B (g_4 x_3) (hol.cond B __10604_5 d_2 (g_4 x_3))) hol.false)) (hol.eq hol.bool (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_1) d_2 (g_4 x_3))) (hol.eq B (g_4 x_3) (hol.cond B hol.false d_2 (g_4 x_3))))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => d_2 : hol.term B => x_3 : hol.term A => g_4 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.eq hol.bool ((__10604_5 : hol.term hol.bool => hol.eq B (g_4 x_3) (hol.cond B __10604_5 d_2 (g_4 x_3))) (hol.eq A x_3 a_1)) ((__10604_5 : hol.term hol.bool => hol.eq B (g_4 x_3) (hol.cond B __10604_5 d_2 (g_4 x_3))) hol.false)) (hol.eq hol.bool ((__10604_5 : hol.term hol.bool => hol.eq B (g_4 x_3) (hol.cond B __10604_5 d_2 (g_4 x_3))) (hol.eq A x_3 a_1)) (hol.eq B (g_4 x_3) (hol.cond B hol.false d_2 (g_4 x_3)))) (hol.eq hol.bool (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_1) d_2 (g_4 x_3))) (hol.eq B (g_4 x_3) (hol.cond B hol.false d_2 (g_4 x_3)))) (thm_1243 A B a_1 d_2 x_3 g_4) (thm_1247 A B a_1 d_2 x_3 g_4).

(; Theorem: |- ((= \lambda _10604. ((= (g x)) (((Data.Bool.cond _10604) d) (g x)))) \lambda _10604. ((= (g x)) (((Data.Bool.cond _10604) d) (g x)))) ;)

(; dict ;)

def thm_1249 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (__10604_4 : hol.term hol.bool => hol.eq B (g_3 x_2) (hol.cond B __10604_4 d_1 (g_3 x_2))) (__10604_4 : hol.term hol.bool => hol.eq B (g_3 x_2) (hol.cond B __10604_4 d_1 (g_3 x_2)))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hol.REFL (hol.arr hol.bool hol.bool) (__10604_4 : hol.term hol.bool => hol.eq B (g_3 x_2) (hol.cond B __10604_4 d_1 (g_3 x_2))).

(; Theorem: |- ((= (\lambda _10604. ((= (g x)) (((Data.Bool.cond _10604) d) (g x))) ((= x) a))) (\lambda _10604. ((= (g x)) (((Data.Bool.cond _10604) d) (g x))) Data.Bool.F)) ;)

(; dict ;)

def thm_1250 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> x_3 : hol.term A -> g_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_1)) -> hol.proof (hol.eq hol.bool ((__10604_5 : hol.term hol.bool => hol.eq B (g_4 x_3) (hol.cond B __10604_5 d_2 (g_4 x_3))) (hol.eq A x_3 a_1)) ((__10604_5 : hol.term hol.bool => hol.eq B (g_4 x_3) (hol.cond B __10604_5 d_2 (g_4 x_3))) hol.false)) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => d_2 : hol.term B => x_3 : hol.term A => g_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_1)) => hol.APP_THM hol.bool hol.bool (__10604_5 : hol.term hol.bool => hol.eq B (g_4 x_3) (hol.cond B __10604_5 d_2 (g_4 x_3))) (__10604_5 : hol.term hol.bool => hol.eq B (g_4 x_3) (hol.cond B __10604_5 d_2 (g_4 x_3))) (hol.eq A x_3 a_1) hol.false (thm_1249 A B d_2 x_3 g_4) (thm_1123 A a_1 x_3 hyp_1).

(; Theorem: |- ((= ((= (g x)) (((Data.Bool.cond ((= x) a)) d) (g x)))) ((= (g x)) (((Data.Bool.cond Data.Bool.F) d) (g x)))) ;)

(; dict ;)

def thm_1251 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> a_2 : hol.term A -> x_3 : hol.term A -> g_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_2)) -> hol.proof (hol.eq hol.bool (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3))) (hol.eq B (g_4 x_3) (hol.cond B hol.false d_1 (g_4 x_3)))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => a_2 : hol.term A => x_3 : hol.term A => g_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_2)) => hol.EQ_MP (hol.eq hol.bool ((__10604_5 : hol.term hol.bool => hol.eq B (g_4 x_3) (hol.cond B __10604_5 d_1 (g_4 x_3))) (hol.eq A x_3 a_2)) ((__10604_5 : hol.term hol.bool => hol.eq B (g_4 x_3) (hol.cond B __10604_5 d_1 (g_4 x_3))) hol.false)) (hol.eq hol.bool (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3))) (hol.eq B (g_4 x_3) (hol.cond B hol.false d_1 (g_4 x_3)))) (thm_1248 A B a_2 d_1 x_3 g_4) (thm_1250 A B a_2 d_1 x_3 g_4 hyp_1).

(; Theorem: |- ((= ((= (g x)) (((Data.Bool.cond Data.Bool.F) d) (g x)))) ((= (g x)) (((Data.Bool.cond ((= x) a)) d) (g x)))) ;)

(; dict ;)

def thm_1252 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> x_3 : hol.term A -> g_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_1)) -> hol.proof (hol.eq hol.bool (hol.eq B (g_4 x_3) (hol.cond B hol.false d_2 (g_4 x_3))) (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_1) d_2 (g_4 x_3)))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => d_2 : hol.term B => x_3 : hol.term A => g_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_1)) => hol.SYM hol.bool (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_1) d_2 (g_4 x_3))) (hol.eq B (g_4 x_3) (hol.cond B hol.false d_2 (g_4 x_3))) (thm_1251 A B d_2 a_1 x_3 g_4 hyp_1).

(; Theorem: |- ((= (((Data.Bool.cond Data.Bool.F) d) (g x))) (g x)) ;)

(; dict ;)

def thm_1253 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> hol.proof (hol.eq B (hol.cond B hol.false d_3 (g_2 x_1)) (g_2 x_1)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A B) => d_3 : hol.term B => (B : hol.type => t2_1 : hol.term B => t1_2 : hol.term B => thm_1128 B t2_1 t1_2) B (g_2 x_1) d_3.

(; Theorem: |- ((= ((= (g x)) (((Data.Bool.cond Data.Bool.F) d) (g x)))) ((= (g x)) (g x))) ;)

(; dict ;)

def thm_1254 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B (g_3 x_2) (hol.cond B hol.false d_1 (g_3 x_2))) (hol.eq B (g_3 x_2) (g_3 x_2))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hol.APP_THM B hol.bool (hol.eq B (g_3 x_2)) (hol.eq B (g_3 x_2)) (hol.cond B hol.false d_1 (g_3 x_2)) (g_3 x_2) (thm_330 A B x_2 g_3) (thm_1253 A B x_2 g_3 d_1).

(; Theorem: |- ((= ((= (g x)) (g x))) Data.Bool.T) ;)

(; dict ;)

def thm_1255 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B (g_2 x_1) (g_2 x_1)) hol.true) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A B) => (B : hol.type => x_1 : hol.term B => thm_1233 B x_1) B (g_2 x_1).

(; Theorem: |- ((= ((= (g x)) (((Data.Bool.cond Data.Bool.F) d) (g x)))) Data.Bool.T) ;)

(; dict ;)

def thm_1256 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B (g_3 x_2) (hol.cond B hol.false d_1 (g_3 x_2))) hol.true) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.eq B (g_3 x_2) (hol.cond B hol.false d_1 (g_3 x_2))) (hol.eq B (g_3 x_2) (g_3 x_2)) hol.true (thm_1254 A B d_1 x_2 g_3) (thm_1255 A B x_2 g_3).

(; Theorem: |- ((= Data.Bool.T) ((= (g x)) (((Data.Bool.cond Data.Bool.F) d) (g x)))) ;)

(; dict ;)

def thm_1257 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool hol.true (hol.eq B (g_3 x_2) (hol.cond B hol.false d_1 (g_3 x_2)))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hol.SYM hol.bool (hol.eq B (g_3 x_2) (hol.cond B hol.false d_1 (g_3 x_2))) hol.true (thm_1256 A B d_1 x_2 g_3).

(; Theorem: |- ((= (g x)) (((Data.Bool.cond Data.Bool.F) d) (g x))) ;)

(; dict ;)

def thm_1258 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq B (g_3 x_2) (hol.cond B hol.false d_1 (g_3 x_2))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hol.EQ_MP hol.true (hol.eq B (g_3 x_2) (hol.cond B hol.false d_1 (g_3 x_2))) (thm_1257 A B d_1 x_2 g_3) thm_10.

(; Theorem: |- ((= (g x)) (((Data.Bool.cond ((= x) a)) d) (g x))) ;)

(; dict ;)

def thm_1259 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> a_2 : hol.term A -> x_3 : hol.term A -> g_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_2)) -> hol.proof (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => a_2 : hol.term A => x_3 : hol.term A => g_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_2)) => hol.EQ_MP (hol.eq B (g_4 x_3) (hol.cond B hol.false d_1 (g_4 x_3))) (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3))) (thm_1252 A B a_2 d_1 x_3 g_4 hyp_1) (thm_1258 A B d_1 x_3 g_4).

(; Theorem: |- ((= (g x)) (((Data.Bool.cond ((= x) a)) d) (g x))) ;)

(; dict ;)

def thm_1260 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> a_2 : hol.term A -> x_3 : hol.term A -> g_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_2)) -> hol.proof (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => a_2 : hol.term A => x_3 : hol.term A => g_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_2)) => hol.PROVE_HYP (hol.not (hol.eq A x_3 a_2)) (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3))) (thm_1118 A a_2 x_3 hyp_1) (hyp_2 : hol.proof (hol.not (hol.eq A x_3 a_2)) => thm_1259 A B d_1 a_2 x_3 g_4 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) (((Data.Bool.cond ((= x) a)) d) (g x)))) ;)

(; dict ;)

def thm_1261 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> a_3 : hol.term A -> x_4 : hol.term A -> hol.proof (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (g_2 x_4) (hol.cond B (hol.eq A x_4 a_3) d_1 (g_2 x_4)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => a_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_4 a_3)) => thm_1260 A B d_1 a_3 x_4 g_2 hyp_1.

(; Theorem: |- ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= (g x)) (g a)))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) (((Data.Bool.cond ((= x) a)) d) (g x))))) ;)

(; dict ;)

def thm_1262 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> a_3 : hol.term A -> x_4 : hol.term A -> hol.proof (hol.and (hol.imp (hol.eq A x_4 a_3) (hol.eq B (g_2 x_4) (g_2 a_3))) (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (g_2 x_4) (hol.cond B (hol.eq A x_4 a_3) d_1 (g_2 x_4))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => a_3 : hol.term A => x_4 : hol.term A => hol.EQ_MP (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (g_2 x_4) (hol.cond B (hol.eq A x_4 a_3) d_1 (g_2 x_4)))) (hol.and (hol.imp (hol.eq A x_4 a_3) (hol.eq B (g_2 x_4) (g_2 a_3))) (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (g_2 x_4) (hol.cond B (hol.eq A x_4 a_3) d_1 (g_2 x_4))))) (thm_1240 B A d_1 g_2 a_3 x_4) (thm_1261 B A d_1 g_2 a_3 x_4).

(; Theorem: |- ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (((Data.Bool.cond ((= x) a)) d) (g x)))) ;)

(; dict ;)

def thm_1263 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> a_2 : hol.term A -> x_3 : hol.term A -> g_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_2) (g_4 a_2) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3)))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => a_2 : hol.term A => x_3 : hol.term A => g_4 : hol.term (hol.arr A B) => hol.EQ_MP (hol.and (hol.imp (hol.eq A x_3 a_2) (hol.eq B (g_4 x_3) (g_4 a_2))) (hol.imp (hol.not (hol.eq A x_3 a_2)) (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3))))) (hol.eq B (g_4 x_3) (hol.cond B (hol.eq A x_3 a_2) (g_4 a_2) (hol.cond B (hol.eq A x_3 a_2) d_1 (g_4 x_3)))) (thm_1226 B A d_1 g_4 a_2 x_3) (thm_1262 B A d_1 g_4 a_2 x_3).

(; Theorem: |- (Data.Bool.! \lambda x. ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (((Data.Bool.cond ((= x) a)) d) (g x))))) ;)

(; dict ;)

def thm_1264 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> a_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.forall A (x_4 : hol.term A => hol.eq B (g_3 x_4) (hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) (hol.cond B (hol.eq A x_4 a_2) d_1 (g_3 x_4))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => a_2 : hol.term A => g_3 : hol.term (hol.arr A B) => x_4 : hol.term A => thm_1263 A B d_1 a_2 x_4 g_3.

(; Theorem: |- ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x))) ;)

(; dict ;)

def thm_1265 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> a_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A B) g_3 (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_2) d_1 (g_3 x_5)) x_4))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => a_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hol.EQ_MP (hol.forall A (x_4 : hol.term A => hol.eq B (g_3 x_4) (hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) (hol.cond B (hol.eq A x_4 a_2) d_1 (g_3 x_4))))) (hol.eq (hol.arr A B) g_3 (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_2) d_1 (g_3 x_5)) x_4))) (thm_1210 B A d_1 a_2 g_3) (hol.EQ_MP (hol.forall A (x_4 : hol.term A => hol.eq B (g_3 x_4) (hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) (hol.cond B (hol.eq A x_4 a_2) d_1 (g_3 x_4))))) (hol.forall A (x_4 : hol.term A => hol.eq B (g_3 x_4) (hol.cond B (hol.eq A x_4 a_2) (g_3 a_2) (hol.cond B (hol.eq A x_4 a_2) d_1 (g_3 x_4))))) (thm_1213 B A d_1 a_2 g_3) (thm_1264 B A d_1 a_2 g_3)).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) d)))))) ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)))) ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) d))))))) ;)

(; dict ;)

def thm_1266 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq (hol.arr A B) g_5 (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_5 a_4) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6))) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6) d_1))))) (hol.and (hol.eq (hol.arr A B) g_5 (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_5 a_4) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6) d_1))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq (hol.arr A B) g_5 (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_5 a_4) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.eq (hol.arr A B) g_5 (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_5 a_4) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6) d_1))))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) d)))))) ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)))) ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) d))))))) ;)

(; dict ;)

def thm_1267 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6) d_1))))) (hol.and (hol.eq (hol.arr A B) g_5 (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_5 a_4) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6) d_1))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hol.PROVE_HYP (hol.eq (hol.arr A B) g_5 (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_5 a_4) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6))) (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6) d_1))))) (hol.and (hol.eq (hol.arr A B) g_5 (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_5 a_4) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6) d_1))))))) (thm_1265 B A d_1 a_4 g_5) (hyp_1 : hol.proof (hol.eq (hol.arr A B) g_5 (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_5 a_4) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6))) => thm_1266 A B d_1 s_2 t_3 a_4 g_5 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t))) ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t))) ;)

(; dict ;)

def thm_1268 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> g_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> x_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_5) t_1)) (hol.imp (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_5) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => g_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => x_5 : hol.term A => hol.REFL hol.bool (hol.imp (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_5) t_1)).

(; Theorem: |- ((= ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t))) ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t))) ;)

(; dict ;)

def thm_1269 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> g_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> x_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_5) t_1)) (hol.imp (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_5) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => g_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => x_5 : hol.term A => hol.TRANS hol.bool (hol.imp (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_5) t_1)) (hol.imp (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_5) t_1)) (hol.imp (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_5) t_1)) (thm_1268 B A t_1 g_2 s_3 a_4 x_5) (thm_1268 B A t_1 g_2 s_3 a_4 x_5).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)) ;)

(; dict ;)

def thm_1270 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> g_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_6) t_1))) -> hol.proof (hol.imp (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_5) t_1)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => g_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_6) t_1))) => thm_1186 B A t_1 g_2 s_3 a_4 hyp_1 x_5.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.\/ ((= a) a)) ((Set.member a) s))) ((Set.member (g a)) t)) ;)

(; dict ;)

def thm_1271 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> g_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_5) t_1))) -> hol.proof (hol.imp (hol.or (hol.eq A a_4 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 a_4) t_1)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => g_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_5) t_1))) => (B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => g_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_6) t_1))) => (B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => g_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_6) t_1))) => hol.EQ_MP (hol.imp (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_5) t_1)) (hol.imp (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_5) t_1)) (thm_1269 B A t_1 g_2 s_3 a_4 x_5) (thm_1270 B A t_1 g_2 s_3 a_4 x_5 hyp_1)) B A t_1 g_2 s_3 a_4 x_5 hyp_1) B A t_1 g_2 s_3 a_4 a_4 hyp_1.

(; Theorem: |- ((= Data.Bool.\/) Data.Bool.\/) ;)

(; dict ;)

def thm_1272 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.or hol.or) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.or.

(; Theorem: |- ((= (Data.Bool.\/ ((= a) a))) (Data.Bool.\/ Data.Bool.T)) ;)

(; dict ;)

def thm_1273 : A : hol.type -> a_1 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.eq A a_1 a_1)) (hol.or hol.true)) :=
  A : hol.type => a_1 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.eq A a_1 a_1) hol.true thm_1272 (thm_1045 A a_1).

(; Theorem: |- ((= ((Set.member a) s)) ((Set.member a) s)) ;)

(; dict ;)

def thm_1274 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => hol.REFL hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((= a) a)) ((Set.member a) s))) ((Data.Bool.\/ Data.Bool.T) ((Set.member a) s))) ;)

(; dict ;)

def thm_1275 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.or (hol.eq A a_2 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1)) (hol.or hol.true (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.or (hol.eq A a_2 a_2)) (hol.or hol.true) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) (thm_1273 A a_2) (thm_1274 A s_1 a_2).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_1276 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or hol.true t_1) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_1277 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (thm_1276 t_1) (thm_1276 t_1).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) ;)

(; dict ;)

def thm_1278 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) ;)

(; dict ;)

def thm_1279 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) thm_1278 thm_1278.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))))) ;)

(; dict ;)

def thm_1280 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) thm_123 thm_1279.

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T) ;)

(; dict ;)

def thm_1281 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.true t_1) hol.true) :=
  t_1 : hol.term hol.bool => thm_38 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) ;)

(; dict ;)

def thm_1282 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.true t_1) hol.true) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.true t_1) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) ;)

(; dict ;)

def thm_1283 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (thm_1276 t_1) (thm_1281 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.true t_1) hol.true) => thm_1282 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_1284 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or t_1 hol.true) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_1285 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (thm_1284 t_1) (thm_1284 t_1).

(; Theorem: |- ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_1286 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) :=
  t_1 : hol.term hol.bool => thm_39 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))) ;)

(; dict ;)

def thm_1287 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))) ;)

(; dict ;)

def thm_1288 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (thm_1285 t_1) (thm_1286 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) => thm_1287 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ;)

(; dict ;)

def thm_1289 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or hol.false t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ;)

(; dict ;)

def thm_1290 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1) (thm_1289 t_1) (thm_1289 t_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.F) t)) t) ;)

(; dict ;)

def thm_1291 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.false t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_40 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ;)

(; dict ;)

def thm_1292 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.false t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.false t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ;)

(; dict ;)

def thm_1293 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.eq hol.bool (hol.or hol.false t_1) t_1) (thm_1290 t_1) (thm_1291 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or hol.false t_1) t_1) => thm_1292 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ;)

(; dict ;)

def thm_1294 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or t_1 hol.false) t_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ;)

(; dict ;)

def thm_1295 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (thm_1294 t_1) (thm_1294 t_1).

(; Theorem: |- ((= ((Data.Bool.\/ t) Data.Bool.F)) t) ;)

(; dict ;)

def thm_1296 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or t_1 hol.false) t_1) :=
  t_1 : hol.term hol.bool => thm_41 t_1.

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ;)

(; dict ;)

def thm_1297 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.false) t_1) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.false) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1) hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ;)

(; dict ;)

def thm_1298 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.EQ_MP (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (thm_1295 t_1) (thm_1296 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.or t_1 hol.false) t_1) => thm_1297 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) t)) t)) ((= ((Data.Bool.\/ t) t)) t)) ;)

(; dict ;)

def thm_1299 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool.\/ t) t)) t)) ((= ((Data.Bool.\/ t) t)) t)) ;)

(; dict ;)

def thm_1300 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1) (thm_1299 t_1) (thm_1299 t_1).

(; Theorem: |- ((= ((Data.Bool.\/ t) t)) t) ;)

(; dict ;)

def thm_1301 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or t_1 t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_42 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)) ;)

(; dict ;)

def thm_1302 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (thm_1298 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.or t_1 t_1) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1) (thm_1300 t_1) (thm_1301 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))) ;)

(; dict ;)

def thm_1303 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (thm_1293 t_1) (thm_1302 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))) ;)

(; dict ;)

def thm_1304 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (thm_1288 t_1) (thm_1303 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t))))) ;)

(; dict ;)

def thm_1305 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (thm_1283 t_1) (thm_1304 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.\/ Data.Bool.F) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.\/ t) Data.Bool.F)) t)) ((= ((Data.Bool.\/ t) t)) t)))))) ;)

(; dict ;)

def thm_1306 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))))) :=
  t_1 : hol.term hol.bool => thm_1305 t_1.

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T) ;)

(; dict ;)

def thm_1307 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) -> hol.proof (hol.eq hol.bool (hol.or hol.true t_1) hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_208 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1)))) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) hyp_1.

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.T) t)) Data.Bool.T) ;)

(; dict ;)

def thm_1308 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or hol.true t_1) hol.true) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_2) hol.true) (hol.and (hol.eq hol.bool (hol.or t_2 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_2) t_2) (hol.and (hol.eq hol.bool (hol.or t_2 hol.false) t_2) (hol.eq hol.bool (hol.or t_2 t_2) t_2)))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.or hol.true t_2) hol.true) (hol.and (hol.eq hol.bool (hol.or t_2 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_2) t_2) (hol.and (hol.eq hol.bool (hol.or t_2 hol.false) t_2) (hol.eq hol.bool (hol.or t_2 t_2) t_2)))))) thm_1280 thm_1306 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.and (hol.eq hol.bool (hol.or t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.or hol.false t_1) t_1) (hol.and (hol.eq hol.bool (hol.or t_1 hol.false) t_1) (hol.eq hol.bool (hol.or t_1 t_1) t_1))))) => thm_1307 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.T) ((Set.member a) s))) Data.Bool.T) ;)

(; dict ;)

def thm_1309 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.or hol.true (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1)) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (hol.eq hol.bool (hol.or hol.true t_1) hol.true) (thm_1277 t_1) (thm_1308 t_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((= a) a)) ((Set.member a) s))) Data.Bool.T) ;)

(; dict ;)

def thm_1310 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.or (hol.eq A a_2 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1)) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => hol.TRANS hol.bool (hol.or (hol.eq A a_2 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1)) (hol.or hol.true (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1)) hol.true (thm_1275 A s_1 a_2) (thm_1309 A s_1 a_2).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.\/ ((= a) a)) ((Set.member a) s))) ;)

(; dict ;)

def thm_1311 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool hol.true (hol.or (hol.eq A a_2 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => hol.SYM hol.bool (hol.or (hol.eq A a_2 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1)) hol.true (thm_1310 A s_1 a_2).

(; Theorem: |- ((Data.Bool.\/ ((= a) a)) ((Set.member a) s)) ;)

(; dict ;)

def thm_1312 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> hol.proof (hol.or (hol.eq A a_2 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => hol.EQ_MP hol.true (hol.or (hol.eq A a_2 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1)) (thm_1311 A s_1 a_2) thm_10.

(; Theorem: |- ((Set.member (g a)) t) ;)

(; dict ;)

def thm_1313 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> a_3 : hol.term A -> g_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (hol.or (hol.eq A x_5 a_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_5) t_2))) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 a_3) t_2) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => a_3 : hol.term A => g_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (hol.or (hol.eq A x_5 a_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_5) t_2))) => thm_1271 B A t_2 g_4 s_1 a_3 hyp_1 (thm_1312 A s_1 a_3).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) d))))) ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) d)))))) ;)

(; dict ;)

def thm_1314 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> g_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> a_4 : hol.term A -> s_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 a_4) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) d_3)))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 a_4) t_1) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) d_3)))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => g_2 : hol.term (hol.arr A B) => d_3 : hol.term B => a_4 : hol.term A => s_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 a_4) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 a_4) t_1) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) d_3)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) d))))) ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) d)))))) ;)

(; dict ;)

def thm_1315 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> g_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> a_4 : hol.term A -> s_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_6) t_1))) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) d_3)))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 a_4) t_1) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) d_3)))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => g_2 : hol.term (hol.arr A B) => d_3 : hol.term B => a_4 : hol.term A => s_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_6) t_1))) => hol.PROVE_HYP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 a_4) t_1) (hol.eq hol.bool (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) d_3)))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 a_4) t_1) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) d_3)))))) (thm_1313 A B s_5 t_1 a_4 g_2 hyp_1) (hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 a_4) t_1) => thm_1314 B A t_1 g_2 d_3 a_4 s_5 hyp_2).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) t))) \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) t))) ;)

(; dict ;)

def thm_1316 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> g_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> a_4 : hol.term A -> s_5 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1)) (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => g_2 : hol.term (hol.arr A B) => d_3 : hol.term B => a_4 : hol.term A => s_5 : hol.term (Set_2Eset A) => hol.REFL (hol.arr A hol.bool) (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1)).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) t))) \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) t))) ;)

(; dict ;)

def thm_1317 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> g_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> a_4 : hol.term A -> s_5 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1)) (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => g_2 : hol.term (hol.arr A B) => d_3 : hol.term B => a_4 : hol.term A => s_5 : hol.term (Set_2Eset A) => hol.TRANS (hol.arr A hol.bool) (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1)) (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1)) (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1)) (thm_1316 B A t_1 g_2 d_3 a_4 s_5) (thm_1316 B A t_1 g_2 d_3 a_4 s_5).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) t)))) ;)

(; dict ;)

def thm_1318 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> g_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> a_4 : hol.term A -> s_5 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => g_2 : hol.term (hol.arr A B) => d_3 : hol.term B => a_4 : hol.term A => s_5 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1)) (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1)) (thm_95 A) (thm_1317 B A t_1 g_2 d_3 a_4 s_5).

(; Theorem: |- ((= (Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x))) (Set.member (((Data.Bool.cond ((= x) a)) d) (g x)))) ;)

(; dict ;)

def thm_1319 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> a_4 : hol.term A -> hol.proof (hol.eq (hol.arr (Set_2Eset B) hol.bool) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) d_3 (g_2 x_5)) x_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_1 a_4) d_3 (g_2 x_1)))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A B) => d_3 : hol.term B => a_4 : hol.term A => hol.APP_THM B (hol.arr (Set_2Eset B) hol.bool) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool))) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) d_3 (g_2 x_5)) x_1) (hol.cond B (hol.eq A x_1 a_4) d_3 (g_2 x_1)) (thm_935 B) (thm_1199 A B x_1 g_2 d_3 a_4).

(; Theorem: |- ((= ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) t)) ((Set.member (((Data.Bool.cond ((= x) a)) d) (g x))) t)) ;)

(; dict ;)

def thm_1320 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> d_4 : hol.term B -> a_5 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_5) d_4 (g_3 x_6)) x_2) t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_2 a_5) d_4 (g_3 x_2)) t_1)) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => d_4 : hol.term B => a_5 : hol.term A => hol.APP_THM (Set_2Eset B) hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_5) d_4 (g_3 x_6)) x_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_2 a_5) d_4 (g_3 x_2))) t_1 t_1 (thm_1319 A B x_2 g_3 d_4 a_5) (thm_942 B t_1).

(; Theorem: |- ((= ((Set.member (((Data.Bool.cond ((= x) a)) d) (g x))) t)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) t)) ;)

(; dict ;)

def thm_1321 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> g_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> a_4 : hol.term A -> x_5 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_5 a_4) d_3 (g_2 x_5)) t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) d_3 (g_2 x_6)) x_5) t_1)) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => g_2 : hol.term (hol.arr A B) => d_3 : hol.term B => a_4 : hol.term A => x_5 : hol.term A => hol.SYM hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) d_3 (g_2 x_6)) x_5) t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_5 a_4) d_3 (g_2 x_5)) t_1) (thm_1320 A B t_1 x_5 g_2 d_3 a_4).

(; Theorem: |- ((= (\lambda _10606. ((Set.member _10606) t) (((Data.Bool.cond ((= x) a)) d) (g x)))) ((Set.member (((Data.Bool.cond ((= x) a)) d) (g x))) t)) ;)

(; dict ;)

def thm_1322 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> a_3 : hol.term A -> x_4 : hol.term A -> t_5 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool ((__10606_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_6 t_5) (hol.cond B (hol.eq A x_4 a_3) d_2 (g_1 x_4))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_4 a_3) d_2 (g_1 x_4)) t_5)) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A B) => d_2 : hol.term B => a_3 : hol.term A => x_4 : hol.term A => t_5 : hol.term (Set_2Eset B) => hol.BETA_CONV B hol.bool (__10606_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_6 t_5) (hol.cond B (hol.eq A x_4 a_3) d_2 (g_1 x_4)).

(; Theorem: |- ((= (= (\lambda _10606. ((Set.member _10606) t) (((Data.Bool.cond ((= x) a)) d) (g x))))) (= ((Set.member (((Data.Bool.cond ((= x) a)) d) (g x))) t))) ;)

(; dict ;)

def thm_1323 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> a_3 : hol.term A -> x_4 : hol.term A -> t_5 : hol.term (Set_2Eset B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10606_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_6 t_5) (hol.cond B (hol.eq A x_4 a_3) d_2 (g_1 x_4)))) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_4 a_3) d_2 (g_1 x_4)) t_5))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A B) => d_2 : hol.term B => a_3 : hol.term A => x_4 : hol.term A => t_5 : hol.term (Set_2Eset B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__10606_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_6 t_5) (hol.cond B (hol.eq A x_4 a_3) d_2 (g_1 x_4))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_4 a_3) d_2 (g_1 x_4)) t_5) thm_77 (thm_1322 A B g_1 d_2 a_3 x_4 t_5).

(; Theorem: |- ((= (\lambda _10606. ((Set.member _10606) t) d)) ((Set.member d) t)) ;)

(; dict ;)

def thm_1324 : B : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool ((__10606_3 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_3 t_2) d_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_1 t_2)) :=
  B : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => hol.BETA_CONV B hol.bool (__10606_3 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_3 t_2) d_1.

(; Theorem: |- ((= ((Data.Bool.==> ((= x) a)) (\lambda _10606. ((Set.member _10606) t) d))) ((Data.Bool.==> ((= x) a)) ((Set.member d) t))) ;)

(; dict ;)

def thm_1325 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> a_3 : hol.term A -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq A x_4 a_3) ((__10606_5 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_5 t_2) d_1)) (hol.imp (hol.eq A x_4 a_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_1 t_2))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => a_3 : hol.term A => x_4 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (hol.eq A x_4 a_3)) (hol.imp (hol.eq A x_4 a_3)) ((__10606_5 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_5 t_2) d_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_1 t_2) (thm_985 A a_3 x_4) (thm_1324 B d_1 t_2).

(; Theorem: |- ((= (Data.Bool./\ ((Data.Bool.==> ((= x) a)) (\lambda _10606. ((Set.member _10606) t) d)))) (Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((Set.member d) t)))) ;)

(; dict ;)

def thm_1326 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> a_3 : hol.term A -> x_4 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.imp (hol.eq A x_4 a_3) ((__10606_5 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_5 t_2) d_1))) (hol.and (hol.imp (hol.eq A x_4 a_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_1 t_2)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => a_3 : hol.term A => x_4 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.imp (hol.eq A x_4 a_3) ((__10606_5 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_5 t_2) d_1)) (hol.imp (hol.eq A x_4 a_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_1 t_2)) thm_94 (thm_1325 B A d_1 t_2 a_3 x_4).

(; Theorem: |- ((= (\lambda _10606. ((Set.member _10606) t) (g x))) ((Set.member (g x)) t)) ;)

(; dict ;)

def thm_1327 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> t_3 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool ((__10606_4 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_4 t_3) (g_2 x_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_1) t_3)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A B) => t_3 : hol.term (Set_2Eset B) => hol.BETA_CONV B hol.bool (__10606_4 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_4 t_3) (g_2 x_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= x) a))) (\lambda _10606. ((Set.member _10606) t) (g x)))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((Set.member (g x)) t))) ;)

(; dict ;)

def thm_1328 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> t_2 : hol.term (Set_2Eset B) -> a_3 : hol.term A -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 a_3)) ((__10606_5 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_5 t_2) (g_1 x_4))) (hol.imp (hol.not (hol.eq A x_4 a_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_1 x_4) t_2))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => t_2 : hol.term (Set_2Eset B) => a_3 : hol.term A => x_4 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (hol.not (hol.eq A x_4 a_3))) (hol.imp (hol.not (hol.eq A x_4 a_3))) ((__10606_5 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_5 t_2) (g_1 x_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_1 x_4) t_2) (thm_989 A a_3 x_4) (thm_1327 A B x_4 g_1 t_2).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) (\lambda _10606. ((Set.member _10606) t) d))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) (\lambda _10606. ((Set.member _10606) t) (g x))))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((Set.member d) t))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((Set.member (g x)) t)))) ;)

(; dict ;)

def thm_1329 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> x_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (hol.imp (hol.eq A x_5 a_4) ((__10606_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_6 t_3) d_2)) (hol.imp (hol.not (hol.eq A x_5 a_4)) ((__10606_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_6 t_3) (g_1 x_5)))) (hol.and (hol.imp (hol.eq A x_5 a_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_2 t_3)) (hol.imp (hol.not (hol.eq A x_5 a_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_1 x_5) t_3)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => x_5 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.and (hol.imp (hol.eq A x_5 a_4) ((__10606_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_6 t_3) d_2))) (hol.and (hol.imp (hol.eq A x_5 a_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_2 t_3))) (hol.imp (hol.not (hol.eq A x_5 a_4)) ((__10606_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_6 t_3) (g_1 x_5))) (hol.imp (hol.not (hol.eq A x_5 a_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_1 x_5) t_3)) (thm_1326 B A d_2 t_3 a_4 x_5) (thm_1328 B A g_1 t_3 a_4 x_5).

(; Theorem: |- ((= ((= (\lambda _10606. ((Set.member _10606) t) (((Data.Bool.cond ((= x) a)) d) (g x)))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) (\lambda _10606. ((Set.member _10606) t) d))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) (\lambda _10606. ((Set.member _10606) t) (g x)))))) ((= ((Set.member (((Data.Bool.cond ((= x) a)) d) (g x))) t)) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((Set.member d) t))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((Set.member (g x)) t))))) ;)

(; dict ;)

def thm_1330 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> a_3 : hol.term A -> x_4 : hol.term A -> t_5 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10606_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_6 t_5) (hol.cond B (hol.eq A x_4 a_3) d_2 (g_1 x_4))) (hol.and (hol.imp (hol.eq A x_4 a_3) ((__10606_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_6 t_5) d_2)) (hol.imp (hol.not (hol.eq A x_4 a_3)) ((__10606_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_6 t_5) (g_1 x_4))))) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_4 a_3) d_2 (g_1 x_4)) t_5) (hol.and (hol.imp (hol.eq A x_4 a_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_2 t_5)) (hol.imp (hol.not (hol.eq A x_4 a_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_1 x_4) t_5))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A B) => d_2 : hol.term B => a_3 : hol.term A => x_4 : hol.term A => t_5 : hol.term (Set_2Eset B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10606_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_6 t_5) (hol.cond B (hol.eq A x_4 a_3) d_2 (g_1 x_4)))) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_4 a_3) d_2 (g_1 x_4)) t_5)) (hol.and (hol.imp (hol.eq A x_4 a_3) ((__10606_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_6 t_5) d_2)) (hol.imp (hol.not (hol.eq A x_4 a_3)) ((__10606_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_6 t_5) (g_1 x_4)))) (hol.and (hol.imp (hol.eq A x_4 a_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_2 t_5)) (hol.imp (hol.not (hol.eq A x_4 a_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_1 x_4) t_5))) (thm_1323 A B g_1 d_2 a_3 x_4 t_5) (thm_1329 B A g_1 d_2 t_5 a_3 x_4).

(; Theorem: |- ((= (\lambda _10606. ((Set.member _10606) t) (((Data.Bool.cond _483) _482) _485))) ((Data.Bool./\ ((Data.Bool.==> _483) (\lambda _10606. ((Set.member _10606) t) _482))) ((Data.Bool.==> (Data.Bool.~ _483)) (\lambda _10606. ((Set.member _10606) t) _485)))) ;)

(; dict ;)

def thm_1331 : B : hol.type -> __485_1 : hol.term B -> __482_2 : hol.term B -> __483_3 : hol.term hol.bool -> t_4 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool ((__10606_5 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_5 t_4) (hol.cond B __483_3 __482_2 __485_1)) (hol.and (hol.imp __483_3 ((__10606_5 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_5 t_4) __482_2)) (hol.imp (hol.not __483_3) ((__10606_5 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_5 t_4) __485_1)))) :=
  B : hol.type => __485_1 : hol.term B => __482_2 : hol.term B => __483_3 : hol.term hol.bool => t_4 : hol.term (Set_2Eset B) => (B : hol.type => __485_1 : hol.term B => __482_2 : hol.term B => __483_3 : hol.term hol.bool => __484_4 : hol.term (hol.arr B hol.bool) => thm_999 B __485_1 __482_2 __483_3 __484_4) B __485_1 __482_2 __483_3 (__10606_5 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_5 t_4).

(; Theorem: |- ((= (\lambda _10606. ((Set.member _10606) t) (((Data.Bool.cond ((= x) a)) d) (g x)))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) (\lambda _10606. ((Set.member _10606) t) d))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) (\lambda _10606. ((Set.member _10606) t) (g x))))) ;)

(; dict ;)

def thm_1332 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> a_3 : hol.term A -> x_4 : hol.term A -> t_5 : hol.term (Set_2Eset B) -> hol.proof (hol.eq hol.bool ((__10606_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_6 t_5) (hol.cond B (hol.eq A x_4 a_3) d_2 (g_1 x_4))) (hol.and (hol.imp (hol.eq A x_4 a_3) ((__10606_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_6 t_5) d_2)) (hol.imp (hol.not (hol.eq A x_4 a_3)) ((__10606_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_6 t_5) (g_1 x_4))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A B) => d_2 : hol.term B => a_3 : hol.term A => x_4 : hol.term A => t_5 : hol.term (Set_2Eset B) => (B : hol.type => __485_1 : hol.term B => __482_2 : hol.term B => __483_3 : hol.term hol.bool => t_4 : hol.term (Set_2Eset B) => thm_1331 B __485_1 __482_2 __483_3 t_4) B (g_1 x_4) d_2 (hol.eq A x_4 a_3) t_5.

(; Theorem: |- ((= ((Set.member (((Data.Bool.cond ((= x) a)) d) (g x))) t)) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((Set.member d) t))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((Set.member (g x)) t)))) ;)

(; dict ;)

def thm_1333 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> g_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> a_4 : hol.term A -> x_5 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_5 a_4) d_3 (g_2 x_5)) t_1) (hol.and (hol.imp (hol.eq A x_5 a_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_3 t_1)) (hol.imp (hol.not (hol.eq A x_5 a_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_5) t_1)))) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => g_2 : hol.term (hol.arr A B) => d_3 : hol.term B => a_4 : hol.term A => x_5 : hol.term A => hol.EQ_MP (hol.eq hol.bool ((__10606_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_6 t_1) (hol.cond B (hol.eq A x_5 a_4) d_3 (g_2 x_5))) (hol.and (hol.imp (hol.eq A x_5 a_4) ((__10606_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_6 t_1) d_3)) (hol.imp (hol.not (hol.eq A x_5 a_4)) ((__10606_6 : hol.term B => Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) __10606_6 t_1) (g_2 x_5))))) (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_5 a_4) d_3 (g_2 x_5)) t_1) (hol.and (hol.imp (hol.eq A x_5 a_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_3 t_1)) (hol.imp (hol.not (hol.eq A x_5 a_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_5) t_1)))) (thm_1330 A B g_2 d_3 a_4 x_5 t_1) (thm_1332 A B g_2 d_3 a_4 x_5 t_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((Set.member d) t))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((Set.member (g x)) t)))) ((Set.member (((Data.Bool.cond ((= x) a)) d) (g x))) t)) ;)

(; dict ;)

def thm_1334 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> t_2 : hol.term (Set_2Eset B) -> d_3 : hol.term B -> a_4 : hol.term A -> x_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (hol.imp (hol.eq A x_5 a_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_3 t_2)) (hol.imp (hol.not (hol.eq A x_5 a_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_1 x_5) t_2))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_5 a_4) d_3 (g_1 x_5)) t_2)) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => t_2 : hol.term (Set_2Eset B) => d_3 : hol.term B => a_4 : hol.term A => x_5 : hol.term A => hol.SYM hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_5 a_4) d_3 (g_1 x_5)) t_2) (hol.and (hol.imp (hol.eq A x_5 a_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_3 t_2)) (hol.imp (hol.not (hol.eq A x_5 a_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_1 x_5) t_2))) (thm_1333 A B t_2 g_1 d_3 a_4 x_5).

(; Theorem: |- ((= ((Set.member d) t)) ((Set.member d) t)) ;)

(; dict ;)

def thm_1335 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> d_2 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_2 t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_2 t_1)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => d_2 : hol.term B => hol.REFL hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_2 t_1).

(; Theorem: |- ((= ((Set.member d) t)) ((Set.member d) t)) ;)

(; dict ;)

def thm_1336 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> d_2 : hol.term B -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_2 t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_2 t_1)) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => d_2 : hol.term B => hol.SYM hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_2 t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_2 t_1) (thm_1335 B t_1 d_2).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) s)) ((Set.member d) t))) ((Data.Bool.==> Data.Bool.F) ((Set.member d) t))) ;)

(; dict ;)

def thm_1337 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> t_2 : hol.term (Set_2Eset B) -> d_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4)) -> hyp_2 : hol.proof (hol.eq A x_5 a_1) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_3 t_2)) (hol.imp hol.false (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_3 t_2))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => t_2 : hol.term (Set_2Eset B) => d_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4)) => hyp_2 : hol.proof (hol.eq A x_5 a_1) => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.imp hol.false) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_3 t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_3 t_2) (thm_1016 A a_1 s_4 x_5 hyp_1 hyp_2) (thm_1335 B t_2 d_3).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) ((Set.member d) t))) Data.Bool.T) ;)

(; dict ;)

def thm_1338 : B : hol.type -> t_1 : hol.term (Set_2Eset B) -> d_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.imp hol.false (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_2 t_1)) hol.true) :=
  B : hol.type => t_1 : hol.term (Set_2Eset B) => d_2 : hol.term B => (t_1 : hol.term hol.bool => thm_167 t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_2 t_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) s)) ((Set.member d) t))) Data.Bool.T) ;)

(; dict ;)

def thm_1339 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> t_2 : hol.term (Set_2Eset B) -> d_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4)) -> hyp_2 : hol.proof (hol.eq A x_5 a_1) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_3 t_2)) hol.true) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => t_2 : hol.term (Set_2Eset B) => d_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4)) => hyp_2 : hol.proof (hol.eq A x_5 a_1) => hol.TRANS hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_3 t_2)) (hol.imp hol.false (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_3 t_2)) hol.true (thm_1337 B A a_1 t_2 d_3 s_4 x_5 hyp_1 hyp_2) (thm_1338 B t_2 d_3).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> ((Set.member x) s)) ((Set.member d) t))) ;)

(; dict ;)

def thm_1340 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> t_2 : hol.term (Set_2Eset B) -> d_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4)) -> hyp_2 : hol.proof (hol.eq A x_5 a_1) -> hol.proof (hol.eq hol.bool hol.true (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_3 t_2))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => t_2 : hol.term (Set_2Eset B) => d_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4)) => hyp_2 : hol.proof (hol.eq A x_5 a_1) => hol.SYM hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_3 t_2)) hol.true (thm_1339 B A a_1 t_2 d_3 s_4 x_5 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Set.member x) s)) ((Set.member d) t)) ;)

(; dict ;)

def thm_1341 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> t_2 : hol.term (Set_2Eset B) -> d_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4)) -> hyp_2 : hol.proof (hol.eq A x_5 a_1) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_3 t_2)) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => t_2 : hol.term (Set_2Eset B) => d_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4)) => hyp_2 : hol.proof (hol.eq A x_5 a_1) => hol.EQ_MP hol.true (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_3 t_2)) (thm_1340 B A a_1 t_2 d_3 s_4 x_5 hyp_1 hyp_2) thm_10.

(; Theorem: |- ((Set.member d) t) ;)

(; dict ;)

def thm_1342 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> a_3 : hol.term A -> t_4 : hol.term (Set_2Eset B) -> d_5 : hol.term B -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_3 s_2)) -> hyp_2 : hol.proof (hol.eq A x_1 a_3) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_5 t_4) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => a_3 : hol.term A => t_4 : hol.term (Set_2Eset B) => d_5 : hol.term B => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_3 s_2)) => hyp_2 : hol.proof (hol.eq A x_1 a_3) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) => thm_1341 B A a_3 t_4 d_5 s_2 x_1 hyp_1 hyp_2 (thm_982 A s_2 x_1 hyp_3).

(; Theorem: |- ((Set.member d) t) ;)

(; dict ;)

def thm_1343 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> a_3 : hol.term A -> t_4 : hol.term (Set_2Eset B) -> d_5 : hol.term B -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_3 s_2)) -> hyp_2 : hol.proof (hol.eq A x_1 a_3) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_5 t_4) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => a_3 : hol.term A => t_4 : hol.term (Set_2Eset B) => d_5 : hol.term B => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_3 s_2)) => hyp_2 : hol.proof (hol.eq A x_1 a_3) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1 s_2) => hol.PROVE_HYP (hol.eq A x_1 a_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_5 t_4) (thm_1004 A a_3 x_1 hyp_2) (hyp_4 : hol.proof (hol.eq A x_1 a_3) => hol.EQ_MP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_5 t_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_5 t_4) (thm_1336 B t_4 d_5) (thm_1342 A B x_1 s_2 a_3 t_4 d_5 hyp_1 hyp_4 hyp_3)).

(; Theorem: |- ((Data.Bool.==> ((= x) a)) ((Set.member d) t)) ;)

(; dict ;)

def thm_1344 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> d_3 : hol.term B -> a_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_1)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) -> hol.proof (hol.imp (hol.eq A x_5 a_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_3 t_2)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => d_3 : hol.term B => a_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_1)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) => hyp_3 : hol.proof (hol.eq A x_5 a_4) => thm_1343 A B x_5 s_1 a_4 t_2 d_3 hyp_1 hyp_3 hyp_2.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((Set.member (g x)) t))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((Set.member d) t))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((Set.member (g x)) t)))) ;)

(; dict ;)

def thm_1345 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> g_3 : hol.term (hol.arr A B) -> a_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.imp (hol.eq A x_5 a_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_1 t_2)) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_5 a_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_2)) (hol.and (hol.imp (hol.eq A x_5 a_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_1 t_2)) (hol.imp (hol.not (hol.eq A x_5 a_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_2)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => g_3 : hol.term (hol.arr A B) => a_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.imp (hol.eq A x_5 a_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_1 t_2)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.imp (hol.eq A x_5 a_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_1 t_2)) (hol.imp (hol.not (hol.eq A x_5 a_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_2)) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((Set.member (g x)) t))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((Set.member d) t))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((Set.member (g x)) t)))) ;)

(; dict ;)

def thm_1346 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> g_4 : hol.term (hol.arr A B) -> a_5 : hol.term A -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_1)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_6 a_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_6) t_3)) (hol.and (hol.imp (hol.eq A x_6 a_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_2 t_3)) (hol.imp (hol.not (hol.eq A x_6 a_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_6) t_3)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => g_4 : hol.term (hol.arr A B) => a_5 : hol.term A => x_6 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_1)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) => hol.PROVE_HYP (hol.imp (hol.eq A x_6 a_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_2 t_3)) (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_6 a_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_6) t_3)) (hol.and (hol.imp (hol.eq A x_6 a_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_2 t_3)) (hol.imp (hol.not (hol.eq A x_6 a_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_6) t_3)))) (thm_1344 B A s_1 t_3 d_2 a_5 x_6 hyp_1 hyp_2) (hyp_3 : hol.proof (hol.imp (hol.eq A x_6 a_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_2 t_3)) => thm_1345 B A d_2 t_3 g_4 a_5 x_6 hyp_3).

(; Theorem: |- ((= ((Set.member (g x)) t)) ((Set.member (g x)) t)) ;)

(; dict ;)

def thm_1347 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_2) t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_2) t_1)) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hol.REFL hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_2) t_1).

(; Theorem: |- ((= ((Set.member (g x)) t)) ((Set.member (g x)) t)) ;)

(; dict ;)

def thm_1348 : A : hol.type -> B : hol.type -> t_1 : hol.term (Set_2Eset B) -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_2) t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_2) t_1)) :=
  A : hol.type => B : hol.type => t_1 : hol.term (Set_2Eset B) => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hol.SYM hol.bool (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_2) t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_2) t_1) (thm_1347 A B t_1 x_2 g_3).

(; Theorem: |- ((= (Data.Bool.\/ ((= x) a))) (Data.Bool.\/ Data.Bool.F)) ;)

(; dict ;)

def thm_1349 : A : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.not (hol.eq A x_2 a_1)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or (hol.eq A x_2 a_1)) (hol.or hol.false)) :=
  A : hol.type => a_1 : hol.term A => x_2 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_2 a_1)) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or hol.or (hol.eq A x_2 a_1) hol.false thm_1272 (thm_1123 A a_1 x_2 hyp_1).

(; Theorem: |- ((= ((= ((Set.member x) s)) Data.Bool.T)) ((= ((Set.member x) s)) Data.Bool.T)) ;)

(; dict ;)

def thm_1350 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true).

(; Theorem: |- ((= ((= ((Set.member x) s)) Data.Bool.T)) ((= ((Set.member x) s)) Data.Bool.T)) ;)

(; dict ;)

def thm_1351 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (thm_1350 A s_1 x_2) (thm_1350 A s_1 x_2).

(; Theorem: |- ((= ((Set.member x) s)) ((= ((Set.member x) s)) Data.Bool.T)) ;)

(; dict ;)

def thm_1352 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => (t_1 : hol.term hol.bool => thm_180 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1).

(; Theorem: |- ((= ((Set.member x) s)) Data.Bool.T) ;)

(; dict ;)

def thm_1353 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) => hol.EQ_MP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.true) (thm_1352 A s_1 x_2) (thm_982 A s_1 x_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Data.Bool.\/ Data.Bool.F) Data.Bool.T)) ;)

(; dict ;)

def thm_1354 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_2)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) -> hol.proof (hol.eq hol.bool (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) (hol.or hol.false hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_2)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) => hol.APP_THM hol.bool hol.bool (hol.or (hol.eq A x_3 a_2)) (hol.or hol.false) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) hol.true (thm_1349 A a_2 x_3 hyp_1) (hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) hol.true) (thm_1351 A s_1 x_3) (thm_1353 A s_1 x_3 hyp_2)).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.F) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_1355 : hol.proof (hol.eq hol.bool (hol.or hol.false hol.true) hol.true) :=
  (t_1 : hol.term hol.bool => thm_1291 t_1) hol.true.

(; Theorem: |- ((= ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) Data.Bool.T) ;)

(; dict ;)

def thm_1356 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_2)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) -> hol.proof (hol.eq hol.bool (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_2)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) => hol.TRANS hol.bool (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) (hol.or hol.false hol.true) hol.true (thm_1354 A s_1 a_2 x_3 hyp_1 hyp_2) thm_1355.

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ;)

(; dict ;)

def thm_1357 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_2)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) -> hol.proof (hol.eq hol.bool hol.true (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_2)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) => hol.SYM hol.bool (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) hol.true (thm_1356 A s_1 a_2 x_3 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)) ;)

(; dict ;)

def thm_1358 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_2)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) -> hol.proof (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_2)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) => hol.EQ_MP hol.true (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) (thm_1357 A s_1 a_2 x_3 hyp_1 hyp_2) thm_10.

(; Theorem: |- ((Set.member (g x)) t) ;)

(; dict ;)

def thm_1359 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> t_3 : hol.term (Set_2Eset B) -> x_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) -> hyp_2 : hol.proof (hol.not (hol.eq A x_4 a_2)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_4) t_3) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => t_3 : hol.term (Set_2Eset B) => x_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) => hyp_2 : hol.proof (hol.not (hol.eq A x_4 a_2)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) => thm_1270 B A t_3 g_5 s_1 a_2 x_4 hyp_1 (thm_1358 A s_1 a_2 x_4 hyp_2 hyp_3).

(; Theorem: |- ((Set.member (g x)) t) ;)

(; dict ;)

def thm_1360 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> t_3 : hol.term (Set_2Eset B) -> x_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) -> hyp_2 : hol.proof (hol.not (hol.eq A x_4 a_2)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_4) t_3) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => t_3 : hol.term (Set_2Eset B) => x_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) => hyp_2 : hol.proof (hol.not (hol.eq A x_4 a_2)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1) => hol.PROVE_HYP (hol.not (hol.eq A x_4 a_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_4) t_3) (thm_1118 A a_2 x_4 hyp_2) (hyp_4 : hol.proof (hol.not (hol.eq A x_4 a_2)) => hol.EQ_MP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_4) t_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_4) t_3) (thm_1348 A B t_3 x_4 g_5) (thm_1359 A B s_1 a_2 t_3 x_4 g_5 hyp_1 hyp_4 hyp_3)).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((Set.member (g x)) t)) ;)

(; dict ;)

def thm_1361 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> g_3 : hol.term (hol.arr A B) -> a_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_2))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) -> hol.proof (hol.imp (hol.not (hol.eq A x_5 a_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_2)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => g_3 : hol.term (hol.arr A B) => a_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_2))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) => hyp_3 : hol.proof (hol.not (hol.eq A x_5 a_4)) => thm_1360 A B s_1 a_4 t_2 x_5 g_3 hyp_1 hyp_3 hyp_2.

(; Theorem: |- ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((Set.member d) t))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((Set.member (g x)) t))) ;)

(; dict ;)

def thm_1362 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr A B) -> t_3 : hol.term (Set_2Eset B) -> d_4 : hol.term B -> a_5 : hol.term A -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_7) t_3))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_1)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) -> hol.proof (hol.and (hol.imp (hol.eq A x_6 a_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_4 t_3)) (hol.imp (hol.not (hol.eq A x_6 a_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_6) t_3))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr A B) => t_3 : hol.term (Set_2Eset B) => d_4 : hol.term B => a_5 : hol.term A => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_7) t_3))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_1)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) => hol.EQ_MP (hol.imp (hol.not (hol.eq A x_6 a_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_6) t_3)) (hol.and (hol.imp (hol.eq A x_6 a_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_4 t_3)) (hol.imp (hol.not (hol.eq A x_6 a_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_6) t_3))) (thm_1346 B A s_1 d_4 t_3 g_2 a_5 x_6 hyp_2 hyp_3) (thm_1361 B A s_1 t_3 g_2 a_5 x_6 hyp_1 hyp_3).

(; Theorem: |- ((Set.member (((Data.Bool.cond ((= x) a)) d) (g x))) t) ;)

(; dict ;)

def thm_1363 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> g_3 : hol.term (hol.arr A B) -> d_4 : hol.term B -> a_5 : hol.term A -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_7) t_2))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_1)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) d_4 (g_3 x_6)) t_2) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => g_3 : hol.term (hol.arr A B) => d_4 : hol.term B => a_5 : hol.term A => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_7) t_2))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_1)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) => hol.EQ_MP (hol.and (hol.imp (hol.eq A x_6 a_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) d_4 t_2)) (hol.imp (hol.not (hol.eq A x_6 a_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_2))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) d_4 (g_3 x_6)) t_2) (thm_1334 B A g_3 t_2 d_4 a_5 x_6) (thm_1362 B A s_1 g_3 t_2 d_4 a_5 x_6 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) t) ;)

(; dict ;)

def thm_1364 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> x_3 : hol.term A -> g_4 : hol.term (hol.arr A B) -> d_5 : hol.term B -> a_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_7) t_2))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_1)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_6) d_5 (g_4 x_7)) x_3) t_2) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => x_3 : hol.term A => g_4 : hol.term (hol.arr A B) => d_5 : hol.term B => a_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_7) t_2))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_1)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) => hol.EQ_MP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_3 a_6) d_5 (g_4 x_3)) t_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_6) d_5 (g_4 x_7)) x_3) t_2) (thm_1321 A B t_2 g_4 d_5 a_6 x_3) (thm_1363 A B s_1 t_2 g_4 d_5 a_6 x_3 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) t) ;)

(; dict ;)

def thm_1365 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> x_3 : hol.term A -> g_4 : hol.term (hol.arr A B) -> d_5 : hol.term B -> a_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_7) t_2))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_1)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_6) d_5 (g_4 x_7)) x_3) t_2) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => x_3 : hol.term A => g_4 : hol.term (hol.arr A B) => d_5 : hol.term B => a_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_6) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_7) t_2))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_1)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_6) d_5 (g_4 x_7)) x_3) t_2) (thm_982 A s_1 x_3 hyp_3) (hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) => thm_1364 A B s_1 t_2 x_3 g_4 d_5 a_6 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) t)) ;)

(; dict ;)

def thm_1366 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> g_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> a_4 : hol.term A -> s_5 : hol.term (Set_2Eset A) -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_7) t_1))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_5)) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => g_2 : hol.term (hol.arr A B) => d_3 : hol.term B => a_4 : hol.term A => s_5 : hol.term (Set_2Eset A) => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_7) t_1))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_5)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) => thm_1365 A B s_5 t_1 x_6 g_2 d_3 a_4 hyp_1 hyp_2 hyp_3.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) t))) ;)

(; dict ;)

def thm_1367 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> g_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> a_4 : hol.term A -> s_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_6) t_1))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_5)) -> hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => g_2 : hol.term (hol.arr A B) => d_3 : hol.term B => a_4 : hol.term A => s_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_6) t_1))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_5)) => x_6 : hol.term A => thm_1366 B A t_1 g_2 d_3 a_4 s_5 x_6 hyp_1 hyp_2.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) d)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) d))))) ;)

(; dict ;)

def thm_1368 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> g_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> a_4 : hol.term A -> s_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1))) -> hol.proof (hol.eq hol.bool (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) d_3))) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) d_3))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => g_2 : hol.term (hol.arr A B) => d_3 : hol.term B => a_4 : hol.term A => s_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) d_3))) hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) d)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) d))))) ;)

(; dict ;)

def thm_1369 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> g_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> a_4 : hol.term A -> s_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_6) t_1))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_5)) -> hol.proof (hol.eq hol.bool (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) d_3))) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) d_3))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => g_2 : hol.term (hol.arr A B) => d_3 : hol.term B => a_4 : hol.term A => s_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_6) t_1))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_5)) => hol.PROVE_HYP (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1))) (hol.eq hol.bool (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) d_3))) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) d_3))))) (hol.EQ_MP (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1))) (thm_1318 B A t_1 g_2 d_3 a_4 s_5) (thm_1367 B A t_1 g_2 d_3 a_4 s_5 hyp_1 hyp_2)) (hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1))) => thm_1368 B A t_1 g_2 d_3 a_4 s_5 hyp_3).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) d))) \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) d))) ;)

(; dict ;)

def thm_1370 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> a_3 : hol.term A -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) d_2 (g_1 x_6)) x_5) d_2)) (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) d_2 (g_1 x_6)) x_5) d_2))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => d_2 : hol.term B => a_3 : hol.term A => s_4 : hol.term (Set_2Eset A) => hol.REFL (hol.arr A hol.bool) (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) d_2 (g_1 x_6)) x_5) d_2)).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) d))) \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) d))) ;)

(; dict ;)

def thm_1371 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> a_3 : hol.term A -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) d_2 (g_1 x_6)) x_5) d_2)) (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) d_2 (g_1 x_6)) x_5) d_2))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => d_2 : hol.term B => a_3 : hol.term A => s_4 : hol.term (Set_2Eset A) => hol.TRANS (hol.arr A hol.bool) (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) d_2 (g_1 x_6)) x_5) d_2)) (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) d_2 (g_1 x_6)) x_5) d_2)) (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) d_2 (g_1 x_6)) x_5) d_2)) (thm_1370 B A g_1 d_2 a_3 s_4) (thm_1370 B A g_1 d_2 a_3 s_4).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) d)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) d)))) ;)

(; dict ;)

def thm_1372 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> a_3 : hol.term A -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) d_2 (g_1 x_6)) x_5) d_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) d_2 (g_1 x_6)) x_5) d_2)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => d_2 : hol.term B => a_3 : hol.term A => s_4 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) d_2 (g_1 x_6)) x_5) d_2)) (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) d_2 (g_1 x_6)) x_5) d_2)) (thm_95 A) (thm_1371 B A g_1 d_2 a_3 s_4).

(; Theorem: |- ((= (= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x))) (= (((Data.Bool.cond ((= x) a)) d) (g x)))) ;)

(; dict ;)

def thm_1373 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> a_4 : hol.term A -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) d_3 (g_2 x_5)) x_1)) (hol.eq B (hol.cond B (hol.eq A x_1 a_4) d_3 (g_2 x_1)))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A B) => d_3 : hol.term B => a_4 : hol.term A => hol.APP_THM B (hol.arr B hol.bool) (hol.eq B) (hol.eq B) ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) d_3 (g_2 x_5)) x_1) (hol.cond B (hol.eq A x_1 a_4) d_3 (g_2 x_1)) (thm_331 B) (thm_1199 A B x_1 g_2 d_3 a_4).

(; Theorem: |- ((= ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) d)) ((= (((Data.Bool.cond ((= x) a)) d) (g x))) d)) ;)

(; dict ;)

def thm_1374 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> a_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq B ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) d_3 (g_2 x_5)) x_1) d_3) (hol.eq B (hol.cond B (hol.eq A x_1 a_4) d_3 (g_2 x_1)) d_3)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A B) => d_3 : hol.term B => a_4 : hol.term A => hol.APP_THM B hol.bool (hol.eq B ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_4) d_3 (g_2 x_5)) x_1)) (hol.eq B (hol.cond B (hol.eq A x_1 a_4) d_3 (g_2 x_1))) d_3 d_3 (thm_1373 A B x_1 g_2 d_3 a_4) (thm_972 B d_3).

(; Theorem: |- ((= ((= (((Data.Bool.cond ((= x) a)) d) (g x))) d)) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) d)) ;)

(; dict ;)

def thm_1375 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> a_3 : hol.term A -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq B (hol.cond B (hol.eq A x_4 a_3) d_2 (g_1 x_4)) d_2) (hol.eq B ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) d_2 (g_1 x_5)) x_4) d_2)) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A B) => d_2 : hol.term B => a_3 : hol.term A => x_4 : hol.term A => hol.SYM hol.bool (hol.eq B ((x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) d_2 (g_1 x_5)) x_4) d_2) (hol.eq B (hol.cond B (hol.eq A x_4 a_3) d_2 (g_1 x_4)) d_2) (thm_1374 A B x_4 g_1 d_2 a_3).

(; Theorem: |- ((= (\lambda _10612. ((= _10612) d) (((Data.Bool.cond ((= x) a)) d) (g x)))) ((= (((Data.Bool.cond ((= x) a)) d) (g x))) d)) ;)

(; dict ;)

def thm_1376 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A B) -> a_2 : hol.term A -> x_3 : hol.term A -> d_4 : hol.term B -> hol.proof (hol.eq hol.bool ((__10612_5 : hol.term B => hol.eq B __10612_5 d_4) (hol.cond B (hol.eq A x_3 a_2) d_4 (g_1 x_3))) (hol.eq B (hol.cond B (hol.eq A x_3 a_2) d_4 (g_1 x_3)) d_4)) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A B) => a_2 : hol.term A => x_3 : hol.term A => d_4 : hol.term B => hol.BETA_CONV B hol.bool (__10612_5 : hol.term B => hol.eq B __10612_5 d_4) (hol.cond B (hol.eq A x_3 a_2) d_4 (g_1 x_3)).

(; Theorem: |- ((= (= (\lambda _10612. ((= _10612) d) (((Data.Bool.cond ((= x) a)) d) (g x))))) (= ((= (((Data.Bool.cond ((= x) a)) d) (g x))) d))) ;)

(; dict ;)

def thm_1377 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A B) -> a_2 : hol.term A -> x_3 : hol.term A -> d_4 : hol.term B -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10612_5 : hol.term B => hol.eq B __10612_5 d_4) (hol.cond B (hol.eq A x_3 a_2) d_4 (g_1 x_3)))) (hol.eq hol.bool (hol.eq B (hol.cond B (hol.eq A x_3 a_2) d_4 (g_1 x_3)) d_4))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A B) => a_2 : hol.term A => x_3 : hol.term A => d_4 : hol.term B => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__10612_5 : hol.term B => hol.eq B __10612_5 d_4) (hol.cond B (hol.eq A x_3 a_2) d_4 (g_1 x_3))) (hol.eq B (hol.cond B (hol.eq A x_3 a_2) d_4 (g_1 x_3)) d_4) thm_77 (thm_1376 A B g_1 a_2 x_3 d_4).

(; Theorem: |- ((= (\lambda _10612. ((= _10612) d) d)) ((= d) d)) ;)

(; dict ;)

def thm_1378 : B : hol.type -> d_1 : hol.term B -> hol.proof (hol.eq hol.bool ((__10612_2 : hol.term B => hol.eq B __10612_2 d_1) d_1) (hol.eq B d_1 d_1)) :=
  B : hol.type => d_1 : hol.term B => hol.BETA_CONV B hol.bool (__10612_2 : hol.term B => hol.eq B __10612_2 d_1) d_1.

(; Theorem: |- ((= ((Data.Bool.==> ((= x) a)) (\lambda _10612. ((= _10612) d) d))) ((Data.Bool.==> ((= x) a)) ((= d) d))) ;)

(; dict ;)

def thm_1379 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> a_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq A x_3 a_2) ((__10612_4 : hol.term B => hol.eq B __10612_4 d_1) d_1)) (hol.imp (hol.eq A x_3 a_2) (hol.eq B d_1 d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => a_2 : hol.term A => x_3 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (hol.eq A x_3 a_2)) (hol.imp (hol.eq A x_3 a_2)) ((__10612_4 : hol.term B => hol.eq B __10612_4 d_1) d_1) (hol.eq B d_1 d_1) (thm_985 A a_2 x_3) (thm_1378 B d_1).

(; Theorem: |- ((= (Data.Bool./\ ((Data.Bool.==> ((= x) a)) (\lambda _10612. ((= _10612) d) d)))) (Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= d) d)))) ;)

(; dict ;)

def thm_1380 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> a_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.imp (hol.eq A x_3 a_2) ((__10612_4 : hol.term B => hol.eq B __10612_4 d_1) d_1))) (hol.and (hol.imp (hol.eq A x_3 a_2) (hol.eq B d_1 d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => a_2 : hol.term A => x_3 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.imp (hol.eq A x_3 a_2) ((__10612_4 : hol.term B => hol.eq B __10612_4 d_1) d_1)) (hol.imp (hol.eq A x_3 a_2) (hol.eq B d_1 d_1)) thm_94 (thm_1379 B A d_1 a_2 x_3).

(; Theorem: |- ((= (\lambda _10612. ((= _10612) d) (g x))) ((= (g x)) d)) ;)

(; dict ;)

def thm_1381 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> hol.proof (hol.eq hol.bool ((__10612_4 : hol.term B => hol.eq B __10612_4 d_3) (g_2 x_1)) (hol.eq B (g_2 x_1) d_3)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A B) => d_3 : hol.term B => hol.BETA_CONV B hol.bool (__10612_4 : hol.term B => hol.eq B __10612_4 d_3) (g_2 x_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= x) a))) (\lambda _10612. ((= _10612) d) (g x)))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) d))) ;)

(; dict ;)

def thm_1382 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> a_3 : hol.term A -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 a_3)) ((__10612_5 : hol.term B => hol.eq B __10612_5 d_2) (g_1 x_4))) (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (g_1 x_4) d_2))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => d_2 : hol.term B => a_3 : hol.term A => x_4 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (hol.not (hol.eq A x_4 a_3))) (hol.imp (hol.not (hol.eq A x_4 a_3))) ((__10612_5 : hol.term B => hol.eq B __10612_5 d_2) (g_1 x_4)) (hol.eq B (g_1 x_4) d_2) (thm_989 A a_3 x_4) (thm_1381 A B x_4 g_1 d_2).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) (\lambda _10612. ((= _10612) d) d))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) (\lambda _10612. ((= _10612) d) (g x))))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= d) d))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1383 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> a_3 : hol.term A -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (hol.imp (hol.eq A x_4 a_3) ((__10612_5 : hol.term B => hol.eq B __10612_5 d_2) d_2)) (hol.imp (hol.not (hol.eq A x_4 a_3)) ((__10612_5 : hol.term B => hol.eq B __10612_5 d_2) (g_1 x_4)))) (hol.and (hol.imp (hol.eq A x_4 a_3) (hol.eq B d_2 d_2)) (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (g_1 x_4) d_2)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => d_2 : hol.term B => a_3 : hol.term A => x_4 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.and (hol.imp (hol.eq A x_4 a_3) ((__10612_5 : hol.term B => hol.eq B __10612_5 d_2) d_2))) (hol.and (hol.imp (hol.eq A x_4 a_3) (hol.eq B d_2 d_2))) (hol.imp (hol.not (hol.eq A x_4 a_3)) ((__10612_5 : hol.term B => hol.eq B __10612_5 d_2) (g_1 x_4))) (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (g_1 x_4) d_2)) (thm_1380 B A d_2 a_3 x_4) (thm_1382 B A g_1 d_2 a_3 x_4).

(; Theorem: |- ((= ((= (\lambda _10612. ((= _10612) d) (((Data.Bool.cond ((= x) a)) d) (g x)))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) (\lambda _10612. ((= _10612) d) d))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) (\lambda _10612. ((= _10612) d) (g x)))))) ((= ((= (((Data.Bool.cond ((= x) a)) d) (g x))) d)) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= d) d))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) d))))) ;)

(; dict ;)

def thm_1384 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A B) -> a_2 : hol.term A -> x_3 : hol.term A -> d_4 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10612_5 : hol.term B => hol.eq B __10612_5 d_4) (hol.cond B (hol.eq A x_3 a_2) d_4 (g_1 x_3))) (hol.and (hol.imp (hol.eq A x_3 a_2) ((__10612_5 : hol.term B => hol.eq B __10612_5 d_4) d_4)) (hol.imp (hol.not (hol.eq A x_3 a_2)) ((__10612_5 : hol.term B => hol.eq B __10612_5 d_4) (g_1 x_3))))) (hol.eq hol.bool (hol.eq B (hol.cond B (hol.eq A x_3 a_2) d_4 (g_1 x_3)) d_4) (hol.and (hol.imp (hol.eq A x_3 a_2) (hol.eq B d_4 d_4)) (hol.imp (hol.not (hol.eq A x_3 a_2)) (hol.eq B (g_1 x_3) d_4))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A B) => a_2 : hol.term A => x_3 : hol.term A => d_4 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10612_5 : hol.term B => hol.eq B __10612_5 d_4) (hol.cond B (hol.eq A x_3 a_2) d_4 (g_1 x_3)))) (hol.eq hol.bool (hol.eq B (hol.cond B (hol.eq A x_3 a_2) d_4 (g_1 x_3)) d_4)) (hol.and (hol.imp (hol.eq A x_3 a_2) ((__10612_5 : hol.term B => hol.eq B __10612_5 d_4) d_4)) (hol.imp (hol.not (hol.eq A x_3 a_2)) ((__10612_5 : hol.term B => hol.eq B __10612_5 d_4) (g_1 x_3)))) (hol.and (hol.imp (hol.eq A x_3 a_2) (hol.eq B d_4 d_4)) (hol.imp (hol.not (hol.eq A x_3 a_2)) (hol.eq B (g_1 x_3) d_4))) (thm_1377 A B g_1 a_2 x_3 d_4) (thm_1383 B A g_1 d_4 a_2 x_3).

(; Theorem: |- ((= (\lambda _10612. ((= _10612) d) (((Data.Bool.cond _483) _482) _485))) ((Data.Bool./\ ((Data.Bool.==> _483) (\lambda _10612. ((= _10612) d) _482))) ((Data.Bool.==> (Data.Bool.~ _483)) (\lambda _10612. ((= _10612) d) _485)))) ;)

(; dict ;)

def thm_1385 : B : hol.type -> __485_1 : hol.term B -> __482_2 : hol.term B -> __483_3 : hol.term hol.bool -> d_4 : hol.term B -> hol.proof (hol.eq hol.bool ((__10612_5 : hol.term B => hol.eq B __10612_5 d_4) (hol.cond B __483_3 __482_2 __485_1)) (hol.and (hol.imp __483_3 ((__10612_5 : hol.term B => hol.eq B __10612_5 d_4) __482_2)) (hol.imp (hol.not __483_3) ((__10612_5 : hol.term B => hol.eq B __10612_5 d_4) __485_1)))) :=
  B : hol.type => __485_1 : hol.term B => __482_2 : hol.term B => __483_3 : hol.term hol.bool => d_4 : hol.term B => (B : hol.type => __485_1 : hol.term B => __482_2 : hol.term B => __483_3 : hol.term hol.bool => __484_4 : hol.term (hol.arr B hol.bool) => thm_999 B __485_1 __482_2 __483_3 __484_4) B __485_1 __482_2 __483_3 (__10612_5 : hol.term B => hol.eq B __10612_5 d_4).

(; Theorem: |- ((= (\lambda _10612. ((= _10612) d) (((Data.Bool.cond ((= x) a)) d) (g x)))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) (\lambda _10612. ((= _10612) d) d))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) (\lambda _10612. ((= _10612) d) (g x))))) ;)

(; dict ;)

def thm_1386 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A B) -> a_2 : hol.term A -> x_3 : hol.term A -> d_4 : hol.term B -> hol.proof (hol.eq hol.bool ((__10612_5 : hol.term B => hol.eq B __10612_5 d_4) (hol.cond B (hol.eq A x_3 a_2) d_4 (g_1 x_3))) (hol.and (hol.imp (hol.eq A x_3 a_2) ((__10612_5 : hol.term B => hol.eq B __10612_5 d_4) d_4)) (hol.imp (hol.not (hol.eq A x_3 a_2)) ((__10612_5 : hol.term B => hol.eq B __10612_5 d_4) (g_1 x_3))))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A B) => a_2 : hol.term A => x_3 : hol.term A => d_4 : hol.term B => (B : hol.type => __485_1 : hol.term B => __482_2 : hol.term B => __483_3 : hol.term hol.bool => d_4 : hol.term B => thm_1385 B __485_1 __482_2 __483_3 d_4) B (g_1 x_3) d_4 (hol.eq A x_3 a_2) d_4.

(; Theorem: |- ((= ((= (((Data.Bool.cond ((= x) a)) d) (g x))) d)) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= d) d))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1387 : A : hol.type -> B : hol.type -> g_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> a_3 : hol.term A -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq B (hol.cond B (hol.eq A x_4 a_3) d_2 (g_1 x_4)) d_2) (hol.and (hol.imp (hol.eq A x_4 a_3) (hol.eq B d_2 d_2)) (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (g_1 x_4) d_2)))) :=
  A : hol.type => B : hol.type => g_1 : hol.term (hol.arr A B) => d_2 : hol.term B => a_3 : hol.term A => x_4 : hol.term A => hol.EQ_MP (hol.eq hol.bool ((__10612_5 : hol.term B => hol.eq B __10612_5 d_2) (hol.cond B (hol.eq A x_4 a_3) d_2 (g_1 x_4))) (hol.and (hol.imp (hol.eq A x_4 a_3) ((__10612_5 : hol.term B => hol.eq B __10612_5 d_2) d_2)) (hol.imp (hol.not (hol.eq A x_4 a_3)) ((__10612_5 : hol.term B => hol.eq B __10612_5 d_2) (g_1 x_4))))) (hol.eq hol.bool (hol.eq B (hol.cond B (hol.eq A x_4 a_3) d_2 (g_1 x_4)) d_2) (hol.and (hol.imp (hol.eq A x_4 a_3) (hol.eq B d_2 d_2)) (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (g_1 x_4) d_2)))) (thm_1384 A B g_1 a_3 x_4 d_2) (thm_1386 A B g_1 a_3 x_4 d_2).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= d) d))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) d)))) ((= (((Data.Bool.cond ((= x) a)) d) (g x))) d)) ;)

(; dict ;)

def thm_1388 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> a_3 : hol.term A -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (hol.imp (hol.eq A x_4 a_3) (hol.eq B d_2 d_2)) (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (g_1 x_4) d_2))) (hol.eq B (hol.cond B (hol.eq A x_4 a_3) d_2 (g_1 x_4)) d_2)) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => d_2 : hol.term B => a_3 : hol.term A => x_4 : hol.term A => hol.SYM hol.bool (hol.eq B (hol.cond B (hol.eq A x_4 a_3) d_2 (g_1 x_4)) d_2) (hol.and (hol.imp (hol.eq A x_4 a_3) (hol.eq B d_2 d_2)) (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (g_1 x_4) d_2))) (thm_1387 A B g_1 d_2 a_3 x_4).

(; Theorem: |- ((Data.Bool.==> ((= x) a)) ((= d) d)) ;)

(; dict ;)

def thm_1389 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> a_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.imp (hol.eq A x_3 a_2) (hol.eq B d_1 d_1)) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => a_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_3 a_2) => thm_972 B d_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) d))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= d) d))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1390 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> a_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.imp (hol.eq A x_4 a_3) (hol.eq B d_1 d_1)) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (g_2 x_4) d_1)) (hol.and (hol.imp (hol.eq A x_4 a_3) (hol.eq B d_1 d_1)) (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (g_2 x_4) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => a_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (hol.imp (hol.eq A x_4 a_3) (hol.eq B d_1 d_1)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.imp (hol.eq A x_4 a_3) (hol.eq B d_1 d_1)) (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (g_2 x_4) d_1)) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) d))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= d) d))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1391 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> a_3 : hol.term A -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (g_2 x_4) d_1)) (hol.and (hol.imp (hol.eq A x_4 a_3) (hol.eq B d_1 d_1)) (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (g_2 x_4) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => a_3 : hol.term A => x_4 : hol.term A => hol.PROVE_HYP (hol.imp (hol.eq A x_4 a_3) (hol.eq B d_1 d_1)) (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (g_2 x_4) d_1)) (hol.and (hol.imp (hol.eq A x_4 a_3) (hol.eq B d_1 d_1)) (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (g_2 x_4) d_1)))) (thm_1389 B A d_1 a_3 x_4) (hyp_1 : hol.proof (hol.imp (hol.eq A x_4 a_3) (hol.eq B d_1 d_1)) => thm_1390 B A d_1 g_2 a_3 x_4 hyp_1).

(; Theorem: |- ((= ((= (g x)) d)) ((= (g x)) d)) ;)

(; dict ;)

def thm_1392 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B (g_3 x_2) d_1) (hol.eq B (g_3 x_2) d_1)) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.eq B (g_3 x_2) d_1).

(; Theorem: |- ((= ((= (g x)) d)) ((= (g x)) d)) ;)

(; dict ;)

def thm_1393 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B (g_3 x_2) d_1) (hol.eq B (g_3 x_2) d_1)) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hol.SYM hol.bool (hol.eq B (g_3 x_2) d_1) (hol.eq B (g_3 x_2) d_1) (thm_1392 A B d_1 x_2 g_3).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d))) ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d))) ;)

(; dict ;)

def thm_1394 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> x_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3))) (hol.eq B (g_2 x_5) d_1)) (hol.imp (hol.not (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3))) (hol.eq B (g_2 x_5) d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => x_5 : hol.term A => hol.REFL hol.bool (hol.imp (hol.not (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3))) (hol.eq B (g_2 x_5) d_1)).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d))) ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d))) ;)

(; dict ;)

def thm_1395 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> x_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3))) (hol.eq B (g_2 x_5) d_1)) (hol.imp (hol.not (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3))) (hol.eq B (g_2 x_5) d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => x_5 : hol.term A => hol.TRANS hol.bool (hol.imp (hol.not (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3))) (hol.eq B (g_2 x_5) d_1)) (hol.imp (hol.not (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3))) (hol.eq B (g_2 x_5) d_1)) (hol.imp (hol.not (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3))) (hol.eq B (g_2 x_5) d_1)) (thm_1394 B A d_1 g_2 s_3 a_4 x_5) (thm_1394 B A d_1 g_2 s_3 a_4 x_5).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d)) ;)

(; dict ;)

def thm_1396 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (hol.eq B (g_2 x_6) d_1))) -> hol.proof (hol.imp (hol.not (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3))) (hol.eq B (g_2 x_5) d_1)) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (hol.eq B (g_2 x_6) d_1))) => thm_1187 B A d_1 g_2 s_3 a_4 hyp_1 x_5.

(; Theorem: |- ((= ((= ((Set.member x) s)) Data.Bool.F)) ((= ((Set.member x) s)) Data.Bool.F)) ;)

(; dict ;)

def thm_1397 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.false) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.false)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.false).

(; Theorem: |- ((= ((= ((Set.member x) s)) Data.Bool.F)) ((= ((Set.member x) s)) Data.Bool.F)) ;)

(; dict ;)

def thm_1398 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.false) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.false)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.false) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.false) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.false) (thm_1397 A s_1 x_2) (thm_1397 A s_1 x_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= ((Set.member x) s)) Data.Bool.F)) ;)

(; dict ;)

def thm_1399 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.false)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => (P_1 : hol.term hol.bool => thm_114 P_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1).

(; Theorem: |- ((= ((Set.member x) s)) Data.Bool.F) ;)

(; dict ;)

def thm_1400 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1) hol.false) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) => thm_1399 A s_1 x_2 (thm_1119 A s_1 x_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Data.Bool.\/ Data.Bool.F) Data.Bool.F)) ;)

(; dict ;)

def thm_1401 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_2)) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) -> hol.proof (hol.eq hol.bool (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) (hol.or hol.false hol.false)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_2)) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) => hol.APP_THM hol.bool hol.bool (hol.or (hol.eq A x_3 a_2)) (hol.or hol.false) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) hol.false (thm_1349 A a_2 x_3 hyp_1) (hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) hol.false) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) hol.false) (thm_1398 A s_1 x_3) (thm_1400 A s_1 x_3 hyp_2)).

(; Theorem: |- ((= ((Data.Bool.\/ Data.Bool.F) Data.Bool.F)) Data.Bool.F) ;)

(; dict ;)

def thm_1402 : hol.proof (hol.eq hol.bool (hol.or hol.false hol.false) hol.false) :=
  (t_1 : hol.term hol.bool => thm_1291 t_1) hol.false.

(; Theorem: |- ((= ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) Data.Bool.F) ;)

(; dict ;)

def thm_1403 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_2)) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) -> hol.proof (hol.eq hol.bool (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) hol.false) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_2)) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) => hol.TRANS hol.bool (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) (hol.or hol.false hol.false) hol.false (thm_1401 A s_1 a_2 x_3 hyp_1 hyp_2) thm_1402.

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) (Data.Bool.~ Data.Bool.F)) ;)

(; dict ;)

def thm_1404 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_2)) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) -> hol.proof (hol.eq hol.bool (hol.not (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) (hol.not hol.false)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_2)) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) => hol.APP_THM hol.bool hol.bool hol.not hol.not (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) hol.false thm_221 (thm_1403 A s_1 a_2 x_3 hyp_1 hyp_2).

(; Theorem: |- ((= (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) Data.Bool.T) ;)

(; dict ;)

def thm_1405 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_2)) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) -> hol.proof (hol.eq hol.bool (hol.not (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_2)) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) => hol.TRANS hol.bool (hol.not (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) (hol.not hol.false) hol.true (thm_1404 A s_1 a_2 x_3 hyp_1 hyp_2) thm_15.

(; Theorem: |- ((= Data.Bool.T) (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ;)

(; dict ;)

def thm_1406 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_2)) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) -> hol.proof (hol.eq hol.bool hol.true (hol.not (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_2)) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) => hol.SYM hol.bool (hol.not (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) hol.true (thm_1405 A s_1 a_2 x_3 hyp_1 hyp_2).

(; Theorem: |- (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ;)

(; dict ;)

def thm_1407 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_2)) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) -> hol.proof (hol.not (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_2)) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) => hol.EQ_MP hol.true (hol.not (hol.or (hol.eq A x_3 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) (thm_1406 A s_1 a_2 x_3 hyp_1 hyp_2) thm_10.

(; Theorem: |- ((= (g x)) d) ;)

(; dict ;)

def thm_1408 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> d_3 : hol.term B -> x_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B (g_5 x_6) d_3))) -> hyp_2 : hol.proof (hol.not (hol.eq A x_4 a_2)) -> hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) -> hol.proof (hol.eq B (g_5 x_4) d_3) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => d_3 : hol.term B => x_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B (g_5 x_6) d_3))) => hyp_2 : hol.proof (hol.not (hol.eq A x_4 a_2)) => hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) => (B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (hol.eq B (g_2 x_6) d_1))) => hol.EQ_MP (hol.imp (hol.not (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3))) (hol.eq B (g_2 x_5) d_1)) (hol.imp (hol.not (hol.or (hol.eq A x_5 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3))) (hol.eq B (g_2 x_5) d_1)) (thm_1395 B A d_1 g_2 s_3 a_4 x_5) (thm_1396 B A d_1 g_2 s_3 a_4 x_5 hyp_1)) B A d_3 g_5 s_1 a_2 x_4 hyp_1 (thm_1407 A s_1 a_2 x_4 hyp_2 hyp_3).

(; Theorem: |- ((= (g x)) d) ;)

(; dict ;)

def thm_1409 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> d_3 : hol.term B -> x_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B (g_5 x_6) d_3))) -> hyp_2 : hol.proof (hol.not (hol.eq A x_4 a_2)) -> hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) -> hol.proof (hol.eq B (g_5 x_4) d_3) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => d_3 : hol.term B => x_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B (g_5 x_6) d_3))) => hyp_2 : hol.proof (hol.not (hol.eq A x_4 a_2)) => hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_1)) => hol.PROVE_HYP (hol.not (hol.eq A x_4 a_2)) (hol.eq B (g_5 x_4) d_3) (thm_1118 A a_2 x_4 hyp_2) (hyp_4 : hol.proof (hol.not (hol.eq A x_4 a_2)) => hol.EQ_MP (hol.eq B (g_5 x_4) d_3) (hol.eq B (g_5 x_4) d_3) (thm_1393 A B d_3 x_4 g_5) (thm_1408 A B s_1 a_2 d_3 x_4 g_5 hyp_1 hyp_4 hyp_3)).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) d)) ;)

(; dict ;)

def thm_1410 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> d_2 : hol.term B -> g_3 : hol.term (hol.arr A B) -> a_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B (g_3 x_6) d_2))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) -> hol.proof (hol.imp (hol.not (hol.eq A x_5 a_4)) (hol.eq B (g_3 x_5) d_2)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => d_2 : hol.term B => g_3 : hol.term (hol.arr A B) => a_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B (g_3 x_6) d_2))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) => hyp_3 : hol.proof (hol.not (hol.eq A x_5 a_4)) => thm_1409 A B s_1 a_4 d_2 x_5 g_3 hyp_1 hyp_3 hyp_2.

(; Theorem: |- ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= d) d))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) d))) ;)

(; dict ;)

def thm_1411 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> a_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B (g_2 x_6) d_3))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) -> hol.proof (hol.and (hol.imp (hol.eq A x_5 a_4) (hol.eq B d_3 d_3)) (hol.imp (hol.not (hol.eq A x_5 a_4)) (hol.eq B (g_2 x_5) d_3))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr A B) => d_3 : hol.term B => a_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B (g_2 x_6) d_3))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) => hol.EQ_MP (hol.imp (hol.not (hol.eq A x_5 a_4)) (hol.eq B (g_2 x_5) d_3)) (hol.and (hol.imp (hol.eq A x_5 a_4) (hol.eq B d_3 d_3)) (hol.imp (hol.not (hol.eq A x_5 a_4)) (hol.eq B (g_2 x_5) d_3))) (thm_1391 B A d_3 g_2 a_4 x_5) (thm_1410 B A s_1 d_3 g_2 a_4 x_5 hyp_1 hyp_2).

(; Theorem: |- ((= (((Data.Bool.cond ((= x) a)) d) (g x))) d) ;)

(; dict ;)

def thm_1412 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> g_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> a_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B (g_2 x_6) d_3))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) -> hol.proof (hol.eq B (hol.cond B (hol.eq A x_5 a_4) d_3 (g_2 x_5)) d_3) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => g_2 : hol.term (hol.arr A B) => d_3 : hol.term B => a_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B (g_2 x_6) d_3))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) => hol.EQ_MP (hol.and (hol.imp (hol.eq A x_5 a_4) (hol.eq B d_3 d_3)) (hol.imp (hol.not (hol.eq A x_5 a_4)) (hol.eq B (g_2 x_5) d_3))) (hol.eq B (hol.cond B (hol.eq A x_5 a_4) d_3 (g_2 x_5)) d_3) (thm_1388 B A g_2 d_3 a_4 x_5) (thm_1411 B A s_1 g_2 d_3 a_4 x_5 hyp_1 hyp_2).

(; Theorem: |- ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) d) ;)

(; dict ;)

def thm_1413 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> d_4 : hol.term B -> a_5 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B (g_3 x_6) d_4))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) -> hol.proof (hol.eq B ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_5) d_4 (g_3 x_6)) x_2) d_4) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => d_4 : hol.term B => a_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B (g_3 x_6) d_4))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) => hol.EQ_MP (hol.eq B (hol.cond B (hol.eq A x_2 a_5) d_4 (g_3 x_2)) d_4) (hol.eq B ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_5) d_4 (g_3 x_6)) x_2) d_4) (thm_1375 A B g_3 d_4 a_5 x_2) (thm_1412 A B s_1 g_3 d_4 a_5 x_2 hyp_1 hyp_2).

(; Theorem: |- ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) d) ;)

(; dict ;)

def thm_1414 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> d_4 : hol.term B -> a_5 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B (g_3 x_6) d_4))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) -> hol.proof (hol.eq B ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_5) d_4 (g_3 x_6)) x_2) d_4) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => d_4 : hol.term B => a_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B (g_3 x_6) d_4))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) => hol.PROVE_HYP (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.eq B ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_5) d_4 (g_3 x_6)) x_2) d_4) (thm_1119 A s_1 x_2 hyp_2) (hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) => thm_1413 A B s_1 x_2 g_3 d_4 a_5 hyp_1 hyp_3).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) d)) ;)

(; dict ;)

def thm_1415 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> a_3 : hol.term A -> s_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_1 x_6) d_2))) -> hol.proof (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) d_2 (g_1 x_6)) x_5) d_2)) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => d_2 : hol.term B => a_3 : hol.term A => s_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_1 x_6) d_2))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) => thm_1414 A B s_4 x_5 g_1 d_2 a_3 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) d))) ;)

(; dict ;)

def thm_1416 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> a_3 : hol.term A -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_5 a_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4))) (hol.eq B (g_1 x_5) d_2))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B ((x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_3) d_2 (g_1 x_6)) x_5) d_2))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => d_2 : hol.term B => a_3 : hol.term A => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_5 a_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4))) (hol.eq B (g_1 x_5) d_2))) => x_5 : hol.term A => thm_1415 B A g_1 d_2 a_3 s_4 x_5 hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) d)))) ;)

(; dict ;)

def thm_1417 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> g_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> a_4 : hol.term A -> s_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5))) (hol.eq B (g_2 x_6) d_3))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_6) t_1))) -> hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_5)) -> hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) d_3)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => g_2 : hol.term (hol.arr A B) => d_3 : hol.term B => a_4 : hol.term A => s_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5))) (hol.eq B (g_2 x_6) d_3))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_6) t_1))) => hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_5)) => hol.EQ_MP (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) d_3))) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) d_3)))) (thm_1369 B A t_1 g_2 d_3 a_4 s_5 hyp_2 hyp_3) (hol.EQ_MP (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) d_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_2 x_7)) x_6) d_3))) (thm_1372 B A g_2 d_3 a_4 s_5) (thm_1416 B A g_2 d_3 a_4 s_5 hyp_1)).

(; Theorem: |- ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) d))))) ;)

(; dict ;)

def thm_1418 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) (hol.eq B (g_5 x_6) d_1))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) -> hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2)) -> hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6) d_1))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) (hol.eq B (g_5 x_6) d_1))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) => hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2)) => hol.EQ_MP (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6) d_1)))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6) d_1))))) (thm_1315 B A t_3 g_5 d_1 a_4 s_2 hyp_2) (thm_1417 B A t_3 g_5 d_1 a_4 s_2 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)))) ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) d) (g x)) x)) d)))))) ;)

(; dict ;)

def thm_1419 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> d_3 : hol.term B -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B (g_5 x_6) d_3))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_2))) -> hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_1)) -> hol.proof (hol.and (hol.eq (hol.arr A B) g_5 (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_5 a_4) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_5 x_7)) x_6))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_2) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_5 x_7)) x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_5 x_7)) x_6) d_3)))))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => d_3 : hol.term B => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1))) (hol.eq B (g_5 x_6) d_3))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_2))) => hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_1)) => hol.EQ_MP (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_2) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_5 x_7)) x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_5 x_7)) x_6) d_3))))) (hol.and (hol.eq (hol.arr A B) g_5 (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_5 a_4) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_5 x_7)) x_6))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_2) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_5 x_7)) x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_3 (g_5 x_7)) x_6) d_3)))))) (thm_1267 A B d_3 s_1 t_2 a_4 g_5) (thm_1418 A B d_3 s_1 t_2 a_4 g_5 hyp_1 hyp_2 hyp_3).

(; Theorem: |- (\lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (b x)))) ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))) \lambda x. (((Data.Bool.cond ((= x) a)) d) (g x))) ;)

(; dict ;)

def thm_1420 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) (hol.eq B (g_5 x_6) d_1))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) -> hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2)) -> hol.proof ((b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1)))))) (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) d_1 (g_5 x_6))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) (hol.eq B (g_5 x_6) d_1))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) => hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2)) => hol.EQ_MP (hol.and (hol.eq (hol.arr A B) g_5 (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_5 a_4) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) d_1 (g_5 x_7)) x_6) d_1)))))) ((b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1)))))) (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) d_1 (g_5 x_6))) (thm_1191 B A s_2 t_3 d_1 a_4 g_5) (thm_1419 B A s_2 t_3 d_1 a_4 g_5 hyp_1 hyp_2 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (b x)))) ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))) ;)

(; dict ;)

def thm_1421 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof ((b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1)))))) (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) d_1 (g_5 x_6))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof ((b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1)))))) (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) d_1 (g_5 x_6))) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_602 A x_1 P_2 hyp_1) (hol.arr A B) (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) d_1 (g_5 x_6)) (b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1)))))) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (b x)))) ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))) ;)

(; dict ;)

def thm_1422 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) (hol.eq B (g_5 x_6) d_1))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) -> hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) (hol.eq B (g_5 x_6) d_1))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) => hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2)) => hol.PROVE_HYP ((b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1)))))) (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) d_1 (g_5 x_6))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1))))))) (thm_1420 B A d_1 s_2 t_3 a_4 g_5 hyp_1 hyp_2 hyp_3) (hyp_4 : hol.proof ((b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1)))))) (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) d_1 (g_5 x_6))) => thm_1421 B A d_1 s_2 t_3 a_4 g_5 hyp_4).

(; Theorem: |- (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))) (g a)) ;)

(; dict ;)

def thm_1423 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) (hol.eq B (g_5 x_6) d_1))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) -> hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2)) -> hol.proof ((a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1))))))) (g_5 a_4)) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) (hol.eq B (g_5 x_6) d_1))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) => hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2)) => hol.EQ_MP (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1))))))) ((a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1))))))) (g_5 a_4)) (thm_1189 B A d_1 s_2 t_3 a_4 g_5) (thm_1422 B A d_1 s_2 t_3 a_4 g_5 hyp_1 hyp_2 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))))) ;)

(; dict ;)

def thm_1424 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof ((a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1))))))) (g_5 a_4)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof ((a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1))))))) (g_5 a_4)) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_602 A x_1 P_2 hyp_1) B (g_5 a_4) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1))))))) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))))) ;)

(; dict ;)

def thm_1425 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) (hol.eq B (g_5 x_6) d_1))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) -> hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) (hol.eq B (g_5 x_6) d_1))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) => hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2)) => hol.PROVE_HYP ((a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1))))))) (g_5 a_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))))) (thm_1423 A B d_1 s_2 t_3 a_4 g_5 hyp_1 hyp_2 hyp_3) (hyp_4 : hol.proof ((a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1))))))) (g_5 a_4)) => thm_1424 A B d_1 s_2 t_3 a_4 g_5 hyp_4).

(; Theorem: |- (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))))) ;)

(; dict ;)

def thm_1426 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) (hol.eq B (g_5 x_6) d_1))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) -> hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) (hol.eq B (g_5 x_6) d_1))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) => hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2)) => hol.PROVE_HYP (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) (hol.eq B (g_5 x_6) d_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))))) (thm_1187 B A d_1 g_5 s_2 a_4 hyp_1) (hyp_4 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) (hol.eq B (g_5 x_6) d_1))) => thm_1425 A B d_1 s_2 t_3 a_4 g_5 hyp_4 hyp_2 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))))) ;)

(; dict ;)

def thm_1427 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) (hol.eq B (g_5 x_6) d_1))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) -> hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) (hol.eq B (g_5 x_6) d_1))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) => hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2)) => hol.PROVE_HYP (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))))) (thm_1186 B A t_3 g_5 s_2 a_4 hyp_2) (hyp_4 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) => thm_1426 A B d_1 s_2 t_3 a_4 g_5 hyp_1 hyp_4 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))))) ;)

(; dict ;)

def thm_1428 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2)) -> hyp_3 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) (hol.eq B (g_5 x_6) d_1)))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2)) => hyp_3 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) (hol.eq B (g_5 x_6) d_1)))) => hol.PROVE_HYP (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) (hol.eq B (g_5 x_6) d_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))))) (thm_1185 B A t_3 d_1 g_5 s_2 a_4 hyp_3) (hyp_4 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) (hol.eq B (g_5 x_6) d_1))) => thm_1427 A B d_1 s_2 t_3 a_4 g_5 hyp_4 hyp_1 hyp_2).

(; Theorem: |- (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))))) ;)

(; dict ;)

def thm_1429 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2)) -> hyp_2 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) (hol.eq B (g_5 x_6) d_1)))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2)) => hyp_2 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2))) (hol.eq B (g_5 x_6) d_1)))) => hol.PROVE_HYP (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))))) (thm_1183 B A d_1 t_3 g_5 s_2 a_4 hyp_2) (hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) => thm_1428 A B d_1 s_2 t_3 a_4 g_5 hyp_3 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))))) ;)

(; dict ;)

def thm_1430 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> g_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_4)) -> hol.proof (hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_3 x_6) d_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_3 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (b_7 x_8) d_1))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => g_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_4)) => hyp_2 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_3 x_6) d_1)))) => thm_1429 A B d_1 s_4 t_2 a_5 g_3 hyp_1 hyp_2.

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (g x)) d))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))))) ;)

(; dict ;)

def thm_1431 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> g_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_4)) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_3 x_6) d_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_3 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (b_7 x_8) d_1))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => g_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_4)) => hol.PROP_EXT (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_3 x_6) d_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_3 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (b_7 x_8) d_1)))))))) (hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_3 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (b_7 x_8) d_1)))))))) => (hyp_3 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_3 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (b_7 x_8) d_1)))))))) => thm_1180 B A d_1 t_2 g_3 s_4 a_5 hyp_3 hyp_1) (thm_1179 A B d_1 s_4 t_2 a_5 g_3 hyp_2)) (hyp_2 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_5) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4))) (hol.eq B (g_3 x_6) d_1)))) => thm_1430 B A d_1 t_2 g_3 s_4 a_5 hyp_1 (thm_1181 B A d_1 t_2 g_3 s_4 a_5 hyp_2)).

(; Theorem: |- ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) ;)

(; dict ;)

def thm_1432 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3)) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3)) => hol.EQ_MP (hol.eq hol.bool (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_6 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3))) (hol.eq B (g_5 x_6) d_1)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)) (hol.eq B (b_7 x_8) d_1))))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1))))))))))) (thm_898 B A d_1 t_2 g_5 s_3 a_4) (thm_1431 B A d_1 t_2 g_5 s_3 a_4 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda g. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ;)

(; dict ;)

def thm_1433 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3)) -> hol.proof (hol.forall (hol.arr A B) (g_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1)))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3)) => g_5 : hol.term (hol.arr A B) => thm_1432 B A d_1 t_2 s_3 a_4 g_5 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.\/ ((= x) a)) ((Set.member x) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Data.Bool.\/ ((= x) a)) ((Set.member x) s)))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ;)

(; dict ;)

def thm_1434 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3)) -> hol.proof (hol.forall (hol.arr A B) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1)))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3)) => hol.EQ_MP (hol.forall (hol.arr A B) (g_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1)))))))))))) (hol.forall (hol.arr A B) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1)))))))))))) (thm_869 B A d_1 t_2 s_3 a_4) (thm_1433 B A d_1 t_2 s_3 a_4 hyp_1).

(; Theorem: |- ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) ;)

(; dict ;)

def thm_1435 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3)) -> hol.proof (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3)) => hol.EQ_MP (hol.forall (hol.arr A B) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (hol.or (hol.eq A x_7 a_4) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_2))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (f_8 x_9) d_1)))))))))))) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))) (thm_865 B A d_1 t_2 s_3 a_4) (thm_1434 B A d_1 t_2 s_3 a_4 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((Set.member a) s))) ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) ;)

(; dict ;)

def thm_1436 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hol.proof (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3)) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3)) => thm_1435 B A d_1 t_2 s_3 a_4 hyp_1.

(; Theorem: |- ((= ((= ((Set.member a) s)) Data.Bool.T)) ((= ((Set.member a) s)) Data.Bool.T)) ;)

(; dict ;)

def thm_1437 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) hol.true).

(; Theorem: |- ((= ((= ((Set.member a) s)) Data.Bool.T)) ((= ((Set.member a) s)) Data.Bool.T)) ;)

(; dict ;)

def thm_1438 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) hol.true) (thm_1437 A s_1 a_2) (thm_1437 A s_1 a_2).

(; Theorem: |- ((= ((Set.member a) s)) ((= ((Set.member a) s)) Data.Bool.T)) ;)

(; dict ;)

def thm_1439 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => (t_1 : hol.term hol.bool => thm_180 t_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1).

(; Theorem: |- ((Set.member a) s) ;)

(; dict ;)

def thm_1440 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) -> hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) => hyp_1.

(; Theorem: |- ((= ((Set.member a) s)) Data.Bool.T) ;)

(; dict ;)

def thm_1441 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) hol.true) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) => hol.EQ_MP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) hol.true) (thm_1439 A s_1 a_2) (thm_1440 A s_1 a_2 hyp_1).

(; Theorem: |- ((= (= ((Set.member a) s))) (= Data.Bool.T)) ;)

(; dict ;)

def thm_1442 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1)) (hol.eq hol.bool hol.true)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) hol.true thm_77 (hol.EQ_MP (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) hol.true) (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) hol.true) (thm_1438 A s_1 a_2) (thm_1441 A s_1 a_2 hyp_1)).

(; Theorem: |- ((= ((= ((Set.insert a) s)) s)) ((= ((Set.insert a) s)) s)) ;)

(; dict ;)

def thm_1443 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => hol.REFL hol.bool (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1).

(; Theorem: |- ((= ((= ((Set.member a) s)) ((= ((Set.insert a) s)) s))) ((= Data.Bool.T) ((= ((Set.insert a) s)) s))) ;)

(; dict ;)

def thm_1444 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1)) (hol.eq hol.bool hol.true (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1)) (hol.eq hol.bool hol.true) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1) (thm_1442 A s_1 a_2 hyp_1) (thm_1443 A s_1 a_2).

(; Theorem: |- ((= ((= ((= Data.Bool.T) t)) t)) ((= ((= Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_1445 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1).

(; Theorem: |- ((= ((= ((= Data.Bool.T) t)) t)) ((= ((= Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_1446 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (thm_1445 t_1) (thm_1445 t_1).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_1447 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_1448 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) thm_1447 thm_1447.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_1449 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) thm_123 thm_1448.

(; Theorem: |- ((= ((= Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_1450 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_43 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_1451 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_1452 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (thm_1445 t_1) (thm_1450 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) => thm_1451 t_1 hyp_1).

(; Theorem: |- ((= ((= ((= t) Data.Bool.T)) t)) ((= ((= t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_1453 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1).

(; Theorem: |- ((= ((= ((= t) Data.Bool.T)) t)) ((= ((= t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_1454 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (thm_1453 t_1) (thm_1453 t_1).

(; Theorem: |- ((= ((= t) Data.Bool.T)) t) ;)

(; dict ;)

def thm_1455 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) :=
  t_1 : hol.term hol.bool => thm_44 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_1456 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_1457 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (thm_1454 t_1) (thm_1455 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) => thm_1456 t_1 hyp_1).

(; Theorem: |- ((= ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_1458 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)).

(; Theorem: |- ((= ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_1459 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (thm_1458 t_1) (thm_1458 t_1).

(; Theorem: |- ((= ((= Data.Bool.F) t)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_1460 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => thm_45 t_1.

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_1461 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) hyp_1.

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_1462 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (thm_1459 t_1) (thm_1460 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) => thm_1461 t_1 hyp_1).

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_1463 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)).

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_1464 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (thm_1463 t_1) (thm_1463 t_1).

(; Theorem: |- ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_1465 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => thm_46 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_1466 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (thm_1462 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (thm_1464 t_1) (thm_1465 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_1467 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (thm_1457 t_1) (thm_1466 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_1468 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (thm_1452 t_1) (thm_1467 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_1469 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => thm_1468 t_1.

(; Theorem: |- ((= ((= Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_1470 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_208 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) hyp_1.

(; Theorem: |- ((= ((= Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_1471 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_2) (hol.not t_2)) (hol.eq hol.bool (hol.eq hol.bool t_2 hol.false) (hol.not t_2)))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_2) (hol.not t_2)) (hol.eq hol.bool (hol.eq hol.bool t_2 hol.false) (hol.not t_2)))))) thm_1449 thm_1469 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) => thm_1470 t_1 hyp_1).

(; Theorem: |- ((= ((= Data.Bool.T) ((= ((Set.insert a) s)) s))) ((= ((Set.insert a) s)) s)) ;)

(; dict ;)

def thm_1472 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1)) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (thm_1446 t_1) (thm_1471 t_1)) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1).

(; Theorem: |- ((= ((= ((Set.member a) s)) ((= ((Set.insert a) s)) s))) ((= ((Set.insert a) s)) s)) ;)

(; dict ;)

def thm_1473 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1)) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) => hol.TRANS hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1)) (hol.eq hol.bool hol.true (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1)) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1) (thm_1444 A s_1 a_2 hyp_1) (thm_1472 A s_1 a_2).

(; Theorem: |- ((= (Data.Bool.==> ((= ((Set.member a) s)) ((= ((Set.insert a) s)) s)))) (Data.Bool.==> ((= ((Set.insert a) s)) s))) ;)

(; dict ;)

def thm_1474 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1))) (hol.imp (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1)) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1) thm_96 (thm_1473 A s_1 a_2 hyp_1).

(; Theorem: |- ((= ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) ;)

(; dict ;)

def thm_1475 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hol.REFL hol.bool (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))).

(; Theorem: |- ((= ((Data.Bool.==> ((= ((Set.member a) s)) ((= ((Set.insert a) s)) s))) ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ((Data.Bool.==> ((= ((Set.insert a) s)) s)) ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ;)

(; dict ;)

def thm_1476 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3)) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) (hol.imp (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3))) (hol.imp (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3)) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))) (thm_1474 A s_3 a_4 hyp_1) (thm_1475 B A d_1 t_2 s_3 a_4).

(; Theorem: |- ((= ((Data.Bool.==> ((= ((Set.insert a) s)) s)) ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ((Data.Bool.==> ((= ((Set.member a) s)) ((= ((Set.insert a) s)) s))) ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ;)

(; dict ;)

def thm_1477 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) (hol.imp (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3)) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) => hol.SYM hol.bool (hol.imp (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3)) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) (hol.imp (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) (thm_1476 B A d_1 t_2 s_3 a_4 hyp_1).

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_1478 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (Set_2Eset (hol.arr A B)) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) (hol.eq (Set_2Eset (hol.arr A B))) (hol.eq (Set_2Eset (hol.arr A B)))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (Set_2Eset (hol.arr A B)) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) (hol.eq (Set_2Eset (hol.arr A B))).

(; Theorem: |- ((= Set.fromPredicate) Set.fromPredicate) ;)

(; dict ;)

def thm_1479 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B)))) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B)))).

(; Theorem: |- ((= (Data.Bool./\ ((= v) f))) (Data.Bool./\ ((= v) f))) ;)

(; dict ;)

def thm_1480 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> v_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq (hol.arr A B) v_2 f_1)) (hol.and (hol.eq (hol.arr A B) v_2 f_1))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => v_2 : hol.term (hol.arr A B) => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (hol.eq (hol.arr A B) v_2 f_1)).

(; Theorem: |- ((= (Set.member x)) (Set.member x)) ;)

(; dict ;)

def thm_1481 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq (hol.arr (Set_2Eset A) hol.bool) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1)) :=
  A : hol.type => x_1 : hol.term A => hol.REFL (hol.arr (Set_2Eset A) hol.bool) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_1).

(; Theorem: |- ((= ((Set.insert a) s)) s) ;)

(; dict ;)

def thm_1482 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1) -> hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1) => hyp_1.

(; Theorem: |- ((= ((Set.member x) ((Set.insert a) s))) ((Set.member x) s)) ;)

(; dict ;)

def thm_1483 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1) => hol.APP_THM (Set_2Eset A) hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1 (thm_1481 A x_3) (hol.EQ_MP (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1) (thm_1443 A s_1 a_2) (thm_1482 A s_1 a_2 hyp_1)).

(; Theorem: |- ((= (Data.Bool.==> ((Set.member x) ((Set.insert a) s)))) (Data.Bool.==> ((Set.member x) s))) ;)

(; dict ;)

def thm_1484 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1))) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) thm_96 (thm_1483 A s_1 a_2 x_3 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t))) ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t))) ;)

(; dict ;)

def thm_1485 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1) (thm_1484 A s_3 a_4 x_5 hyp_1) (thm_119 A B t_1 x_5 f_2).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t))) \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t))) ;)

(; dict ;)

def thm_1486 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)) (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) => hol.ABS_THM A hol.bool (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)) (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)) (x_5 : hol.term A => thm_1485 B A t_1 f_2 s_3 a_4 x_5 hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) ;)

(; dict ;)

def thm_1487 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) -> hol.proof (hol.eq hol.bool (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)) (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)) (thm_95 A) (thm_1486 B A t_1 f_2 s_3 a_4 hyp_1).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t))))) (Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t))))) ;)

(; dict ;)

def thm_1488 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1)))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_2 x_5) t_1))) thm_94 (thm_1487 B A t_1 f_2 s_3 a_4 hyp_1).

(; Theorem: |- ((= (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) (Data.Bool.~ ((Set.member x) s))) ;)

(; dict ;)

def thm_1489 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1) -> hol.proof (hol.eq hol.bool (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1))) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1) => hol.APP_THM hol.bool hol.bool hol.not hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1) thm_221 (thm_1483 A s_1 a_2 x_3 hyp_1).

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s))))) (Data.Bool.==> (Data.Bool.~ ((Set.member x) s)))) ;)

(; dict ;)

def thm_1490 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1)))) (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1))) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_1)) thm_96 (thm_1489 A s_1 a_2 x_3 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d))) ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))) ;)

(; dict ;)

def thm_1491 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_2 x_5) d_1)) (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (hol.eq B (f_2 x_5) d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)))) (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3))) (hol.eq B (f_2 x_5) d_1) (hol.eq B (f_2 x_5) d_1) (thm_1490 A s_3 a_4 x_5 hyp_1) (thm_234 A B d_1 x_5 f_2).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d))) \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))) ;)

(; dict ;)

def thm_1492 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_2 x_5) d_1)) (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (hol.eq B (f_2 x_5) d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) => hol.ABS_THM A hol.bool (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_2 x_5) d_1)) (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (hol.eq B (f_2 x_5) d_1)) (x_5 : hol.term A => thm_1491 B A d_1 f_2 s_3 a_4 x_5 hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))) ;)

(; dict ;)

def thm_1493 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> f_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) -> hol.proof (hol.eq hol.bool (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_2 x_5) d_1))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (hol.eq B (f_2 x_5) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => f_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_2 x_5) d_1)) (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (hol.eq B (f_2 x_5) d_1)) (thm_95 A) (thm_1492 B A d_1 f_2 s_3 a_4 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))) ;)

(; dict ;)

def thm_1494 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> f_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> a_5 : hol.term A -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4) s_4) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4))) (hol.eq B (f_3 x_6) d_1)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (hol.eq B (f_3 x_6) d_1))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => f_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => a_5 : hol.term A => hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4) s_4) => hol.APP_THM hol.bool hol.bool (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_2)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_3 x_6) t_2)))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_5 s_4))) (hol.eq B (f_3 x_6) d_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (hol.eq B (f_3 x_6) d_1))) (thm_1488 B A t_2 f_3 s_4 a_5 hyp_1) (thm_1493 B A d_1 f_3 s_4 a_5 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))) ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))) ;)

(; dict ;)

def thm_1495 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> f_5 : hol.term (hol.arr A B) -> v_6 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq (hol.arr A B) v_6 f_5) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_5 x_7) d_1))))) (hol.and (hol.eq (hol.arr A B) v_6 f_5) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_5 x_7) d_1)))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => f_5 : hol.term (hol.arr A B) => v_6 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq (hol.arr A B) v_6 f_5)) (hol.and (hol.eq (hol.arr A B) v_6 f_5)) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_5 x_7) d_1)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_5 x_7) d_1)))) (thm_1480 B A f_5 v_6) (thm_1494 B A d_1 t_2 f_5 s_3 a_4 hyp_1).

(; Theorem: |- ((= \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))) \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))) ;)

(; dict ;)

def thm_1496 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> v_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => v_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) => hol.ABS_THM (hol.arr A B) hol.bool (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))) (f_6 : hol.term (hol.arr A B) => thm_1495 B A d_1 t_2 s_3 a_4 f_6 v_5 hyp_1).

(; Theorem: |- ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d))))))) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) ;)

(; dict ;)

def thm_1497 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> v_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => v_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool)) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))) (thm_92 B A) (thm_1496 B A d_1 t_2 s_3 a_4 v_5 hyp_1).

(; Theorem: |- ((= \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d))))))) \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) ;)

(; dict ;)

def thm_1498 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) => hol.ABS_THM (hol.arr A B) hol.bool (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))) (v_5 : hol.term (hol.arr A B) => thm_1497 B A d_1 t_2 s_3 a_4 v_5 hyp_1).

(; Theorem: |- ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))) ;)

(; dict ;)

def thm_1499 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) -> hol.proof (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B)))) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B)))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1)))))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))) (thm_1479 B A) (thm_1498 B A d_1 t_2 s_3 a_4 hyp_1).

(; Theorem: |- ((= (= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d))))))))) (= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))) ;)

(; dict ;)

def thm_1500 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) -> hol.proof (hol.eq (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1)))))))) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) => hol.APP_THM (Set_2Eset (hol.arr A B)) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool) (hol.eq (Set_2Eset (hol.arr A B))) (hol.eq (Set_2Eset (hol.arr A B))) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))) (thm_1478 B A) (thm_1499 B A d_1 t_2 s_3 a_4 hyp_1).

(; Theorem: |- ((= ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) ;)

(; dict ;)

def thm_1501 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> hol.proof (hol.eq (Set_2Eset (hol.arr A B)) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (f_6 x_7) d_1))))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (f_6 x_7) d_1)))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => hol.REFL (Set_2Eset (hol.arr A B)) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (f_6 x_7) d_1))))))))).

(; Theorem: |- ((= ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) ;)

(; dict ;)

def thm_1502 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) => hol.APP_THM (Set_2Eset (hol.arr A B)) hol.bool (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1)))))))) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))) (thm_1500 B A d_1 t_2 s_3 a_4 hyp_1) (thm_1501 B A d_1 s_3 t_2 a_4).

(; Theorem: |- ((= ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) ;)

(; dict ;)

def thm_1503 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_1 s_4) s_4) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))))))) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_1 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_1 s_4))) (hol.eq B (f_6 x_7) d_2))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2))))))))))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_1 s_4) s_4) => hol.SYM hol.bool (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_1 s_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_1 s_4))) (hol.eq B (f_6 x_7) d_2))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))))))) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))))))) (thm_1502 B A d_2 t_3 s_4 a_1 hyp_1).

(; Theorem: |- ((= ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) (Data.Bool.! \lambda x. ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))) ((Set.member x) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))) ;)

(; dict ;)

def thm_1504 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))))))) (hol.forall (hol.arr A B) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_2)))))))) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_7 : hol.term B => hol.forall (hol.arr A B) (g_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_7 g_8)) (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_1) b_7 (g_8 x_9)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_2))))))))))))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => (B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset (hol.arr A B)) => s_2 : hol.term (Set_2Eset (hol.arr A B)) => thm_74 B A t_1 s_2) B A (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2))))))))) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2))))))).

(; Theorem: |- ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))) (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))) x)) ;)

(; dict ;)

def thm_1505 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))) ((v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))) x_4)) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term (hol.arr A B) => (B : hol.type => A : hol.type => p_1 : hol.term (hol.arr (hol.arr A B) hol.bool) => x_2 : hol.term (hol.arr A B) => thm_82 B A p_1 x_2) B A (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))) x_4.

(; Theorem: |- ((= (\lambda v. (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))) v) x)) (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))) x)) ;)

(; dict ;)

def thm_1506 : B : hol.type -> A : hol.type -> x_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((v_5 : hol.term (hol.arr A B) => (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_2)))))) v_5) x_1) ((v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) x_1)) :=
  B : hol.type => A : hol.type => x_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr A B) hol.bool (v_5 : hol.term (hol.arr A B) => (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_2)))))) v_5) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) x_1 x_1 (thm_846 B A d_2 t_3 s_4) (thm_86 B A x_1).

(; Theorem: |- ((= (= (\lambda v. (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))) v) x))) (= (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))) x))) ;)

(; dict ;)

def thm_1507 : B : hol.type -> A : hol.type -> x_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((v_5 : hol.term (hol.arr A B) => (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_2)))))) v_5) x_1)) (hol.eq hol.bool ((v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) x_1))) :=
  B : hol.type => A : hol.type => x_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((v_5 : hol.term (hol.arr A B) => (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_2)))))) v_5) x_1) ((v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) x_1) thm_77 (thm_1506 B A x_1 d_2 t_3 s_4).

(; Theorem: |- ((= (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))) x)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) ;)

(; dict ;)

def thm_1508 : B : hol.type -> A : hol.type -> x_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) x_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_1 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (hol.eq B (f_5 x_6) d_2))))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hol.BETA_CONV (hol.arr A B) hol.bool (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) x_1.

(; Theorem: |- ((= ((= (\lambda v. (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))) v) x)) (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))) x))) ((= (\lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))) x)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))) ;)

(; dict ;)

def thm_1509 : B : hol.type -> A : hol.type -> x_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((v_5 : hol.term (hol.arr A B) => (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_2)))))) v_5) x_1) ((v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) x_1)) (hol.eq hol.bool ((v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) x_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_1 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (hol.eq B (f_5 x_6) d_2)))))))) :=
  B : hol.type => A : hol.type => x_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((v_5 : hol.term (hol.arr A B) => (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_2)))))) v_5) x_1)) (hol.eq hol.bool ((v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) x_1)) ((v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) x_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_1 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (hol.eq B (f_5 x_6) d_2)))))) (thm_1507 B A x_1 d_2 t_3 s_4) (thm_1508 B A x_1 d_2 t_3 s_4).

(; Theorem: |- ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) ;)

(; dict ;)

def thm_1510 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term (hol.arr A B) => hol.TRANS hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))) ((v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))) x_4) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1)))))) (thm_1505 B A d_1 t_2 s_3 x_4) (hol.EQ_MP (hol.eq hol.bool ((v_5 : hol.term (hol.arr A B) => (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_2))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)) (hol.eq B (f_7 x_8) d_1)))))) v_5) x_4) ((v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))) x_4)) (hol.eq hol.bool ((v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))) x_4) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1))))))) (thm_1509 B A x_4 d_1 t_2 s_3) (thm_1506 B A x_4 d_1 t_2 s_3)).

(; Theorem: |- ((= (= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) (= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))) ;)

(; dict ;)

def thm_1511 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1)))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1)))))) thm_77 (thm_1510 B A d_1 t_2 s_3 x_4).

(; Theorem: |- ((= ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))) ((Set.member x) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ;)

(; dict ;)

def thm_1512 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> x_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_2)))))))) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_7 : hol.term B => hol.forall (hol.arr A B) (g_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_7 g_8)) (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_1) b_7 (g_8 x_9)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_2))))))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2)))))))))))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => x_5 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_2))))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2))))))) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_7 : hol.term B => hol.forall (hol.arr A B) (g_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_7 g_8)) (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_1) b_7 (g_8 x_9)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_2)))))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2)))))))))) (thm_1511 B A d_2 t_3 s_4 x_5) (thm_860 B A d_2 s_4 t_3 a_1 x_5).

(; Theorem: |- ((= \lambda x. ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))) ((Set.member x) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) \lambda x. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ;)

(; dict ;)

def thm_1513 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_2)))))))) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_7 : hol.term B => hol.forall (hol.arr A B) (g_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_7 g_8)) (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_1) b_7 (g_8 x_9)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_2))))))))))) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2)))))))))))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hol.ABS_THM (hol.arr A B) hol.bool (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_2)))))))) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_7 : hol.term B => hol.forall (hol.arr A B) (g_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_7 g_8)) (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_1) b_7 (g_8 x_9)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_2))))))))))) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2))))))))))) (x_5 : hol.term (hol.arr A B) => thm_1512 B A a_1 d_2 t_3 s_4 x_5).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= ((Set.member x) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))) ((Set.member x) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))) ;)

(; dict ;)

def thm_1514 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_2)))))))) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_7 : hol.term B => hol.forall (hol.arr A B) (g_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_7 g_8)) (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_1) b_7 (g_8 x_9)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_2)))))))))))) (hol.forall (hol.arr A B) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2))))))))))))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B)) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_2)))))))) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_7 : hol.term B => hol.forall (hol.arr A B) (g_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_7 g_8)) (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_1) b_7 (g_8 x_9)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_2))))))))))) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2))))))))))) (thm_76 B A) (thm_1513 B A a_1 d_2 t_3 s_4).

(; Theorem: |- ((= ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))) ;)

(; dict ;)

def thm_1515 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))))))) (hol.forall (hol.arr A B) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2))))))))))))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))))))) (hol.forall (hol.arr A B) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_2)))))))) (Set_2Emember (hol.arr (hol.arr A B) (hol.arr (Set_2Eset (hol.arr A B)) hol.bool)) x_5 (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_6 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_7 : hol.term B => hol.forall (hol.arr A B) (g_8 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_6 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_7 g_8)) (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_1) b_7 (g_8 x_9)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_6 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_6 f_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (f_7 x_8) d_2)))))))))))) (hol.forall (hol.arr A B) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2)))))))))))) (thm_1504 B A a_1 d_2 t_3 s_4) (thm_1514 B A a_1 d_2 t_3 s_4).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))) ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) ;)

(; dict ;)

def thm_1516 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2)))))))))))) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2))))))))))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hol.SYM hol.bool (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))))))) (hol.forall (hol.arr A B) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2)))))))))))) (thm_1515 B A a_1 d_2 t_3 s_4).

(; Theorem: |- ((= \lambda g. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) \lambda g. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ;)

(; dict ;)

def thm_1517 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (g_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2))))))))))) (g_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2)))))))))))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hol.REFL (hol.arr (hol.arr A B) hol.bool) (g_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2))))))))))).

(; Theorem: |- ((= \lambda x. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) \lambda x. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ;)

(; dict ;)

def thm_1518 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2))))))))))) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2)))))))))))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hol.REFL (hol.arr (hol.arr A B) hol.bool) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2))))))))))).

(; Theorem: |- ((= \lambda g. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) \lambda x. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ;)

(; dict ;)

def thm_1519 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (g_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2))))))))))) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2)))))))))))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hol.TRANS (hol.arr (hol.arr A B) hol.bool) (g_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2))))))))))) (g_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2))))))))))) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2))))))))))) (thm_1517 B A a_1 d_2 t_3 s_4) (thm_1518 B A a_1 d_2 t_3 s_4).

(; Theorem: |- ((= (Data.Bool.! \lambda g. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))) (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))) ;)

(; dict ;)

def thm_1520 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (g_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2)))))))))))) (hol.forall (hol.arr A B) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2))))))))))))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B)) (g_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2))))))))))) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2))))))))))) (thm_76 B A) (thm_1519 B A a_1 d_2 t_3 s_4).

(; Theorem: |- ((= ((Data.Bool./\ ((= g) f)) (\lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))) f))) ((Data.Bool./\ ((= g) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))) ;)

(; dict ;)

def thm_1521 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> f_4 : hol.term (hol.arr A B) -> g_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq (hol.arr A B) g_5 f_4) ((f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))) f_4)) (hol.and (hol.eq (hol.arr A B) g_5 f_4) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_4 x_6) d_1)))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => f_4 : hol.term (hol.arr A B) => g_5 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq (hol.arr A B) g_5 f_4)) (hol.and (hol.eq (hol.arr A B) g_5 f_4)) ((f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))) f_4) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_4 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_4 x_6) d_1)))) (thm_296 B A f_4 g_5) (thm_882 B A f_4 d_1 t_2 s_3).

(; Theorem: |- ((= \lambda f. ((Data.Bool./\ ((= g) f)) (\lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))) f))) \lambda f. ((Data.Bool./\ ((= g) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))) ;)

(; dict ;)

def thm_1522 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> g_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 f_5) ((f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))) f_5)) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1)))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => g_4 : hol.term (hol.arr A B) => hol.ABS_THM (hol.arr A B) hol.bool (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 f_5) ((f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))) f_5)) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1))))) (f_5 : hol.term (hol.arr A B) => thm_1521 B A d_1 t_2 s_3 f_5 g_4).

(; Theorem: |- ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) (\lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))) f)))) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) ;)

(; dict ;)

def thm_1523 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> g_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 f_5) ((f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))) f_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => g_4 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool)) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 f_5) ((f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))) f_5)) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1))))) (thm_92 B A) (thm_1522 B A d_1 t_2 s_3 g_4).

(; Theorem: |- ((= (= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) (\lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))) f))))) (= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))) ;)

(; dict ;)

def thm_1524 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> g_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 f_5) ((f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))) f_5)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1)))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => g_4 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 f_5) ((f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))) f_5))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1)))))) thm_77 (thm_1523 B A d_1 t_2 s_3 g_4).

(; Theorem: |- ((= (\lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))) g)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d))))) ;)

(; dict ;)

def thm_1525 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((f_5 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (hol.eq B (f_5 x_6) d_2)))) g_1) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_1 x_5) t_3))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_1 x_5) d_2))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hol.BETA_CONV (hol.arr A B) hol.bool (f_5 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (hol.eq B (f_5 x_6) d_2)))) g_1.

(; Theorem: |- ((= ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) (\lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))) f)))) (\lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))) g))) ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))))) ;)

(; dict ;)

def thm_1526 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> g_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 f_5) ((f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))) f_5))) ((f_5 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1)))) g_4)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1)))))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (hol.eq B (g_4 x_5) d_1)))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => g_4 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 f_5) ((f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))) f_5)))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1))))))) ((f_5 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1)))) g_4) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (hol.eq B (g_4 x_5) d_1)))) (thm_1524 B A d_1 t_2 s_3 g_4) (thm_1525 B A g_4 d_1 t_2 s_3).

(; Theorem: |- ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) (\lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))) f)))) (\lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))) g)) ;)

(; dict ;)

def thm_1527 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> g_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 f_5) ((f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))) f_5))) ((f_5 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1)))) g_4)) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => g_4 : hol.term (hol.arr A B) => (B : hol.type => A : hol.type => p_1 : hol.term (hol.arr (hol.arr A B) hol.bool) => a_2 : hol.term (hol.arr A B) => thm_310 B A p_1 a_2) B A (f_5 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1)))) g_4.

(; Theorem: |- ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d))))) ;)

(; dict ;)

def thm_1528 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> g_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1)))))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (hol.eq B (g_4 x_5) d_1))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => g_4 : hol.term (hol.arr A B) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 f_5) ((f_6 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))) f_5))) ((f_5 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1)))) g_4)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1)))))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (hol.eq B (g_4 x_5) d_1))))) (thm_1526 B A d_1 t_2 s_3 g_4) (thm_1527 B A d_1 t_2 s_3 g_4).

(; Theorem: |- ((= (= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))) (= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))))) ;)

(; dict ;)

def thm_1529 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> g_4 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1))))))) (hol.eq hol.bool (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (hol.eq B (g_4 x_5) d_1)))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => g_4 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_5 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 f_5) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_5 x_6) t_2))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_3)) (hol.eq B (f_5 x_6) d_1)))))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (hol.eq B (g_4 x_5) d_1)))) thm_77 (thm_1528 B A d_1 t_2 s_3 g_4).

(; Theorem: |- ((= ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))))))) ;)

(; dict ;)

def thm_1530 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> g_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2))))))))))) (hol.eq hol.bool (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (hol.eq B (g_5 x_6) d_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (b_7 x_8) d_2)))))))))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => g_5 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2))))))) (hol.eq hol.bool (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (hol.eq B (g_5 x_6) d_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2)))))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (b_7 x_8) d_2)))))))) (thm_1529 B A d_2 t_3 s_4 g_5) (thm_896 A B d_2 s_4 t_3 a_1 g_5).

(; Theorem: |- ((= ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))))))) ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ;)

(; dict ;)

def thm_1531 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> g_4 : hol.term (hol.arr A B) -> s_5 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (g_4 x_6) d_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)) (hol.eq B (b_7 x_8) d_2))))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_5)) (hol.eq B (f_8 x_9) d_2)))))))))))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => g_4 : hol.term (hol.arr A B) => s_5 : hol.term (Set_2Eset A) => hol.SYM hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_5)) (hol.eq B (f_8 x_9) d_2))))))))))) (hol.eq hol.bool (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (g_4 x_6) d_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)) (hol.eq B (b_7 x_8) d_2))))))))) (thm_1530 B A a_1 d_2 t_3 s_5 g_4).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))) x)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d))))))) ((Data.Bool.==> (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))))) ;)

(; dict ;)

def thm_1532 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hol.proof (hol.imp (hol.forall B (x_6 : hol.term B => hol.imp ((a_7 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_4) a_7 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_7 t_3) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (b_8 x_9) d_1))))))) x_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (g_5 x_7) d_1)))))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))))) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1)))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_619 A Q_1 P_2) B (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1)))) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1))))))).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)))) ((Data.Bool./\ ((Set.member a') t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))) x)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d))))))) ((Data.Bool.==> (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)))) ((Data.Bool./\ ((Set.member a') t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))))) ;)

(; dict ;)

def thm_1533 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> g_6 : hol.term (hol.arr A B) -> hol.proof (hol.imp (hol.forall (hol.arr A B) (x_7 : hol.term (hol.arr A B) => hol.imp ((b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_5) a_27_4 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_3) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (b_8 x_9) d_1)))))) x_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (g_6 x_8) d_1)))))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1))))))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (g_6 x_7) d_1)))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_27_4 : hol.term B => a_5 : hol.term A => g_6 : hol.term (hol.arr A B) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_619 A Q_1 P_2) (hol.arr A B) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (g_6 x_7) d_1)))) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))).

(; Theorem: |- ((= (= (\lambda _10566. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (_10566 x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (_10566 x)) d)))) g))) (= (\lambda _10566. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (_10566 x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (_10566 x)) d)))) g))) ;)

(; dict ;)

def thm_1534 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10566_5 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (hol.eq B (__10566_5 x_6) d_2)))) g_1)) (hol.eq hol.bool ((__10566_5 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (hol.eq B (__10566_5 x_6) d_2)))) g_1))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10566_5 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (hol.eq B (__10566_5 x_6) d_2)))) g_1)).

(; Theorem: |- ((= (\lambda _10566. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (_10566 x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (_10566 x)) d)))) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d))))) ;)

(; dict ;)

def thm_1535 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> d_4 : hol.term B -> t_5 : hol.term (Set_2Eset B) -> s_6 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((__10566_7 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_7 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (__10566_7 x_8) d_4)))) (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_3) a_27_2 (b_1 x_7))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8)) x_7) t_5))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8)) x_7) d_4))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => a_3 : hol.term A => d_4 : hol.term B => t_5 : hol.term (Set_2Eset B) => s_6 : hol.term (Set_2Eset A) => hol.BETA_CONV (hol.arr A B) hol.bool (__10566_7 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_7 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (__10566_7 x_8) d_4)))) (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_3) a_27_2 (b_1 x_7)).

(; Theorem: |- ((= ((= (\lambda _10566. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (_10566 x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (_10566 x)) d)))) g)) (\lambda _10566. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (_10566 x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (_10566 x)) d)))) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x))))) ((= (\lambda _10566. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (_10566 x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (_10566 x)) d)))) g)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d)))))) ;)

(; dict ;)

def thm_1536 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> g_4 : hol.term (hol.arr A B) -> d_5 : hol.term B -> t_6 : hol.term (Set_2Eset B) -> s_7 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10566_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_8 x_9) t_6))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7)) (hol.eq B (__10566_8 x_9) d_5)))) g_4) ((__10566_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_8 x_9) t_6))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7)) (hol.eq B (__10566_8 x_9) d_5)))) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8)))) (hol.eq hol.bool ((__10566_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_8 x_9) t_6))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7)) (hol.eq B (__10566_8 x_9) d_5)))) g_4) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_3) a_27_2 (b_1 x_9)) x_8) t_6))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_3) a_27_2 (b_1 x_9)) x_8) d_5)))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => a_3 : hol.term A => g_4 : hol.term (hol.arr A B) => d_5 : hol.term B => t_6 : hol.term (Set_2Eset B) => s_7 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10566_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_8 x_9) t_6))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7)) (hol.eq B (__10566_8 x_9) d_5)))) g_4)) (hol.eq hol.bool ((__10566_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_8 x_9) t_6))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7)) (hol.eq B (__10566_8 x_9) d_5)))) g_4)) ((__10566_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_8 x_9) t_6))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7)) (hol.eq B (__10566_8 x_9) d_5)))) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_3) a_27_2 (b_1 x_9)) x_8) t_6))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_3) a_27_2 (b_1 x_9)) x_8) d_5)))) (thm_1534 B A g_4 d_5 t_6 s_7) (thm_1535 B A b_1 a_27_2 a_3 d_5 t_6 s_7).

(; Theorem: |- ((= (\lambda _10566. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (_10566 x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (_10566 x)) d)))) g)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d))))) ;)

(; dict ;)

def thm_1537 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool ((__10566_5 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (hol.eq B (__10566_5 x_6) d_2)))) g_1) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_1 x_5) t_3))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_1 x_5) d_2))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hol.BETA_CONV (hol.arr A B) hol.bool (__10566_5 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (hol.eq B (__10566_5 x_6) d_2)))) g_1.

(; Theorem: |- ((= (= (\lambda _10566. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (_10566 x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (_10566 x)) d)))) g))) (= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))))) ;)

(; dict ;)

def thm_1538 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10566_5 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (hol.eq B (__10566_5 x_6) d_2)))) g_1)) (hol.eq hol.bool (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_1 x_5) t_3))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_1 x_5) d_2)))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__10566_5 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (hol.eq B (__10566_5 x_6) d_2)))) g_1) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_1 x_5) t_3))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_1 x_5) d_2)))) thm_77 (thm_1537 B A g_1 d_2 t_3 s_4).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d))))) ;)

(; dict ;)

def thm_1539 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> s_6 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) d_1)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) d_1))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => a_5 : hol.term A => s_6 : hol.term (Set_2Eset A) => hol.REFL hol.bool (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) d_1)))).

(; Theorem: |- ((= ((= (\lambda _10566. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (_10566 x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (_10566 x)) d)))) g)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d)))))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d)))))) ;)

(; dict ;)

def thm_1540 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> g_4 : hol.term (hol.arr A B) -> d_5 : hol.term B -> t_6 : hol.term (Set_2Eset B) -> s_7 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10566_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_8 x_9) t_6))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7)) (hol.eq B (__10566_8 x_9) d_5)))) g_4) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_3) a_27_2 (b_1 x_9)) x_8) t_6))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_3) a_27_2 (b_1 x_9)) x_8) d_5))))) (hol.eq hol.bool (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_8) t_6))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_4 x_8) d_5)))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_3) a_27_2 (b_1 x_9)) x_8) t_6))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_3) a_27_2 (b_1 x_9)) x_8) d_5)))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => a_3 : hol.term A => g_4 : hol.term (hol.arr A B) => d_5 : hol.term B => t_6 : hol.term (Set_2Eset B) => s_7 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10566_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_8 x_9) t_6))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7)) (hol.eq B (__10566_8 x_9) d_5)))) g_4)) (hol.eq hol.bool (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_8) t_6))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_4 x_8) d_5))))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_3) a_27_2 (b_1 x_9)) x_8) t_6))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_3) a_27_2 (b_1 x_9)) x_8) d_5)))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_3) a_27_2 (b_1 x_9)) x_8) t_6))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_3) a_27_2 (b_1 x_9)) x_8) d_5)))) (thm_1538 B A g_4 d_5 t_6 s_7) (thm_1539 B A d_5 t_6 b_1 a_27_2 a_3 s_7).

(; Theorem: |- ((= ((= (\lambda _10566. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (_10566 x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (_10566 x)) d)))) g)) (\lambda _10566. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (_10566 x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (_10566 x)) d)))) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x))))) ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d)))))) ;)

(; dict ;)

def thm_1541 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> g_4 : hol.term (hol.arr A B) -> d_5 : hol.term B -> t_6 : hol.term (Set_2Eset B) -> s_7 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10566_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_8 x_9) t_6))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7)) (hol.eq B (__10566_8 x_9) d_5)))) g_4) ((__10566_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_8 x_9) t_6))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7)) (hol.eq B (__10566_8 x_9) d_5)))) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8)))) (hol.eq hol.bool (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_8) t_6))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_4 x_8) d_5)))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_3) a_27_2 (b_1 x_9)) x_8) t_6))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_3) a_27_2 (b_1 x_9)) x_8) d_5)))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => a_3 : hol.term A => g_4 : hol.term (hol.arr A B) => d_5 : hol.term B => t_6 : hol.term (Set_2Eset B) => s_7 : hol.term (Set_2Eset A) => hol.TRANS hol.bool (hol.eq hol.bool ((__10566_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_8 x_9) t_6))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7)) (hol.eq B (__10566_8 x_9) d_5)))) g_4) ((__10566_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_8 x_9) t_6))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7)) (hol.eq B (__10566_8 x_9) d_5)))) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8)))) (hol.eq hol.bool ((__10566_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_8 x_9) t_6))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7)) (hol.eq B (__10566_8 x_9) d_5)))) g_4) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_3) a_27_2 (b_1 x_9)) x_8) t_6))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_3) a_27_2 (b_1 x_9)) x_8) d_5))))) (hol.eq hol.bool (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_8) t_6))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_4 x_8) d_5)))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_3) a_27_2 (b_1 x_9)) x_8) t_6))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_3) a_27_2 (b_1 x_9)) x_8) d_5))))) (thm_1536 B A b_1 a_27_2 a_3 g_4 d_5 t_6 s_7) (thm_1540 B A b_1 a_27_2 a_3 g_4 d_5 t_6 s_7).

(; Theorem: |- ((= \lambda _10566. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (_10566 x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (_10566 x)) d))))) \lambda _10566. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (_10566 x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (_10566 x)) d))))) ;)

(; dict ;)

def thm_1542 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (__10566_4 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (hol.eq B (__10566_4 x_5) d_1)))) (__10566_4 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (hol.eq B (__10566_4 x_5) d_1))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => hol.REFL (hol.arr (hol.arr A B) hol.bool) (__10566_4 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_4 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3)) (hol.eq B (__10566_4 x_5) d_1)))).

(; Theorem: |- ((= (\lambda _10566. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (_10566 x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (_10566 x)) d)))) g)) (\lambda _10566. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (_10566 x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (_10566 x)) d)))) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)))) ;)

(; dict ;)

def thm_1543 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> g_4 : hol.term (hol.arr A B) -> d_5 : hol.term B -> t_6 : hol.term (Set_2Eset B) -> s_7 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (hol.arr A B) g_4 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8))) -> hol.proof (hol.eq hol.bool ((__10566_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_8 x_9) t_6))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7)) (hol.eq B (__10566_8 x_9) d_5)))) g_4) ((__10566_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_8 x_9) t_6))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7)) (hol.eq B (__10566_8 x_9) d_5)))) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => a_3 : hol.term A => g_4 : hol.term (hol.arr A B) => d_5 : hol.term B => t_6 : hol.term (Set_2Eset B) => s_7 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (hol.arr A B) g_4 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8))) => hol.APP_THM (hol.arr A B) hol.bool (__10566_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_8 x_9) t_6))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7)) (hol.eq B (__10566_8 x_9) d_5)))) (__10566_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_8 x_9) t_6))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7)) (hol.eq B (__10566_8 x_9) d_5)))) g_4 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8)) (thm_1542 B A d_5 t_6 s_7) (thm_906 B A b_1 a_27_2 a_3 g_4 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d))))) ;)

(; dict ;)

def thm_1544 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> d_4 : hol.term B -> t_5 : hol.term (Set_2Eset B) -> g_6 : hol.term (hol.arr A B) -> s_7 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8))) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_6 x_8) d_4)))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_3) a_27_2 (b_1 x_9)) x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_3) a_27_2 (b_1 x_9)) x_8) d_4))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => a_3 : hol.term A => d_4 : hol.term B => t_5 : hol.term (Set_2Eset B) => g_6 : hol.term (hol.arr A B) => s_7 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8))) => hol.EQ_MP (hol.eq hol.bool ((__10566_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_8 x_9) t_5))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7)) (hol.eq B (__10566_8 x_9) d_4)))) g_6) ((__10566_8 : hol.term (hol.arr A B) => hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (__10566_8 x_9) t_5))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7)) (hol.eq B (__10566_8 x_9) d_4)))) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8)))) (hol.eq hol.bool (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_6 x_8) d_4)))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_3) a_27_2 (b_1 x_9)) x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_3) a_27_2 (b_1 x_9)) x_8) d_4))))) (thm_1541 B A b_1 a_27_2 a_3 g_6 d_4 t_5 s_7) (thm_1543 B A b_1 a_27_2 a_3 g_6 d_4 t_5 s_7 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d))))) ;)

(; dict ;)

def thm_1545 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> b_4 : hol.term (hol.arr A B) -> a_27_5 : hol.term B -> a_6 : hol.term A -> s_7 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (hol.arr A B) g_1 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_5 (b_4 x_8))) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_6) a_27_5 (b_4 x_9)) x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_6) a_27_5 (b_4 x_9)) x_8) d_2)))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_1 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_1 x_8) d_2))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => b_4 : hol.term (hol.arr A B) => a_27_5 : hol.term B => a_6 : hol.term A => s_7 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (hol.arr A B) g_1 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_5 (b_4 x_8))) => hol.SYM hol.bool (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_1 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_1 x_8) d_2)))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_6) a_27_5 (b_4 x_9)) x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_6) a_27_5 (b_4 x_9)) x_8) d_2)))) (thm_1544 B A b_4 a_27_5 a_6 d_2 t_3 g_1 s_7 hyp_1).

(; Theorem: |- ((= (Data.Bool.==> ((Set.member x) s))) (Data.Bool.==> ((Set.member x) s))) ;)

(; dict ;)

def thm_1546 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.REFL (hol.arr hol.bool hol.bool) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t))) ((Data.Bool.==> ((Set.member x) s)) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t))) ;)

(; dict ;)

def thm_1547 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> s_5 : hol.term (Set_2Eset A) -> x_6 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) a_27_3 (b_2 x_7)) x_6) t_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => s_5 : hol.term (Set_2Eset A) => x_6 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) a_27_3 (b_2 x_7)) x_6) t_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) t_1) (thm_1546 A s_5 x_6) (thm_943 A B t_1 x_6 b_2 a_27_3 a_4).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t))) \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t))) ;)

(; dict ;)

def thm_1548 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> s_5 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) a_27_3 (b_2 x_7)) x_6) t_1)) (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => s_5 : hol.term (Set_2Eset A) => hol.ABS_THM A hol.bool (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) a_27_3 (b_2 x_7)) x_6) t_1)) (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) t_1)) (x_6 : hol.term A => thm_1547 B A t_1 b_2 a_27_3 a_4 s_5 x_6).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t)))) ;)

(; dict ;)

def thm_1549 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> s_5 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) a_27_3 (b_2 x_7)) x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => s_5 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) a_27_3 (b_2 x_7)) x_6) t_1)) (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) t_1)) (thm_95 A) (thm_1548 B A t_1 b_2 a_27_3 a_4 s_5).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t))))) (Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t))))) ;)

(; dict ;)

def thm_1550 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> s_5 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) a_27_3 (b_2 x_7)) x_6) t_1)))) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) t_1))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => s_5 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) a_27_3 (b_2 x_7)) x_6) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) t_1))) thm_94 (thm_1549 B A t_1 b_2 a_27_3 a_4 s_5).

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.~ ((Set.member x) s)))) (Data.Bool.==> (Data.Bool.~ ((Set.member x) s)))) ;)

(; dict ;)

def thm_1551 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> x_2 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))) (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1)))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => x_2 : hol.term A => hol.REFL (hol.arr hol.bool hol.bool) (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_2 s_1))).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d))) ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d))) ;)

(; dict ;)

def thm_1552 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> s_5 : hol.term (Set_2Eset A) -> x_6 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) a_27_3 (b_2 x_7)) x_6) d_1)) (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => s_5 : hol.term (Set_2Eset A) => x_6 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5))) (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5))) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) a_27_3 (b_2 x_7)) x_6) d_1) (hol.eq B (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) d_1) (thm_1551 A s_5 x_6) (thm_973 A B d_1 x_6 b_2 a_27_3 a_4).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d))) \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d))) ;)

(; dict ;)

def thm_1553 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> s_5 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) a_27_3 (b_2 x_7)) x_6) d_1)) (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => s_5 : hol.term (Set_2Eset A) => hol.ABS_THM A hol.bool (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) a_27_3 (b_2 x_7)) x_6) d_1)) (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) d_1)) (x_6 : hol.term A => thm_1552 B A d_1 b_2 a_27_3 a_4 s_5 x_6).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d)))) ;)

(; dict ;)

def thm_1554 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> s_5 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) a_27_3 (b_2 x_7)) x_6) d_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => s_5 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B ((x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) a_27_3 (b_2 x_7)) x_6) d_1)) (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) d_1)) (thm_95 A) (thm_1553 B A d_1 b_2 a_27_3 a_4 s_5).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d))))) ;)

(; dict ;)

def thm_1555 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> s_6 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) d_1)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) d_1))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => a_5 : hol.term A => s_6 : hol.term (Set_2Eset A) => hol.APP_THM hol.bool hol.bool (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) t_2)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) t_2)))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) d_1))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) d_1))) (thm_1550 B A t_2 b_3 a_27_4 a_5 s_6) (thm_1554 B A d_1 b_3 a_27_4 a_5 s_6).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d))))) ;)

(; dict ;)

def thm_1556 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> s_6 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) d_1)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) d_1))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => a_5 : hol.term A => s_6 : hol.term (Set_2Eset A) => hol.SYM hol.bool (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) d_1)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) d_1)))) (thm_1555 B A d_1 t_2 b_3 a_27_4 a_5 s_6).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t))) \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t))) ;)

(; dict ;)

def thm_1557 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> s_5 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) t_1)) (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => s_5 : hol.term (Set_2Eset A) => hol.REFL (hol.arr A hol.bool) (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) t_1)).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t))) \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t))) ;)

(; dict ;)

def thm_1558 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> s_5 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) t_1)) (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => s_5 : hol.term (Set_2Eset A) => hol.TRANS (hol.arr A hol.bool) (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) t_1)) (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) t_1)) (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) t_1)) (thm_1557 B A t_1 b_2 a_27_3 a_4 s_5) (thm_1557 B A t_1 b_2 a_27_3 a_4 s_5).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t)))) ;)

(; dict ;)

def thm_1559 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> s_5 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) t_1))) (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) t_1)))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => s_5 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) t_1)) (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) t_1)) (thm_95 A) (thm_1558 B A t_1 b_2 a_27_3 a_4 s_5).

(; Theorem: |- ((Data.Bool.==> ((= x) a)) ((Set.member a') t)) ;)

(; dict ;)

def thm_1560 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> x_4 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_1) -> hol.proof (hol.imp (hol.eq A x_4 a_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_1)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => a_27_2 : hol.term B => a_3 : hol.term A => x_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_1) => hyp_2 : hol.proof (hol.eq A x_4 a_3) => thm_912 B t_1 a_27_2 hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((Set.member (b x)) t))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((Set.member a') t))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((Set.member (b x)) t)))) ;)

(; dict ;)

def thm_1561 : B : hol.type -> A : hol.type -> a_27_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> a_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_2) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_5 a_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_5) t_2)) (hol.and (hol.imp (hol.eq A x_5 a_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_2)) (hol.imp (hol.not (hol.eq A x_5 a_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_5) t_2)))) :=
  B : hol.type => A : hol.type => a_27_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => a_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_2) => hol.PROVE_HYP (hol.imp (hol.eq A x_5 a_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_2)) (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_5 a_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_5) t_2)) (hol.and (hol.imp (hol.eq A x_5 a_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_2)) (hol.imp (hol.not (hol.eq A x_5 a_4)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_5) t_2)))) (thm_1560 B A t_2 a_27_1 a_4 x_5 hyp_1) (hyp_2 : hol.proof (hol.imp (hol.eq A x_5 a_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_2)) => thm_1029 B A a_27_1 t_2 b_3 a_4 x_5 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((Set.member a') t))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((Set.member (b x)) t))) ;)

(; dict ;)

def thm_1562 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> b_2 : hol.term (hol.arr A B) -> t_3 : hol.term (Set_2Eset B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_7) t_3))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_3) -> hol.proof (hol.and (hol.imp (hol.eq A x_6 a_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_3)) (hol.imp (hol.not (hol.eq A x_6 a_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_6) t_3))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => b_2 : hol.term (hol.arr A B) => t_3 : hol.term (Set_2Eset B) => a_27_4 : hol.term B => a_5 : hol.term A => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_7) t_3))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_3) => hol.EQ_MP (hol.imp (hol.not (hol.eq A x_6 a_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_6) t_3)) (hol.and (hol.imp (hol.eq A x_6 a_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_3)) (hol.imp (hol.not (hol.eq A x_6 a_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_6) t_3))) (thm_1561 B A a_27_4 t_3 b_2 a_5 x_6 hyp_3) (thm_1037 B A s_1 t_3 b_2 a_5 x_6 hyp_1 hyp_2).

(; Theorem: |- ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t) ;)

(; dict ;)

def thm_1563 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) t_2) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => a_5 : hol.term A => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) => hol.EQ_MP (hol.and (hol.imp (hol.eq A x_6 a_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2)) (hol.imp (hol.not (hol.eq A x_6 a_5)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_6) t_2))) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) t_2) (thm_1003 B A b_3 t_2 a_27_4 a_5 x_6) (thm_1562 B A s_1 b_3 t_2 a_27_4 a_5 x_6 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t) ;)

(; dict ;)

def thm_1564 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) -> hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) t_2) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => a_5 : hol.term A => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) => hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) t_2) (thm_982 A s_1 x_6 hyp_2) (hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1) => thm_1563 A B s_1 t_2 b_3 a_27_4 a_5 x_6 hyp_1 hyp_4 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Set.member x) s)) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t)) ;)

(; dict ;)

def thm_1565 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> s_5 : hol.term (Set_2Eset A) -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_7) t_1))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_1) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) t_1)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => s_5 : hol.term (Set_2Eset A) => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_7) t_1))) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_1) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) => thm_1564 A B s_5 t_1 b_2 a_27_3 a_4 x_6 hyp_1 hyp_3 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t))) ;)

(; dict ;)

def thm_1566 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> s_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_6) t_1))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_1) -> hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => s_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_2 x_6) t_1))) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_3 t_1) => x_6 : hol.term A => thm_1565 B A t_1 b_2 a_27_3 a_4 s_5 x_6 hyp_1 hyp_2.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d))))) ;)

(; dict ;)

def thm_1567 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> d_2 : hol.term B -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> s_6 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) t_1))) -> hol.proof (hol.eq hol.bool (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) d_2))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) t_1))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) d_2))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => d_2 : hol.term B => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => a_5 : hol.term A => s_6 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) t_1))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) t_1))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) d_2))) hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d))))) ;)

(; dict ;)

def thm_1568 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> d_2 : hol.term B -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> s_6 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_1))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_1) -> hol.proof (hol.eq hol.bool (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) d_2))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) t_1))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) d_2))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => d_2 : hol.term B => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => a_5 : hol.term A => s_6 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_1))) => hyp_2 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_1) => hol.PROVE_HYP (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) t_1))) (hol.eq hol.bool (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) d_2))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) t_1))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) d_2))))) (hol.EQ_MP (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) t_1))) (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) t_1))) (thm_1559 B A t_1 b_3 a_27_4 a_5 s_6) (thm_1566 B A t_1 b_3 a_27_4 a_5 s_6 hyp_1 hyp_2)) (hyp_3 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) t_1))) => thm_1567 B A t_1 d_2 b_3 a_27_4 a_5 s_6 hyp_3).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d))) \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d))) ;)

(; dict ;)

def thm_1569 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> s_5 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) d_1)) (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => s_5 : hol.term (Set_2Eset A) => hol.REFL (hol.arr A hol.bool) (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) d_1)).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d))) \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d))) ;)

(; dict ;)

def thm_1570 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> s_5 : hol.term (Set_2Eset A) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) d_1)) (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => s_5 : hol.term (Set_2Eset A) => hol.TRANS (hol.arr A hol.bool) (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) d_1)) (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) d_1)) (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) d_1)) (thm_1569 B A d_1 b_2 a_27_3 a_4 s_5) (thm_1569 B A d_1 b_2 a_27_3 a_4 s_5).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d)))) ;)

(; dict ;)

def thm_1571 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> s_5 : hol.term (Set_2Eset A) -> hol.proof (hol.eq hol.bool (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) d_1))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => s_5 : hol.term (Set_2Eset A) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) d_1)) (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) d_1)) (thm_95 A) (thm_1570 B A d_1 b_2 a_27_3 a_4 s_5).

(; Theorem: |- ((= (\lambda _10582. ((= _10582) d) (((Data.Bool.cond ((= x) a)) a') (b x)))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d)) ;)

(; dict ;)

def thm_1572 : A : hol.type -> B : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> x_4 : hol.term A -> d_5 : hol.term B -> hol.proof (hol.eq hol.bool ((__10582_6 : hol.term B => hol.eq B __10582_6 d_5) (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4))) (hol.eq B (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4)) d_5)) :=
  A : hol.type => B : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => a_3 : hol.term A => x_4 : hol.term A => d_5 : hol.term B => hol.BETA_CONV B hol.bool (__10582_6 : hol.term B => hol.eq B __10582_6 d_5) (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4)).

(; Theorem: |- ((= (= (\lambda _10582. ((= _10582) d) (((Data.Bool.cond ((= x) a)) a') (b x))))) (= ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d))) ;)

(; dict ;)

def thm_1573 : A : hol.type -> B : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> x_4 : hol.term A -> d_5 : hol.term B -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10582_6 : hol.term B => hol.eq B __10582_6 d_5) (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4)))) (hol.eq hol.bool (hol.eq B (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4)) d_5))) :=
  A : hol.type => B : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => a_3 : hol.term A => x_4 : hol.term A => d_5 : hol.term B => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__10582_6 : hol.term B => hol.eq B __10582_6 d_5) (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4))) (hol.eq B (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4)) d_5) thm_77 (thm_1572 A B b_1 a_27_2 a_3 x_4 d_5).

(; Theorem: |- ((= (\lambda _10582. ((= _10582) d) a')) ((= a') d)) ;)

(; dict ;)

def thm_1574 : B : hol.type -> a_27_1 : hol.term B -> d_2 : hol.term B -> hol.proof (hol.eq hol.bool ((__10582_3 : hol.term B => hol.eq B __10582_3 d_2) a_27_1) (hol.eq B a_27_1 d_2)) :=
  B : hol.type => a_27_1 : hol.term B => d_2 : hol.term B => hol.BETA_CONV B hol.bool (__10582_3 : hol.term B => hol.eq B __10582_3 d_2) a_27_1.

(; Theorem: |- ((= ((Data.Bool.==> ((= x) a)) (\lambda _10582. ((= _10582) d) a'))) ((Data.Bool.==> ((= x) a)) ((= a') d))) ;)

(; dict ;)

def thm_1575 : B : hol.type -> A : hol.type -> a_27_1 : hol.term B -> d_2 : hol.term B -> a_3 : hol.term A -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq A x_4 a_3) ((__10582_5 : hol.term B => hol.eq B __10582_5 d_2) a_27_1)) (hol.imp (hol.eq A x_4 a_3) (hol.eq B a_27_1 d_2))) :=
  B : hol.type => A : hol.type => a_27_1 : hol.term B => d_2 : hol.term B => a_3 : hol.term A => x_4 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (hol.eq A x_4 a_3)) (hol.imp (hol.eq A x_4 a_3)) ((__10582_5 : hol.term B => hol.eq B __10582_5 d_2) a_27_1) (hol.eq B a_27_1 d_2) (thm_985 A a_3 x_4) (thm_1574 B a_27_1 d_2).

(; Theorem: |- ((= (Data.Bool./\ ((Data.Bool.==> ((= x) a)) (\lambda _10582. ((= _10582) d) a')))) (Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= a') d)))) ;)

(; dict ;)

def thm_1576 : B : hol.type -> A : hol.type -> a_27_1 : hol.term B -> d_2 : hol.term B -> a_3 : hol.term A -> x_4 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.imp (hol.eq A x_4 a_3) ((__10582_5 : hol.term B => hol.eq B __10582_5 d_2) a_27_1))) (hol.and (hol.imp (hol.eq A x_4 a_3) (hol.eq B a_27_1 d_2)))) :=
  B : hol.type => A : hol.type => a_27_1 : hol.term B => d_2 : hol.term B => a_3 : hol.term A => x_4 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.imp (hol.eq A x_4 a_3) ((__10582_5 : hol.term B => hol.eq B __10582_5 d_2) a_27_1)) (hol.imp (hol.eq A x_4 a_3) (hol.eq B a_27_1 d_2)) thm_94 (thm_1575 B A a_27_1 d_2 a_3 x_4).

(; Theorem: |- ((= (\lambda _10582. ((= _10582) d) (b x))) ((= (b x)) d)) ;)

(; dict ;)

def thm_1577 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> b_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> hol.proof (hol.eq hol.bool ((__10582_4 : hol.term B => hol.eq B __10582_4 d_3) (b_2 x_1)) (hol.eq B (b_2 x_1) d_3)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => b_2 : hol.term (hol.arr A B) => d_3 : hol.term B => hol.BETA_CONV B hol.bool (__10582_4 : hol.term B => hol.eq B __10582_4 d_3) (b_2 x_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= x) a))) (\lambda _10582. ((= _10582) d) (b x)))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (b x)) d))) ;)

(; dict ;)

def thm_1578 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> a_3 : hol.term A -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_4 a_3)) ((__10582_5 : hol.term B => hol.eq B __10582_5 d_2) (b_1 x_4))) (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (b_1 x_4) d_2))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => d_2 : hol.term B => a_3 : hol.term A => x_4 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (hol.not (hol.eq A x_4 a_3))) (hol.imp (hol.not (hol.eq A x_4 a_3))) ((__10582_5 : hol.term B => hol.eq B __10582_5 d_2) (b_1 x_4)) (hol.eq B (b_1 x_4) d_2) (thm_989 A a_3 x_4) (thm_1577 A B x_4 b_1 d_2).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) (\lambda _10582. ((= _10582) d) a'))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) (\lambda _10582. ((= _10582) d) (b x))))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= a') d))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (b x)) d)))) ;)

(; dict ;)

def thm_1579 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> d_3 : hol.term B -> a_4 : hol.term A -> x_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (hol.imp (hol.eq A x_5 a_4) ((__10582_6 : hol.term B => hol.eq B __10582_6 d_3) a_27_2)) (hol.imp (hol.not (hol.eq A x_5 a_4)) ((__10582_6 : hol.term B => hol.eq B __10582_6 d_3) (b_1 x_5)))) (hol.and (hol.imp (hol.eq A x_5 a_4) (hol.eq B a_27_2 d_3)) (hol.imp (hol.not (hol.eq A x_5 a_4)) (hol.eq B (b_1 x_5) d_3)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => d_3 : hol.term B => a_4 : hol.term A => x_5 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.and (hol.imp (hol.eq A x_5 a_4) ((__10582_6 : hol.term B => hol.eq B __10582_6 d_3) a_27_2))) (hol.and (hol.imp (hol.eq A x_5 a_4) (hol.eq B a_27_2 d_3))) (hol.imp (hol.not (hol.eq A x_5 a_4)) ((__10582_6 : hol.term B => hol.eq B __10582_6 d_3) (b_1 x_5))) (hol.imp (hol.not (hol.eq A x_5 a_4)) (hol.eq B (b_1 x_5) d_3)) (thm_1576 B A a_27_2 d_3 a_4 x_5) (thm_1578 B A b_1 d_3 a_4 x_5).

(; Theorem: |- ((= ((= (\lambda _10582. ((= _10582) d) (((Data.Bool.cond ((= x) a)) a') (b x)))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) (\lambda _10582. ((= _10582) d) a'))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) (\lambda _10582. ((= _10582) d) (b x)))))) ((= ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d)) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= a') d))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (b x)) d))))) ;)

(; dict ;)

def thm_1580 : A : hol.type -> B : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> x_4 : hol.term A -> d_5 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10582_6 : hol.term B => hol.eq B __10582_6 d_5) (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4))) (hol.and (hol.imp (hol.eq A x_4 a_3) ((__10582_6 : hol.term B => hol.eq B __10582_6 d_5) a_27_2)) (hol.imp (hol.not (hol.eq A x_4 a_3)) ((__10582_6 : hol.term B => hol.eq B __10582_6 d_5) (b_1 x_4))))) (hol.eq hol.bool (hol.eq B (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4)) d_5) (hol.and (hol.imp (hol.eq A x_4 a_3) (hol.eq B a_27_2 d_5)) (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (b_1 x_4) d_5))))) :=
  A : hol.type => B : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => a_3 : hol.term A => x_4 : hol.term A => d_5 : hol.term B => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10582_6 : hol.term B => hol.eq B __10582_6 d_5) (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4)))) (hol.eq hol.bool (hol.eq B (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4)) d_5)) (hol.and (hol.imp (hol.eq A x_4 a_3) ((__10582_6 : hol.term B => hol.eq B __10582_6 d_5) a_27_2)) (hol.imp (hol.not (hol.eq A x_4 a_3)) ((__10582_6 : hol.term B => hol.eq B __10582_6 d_5) (b_1 x_4)))) (hol.and (hol.imp (hol.eq A x_4 a_3) (hol.eq B a_27_2 d_5)) (hol.imp (hol.not (hol.eq A x_4 a_3)) (hol.eq B (b_1 x_4) d_5))) (thm_1573 A B b_1 a_27_2 a_3 x_4 d_5) (thm_1579 B A b_1 a_27_2 d_5 a_3 x_4).

(; Theorem: |- ((= (\lambda _10582. ((= _10582) d) (((Data.Bool.cond _483) _482) _485))) ((Data.Bool./\ ((Data.Bool.==> _483) (\lambda _10582. ((= _10582) d) _482))) ((Data.Bool.==> (Data.Bool.~ _483)) (\lambda _10582. ((= _10582) d) _485)))) ;)

(; dict ;)

def thm_1581 : B : hol.type -> __485_1 : hol.term B -> __482_2 : hol.term B -> __483_3 : hol.term hol.bool -> d_4 : hol.term B -> hol.proof (hol.eq hol.bool ((__10582_5 : hol.term B => hol.eq B __10582_5 d_4) (hol.cond B __483_3 __482_2 __485_1)) (hol.and (hol.imp __483_3 ((__10582_5 : hol.term B => hol.eq B __10582_5 d_4) __482_2)) (hol.imp (hol.not __483_3) ((__10582_5 : hol.term B => hol.eq B __10582_5 d_4) __485_1)))) :=
  B : hol.type => __485_1 : hol.term B => __482_2 : hol.term B => __483_3 : hol.term hol.bool => d_4 : hol.term B => (B : hol.type => __485_1 : hol.term B => __482_2 : hol.term B => __483_3 : hol.term hol.bool => __484_4 : hol.term (hol.arr B hol.bool) => thm_999 B __485_1 __482_2 __483_3 __484_4) B __485_1 __482_2 __483_3 (__10582_5 : hol.term B => hol.eq B __10582_5 d_4).

(; Theorem: |- ((= (\lambda _10582. ((= _10582) d) (((Data.Bool.cond ((= x) a)) a') (b x)))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) (\lambda _10582. ((= _10582) d) a'))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) (\lambda _10582. ((= _10582) d) (b x))))) ;)

(; dict ;)

def thm_1582 : A : hol.type -> B : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> x_4 : hol.term A -> d_5 : hol.term B -> hol.proof (hol.eq hol.bool ((__10582_6 : hol.term B => hol.eq B __10582_6 d_5) (hol.cond B (hol.eq A x_4 a_3) a_27_2 (b_1 x_4))) (hol.and (hol.imp (hol.eq A x_4 a_3) ((__10582_6 : hol.term B => hol.eq B __10582_6 d_5) a_27_2)) (hol.imp (hol.not (hol.eq A x_4 a_3)) ((__10582_6 : hol.term B => hol.eq B __10582_6 d_5) (b_1 x_4))))) :=
  A : hol.type => B : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => a_3 : hol.term A => x_4 : hol.term A => d_5 : hol.term B => (B : hol.type => __485_1 : hol.term B => __482_2 : hol.term B => __483_3 : hol.term hol.bool => d_4 : hol.term B => thm_1581 B __485_1 __482_2 __483_3 d_4) B (b_1 x_4) a_27_2 (hol.eq A x_4 a_3) d_5.

(; Theorem: |- ((= ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d)) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= a') d))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (b x)) d)))) ;)

(; dict ;)

def thm_1583 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> x_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq B (hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) d_1) (hol.and (hol.imp (hol.eq A x_5 a_4) (hol.eq B a_27_3 d_1)) (hol.imp (hol.not (hol.eq A x_5 a_4)) (hol.eq B (b_2 x_5) d_1)))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => x_5 : hol.term A => hol.EQ_MP (hol.eq hol.bool ((__10582_6 : hol.term B => hol.eq B __10582_6 d_1) (hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5))) (hol.and (hol.imp (hol.eq A x_5 a_4) ((__10582_6 : hol.term B => hol.eq B __10582_6 d_1) a_27_3)) (hol.imp (hol.not (hol.eq A x_5 a_4)) ((__10582_6 : hol.term B => hol.eq B __10582_6 d_1) (b_2 x_5))))) (hol.eq hol.bool (hol.eq B (hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_2 x_5)) d_1) (hol.and (hol.imp (hol.eq A x_5 a_4) (hol.eq B a_27_3 d_1)) (hol.imp (hol.not (hol.eq A x_5 a_4)) (hol.eq B (b_2 x_5) d_1)))) (thm_1580 A B b_2 a_27_3 a_4 x_5 d_1) (thm_1582 A B b_2 a_27_3 a_4 x_5 d_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= a') d))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (b x)) d)))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d)) ;)

(; dict ;)

def thm_1584 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> a_27_3 : hol.term B -> a_4 : hol.term A -> x_5 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (hol.imp (hol.eq A x_5 a_4) (hol.eq B a_27_3 d_2)) (hol.imp (hol.not (hol.eq A x_5 a_4)) (hol.eq B (b_1 x_5) d_2))) (hol.eq B (hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_1 x_5)) d_2)) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => d_2 : hol.term B => a_27_3 : hol.term B => a_4 : hol.term A => x_5 : hol.term A => hol.SYM hol.bool (hol.eq B (hol.cond B (hol.eq A x_5 a_4) a_27_3 (b_1 x_5)) d_2) (hol.and (hol.imp (hol.eq A x_5 a_4) (hol.eq B a_27_3 d_2)) (hol.imp (hol.not (hol.eq A x_5 a_4)) (hol.eq B (b_1 x_5) d_2))) (thm_1583 A B d_2 b_1 a_27_3 a_4 x_5).

(; Theorem: |- ((= ((= a') d)) ((= a') d)) ;)

(; dict ;)

def thm_1585 : B : hol.type -> d_1 : hol.term B -> a_27_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq B a_27_2 d_1) (hol.eq B a_27_2 d_1)) :=
  B : hol.type => d_1 : hol.term B => a_27_2 : hol.term B => hol.REFL hol.bool (hol.eq B a_27_2 d_1).

(; Theorem: |- ((= ((= a') d)) ((= a') d)) ;)

(; dict ;)

def thm_1586 : B : hol.type -> d_1 : hol.term B -> a_27_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq B a_27_2 d_1) (hol.eq B a_27_2 d_1)) :=
  B : hol.type => d_1 : hol.term B => a_27_2 : hol.term B => hol.SYM hol.bool (hol.eq B a_27_2 d_1) (hol.eq B a_27_2 d_1) (thm_1585 B d_1 a_27_2).

(; Theorem: |- ((= ((Set.member x) s)) Data.Bool.T) ;)

(; dict ;)

def thm_1587 : A : hol.type -> a_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_3 a_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_2) -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) hol.true) :=
  A : hol.type => a_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_3 a_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_2) => hol.TRANS hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_2) hol.true (thm_1010 A a_1 s_2 x_3 hyp_1) (thm_1441 A s_2 a_1 hyp_2).

(; Theorem: |- ((= (Data.Bool.~ ((Set.member x) s))) (Data.Bool.~ Data.Bool.T)) ;)

(; dict ;)

def thm_1588 : A : hol.type -> a_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_3 a_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_2) -> hol.proof (hol.eq hol.bool (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) (hol.not hol.true)) :=
  A : hol.type => a_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_3 a_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_2) => hol.APP_THM hol.bool hol.bool hol.not hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2) hol.true thm_221 (thm_1587 A a_1 s_2 x_3 hyp_1 hyp_2).

(; Theorem: |- ((= (Data.Bool.~ ((Set.member x) s))) Data.Bool.F) ;)

(; dict ;)

def thm_1589 : A : hol.type -> a_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_3 a_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_2) -> hol.proof (hol.eq hol.bool (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) hol.false) :=
  A : hol.type => a_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_3 a_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_2) => hol.TRANS hol.bool (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) (hol.not hol.true) hol.false (thm_1588 A a_1 s_2 x_3 hyp_1 hyp_2) thm_14.

(; Theorem: |- ((= (Data.Bool.==> (Data.Bool.~ ((Set.member x) s)))) (Data.Bool.==> Data.Bool.F)) ;)

(; dict ;)

def thm_1590 : A : hol.type -> a_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_3 a_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_2) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2))) (hol.imp hol.false)) :=
  A : hol.type => a_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => hyp_1 : hol.proof (hol.eq A x_3 a_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_2) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.imp hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) hol.false thm_96 (thm_1589 A a_1 s_2 x_3 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= a') d))) ((Data.Bool.==> Data.Bool.F) ((= a') d))) ;)

(; dict ;)

def thm_1591 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> a_27_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_5 a_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B a_27_3 d_2)) (hol.imp hol.false (hol.eq B a_27_3 d_2))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => d_2 : hol.term B => a_27_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.eq A x_5 a_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4) => hol.APP_THM hol.bool hol.bool (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4))) (hol.imp hol.false) (hol.eq B a_27_3 d_2) (hol.eq B a_27_3 d_2) (thm_1590 A a_1 s_4 x_5 hyp_1 hyp_2) (thm_1585 B d_2 a_27_3).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) ((= a') d))) Data.Bool.T) ;)

(; dict ;)

def thm_1592 : B : hol.type -> d_1 : hol.term B -> a_27_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.imp hol.false (hol.eq B a_27_2 d_1)) hol.true) :=
  B : hol.type => d_1 : hol.term B => a_27_2 : hol.term B => (t_1 : hol.term hol.bool => thm_167 t_1) (hol.eq B a_27_2 d_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= a') d))) Data.Bool.T) ;)

(; dict ;)

def thm_1593 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> a_27_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_5 a_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B a_27_3 d_2)) hol.true) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => d_2 : hol.term B => a_27_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.eq A x_5 a_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4) => hol.TRANS hol.bool (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B a_27_3 d_2)) (hol.imp hol.false (hol.eq B a_27_3 d_2)) hol.true (thm_1591 B A a_1 d_2 a_27_3 s_4 x_5 hyp_1 hyp_2) (thm_1592 B d_2 a_27_3).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= a') d))) ;)

(; dict ;)

def thm_1594 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> a_27_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_5 a_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4) -> hol.proof (hol.eq hol.bool hol.true (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B a_27_3 d_2))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => d_2 : hol.term B => a_27_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.eq A x_5 a_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4) => hol.SYM hol.bool (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B a_27_3 d_2)) hol.true (thm_1593 B A a_1 d_2 a_27_3 s_4 x_5 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= a') d)) ;)

(; dict ;)

def thm_1595 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> a_27_3 : hol.term B -> s_4 : hol.term (Set_2Eset A) -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.eq A x_5 a_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4) -> hol.proof (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B a_27_3 d_2)) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => d_2 : hol.term B => a_27_3 : hol.term B => s_4 : hol.term (Set_2Eset A) => x_5 : hol.term A => hyp_1 : hol.proof (hol.eq A x_5 a_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4) => hol.EQ_MP hol.true (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B a_27_3 d_2)) (thm_1594 B A a_1 d_2 a_27_3 s_4 x_5 hyp_1 hyp_2) thm_10.

(; Theorem: |- ((= a') d) ;)

(; dict ;)

def thm_1596 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> d_4 : hol.term B -> a_27_5 : hol.term B -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) -> hyp_2 : hol.proof (hol.eq A x_3 a_1) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_2) -> hol.proof (hol.eq B a_27_5 d_4) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => d_4 : hol.term B => a_27_5 : hol.term B => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) => hyp_2 : hol.proof (hol.eq A x_3 a_1) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_2) => thm_1595 B A a_1 d_4 a_27_5 s_2 x_3 hyp_2 hyp_3 (thm_1119 A s_2 x_3 hyp_1).

(; Theorem: |- ((= a') d) ;)

(; dict ;)

def thm_1597 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> s_2 : hol.term (Set_2Eset A) -> x_3 : hol.term A -> d_4 : hol.term B -> a_27_5 : hol.term B -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) -> hyp_2 : hol.proof (hol.eq A x_3 a_1) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_2) -> hol.proof (hol.eq B a_27_5 d_4) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => s_2 : hol.term (Set_2Eset A) => x_3 : hol.term A => d_4 : hol.term B => a_27_5 : hol.term B => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_3 s_2)) => hyp_2 : hol.proof (hol.eq A x_3 a_1) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_2) => hol.PROVE_HYP (hol.eq A x_3 a_1) (hol.eq B a_27_5 d_4) (thm_1004 A a_1 x_3 hyp_2) (hyp_4 : hol.proof (hol.eq A x_3 a_1) => hol.EQ_MP (hol.eq B a_27_5 d_4) (hol.eq B a_27_5 d_4) (thm_1586 B d_4 a_27_5) (thm_1596 A B a_1 s_2 x_3 d_4 a_27_5 hyp_1 hyp_4 hyp_3)).

(; Theorem: |- ((Data.Bool.==> ((= x) a)) ((= a') d)) ;)

(; dict ;)

def thm_1598 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> d_2 : hol.term B -> a_27_3 : hol.term B -> a_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_1) -> hol.proof (hol.imp (hol.eq A x_5 a_4) (hol.eq B a_27_3 d_2)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => d_2 : hol.term B => a_27_3 : hol.term B => a_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_1) => hyp_3 : hol.proof (hol.eq A x_5 a_4) => thm_1597 A B a_4 s_1 x_5 d_2 a_27_3 hyp_1 hyp_3 hyp_2.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (b x)) d))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= a') d))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (b x)) d)))) ;)

(; dict ;)

def thm_1599 : B : hol.type -> A : hol.type -> a_27_1 : hol.term B -> d_2 : hol.term B -> b_3 : hol.term (hol.arr A B) -> a_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.imp (hol.eq A x_5 a_4) (hol.eq B a_27_1 d_2)) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_5 a_4)) (hol.eq B (b_3 x_5) d_2)) (hol.and (hol.imp (hol.eq A x_5 a_4) (hol.eq B a_27_1 d_2)) (hol.imp (hol.not (hol.eq A x_5 a_4)) (hol.eq B (b_3 x_5) d_2)))) :=
  B : hol.type => A : hol.type => a_27_1 : hol.term B => d_2 : hol.term B => b_3 : hol.term (hol.arr A B) => a_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.imp (hol.eq A x_5 a_4) (hol.eq B a_27_1 d_2)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.imp (hol.eq A x_5 a_4) (hol.eq B a_27_1 d_2)) (hol.imp (hol.not (hol.eq A x_5 a_4)) (hol.eq B (b_3 x_5) d_2)) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (b x)) d))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= a') d))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (b x)) d)))) ;)

(; dict ;)

def thm_1600 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_27_2 : hol.term B -> d_3 : hol.term B -> b_4 : hol.term (hol.arr A B) -> a_5 : hol.term A -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_1) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_6 a_5)) (hol.eq B (b_4 x_6) d_3)) (hol.and (hol.imp (hol.eq A x_6 a_5) (hol.eq B a_27_2 d_3)) (hol.imp (hol.not (hol.eq A x_6 a_5)) (hol.eq B (b_4 x_6) d_3)))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => a_27_2 : hol.term B => d_3 : hol.term B => b_4 : hol.term (hol.arr A B) => a_5 : hol.term A => x_6 : hol.term A => hyp_1 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_1) => hol.PROVE_HYP (hol.imp (hol.eq A x_6 a_5) (hol.eq B a_27_2 d_3)) (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_6 a_5)) (hol.eq B (b_4 x_6) d_3)) (hol.and (hol.imp (hol.eq A x_6 a_5) (hol.eq B a_27_2 d_3)) (hol.imp (hol.not (hol.eq A x_6 a_5)) (hol.eq B (b_4 x_6) d_3)))) (thm_1598 B A s_1 d_3 a_27_2 a_5 x_6 hyp_1 hyp_2) (hyp_3 : hol.proof (hol.imp (hol.eq A x_6 a_5) (hol.eq B a_27_2 d_3)) => thm_1599 B A a_27_2 d_3 b_4 a_5 x_6 hyp_3).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (b x)) d)) ;)

(; dict ;)

def thm_1601 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> d_2 : hol.term B -> b_3 : hol.term (hol.arr A B) -> a_4 : hol.term A -> x_5 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) (hol.eq B (b_3 x_6) d_2))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) -> hol.proof (hol.imp (hol.not (hol.eq A x_5 a_4)) (hol.eq B (b_3 x_5) d_2)) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => d_2 : hol.term B => b_3 : hol.term (hol.arr A B) => a_4 : hol.term A => x_5 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) (hol.eq B (b_3 x_6) d_2))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1)) => hyp_3 : hol.proof (hol.not (hol.eq A x_5 a_4)) => thm_1137 A B s_1 d_2 x_5 b_3 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= a') d))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (b x)) d))) ;)

(; dict ;)

def thm_1602 : B : hol.type -> A : hol.type -> s_1 : hol.term (Set_2Eset A) -> b_2 : hol.term (hol.arr A B) -> d_3 : hol.term B -> a_27_4 : hol.term B -> a_5 : hol.term A -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)) (hol.eq B (b_2 x_7) d_3))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_1) -> hol.proof (hol.and (hol.imp (hol.eq A x_6 a_5) (hol.eq B a_27_4 d_3)) (hol.imp (hol.not (hol.eq A x_6 a_5)) (hol.eq B (b_2 x_6) d_3))) :=
  B : hol.type => A : hol.type => s_1 : hol.term (Set_2Eset A) => b_2 : hol.term (hol.arr A B) => d_3 : hol.term B => a_27_4 : hol.term B => a_5 : hol.term A => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)) (hol.eq B (b_2 x_7) d_3))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_1) => hol.EQ_MP (hol.imp (hol.not (hol.eq A x_6 a_5)) (hol.eq B (b_2 x_6) d_3)) (hol.and (hol.imp (hol.eq A x_6 a_5) (hol.eq B a_27_4 d_3)) (hol.imp (hol.not (hol.eq A x_6 a_5)) (hol.eq B (b_2 x_6) d_3))) (thm_1600 B A s_1 a_27_4 d_3 b_2 a_5 x_6 hyp_2 hyp_3) (thm_1601 B A s_1 d_3 b_2 a_5 x_6 hyp_1 hyp_2).

(; Theorem: |- ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d) ;)

(; dict ;)

def thm_1603 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> d_2 : hol.term B -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)) (hol.eq B (b_3 x_7) d_2))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_1) -> hol.proof (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) d_2) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => d_2 : hol.term B => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => a_5 : hol.term A => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)) (hol.eq B (b_3 x_7) d_2))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_1) => hol.EQ_MP (hol.and (hol.imp (hol.eq A x_6 a_5) (hol.eq B a_27_4 d_2)) (hol.imp (hol.not (hol.eq A x_6 a_5)) (hol.eq B (b_3 x_6) d_2))) (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) d_2) (thm_1584 B A b_3 d_2 a_27_4 a_5 x_6) (thm_1602 B A s_1 b_3 d_2 a_27_4 a_5 x_6 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d) ;)

(; dict ;)

def thm_1604 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> d_2 : hol.term B -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)) (hol.eq B (b_3 x_7) d_2))) -> hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_1) -> hol.proof (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) d_2) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => d_2 : hol.term B => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => a_5 : hol.term A => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_1)) (hol.eq B (b_3 x_7) d_2))) => hyp_2 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_1) => hol.PROVE_HYP (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) (hol.eq B (hol.cond B (hol.eq A x_6 a_5) a_27_4 (b_3 x_6)) d_2) (thm_1119 A s_1 x_6 hyp_2) (hyp_4 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_1)) => thm_1603 A B s_1 d_2 b_3 a_27_4 a_5 x_6 hyp_1 hyp_4 hyp_3).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d)) ;)

(; dict ;)

def thm_1605 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> s_5 : hol.term (Set_2Eset A) -> x_6 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (hol.eq B (b_2 x_7) d_1))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_5) -> hol.proof (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) d_1)) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => s_5 : hol.term (Set_2Eset A) => x_6 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_5)) (hol.eq B (b_2 x_7) d_1))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_5) => hyp_3 : hol.proof (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) => thm_1604 A B s_5 d_1 b_2 a_27_3 a_4 x_6 hyp_1 hyp_3 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d))) ;)

(; dict ;)

def thm_1606 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> b_2 : hol.term (hol.arr A B) -> a_27_3 : hol.term B -> a_4 : hol.term A -> s_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (b_2 x_6) d_1))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_5) -> hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (hol.cond B (hol.eq A x_6 a_4) a_27_3 (b_2 x_6)) d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => b_2 : hol.term (hol.arr A B) => a_27_3 : hol.term B => a_4 : hol.term A => s_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (b_2 x_6) d_1))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_5) => x_6 : hol.term A => thm_1605 B A d_1 b_2 a_27_3 a_4 s_5 x_6 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (((Data.Bool.cond ((= x) a)) a') (b x))) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (((Data.Bool.cond ((= x) a)) a') (b x))) d)))) ;)

(; dict ;)

def thm_1607 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> s_6 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (b_3 x_7) d_1))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_6) -> hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) -> hol.proof (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => a_5 : hol.term A => s_6 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (b_3 x_7) d_1))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_6) => hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) => hol.EQ_MP (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) d_1))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) d_1)))) (thm_1568 B A t_2 d_1 b_3 a_27_4 a_5 s_6 hyp_2 hyp_4) (hol.EQ_MP (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) d_1))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) d_1))) (thm_1571 B A d_1 b_3 a_27_4 a_5 s_6) (thm_1606 B A d_1 b_3 a_27_4 a_5 s_6 hyp_1 hyp_3)).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d)))) ;)

(; dict ;)

def thm_1608 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> s_6 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (b_3 x_7) d_1))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_6) -> hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) -> hol.proof (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => a_5 : hol.term A => s_6 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (b_3 x_7) d_1))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_6) => hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) => hol.EQ_MP (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (hol.cond B (hol.eq A x_7 a_5) a_27_4 (b_3 x_7)) d_1)))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) d_1)))) (thm_1556 B A d_1 t_2 b_3 a_27_4 a_5 s_6) (thm_1607 B A d_1 t_2 b_3 a_27_4 a_5 s_6 hyp_1 hyp_2 hyp_3 hyp_4).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d)))) ;)

(; dict ;)

def thm_1609 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> s_6 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (b_3 x_7) d_1))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_6) -> hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) -> hol.proof (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => a_5 : hol.term A => s_6 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (b_3 x_7) d_1))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_6) => hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) => hol.PROVE_HYP (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (b_3 x_7) d_1))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) d_1)))) (thm_919 B A d_1 b_3 s_6 hyp_1) (hyp_5 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (b_3 x_7) d_1))) => thm_1608 B A d_1 t_2 b_3 a_27_4 a_5 s_6 hyp_5 hyp_2 hyp_3 hyp_4).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d)))) ;)

(; dict ;)

def thm_1610 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> s_6 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (b_3 x_7) d_1))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_6) -> hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) -> hol.proof (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => a_5 : hol.term A => s_6 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (b_3 x_7) d_1))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_6) => hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) => hol.PROVE_HYP (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) d_1)))) (thm_918 B A t_2 b_3 s_6 hyp_2) (hyp_5 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) => thm_1609 B A d_1 t_2 b_3 a_27_4 a_5 s_6 hyp_1 hyp_5 hyp_3 hyp_4).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d)))) ;)

(; dict ;)

def thm_1611 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> s_6 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (b_3 x_7) d_1))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_6) -> hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) -> hol.proof (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => a_5 : hol.term A => s_6 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (b_3 x_7) d_1))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_6) => hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) => hol.PROVE_HYP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) d_1)))) (thm_912 B t_2 a_27_4 hyp_4) (hyp_5 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) => thm_1610 B A d_1 t_2 b_3 a_27_4 a_5 s_6 hyp_1 hyp_2 hyp_3 hyp_5).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)) x)) d)))) ;)

(; dict ;)

def thm_1612 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> b_3 : hol.term (hol.arr A B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> s_6 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (b_3 x_7) d_1))) -> hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_6) -> hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) -> hol.proof (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => b_3 : hol.term (hol.arr A B) => a_27_4 : hol.term B => a_5 : hol.term A => s_6 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (b_3 x_7) d_1))) => hyp_2 : hol.proof (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_7) t_2))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_6) => hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_2) => hol.PROVE_HYP (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B ((x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_3 x_8)) x_7) d_1)))) (thm_1440 A s_6 a_5 hyp_3) (hyp_5 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_6) => thm_1611 B A d_1 t_2 b_3 a_27_4 a_5 s_6 hyp_1 hyp_2 hyp_5 hyp_4).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1613 : B : hol.type -> A : hol.type -> a_27_1 : hol.term B -> a_2 : hol.term A -> b_3 : hol.term (hol.arr A B) -> d_4 : hol.term B -> t_5 : hol.term (Set_2Eset B) -> g_6 : hol.term (hol.arr A B) -> s_7 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (b_3 x_8) d_4))) -> hyp_2 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_8) t_5))) -> hyp_3 : hol.proof (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) a_27_1 (b_3 x_8))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_7) -> hyp_5 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_5) -> hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_6 x_8) d_4)))) :=
  B : hol.type => A : hol.type => a_27_1 : hol.term B => a_2 : hol.term A => b_3 : hol.term (hol.arr A B) => d_4 : hol.term B => t_5 : hol.term (Set_2Eset B) => g_6 : hol.term (hol.arr A B) => s_7 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (b_3 x_8) d_4))) => hyp_2 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_8) t_5))) => hyp_3 : hol.proof (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) a_27_1 (b_3 x_8))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_7) => hyp_5 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_5) => hol.EQ_MP (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_2) a_27_1 (b_3 x_9)) x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B ((x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_2) a_27_1 (b_3 x_9)) x_8) d_4)))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_6 x_8) d_4)))) (thm_1545 B A g_6 d_4 t_5 b_3 a_27_1 a_2 s_7 hyp_3) (thm_1612 B A d_4 t_5 b_3 a_27_1 a_2 s_7 hyp_1 hyp_2 hyp_4 hyp_5).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1614 : B : hol.type -> A : hol.type -> a_27_1 : hol.term B -> a_2 : hol.term A -> b_3 : hol.term (hol.arr A B) -> d_4 : hol.term B -> t_5 : hol.term (Set_2Eset B) -> g_6 : hol.term (hol.arr A B) -> s_7 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (b_3 x_8) d_4))) -> hyp_2 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_8) t_5))) -> hyp_3 : hol.proof (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) a_27_1 (b_3 x_8))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_7) -> hyp_5 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_5) -> hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_6 x_8) d_4)))) :=
  B : hol.type => A : hol.type => a_27_1 : hol.term B => a_2 : hol.term A => b_3 : hol.term (hol.arr A B) => d_4 : hol.term B => t_5 : hol.term (Set_2Eset B) => g_6 : hol.term (hol.arr A B) => s_7 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (b_3 x_8) d_4))) => hyp_2 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_8) t_5))) => hyp_3 : hol.proof (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) a_27_1 (b_3 x_8))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_7) => hyp_5 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_5) => hol.PROVE_HYP (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (b_3 x_8) d_4))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_6 x_8) d_4)))) (thm_919 B A d_4 b_3 s_7 hyp_1) (hyp_6 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (b_3 x_8) d_4))) => thm_1613 B A a_27_1 a_2 b_3 d_4 t_5 g_6 s_7 hyp_6 hyp_2 hyp_3 hyp_4 hyp_5).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1615 : B : hol.type -> A : hol.type -> a_27_1 : hol.term B -> a_2 : hol.term A -> b_3 : hol.term (hol.arr A B) -> d_4 : hol.term B -> t_5 : hol.term (Set_2Eset B) -> g_6 : hol.term (hol.arr A B) -> s_7 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (b_3 x_8) d_4))) -> hyp_2 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_8) t_5))) -> hyp_3 : hol.proof (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) a_27_1 (b_3 x_8))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_7) -> hyp_5 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_5) -> hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_6 x_8) d_4)))) :=
  B : hol.type => A : hol.type => a_27_1 : hol.term B => a_2 : hol.term A => b_3 : hol.term (hol.arr A B) => d_4 : hol.term B => t_5 : hol.term (Set_2Eset B) => g_6 : hol.term (hol.arr A B) => s_7 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (b_3 x_8) d_4))) => hyp_2 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_8) t_5))) => hyp_3 : hol.proof (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) a_27_1 (b_3 x_8))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_7) => hyp_5 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_5) => hol.PROVE_HYP (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_8) t_5))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_6 x_8) d_4)))) (thm_918 B A t_5 b_3 s_7 hyp_2) (hyp_6 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_8) t_5))) => thm_1614 B A a_27_1 a_2 b_3 d_4 t_5 g_6 s_7 hyp_1 hyp_6 hyp_3 hyp_4 hyp_5).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1616 : B : hol.type -> A : hol.type -> a_27_1 : hol.term B -> a_2 : hol.term A -> b_3 : hol.term (hol.arr A B) -> d_4 : hol.term B -> t_5 : hol.term (Set_2Eset B) -> g_6 : hol.term (hol.arr A B) -> s_7 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_8) t_5))) -> hyp_2 : hol.proof (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) a_27_1 (b_3 x_8))) -> hyp_3 : hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (b_3 x_8) d_4)))) -> hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_7) -> hyp_5 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_5) -> hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_6 x_8) d_4)))) :=
  B : hol.type => A : hol.type => a_27_1 : hol.term B => a_2 : hol.term A => b_3 : hol.term (hol.arr A B) => d_4 : hol.term B => t_5 : hol.term (Set_2Eset B) => g_6 : hol.term (hol.arr A B) => s_7 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_8) t_5))) => hyp_2 : hol.proof (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) a_27_1 (b_3 x_8))) => hyp_3 : hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_3 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (b_3 x_8) d_4)))) => hyp_4 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_7) => hyp_5 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_5) => hol.PROVE_HYP (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (b_3 x_8) d_4))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_6 x_8) d_4)))) (thm_916 B A t_5 d_4 b_3 s_7 hyp_3) (hyp_6 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (b_3 x_8) d_4))) => thm_1615 B A a_27_1 a_2 b_3 d_4 t_5 g_6 s_7 hyp_6 hyp_1 hyp_2 hyp_4 hyp_5).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1617 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> d_4 : hol.term B -> t_5 : hol.term (Set_2Eset B) -> g_6 : hol.term (hol.arr A B) -> s_7 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8))) -> hyp_2 : hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (b_1 x_8) d_4)))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_3 s_7) -> hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_5) -> hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_6 x_8) d_4)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => a_3 : hol.term A => d_4 : hol.term B => t_5 : hol.term (Set_2Eset B) => g_6 : hol.term (hol.arr A B) => s_7 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8))) => hyp_2 : hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (b_1 x_8) d_4)))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_3 s_7) => hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_5) => hol.PROVE_HYP (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_5))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_6 x_8) d_4)))) (thm_914 B A d_4 t_5 b_1 s_7 hyp_2) (hyp_5 : hol.proof (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_5))) => thm_1616 B A a_27_2 a_3 b_1 d_4 t_5 g_6 s_7 hyp_5 hyp_1 hyp_2 hyp_3 hyp_4).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1618 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> d_4 : hol.term B -> t_5 : hol.term (Set_2Eset B) -> g_6 : hol.term (hol.arr A B) -> s_7 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8))) -> hyp_2 : hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (b_1 x_8) d_4)))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_3 s_7) -> hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_5) -> hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_6 x_8) d_4)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => a_3 : hol.term A => d_4 : hol.term B => t_5 : hol.term (Set_2Eset B) => g_6 : hol.term (hol.arr A B) => s_7 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8))) => hyp_2 : hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (b_1 x_8) d_4)))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_3 s_7) => hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_5) => hol.PROVE_HYP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_5) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_6 x_8) d_4)))) (thm_912 B t_5 a_27_2 hyp_4) (hyp_5 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_5) => thm_1617 B A b_1 a_27_2 a_3 d_4 t_5 g_6 s_7 hyp_1 hyp_2 hyp_3 hyp_5).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1619 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> d_4 : hol.term B -> t_5 : hol.term (Set_2Eset B) -> g_6 : hol.term (hol.arr A B) -> s_7 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8))) -> hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_5) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (b_1 x_8) d_4))))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_3 s_7) -> hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_5) -> hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_6 x_8) d_4)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => a_3 : hol.term A => d_4 : hol.term B => t_5 : hol.term (Set_2Eset B) => g_6 : hol.term (hol.arr A B) => s_7 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8))) => hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_5) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (b_1 x_8) d_4))))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_3 s_7) => hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_5) => hol.PROVE_HYP (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (b_1 x_8) d_4)))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_6 x_8) d_4)))) (thm_910 B A a_27_2 d_4 t_5 b_1 s_7 hyp_2) (hyp_5 : hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (b_1 x_8) d_4)))) => thm_1618 B A b_1 a_27_2 a_3 d_4 t_5 g_6 s_7 hyp_1 hyp_5 hyp_3 hyp_4).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1620 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> d_4 : hol.term B -> t_5 : hol.term (Set_2Eset B) -> g_6 : hol.term (hol.arr A B) -> s_7 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8))) -> hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_5) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (b_1 x_8) d_4))))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_3 s_7) -> hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_6 x_8) d_4)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => a_3 : hol.term A => d_4 : hol.term B => t_5 : hol.term (Set_2Eset B) => g_6 : hol.term (hol.arr A B) => s_7 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8))) => hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_5) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (b_1 x_8) d_4))))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_3 s_7) => hol.PROVE_HYP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_5) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_6 x_8) d_4)))) (thm_908 A B d_4 b_1 s_7 t_5 a_27_2 hyp_2) (hyp_4 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_5) => thm_1619 B A b_1 a_27_2 a_3 d_4 t_5 g_6 s_7 hyp_1 hyp_2 hyp_3 hyp_4).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1621 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> d_4 : hol.term B -> t_5 : hol.term (Set_2Eset B) -> g_6 : hol.term (hol.arr A B) -> s_7 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8))) -> hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_5) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (b_1 x_8) d_4))))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_3 s_7) -> hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_6 x_8) d_4)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => a_3 : hol.term A => d_4 : hol.term B => t_5 : hol.term (Set_2Eset B) => g_6 : hol.term (hol.arr A B) => s_7 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8))) => hyp_2 : hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_5) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (b_1 x_8) d_4))))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_3 s_7) => hol.PROVE_HYP (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_6 x_8) d_4)))) (thm_906 B A b_1 a_27_2 a_3 g_6 hyp_1) (hyp_4 : hol.proof (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8))) => thm_1620 B A b_1 a_27_2 a_3 d_4 t_5 g_6 s_7 hyp_4 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1622 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> d_4 : hol.term B -> t_5 : hol.term (Set_2Eset B) -> g_6 : hol.term (hol.arr A B) -> s_7 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8))) -> hyp_2 : hol.proof (hol.and (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_5) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (b_1 x_8) d_4)))))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_3 s_7) -> hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_6 x_8) d_4)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => a_3 : hol.term A => d_4 : hol.term B => t_5 : hol.term (Set_2Eset B) => g_6 : hol.term (hol.arr A B) => s_7 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8))) => hyp_2 : hol.proof (hol.and (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_5) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (b_1 x_8) d_4)))))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_3 s_7) => hol.PROVE_HYP (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_5) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (b_1 x_8) d_4))))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_6 x_8) d_4)))) (thm_904 A B a_3 g_6 d_4 b_1 s_7 t_5 a_27_2 hyp_2) (hyp_4 : hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_5) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (b_1 x_8) d_4))))) => thm_1621 B A b_1 a_27_2 a_3 d_4 t_5 g_6 s_7 hyp_1 hyp_4 hyp_3).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1623 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> d_4 : hol.term B -> t_5 : hol.term (Set_2Eset B) -> g_6 : hol.term (hol.arr A B) -> s_7 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_5) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (b_1 x_8) d_4)))))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_3 s_7) -> hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_6 x_8) d_4)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => a_3 : hol.term A => d_4 : hol.term B => t_5 : hol.term (Set_2Eset B) => g_6 : hol.term (hol.arr A B) => s_7 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_5) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_1 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (b_1 x_8) d_4)))))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_3 s_7) => hol.PROVE_HYP (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_6 x_8) d_4)))) (thm_902 B A d_4 s_7 t_5 b_1 a_27_2 a_3 g_6 hyp_1) (hyp_3 : hol.proof (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) a_27_2 (b_1 x_8))) => thm_1622 B A b_1 a_27_2 a_3 d_4 t_5 g_6 s_7 hyp_3 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)))) ((Data.Bool./\ ((Set.member a') t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d))))) ;)

(; dict ;)

def thm_1624 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> b_4 : hol.term (hol.arr A B) -> a_27_5 : hol.term B -> a_6 : hol.term A -> g_7 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_2) -> hol.proof (hol.imp (hol.and (hol.eq (hol.arr A B) g_7 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_5 (b_4 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_4 x_8) d_1)))))) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (g_7 x_8) d_1))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => b_4 : hol.term (hol.arr A B) => a_27_5 : hol.term B => a_6 : hol.term A => g_7 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_2) => hyp_2 : hol.proof (hol.and (hol.eq (hol.arr A B) g_7 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_6) a_27_5 (b_4 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_4 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_4 x_8) d_1)))))) => thm_1623 B A b_4 a_27_5 a_6 d_1 t_3 g_7 s_2 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1625 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> a_27_2 : hol.term B -> a_3 : hol.term A -> d_4 : hol.term B -> t_5 : hol.term (Set_2Eset B) -> g_6 : hol.term (hol.arr A B) -> s_7 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof ((b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_3) a_27_2 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_5) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_5))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7)) (hol.eq B (b_8 x_9) d_4)))))) b_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_3 s_7) -> hol.proof (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_8) t_5))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_7)) (hol.eq B (g_6 x_8) d_4)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => a_27_2 : hol.term B => a_3 : hol.term A => d_4 : hol.term B => t_5 : hol.term (Set_2Eset B) => g_6 : hol.term (hol.arr A B) => s_7 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_3) a_27_2 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_2 t_5) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_5))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_7)) (hol.eq B (b_8 x_9) d_4)))))) b_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_3 s_7) => thm_1624 B A d_4 s_7 t_5 b_1 a_27_2 a_3 g_6 hyp_2 (thm_1165 B A d_4 s_7 t_5 b_1 a_27_2 a_3 g_6 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)))) ((Data.Bool./\ ((Set.member a') t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))) b)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d))))) ;)

(; dict ;)

def thm_1626 : B : hol.type -> A : hol.type -> b_1 : hol.term (hol.arr A B) -> d_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> t_4 : hol.term (Set_2Eset B) -> a_27_5 : hol.term B -> a_6 : hol.term A -> g_7 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_3) -> hol.proof (hol.imp ((b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_7 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_6) a_27_5 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_4))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (b_8 x_9) d_2)))))) b_1) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_7 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_3)) (hol.eq B (g_7 x_8) d_2))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term (hol.arr A B) => d_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => t_4 : hol.term (Set_2Eset B) => a_27_5 : hol.term B => a_6 : hol.term A => g_7 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_6 s_3) => hyp_2 : hol.proof ((b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_7 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_6) a_27_5 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_5 t_4) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_4))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (b_8 x_9) d_2)))))) b_1) => thm_1625 B A b_1 a_27_5 a_6 d_2 t_4 g_7 s_3 hyp_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda b. ((Data.Bool.==> (\lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)))) ((Data.Bool./\ ((Set.member a') t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))) b)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))))) ;)

(; dict ;)

def thm_1627 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> g_6 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_2) -> hol.proof (hol.forall (hol.arr A B) (b_7 : hol.term (hol.arr A B) => hol.imp ((b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_5) a_27_4 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_3) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (b_8 x_9) d_1)))))) b_7) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (g_6 x_8) d_1)))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_27_4 : hol.term B => a_5 : hol.term A => g_6 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_2) => b_7 : hol.term (hol.arr A B) => thm_1626 B A b_7 d_1 s_2 t_3 a_27_4 a_5 g_6 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a') (b x)))) ((Data.Bool./\ ((Set.member a') t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d))))) ;)

(; dict ;)

def thm_1628 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_27_4 : hol.term B -> a_5 : hol.term A -> g_6 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_2) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_5) a_27_4 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_4 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1))))))) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (g_6 x_7) d_1))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_27_4 : hol.term B => a_5 : hol.term A => g_6 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_2) => thm_1533 B A d_1 s_2 t_3 a_27_4 a_5 g_6 (thm_1627 B A d_1 s_2 t_3 a_27_4 a_5 g_6 hyp_1).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1629 : B : hol.type -> A : hol.type -> a_27_1 : hol.term B -> a_2 : hol.term A -> d_3 : hol.term B -> t_4 : hol.term (Set_2Eset B) -> g_5 : hol.term (hol.arr A B) -> s_6 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) a_27_1 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_4) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_7 x_8) d_3))))))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_6) -> hol.proof (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (g_5 x_7) d_3)))) :=
  B : hol.type => A : hol.type => a_27_1 : hol.term B => a_2 : hol.term A => d_3 : hol.term B => t_4 : hol.term (Set_2Eset B) => g_5 : hol.term (hol.arr A B) => s_6 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) a_27_1 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_4) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_7 x_8) d_3))))))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_6) => thm_1628 B A d_3 s_6 t_4 a_27_1 a_2 g_5 hyp_2 (thm_1170 B A d_3 s_6 t_4 a_27_1 a_2 g_5 hyp_1).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1630 : B : hol.type -> A : hol.type -> a_27_1 : hol.term B -> a_2 : hol.term A -> d_3 : hol.term B -> t_4 : hol.term (Set_2Eset B) -> g_5 : hol.term (hol.arr A B) -> s_6 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof ((a_7 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_2) a_7 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_7 t_4) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_4))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6)) (hol.eq B (b_8 x_9) d_3))))))) a_27_1) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_6) -> hol.proof (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_6)) (hol.eq B (g_5 x_7) d_3)))) :=
  B : hol.type => A : hol.type => a_27_1 : hol.term B => a_2 : hol.term A => d_3 : hol.term B => t_4 : hol.term (Set_2Eset B) => g_5 : hol.term (hol.arr A B) => s_6 : hol.term (Set_2Eset A) => hyp_1 : hol.proof ((a_7 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_2) a_7 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_7 t_4) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_4))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_6)) (hol.eq B (b_8 x_9) d_3))))))) a_27_1) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_6) => (hyp_3 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) a_27_1 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_27_1 t_4) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_4))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_6)) (hol.eq B (b_7 x_8) d_3))))))) => thm_1629 B A a_27_1 a_2 d_3 t_4 g_5 s_6 hyp_3 hyp_2) (thm_1174 B A d_3 s_6 t_4 a_27_1 a_2 g_5 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))) a')) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d))))) ;)

(; dict ;)

def thm_1631 : A : hol.type -> B : hol.type -> a_27_1 : hol.term B -> d_2 : hol.term B -> s_3 : hol.term (Set_2Eset A) -> t_4 : hol.term (Set_2Eset B) -> a_5 : hol.term A -> g_6 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_3) -> hol.proof (hol.imp ((a_7 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_5) a_7 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_7 t_4) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_4))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (b_8 x_9) d_2))))))) a_27_1) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (g_6 x_7) d_2))))) :=
  A : hol.type => B : hol.type => a_27_1 : hol.term B => d_2 : hol.term B => s_3 : hol.term (Set_2Eset A) => t_4 : hol.term (Set_2Eset B) => a_5 : hol.term A => g_6 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_5 s_3) => hyp_2 : hol.proof ((a_7 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_6 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_5) a_7 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_7 t_4) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_4))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_3)) (hol.eq B (b_8 x_9) d_2))))))) a_27_1) => thm_1630 B A a_27_1 a_5 d_2 t_4 g_6 s_3 hyp_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda a'. ((Data.Bool.==> (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))) a')) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))))) ;)

(; dict ;)

def thm_1632 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2) -> hol.proof (hol.forall B (a_27_6 : hol.term B => hol.imp ((a_7 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_9 : hol.term A => hol.cond B (hol.eq A x_9 a_4) a_7 (b_8 x_9))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_7 t_3) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_2)) (hol.eq B (b_8 x_9) d_1))))))) a_27_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (g_5 x_7) d_1)))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2) => a_27_6 : hol.term B => thm_1631 A B a_27_6 d_1 s_2 t_3 a_4 g_5 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d))))) ;)

(; dict ;)

def thm_1633 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))))) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2) => thm_1532 A B d_1 s_2 t_3 a_4 g_5 (thm_1632 A B d_1 s_2 t_3 a_4 g_5 hyp_1).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1634 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> g_4 : hol.term (hol.arr A B) -> s_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)) (hol.eq B (b_7 x_8) d_2)))))))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_5) -> hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (g_4 x_6) d_2)))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => g_4 : hol.term (hol.arr A B) => s_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)) (hol.eq B (b_7 x_8) d_2)))))))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_5) => thm_1633 A B d_2 s_5 t_3 a_1 g_4 hyp_2 (thm_1179 A B d_2 s_5 t_3 a_1 g_4 hyp_1).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1635 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> g_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_1)))) -> hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => g_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_1)))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t))) ;)

(; dict ;)

def thm_1636 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> g_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_1)))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_2))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => g_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_1)))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_208 q_1 p_2 hyp_1) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_1))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_2))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t))) ;)

(; dict ;)

def thm_1637 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> g_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_1)))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_2))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => g_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_1)))) => hol.PROVE_HYP (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_1)))) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_2))) (thm_1635 B A d_1 t_2 g_3 s_4 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_1)))) => thm_1636 B A d_1 t_2 g_3 s_4 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d))) ;)

(; dict ;)

def thm_1638 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> d_2 : hol.term B -> g_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_1))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_2)))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_2))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => d_2 : hol.term B => g_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_1))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_2)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_151 p_1 q_2 hyp_1) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_1))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_2))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d))) ;)

(; dict ;)

def thm_1639 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> d_2 : hol.term B -> g_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_1))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_2)))) -> hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_2))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => d_2 : hol.term B => g_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_1))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_2)))) => hol.PROVE_HYP (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_1))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_2)))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_2))) (thm_1635 B A d_2 t_1 g_3 s_4 hyp_1) (hyp_2 : hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_1))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_2)))) => thm_1638 B A t_1 d_2 g_3 s_4 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t))) ;)

(; dict ;)

def thm_1640 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> g_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_4) t_1))) -> hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_4) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => g_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_4) t_1))) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d))) ;)

(; dict ;)

def thm_1641 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> g_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (hol.eq B (g_2 x_4) d_1))) -> hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (hol.eq B (g_2 x_4) d_1))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => g_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3)) (hol.eq B (g_2 x_4) d_1))) => hyp_1.

(; Theorem: |- ((= (\lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (b x)))) ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))) g)) ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (g x)))) ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d))))))) ;)

(; dict ;)

def thm_1642 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1)))))) g_5) (hol.and (hol.eq (hol.arr A B) g_5 (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_5 a_4) (g_5 x_6))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hol.BETA_CONV (hol.arr A B) hol.bool (b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1)))))) g_5.

(; Theorem: |- ((= ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (g x)))) ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d))))))) (\lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (b x)))) ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))) g)) ;)

(; dict ;)

def thm_1643 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq (hol.arr A B) g_5 (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_5 a_4) (g_5 x_6))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1)))))) ((b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1)))))) g_5)) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hol.SYM hol.bool ((b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1)))))) g_5) (hol.and (hol.eq (hol.arr A B) g_5 (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_5 a_4) (g_5 x_6))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1)))))) (thm_1642 B A d_1 s_2 t_3 a_4 g_5).

(; Theorem: |- ((= ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (g x)))) (Data.Bool.! \lambda x. ((= (g x)) (\lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (g x)) x)))) ;)

(; dict ;)

def thm_1644 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3))) (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) ((x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_1) (g_2 a_1) (g_2 x_4)) x_3)))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => g_2 : hol.term (hol.arr A B) => (B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => f_2 : hol.term (hol.arr A B) => thm_328 B A g_1 f_2) B A (x_3 : hol.term A => hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3)) g_2.

(; Theorem: |- ((= (\lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (g x)) x)) (((Data.Bool.cond ((= x) a)) (g a)) (g x))) ;)

(; dict ;)

def thm_1645 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> a_3 : hol.term A -> hol.proof (hol.eq B ((x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (g_2 a_3) (g_2 x_4)) x_1) (hol.cond B (hol.eq A x_1 a_3) (g_2 a_3) (g_2 x_1))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A B) => a_3 : hol.term A => hol.BETA_CONV A B (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (g_2 a_3) (g_2 x_4)) x_1.

(; Theorem: |- ((= \lambda x. (\lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (g x)) x)) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (g x))) ;)

(; dict ;)

def thm_1646 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> a_2 : hol.term A -> hol.proof (hol.eq (hol.arr A B) (x_3 : hol.term A => (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_2) (g_1 a_2) (g_1 x_4)) x_3) (x_3 : hol.term A => hol.cond B (hol.eq A x_3 a_2) (g_1 a_2) (g_1 x_3))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => a_2 : hol.term A => hol.ABS_THM A B (x_3 : hol.term A => (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_2) (g_1 a_2) (g_1 x_4)) x_3) (x_3 : hol.term A => hol.cond B (hol.eq A x_3 a_2) (g_1 a_2) (g_1 x_3)) (x_3 : hol.term A => thm_1645 A B x_3 g_1 a_2).

(; Theorem: |- ((= (\lambda x. (\lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (g x)) x) x)) (\lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (g x)) x)) ;)

(; dict ;)

def thm_1647 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> a_3 : hol.term A -> hol.proof (hol.eq B ((x_4 : hol.term A => (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (g_2 a_3) (g_2 x_5)) x_4) x_1) ((x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (g_2 a_3) (g_2 x_4)) x_1)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A B) => a_3 : hol.term A => hol.APP_THM A B (x_4 : hol.term A => (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (g_2 a_3) (g_2 x_5)) x_4) (x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (g_2 a_3) (g_2 x_4)) x_1 x_1 (thm_1646 B A g_2 a_3) (thm_334 A x_1).

(; Theorem: |- ((= (= (\lambda x. (\lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (g x)) x) x))) (= (\lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (g x)) x))) ;)

(; dict ;)

def thm_1648 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> a_3 : hol.term A -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B ((x_4 : hol.term A => (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (g_2 a_3) (g_2 x_5)) x_4) x_1)) (hol.eq B ((x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (g_2 a_3) (g_2 x_4)) x_1))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A B) => a_3 : hol.term A => hol.APP_THM B (hol.arr B hol.bool) (hol.eq B) (hol.eq B) ((x_4 : hol.term A => (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (g_2 a_3) (g_2 x_5)) x_4) x_1) ((x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (g_2 a_3) (g_2 x_4)) x_1) (thm_331 B) (thm_1647 A B x_1 g_2 a_3).

(; Theorem: |- ((= ((= (\lambda x. (\lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (g x)) x) x)) (\lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (g x)) x))) ((= (\lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (g x)) x)) (((Data.Bool.cond ((= x) a)) (g a)) (g x)))) ;)

(; dict ;)

def thm_1649 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> a_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq B ((x_4 : hol.term A => (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (g_2 a_3) (g_2 x_5)) x_4) x_1) ((x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (g_2 a_3) (g_2 x_4)) x_1)) (hol.eq B ((x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (g_2 a_3) (g_2 x_4)) x_1) (hol.cond B (hol.eq A x_1 a_3) (g_2 a_3) (g_2 x_1)))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A B) => a_3 : hol.term A => hol.APP_THM B hol.bool (hol.eq B ((x_4 : hol.term A => (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_3) (g_2 a_3) (g_2 x_5)) x_4) x_1)) (hol.eq B ((x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (g_2 a_3) (g_2 x_4)) x_1)) ((x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_3) (g_2 a_3) (g_2 x_4)) x_1) (hol.cond B (hol.eq A x_1 a_3) (g_2 a_3) (g_2 x_1)) (thm_1648 A B x_1 g_2 a_3) (thm_1645 A B x_1 g_2 a_3).

(; Theorem: |- ((= ((= (g x)) (\lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (g x)) x))) ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (g x)))) ;)

(; dict ;)

def thm_1650 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B (g_3 x_2) ((x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_1) (g_3 a_1) (g_3 x_4)) x_2)) (hol.eq B (g_3 x_2) (hol.cond B (hol.eq A x_2 a_1) (g_3 a_1) (g_3 x_2)))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hol.APP_THM B hol.bool (hol.eq B (g_3 x_2)) (hol.eq B (g_3 x_2)) ((x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_1) (g_3 a_1) (g_3 x_4)) x_2) (hol.cond B (hol.eq A x_2 a_1) (g_3 a_1) (g_3 x_2)) (thm_330 A B x_2 g_3) (hol.EQ_MP (hol.eq B ((x_4 : hol.term A => (x_5 : hol.term A => hol.cond B (hol.eq A x_5 a_1) (g_3 a_1) (g_3 x_5)) x_4) x_2) ((x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_1) (g_3 a_1) (g_3 x_4)) x_2)) (hol.eq B ((x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_1) (g_3 a_1) (g_3 x_4)) x_2) (hol.cond B (hol.eq A x_2 a_1) (g_3 a_1) (g_3 x_2))) (thm_1649 A B x_2 g_3 a_1) (thm_1647 A B x_2 g_3 a_1)).

(; Theorem: |- ((= \lambda x. ((= (g x)) (\lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (g x)) x))) \lambda x. ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (g x)))) ;)

(; dict ;)

def thm_1651 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.eq B (g_2 x_3) ((x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_1) (g_2 a_1) (g_2 x_4)) x_3)) (x_3 : hol.term A => hol.eq B (g_2 x_3) (hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3)))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => g_2 : hol.term (hol.arr A B) => hol.ABS_THM A hol.bool (x_3 : hol.term A => hol.eq B (g_2 x_3) ((x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_1) (g_2 a_1) (g_2 x_4)) x_3)) (x_3 : hol.term A => hol.eq B (g_2 x_3) (hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3))) (x_3 : hol.term A => thm_1650 A B a_1 x_3 g_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= (g x)) (\lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (g x)) x)))) (Data.Bool.! \lambda x. ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (g x))))) ;)

(; dict ;)

def thm_1652 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) ((x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_1) (g_2 a_1) (g_2 x_4)) x_3))) (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) (hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3))))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => g_2 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_3 : hol.term A => hol.eq B (g_2 x_3) ((x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_1) (g_2 a_1) (g_2 x_4)) x_3)) (x_3 : hol.term A => hol.eq B (g_2 x_3) (hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3))) (thm_95 A) (thm_1651 B A a_1 g_2).

(; Theorem: |- ((= ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (g x)))) (Data.Bool.! \lambda x. ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (g x))))) ;)

(; dict ;)

def thm_1653 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3))) (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) (hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3))))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => g_2 : hol.term (hol.arr A B) => hol.TRANS hol.bool (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3))) (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) ((x_4 : hol.term A => hol.cond B (hol.eq A x_4 a_1) (g_2 a_1) (g_2 x_4)) x_3))) (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) (hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3)))) (thm_1644 B A a_1 g_2) (thm_1652 B A a_1 g_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (g x))))) ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (g x)))) ;)

(; dict ;)

def thm_1654 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) (hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3)))) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3)))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => g_2 : hol.term (hol.arr A B) => hol.SYM hol.bool (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3))) (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) (hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3)))) (thm_1653 B A a_1 g_2).

(; Theorem: |- ((= \lambda x. ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (g x)))) \lambda x. ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (g x)))) ;)

(; dict ;)

def thm_1655 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.eq B (g_2 x_3) (hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3))) (x_3 : hol.term A => hol.eq B (g_2 x_3) (hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3)))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => g_2 : hol.term (hol.arr A B) => hol.REFL (hol.arr A hol.bool) (x_3 : hol.term A => hol.eq B (g_2 x_3) (hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3))).

(; Theorem: |- ((= \lambda x. ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (g x)))) \lambda x. ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (g x)))) ;)

(; dict ;)

def thm_1656 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.eq B (g_2 x_3) (hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3))) (x_3 : hol.term A => hol.eq B (g_2 x_3) (hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3)))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => g_2 : hol.term (hol.arr A B) => hol.TRANS (hol.arr A hol.bool) (x_3 : hol.term A => hol.eq B (g_2 x_3) (hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3))) (x_3 : hol.term A => hol.eq B (g_2 x_3) (hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3))) (x_3 : hol.term A => hol.eq B (g_2 x_3) (hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3))) (thm_1655 B A a_1 g_2) (thm_1655 B A a_1 g_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (g x))))) (Data.Bool.! \lambda x. ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (g x))))) ;)

(; dict ;)

def thm_1657 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) (hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3)))) (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) (hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3))))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => g_2 : hol.term (hol.arr A B) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_3 : hol.term A => hol.eq B (g_2 x_3) (hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3))) (x_3 : hol.term A => hol.eq B (g_2 x_3) (hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3))) (thm_95 A) (thm_1656 B A a_1 g_2).

(; Theorem: |- ((= (\lambda _10560. ((= (g x)) _10560) (((Data.Bool.cond ((= x) a)) (g a)) (g x)))) ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (g x)))) ;)

(; dict ;)

def thm_1658 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((__10560_4 : hol.term B => hol.eq B (g_3 x_2) __10560_4) (hol.cond B (hol.eq A x_2 a_1) (g_3 a_1) (g_3 x_2))) (hol.eq B (g_3 x_2) (hol.cond B (hol.eq A x_2 a_1) (g_3 a_1) (g_3 x_2)))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hol.BETA_CONV B hol.bool (__10560_4 : hol.term B => hol.eq B (g_3 x_2) __10560_4) (hol.cond B (hol.eq A x_2 a_1) (g_3 a_1) (g_3 x_2)).

(; Theorem: |- ((= (= (\lambda _10560. ((= (g x)) _10560) (((Data.Bool.cond ((= x) a)) (g a)) (g x))))) (= ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (g x))))) ;)

(; dict ;)

def thm_1659 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool ((__10560_4 : hol.term B => hol.eq B (g_3 x_2) __10560_4) (hol.cond B (hol.eq A x_2 a_1) (g_3 a_1) (g_3 x_2)))) (hol.eq hol.bool (hol.eq B (g_3 x_2) (hol.cond B (hol.eq A x_2 a_1) (g_3 a_1) (g_3 x_2))))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) ((__10560_4 : hol.term B => hol.eq B (g_3 x_2) __10560_4) (hol.cond B (hol.eq A x_2 a_1) (g_3 a_1) (g_3 x_2))) (hol.eq B (g_3 x_2) (hol.cond B (hol.eq A x_2 a_1) (g_3 a_1) (g_3 x_2))) thm_77 (thm_1658 A B a_1 x_2 g_3).

(; Theorem: |- ((= (\lambda _10560. ((= (g x)) _10560) (g a))) ((= (g x)) (g a))) ;)

(; dict ;)

def thm_1660 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((__10560_4 : hol.term B => hol.eq B (g_3 x_2) __10560_4) (g_3 a_1)) (hol.eq B (g_3 x_2) (g_3 a_1))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hol.BETA_CONV B hol.bool (__10560_4 : hol.term B => hol.eq B (g_3 x_2) __10560_4) (g_3 a_1).

(; Theorem: |- ((= ((Data.Bool.==> ((= x) a)) (\lambda _10560. ((= (g x)) _10560) (g a)))) ((Data.Bool.==> ((= x) a)) ((= (g x)) (g a)))) ;)

(; dict ;)

def thm_1661 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> a_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq A x_3 a_2) ((__10560_4 : hol.term B => hol.eq B (g_1 x_3) __10560_4) (g_1 a_2))) (hol.imp (hol.eq A x_3 a_2) (hol.eq B (g_1 x_3) (g_1 a_2)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => a_2 : hol.term A => x_3 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (hol.eq A x_3 a_2)) (hol.imp (hol.eq A x_3 a_2)) ((__10560_4 : hol.term B => hol.eq B (g_1 x_3) __10560_4) (g_1 a_2)) (hol.eq B (g_1 x_3) (g_1 a_2)) (thm_985 A a_2 x_3) (thm_1660 A B a_2 x_3 g_1).

(; Theorem: |- ((= (Data.Bool./\ ((Data.Bool.==> ((= x) a)) (\lambda _10560. ((= (g x)) _10560) (g a))))) (Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= (g x)) (g a))))) ;)

(; dict ;)

def thm_1662 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> a_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.imp (hol.eq A x_3 a_2) ((__10560_4 : hol.term B => hol.eq B (g_1 x_3) __10560_4) (g_1 a_2)))) (hol.and (hol.imp (hol.eq A x_3 a_2) (hol.eq B (g_1 x_3) (g_1 a_2))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => a_2 : hol.term A => x_3 : hol.term A => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.imp (hol.eq A x_3 a_2) ((__10560_4 : hol.term B => hol.eq B (g_1 x_3) __10560_4) (g_1 a_2))) (hol.imp (hol.eq A x_3 a_2) (hol.eq B (g_1 x_3) (g_1 a_2))) thm_94 (thm_1661 B A g_1 a_2 x_3).

(; Theorem: |- ((= (\lambda _10560. ((= (g x)) _10560) (g x))) ((= (g x)) (g x))) ;)

(; dict ;)

def thm_1663 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((__10560_3 : hol.term B => hol.eq B (g_2 x_1) __10560_3) (g_2 x_1)) (hol.eq B (g_2 x_1) (g_2 x_1))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A B) => hol.BETA_CONV B hol.bool (__10560_3 : hol.term B => hol.eq B (g_2 x_1) __10560_3) (g_2 x_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= x) a))) (\lambda _10560. ((= (g x)) _10560) (g x)))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) (g x)))) ;)

(; dict ;)

def thm_1664 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> a_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_3 a_2)) ((__10560_4 : hol.term B => hol.eq B (g_1 x_3) __10560_4) (g_1 x_3))) (hol.imp (hol.not (hol.eq A x_3 a_2)) (hol.eq B (g_1 x_3) (g_1 x_3)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => a_2 : hol.term A => x_3 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.imp (hol.not (hol.eq A x_3 a_2))) (hol.imp (hol.not (hol.eq A x_3 a_2))) ((__10560_4 : hol.term B => hol.eq B (g_1 x_3) __10560_4) (g_1 x_3)) (hol.eq B (g_1 x_3) (g_1 x_3)) (thm_989 A a_2 x_3) (thm_1663 A B x_3 g_1).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) (\lambda _10560. ((= (g x)) _10560) (g a)))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) (\lambda _10560. ((= (g x)) _10560) (g x))))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= (g x)) (g a)))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) (g x))))) ;)

(; dict ;)

def thm_1665 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> a_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (hol.imp (hol.eq A x_3 a_2) ((__10560_4 : hol.term B => hol.eq B (g_1 x_3) __10560_4) (g_1 a_2))) (hol.imp (hol.not (hol.eq A x_3 a_2)) ((__10560_4 : hol.term B => hol.eq B (g_1 x_3) __10560_4) (g_1 x_3)))) (hol.and (hol.imp (hol.eq A x_3 a_2) (hol.eq B (g_1 x_3) (g_1 a_2))) (hol.imp (hol.not (hol.eq A x_3 a_2)) (hol.eq B (g_1 x_3) (g_1 x_3))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => a_2 : hol.term A => x_3 : hol.term A => hol.APP_THM hol.bool hol.bool (hol.and (hol.imp (hol.eq A x_3 a_2) ((__10560_4 : hol.term B => hol.eq B (g_1 x_3) __10560_4) (g_1 a_2)))) (hol.and (hol.imp (hol.eq A x_3 a_2) (hol.eq B (g_1 x_3) (g_1 a_2)))) (hol.imp (hol.not (hol.eq A x_3 a_2)) ((__10560_4 : hol.term B => hol.eq B (g_1 x_3) __10560_4) (g_1 x_3))) (hol.imp (hol.not (hol.eq A x_3 a_2)) (hol.eq B (g_1 x_3) (g_1 x_3))) (thm_1662 B A g_1 a_2 x_3) (thm_1664 B A g_1 a_2 x_3).

(; Theorem: |- ((= ((= (\lambda _10560. ((= (g x)) _10560) (((Data.Bool.cond ((= x) a)) (g a)) (g x)))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) (\lambda _10560. ((= (g x)) _10560) (g a)))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) (\lambda _10560. ((= (g x)) _10560) (g x)))))) ((= ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (g x)))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= (g x)) (g a)))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) (g x)))))) ;)

(; dict ;)

def thm_1666 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool ((__10560_4 : hol.term B => hol.eq B (g_3 x_2) __10560_4) (hol.cond B (hol.eq A x_2 a_1) (g_3 a_1) (g_3 x_2))) (hol.and (hol.imp (hol.eq A x_2 a_1) ((__10560_4 : hol.term B => hol.eq B (g_3 x_2) __10560_4) (g_3 a_1))) (hol.imp (hol.not (hol.eq A x_2 a_1)) ((__10560_4 : hol.term B => hol.eq B (g_3 x_2) __10560_4) (g_3 x_2))))) (hol.eq hol.bool (hol.eq B (g_3 x_2) (hol.cond B (hol.eq A x_2 a_1) (g_3 a_1) (g_3 x_2))) (hol.and (hol.imp (hol.eq A x_2 a_1) (hol.eq B (g_3 x_2) (g_3 a_1))) (hol.imp (hol.not (hol.eq A x_2 a_1)) (hol.eq B (g_3 x_2) (g_3 x_2)))))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool ((__10560_4 : hol.term B => hol.eq B (g_3 x_2) __10560_4) (hol.cond B (hol.eq A x_2 a_1) (g_3 a_1) (g_3 x_2)))) (hol.eq hol.bool (hol.eq B (g_3 x_2) (hol.cond B (hol.eq A x_2 a_1) (g_3 a_1) (g_3 x_2)))) (hol.and (hol.imp (hol.eq A x_2 a_1) ((__10560_4 : hol.term B => hol.eq B (g_3 x_2) __10560_4) (g_3 a_1))) (hol.imp (hol.not (hol.eq A x_2 a_1)) ((__10560_4 : hol.term B => hol.eq B (g_3 x_2) __10560_4) (g_3 x_2)))) (hol.and (hol.imp (hol.eq A x_2 a_1) (hol.eq B (g_3 x_2) (g_3 a_1))) (hol.imp (hol.not (hol.eq A x_2 a_1)) (hol.eq B (g_3 x_2) (g_3 x_2)))) (thm_1659 A B a_1 x_2 g_3) (thm_1665 B A g_3 a_1 x_2).

(; Theorem: |- ((= (\lambda _10560. ((= (g x)) _10560) (((Data.Bool.cond _483) _482) _485))) ((Data.Bool./\ ((Data.Bool.==> _483) (\lambda _10560. ((= (g x)) _10560) _482))) ((Data.Bool.==> (Data.Bool.~ _483)) (\lambda _10560. ((= (g x)) _10560) _485)))) ;)

(; dict ;)

def thm_1667 : A : hol.type -> B : hol.type -> __485_1 : hol.term B -> __482_2 : hol.term B -> __483_3 : hol.term hol.bool -> x_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((__10560_6 : hol.term B => hol.eq B (g_5 x_4) __10560_6) (hol.cond B __483_3 __482_2 __485_1)) (hol.and (hol.imp __483_3 ((__10560_6 : hol.term B => hol.eq B (g_5 x_4) __10560_6) __482_2)) (hol.imp (hol.not __483_3) ((__10560_6 : hol.term B => hol.eq B (g_5 x_4) __10560_6) __485_1)))) :=
  A : hol.type => B : hol.type => __485_1 : hol.term B => __482_2 : hol.term B => __483_3 : hol.term hol.bool => x_4 : hol.term A => g_5 : hol.term (hol.arr A B) => (B : hol.type => __485_1 : hol.term B => __482_2 : hol.term B => __483_3 : hol.term hol.bool => __484_4 : hol.term (hol.arr B hol.bool) => thm_999 B __485_1 __482_2 __483_3 __484_4) B __485_1 __482_2 __483_3 (__10560_6 : hol.term B => hol.eq B (g_5 x_4) __10560_6).

(; Theorem: |- ((= (\lambda _10560. ((= (g x)) _10560) (((Data.Bool.cond ((= x) a)) (g a)) (g x)))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) (\lambda _10560. ((= (g x)) _10560) (g a)))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) (\lambda _10560. ((= (g x)) _10560) (g x))))) ;)

(; dict ;)

def thm_1668 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool ((__10560_4 : hol.term B => hol.eq B (g_3 x_2) __10560_4) (hol.cond B (hol.eq A x_2 a_1) (g_3 a_1) (g_3 x_2))) (hol.and (hol.imp (hol.eq A x_2 a_1) ((__10560_4 : hol.term B => hol.eq B (g_3 x_2) __10560_4) (g_3 a_1))) (hol.imp (hol.not (hol.eq A x_2 a_1)) ((__10560_4 : hol.term B => hol.eq B (g_3 x_2) __10560_4) (g_3 x_2))))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => (A : hol.type => B : hol.type => __485_1 : hol.term B => __482_2 : hol.term B => __483_3 : hol.term hol.bool => x_4 : hol.term A => g_5 : hol.term (hol.arr A B) => thm_1667 A B __485_1 __482_2 __483_3 x_4 g_5) A B (g_3 x_2) (g_3 a_1) (hol.eq A x_2 a_1) x_2 g_3.

(; Theorem: |- ((= ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (g x)))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= (g x)) (g a)))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) (g x))))) ;)

(; dict ;)

def thm_1669 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B (g_3 x_2) (hol.cond B (hol.eq A x_2 a_1) (g_3 a_1) (g_3 x_2))) (hol.and (hol.imp (hol.eq A x_2 a_1) (hol.eq B (g_3 x_2) (g_3 a_1))) (hol.imp (hol.not (hol.eq A x_2 a_1)) (hol.eq B (g_3 x_2) (g_3 x_2))))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hol.EQ_MP (hol.eq hol.bool ((__10560_4 : hol.term B => hol.eq B (g_3 x_2) __10560_4) (hol.cond B (hol.eq A x_2 a_1) (g_3 a_1) (g_3 x_2))) (hol.and (hol.imp (hol.eq A x_2 a_1) ((__10560_4 : hol.term B => hol.eq B (g_3 x_2) __10560_4) (g_3 a_1))) (hol.imp (hol.not (hol.eq A x_2 a_1)) ((__10560_4 : hol.term B => hol.eq B (g_3 x_2) __10560_4) (g_3 x_2))))) (hol.eq hol.bool (hol.eq B (g_3 x_2) (hol.cond B (hol.eq A x_2 a_1) (g_3 a_1) (g_3 x_2))) (hol.and (hol.imp (hol.eq A x_2 a_1) (hol.eq B (g_3 x_2) (g_3 a_1))) (hol.imp (hol.not (hol.eq A x_2 a_1)) (hol.eq B (g_3 x_2) (g_3 x_2))))) (thm_1666 A B a_1 x_2 g_3) (thm_1668 A B a_1 x_2 g_3).

(; Theorem: |- ((= ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= (g x)) (g a)))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) (g x))))) ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (g x)))) ;)

(; dict ;)

def thm_1670 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> a_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.and (hol.imp (hol.eq A x_3 a_2) (hol.eq B (g_1 x_3) (g_1 a_2))) (hol.imp (hol.not (hol.eq A x_3 a_2)) (hol.eq B (g_1 x_3) (g_1 x_3)))) (hol.eq B (g_1 x_3) (hol.cond B (hol.eq A x_3 a_2) (g_1 a_2) (g_1 x_3)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => a_2 : hol.term A => x_3 : hol.term A => hol.SYM hol.bool (hol.eq B (g_1 x_3) (hol.cond B (hol.eq A x_3 a_2) (g_1 a_2) (g_1 x_3))) (hol.and (hol.imp (hol.eq A x_3 a_2) (hol.eq B (g_1 x_3) (g_1 a_2))) (hol.imp (hol.not (hol.eq A x_3 a_2)) (hol.eq B (g_1 x_3) (g_1 x_3)))) (thm_1669 A B a_2 x_3 g_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) (g x)))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= (g x)) (g a)))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) (g x))))) ;)

(; dict ;)

def thm_1671 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> a_2 : hol.term A -> x_3 : hol.term A -> hyp_1 : hol.proof (hol.imp (hol.eq A x_3 a_2) (hol.eq B (g_1 x_3) (g_1 a_2))) -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_3 a_2)) (hol.eq B (g_1 x_3) (g_1 x_3))) (hol.and (hol.imp (hol.eq A x_3 a_2) (hol.eq B (g_1 x_3) (g_1 a_2))) (hol.imp (hol.not (hol.eq A x_3 a_2)) (hol.eq B (g_1 x_3) (g_1 x_3))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => a_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.imp (hol.eq A x_3 a_2) (hol.eq B (g_1 x_3) (g_1 a_2))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.imp (hol.eq A x_3 a_2) (hol.eq B (g_1 x_3) (g_1 a_2))) (hol.imp (hol.not (hol.eq A x_3 a_2)) (hol.eq B (g_1 x_3) (g_1 x_3))) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) (g x)))) ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= (g x)) (g a)))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) (g x))))) ;)

(; dict ;)

def thm_1672 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> a_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_3 a_2)) (hol.eq B (g_1 x_3) (g_1 x_3))) (hol.and (hol.imp (hol.eq A x_3 a_2) (hol.eq B (g_1 x_3) (g_1 a_2))) (hol.imp (hol.not (hol.eq A x_3 a_2)) (hol.eq B (g_1 x_3) (g_1 x_3))))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => a_2 : hol.term A => x_3 : hol.term A => hol.PROVE_HYP (hol.imp (hol.eq A x_3 a_2) (hol.eq B (g_1 x_3) (g_1 a_2))) (hol.eq hol.bool (hol.imp (hol.not (hol.eq A x_3 a_2)) (hol.eq B (g_1 x_3) (g_1 x_3))) (hol.and (hol.imp (hol.eq A x_3 a_2) (hol.eq B (g_1 x_3) (g_1 a_2))) (hol.imp (hol.not (hol.eq A x_3 a_2)) (hol.eq B (g_1 x_3) (g_1 x_3))))) (thm_1238 B A g_1 a_2 x_3) (hyp_1 : hol.proof (hol.imp (hol.eq A x_3 a_2) (hol.eq B (g_1 x_3) (g_1 a_2))) => thm_1671 B A g_1 a_2 x_3 hyp_1).

(; Theorem: |- ((= ((= (g x)) (g x))) ((= (g x)) (g x))) ;)

(; dict ;)

def thm_1673 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B (g_2 x_1) (g_2 x_1)) (hol.eq B (g_2 x_1) (g_2 x_1))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A B) => hol.REFL hol.bool (hol.eq B (g_2 x_1) (g_2 x_1)).

(; Theorem: |- ((= ((= (g x)) (g x))) ((= (g x)) (g x))) ;)

(; dict ;)

def thm_1674 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.eq B (g_2 x_1) (g_2 x_1)) (hol.eq B (g_2 x_1) (g_2 x_1))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A B) => hol.SYM hol.bool (hol.eq B (g_2 x_1) (g_2 x_1)) (hol.eq B (g_2 x_1) (g_2 x_1)) (thm_1673 A B x_1 g_2).

(; Theorem: |- ((= Data.Bool.T) ((= (g x)) (g x))) ;)

(; dict ;)

def thm_1675 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool hol.true (hol.eq B (g_2 x_1) (g_2 x_1))) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A B) => hol.SYM hol.bool (hol.eq B (g_2 x_1) (g_2 x_1)) hol.true (thm_1255 A B x_1 g_2).

(; Theorem: |- ((= (g x)) (g x)) ;)

(; dict ;)

def thm_1676 : A : hol.type -> B : hol.type -> x_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq B (g_2 x_1) (g_2 x_1)) :=
  A : hol.type => B : hol.type => x_1 : hol.term A => g_2 : hol.term (hol.arr A B) => hol.EQ_MP hol.true (hol.eq B (g_2 x_1) (g_2 x_1)) (thm_1675 A B x_1 g_2) thm_10.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) (g x))) ;)

(; dict ;)

def thm_1677 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> a_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.imp (hol.not (hol.eq A x_3 a_2)) (hol.eq B (g_1 x_3) (g_1 x_3))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => a_2 : hol.term A => x_3 : hol.term A => hyp_1 : hol.proof (hol.not (hol.eq A x_3 a_2)) => hol.EQ_MP (hol.eq B (g_1 x_3) (g_1 x_3)) (hol.eq B (g_1 x_3) (g_1 x_3)) (thm_1674 A B x_3 g_1) (thm_1676 A B x_3 g_1).

(; Theorem: |- ((Data.Bool./\ ((Data.Bool.==> ((= x) a)) ((= (g x)) (g a)))) ((Data.Bool.==> (Data.Bool.~ ((= x) a))) ((= (g x)) (g x)))) ;)

(; dict ;)

def thm_1678 : B : hol.type -> A : hol.type -> g_1 : hol.term (hol.arr A B) -> a_2 : hol.term A -> x_3 : hol.term A -> hol.proof (hol.and (hol.imp (hol.eq A x_3 a_2) (hol.eq B (g_1 x_3) (g_1 a_2))) (hol.imp (hol.not (hol.eq A x_3 a_2)) (hol.eq B (g_1 x_3) (g_1 x_3)))) :=
  B : hol.type => A : hol.type => g_1 : hol.term (hol.arr A B) => a_2 : hol.term A => x_3 : hol.term A => hol.EQ_MP (hol.imp (hol.not (hol.eq A x_3 a_2)) (hol.eq B (g_1 x_3) (g_1 x_3))) (hol.and (hol.imp (hol.eq A x_3 a_2) (hol.eq B (g_1 x_3) (g_1 a_2))) (hol.imp (hol.not (hol.eq A x_3 a_2)) (hol.eq B (g_1 x_3) (g_1 x_3)))) (thm_1672 B A g_1 a_2 x_3) (thm_1677 B A g_1 a_2 x_3).

(; Theorem: |- ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (g x))) ;)

(; dict ;)

def thm_1679 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> x_2 : hol.term A -> g_3 : hol.term (hol.arr A B) -> hol.proof (hol.eq B (g_3 x_2) (hol.cond B (hol.eq A x_2 a_1) (g_3 a_1) (g_3 x_2))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => x_2 : hol.term A => g_3 : hol.term (hol.arr A B) => hol.EQ_MP (hol.and (hol.imp (hol.eq A x_2 a_1) (hol.eq B (g_3 x_2) (g_3 a_1))) (hol.imp (hol.not (hol.eq A x_2 a_1)) (hol.eq B (g_3 x_2) (g_3 x_2)))) (hol.eq B (g_3 x_2) (hol.cond B (hol.eq A x_2 a_1) (g_3 a_1) (g_3 x_2))) (thm_1670 B A g_3 a_1 x_2) (thm_1678 B A g_3 a_1 x_2).

(; Theorem: |- (Data.Bool.! \lambda x. ((= (g x)) (((Data.Bool.cond ((= x) a)) (g a)) (g x)))) ;)

(; dict ;)

def thm_1680 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) (hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3)))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => g_2 : hol.term (hol.arr A B) => x_3 : hol.term A => thm_1679 A B a_1 x_3 g_2.

(; Theorem: |- ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (g x))) ;)

(; dict ;)

def thm_1681 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> g_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => g_2 : hol.term (hol.arr A B) => hol.EQ_MP (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) (hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3)))) (hol.eq (hol.arr A B) g_2 (x_3 : hol.term A => hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3))) (thm_1654 B A a_1 g_2) (hol.EQ_MP (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) (hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3)))) (hol.forall A (x_3 : hol.term A => hol.eq B (g_2 x_3) (hol.cond B (hol.eq A x_3 a_1) (g_2 a_1) (g_2 x_3)))) (thm_1657 B A a_1 g_2) (thm_1680 B A a_1 g_2)).

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))))) ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (g x)))) ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d))))))) ;)

(; dict ;)

def thm_1682 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.eq (hol.arr A B) g_5 (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_5 a_4) (g_5 x_6))) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))))) (hol.and (hol.eq (hol.arr A B) g_5 (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_5 a_4) (g_5 x_6))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.eq (hol.arr A B) g_5 (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_5 a_4) (g_5 x_6))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.eq (hol.arr A B) g_5 (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_5 a_4) (g_5 x_6))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))))) ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (g x)))) ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d))))))) ;)

(; dict ;)

def thm_1683 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hol.proof (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))))) (hol.and (hol.eq (hol.arr A B) g_5 (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_5 a_4) (g_5 x_6))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hol.PROVE_HYP (hol.eq (hol.arr A B) g_5 (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_5 a_4) (g_5 x_6))) (hol.eq hol.bool (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))))) (hol.and (hol.eq (hol.arr A B) g_5 (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_5 a_4) (g_5 x_6))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))))))) (thm_1681 B A a_4 g_5) (hyp_1 : hol.proof (hol.eq (hol.arr A B) g_5 (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_5 a_4) (g_5 x_6))) => thm_1682 A B d_1 s_2 t_3 a_4 g_5 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t))) ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t))) ;)

(; dict ;)

def thm_1684 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> g_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_4) t_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_4) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => g_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.REFL hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_4) t_1)).

(; Theorem: |- ((= ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t))) ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t))) ;)

(; dict ;)

def thm_1685 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> g_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hol.proof (hol.eq hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_4) t_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_4) t_1))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => g_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hol.TRANS hol.bool (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_4) t_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_4) t_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_4) t_1)) (thm_1684 B A t_1 g_2 s_3 x_4) (thm_1684 B A t_1 g_2 s_3 x_4).

(; Theorem: |- ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)) ;)

(; dict ;)

def thm_1686 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> g_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> x_4 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_5) t_1))) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_4) t_1)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => g_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_5) t_1))) => thm_1640 B A t_1 g_2 s_3 hyp_1 x_4.

(; Theorem: |- ((Data.Bool.==> ((Set.member a) s)) ((Set.member (g a)) t)) ;)

(; dict ;)

def thm_1687 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> g_2 : hol.term (hol.arr A B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_5) t_1))) -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 a_4) t_1)) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => g_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_5) t_1))) => (B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => g_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_5) t_1))) => (B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => g_2 : hol.term (hol.arr A B) => s_3 : hol.term (Set_2Eset A) => x_4 : hol.term A => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_5) t_1))) => hol.EQ_MP (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_4) t_1)) (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_4 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_2 x_4) t_1)) (thm_1685 B A t_1 g_2 s_3 x_4) (thm_1686 B A t_1 g_2 s_3 x_4 hyp_1)) B A t_1 g_2 s_3 x_4 hyp_1) B A t_1 g_2 s_3 a_4 hyp_1.

(; Theorem: |- ((Set.member (g a)) t) ;)

(; dict ;)

def thm_1688 : A : hol.type -> B : hol.type -> s_1 : hol.term (Set_2Eset A) -> t_2 : hol.term (Set_2Eset B) -> a_3 : hol.term A -> g_4 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_5) t_2))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_3 s_1) -> hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 a_3) t_2) :=
  A : hol.type => B : hol.type => s_1 : hol.term (Set_2Eset A) => t_2 : hol.term (Set_2Eset B) => a_3 : hol.term A => g_4 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_5) t_2))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_3 s_1) => thm_1687 B A t_2 g_4 s_1 a_3 hyp_1 (thm_1440 A s_1 a_3 hyp_2).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d))))) ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))))) ;)

(; dict ;)

def thm_1689 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> g_4 : hol.term (hol.arr A B) -> s_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 a_1) t_3) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (g_4 x_6) d_2)))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 a_1) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (g_4 x_6) d_2)))))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => g_4 : hol.term (hol.arr A B) => s_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 a_1) t_3) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 a_1) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (g_4 x_6) d_2)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d))))) ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))))) ;)

(; dict ;)

def thm_1690 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> g_4 : hol.term (hol.arr A B) -> s_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_6) t_3))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_5) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (g_4 x_6) d_2)))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 a_1) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (g_4 x_6) d_2)))))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => g_4 : hol.term (hol.arr A B) => s_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_6) t_3))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_5) => hol.PROVE_HYP (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 a_1) t_3) (hol.eq hol.bool (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (g_4 x_6) d_2)))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 a_1) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (g_4 x_6) d_2)))))) (thm_1688 A B s_5 t_3 a_1 g_4 hyp_1 hyp_2) (hyp_3 : hol.proof (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 a_1) t_3) => thm_1689 B A a_1 d_2 t_3 g_4 s_5 hyp_3).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d))))) ;)

(; dict ;)

def thm_1691 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> d_2 : hol.term B -> g_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_1))) -> hol.proof (hol.eq hol.bool (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_1))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_2))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => d_2 : hol.term B => g_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_1))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_159 p_1 q_2 hyp_1) (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_1))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_2))) hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d))))) ;)

(; dict ;)

def thm_1692 : B : hol.type -> A : hol.type -> t_1 : hol.term (Set_2Eset B) -> d_2 : hol.term B -> g_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_1))) -> hol.proof (hol.eq hol.bool (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_1))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_2))))) :=
  B : hol.type => A : hol.type => t_1 : hol.term (Set_2Eset B) => d_2 : hol.term B => g_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_1))) => hol.PROVE_HYP (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_1))) (hol.eq hol.bool (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_2))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_1))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_2))))) (thm_1640 B A t_1 g_3 s_4 hyp_1) (hyp_2 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_1))) => thm_1691 B A t_1 d_2 g_3 s_4 hyp_2).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))) ;)

(; dict ;)

def thm_1693 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> g_3 : hol.term (hol.arr A B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_1))) -> hyp_2 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_2))) -> hol.proof (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_1)))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => g_3 : hol.term (hol.arr A B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_1))) => hyp_2 : hol.proof (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_2))) => hol.EQ_MP (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_1))) (hol.and (hol.forall A (x_5 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_3 x_5) t_2))) (hol.forall A (x_5 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_5 s_4)) (hol.eq B (g_3 x_5) d_1)))) (thm_1692 B A t_2 d_1 g_3 s_4 hyp_2) (thm_1641 B A d_1 g_3 s_4 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d))))) ;)

(; dict ;)

def thm_1694 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2) -> hol.proof (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2) => hol.EQ_MP (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1)))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))))) (thm_1690 B A a_4 d_1 t_3 g_5 s_2 hyp_2 hyp_3) (thm_1693 B A d_1 t_3 g_5 s_2 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (g x)))) ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d)))))) ;)

(; dict ;)

def thm_1695 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2) -> hol.proof (hol.and (hol.eq (hol.arr A B) g_5 (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_5 a_4) (g_5 x_6))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1)))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2) => hol.EQ_MP (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))))) (hol.and (hol.eq (hol.arr A B) g_5 (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_5 a_4) (g_5 x_6))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1)))))) (thm_1683 A B d_1 s_2 t_3 a_4 g_5) (thm_1694 A B d_1 s_2 t_3 a_4 g_5 hyp_1 hyp_2 hyp_3).

(; Theorem: |- (\lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (b x)))) ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))) g) ;)

(; dict ;)

def thm_1696 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2) -> hol.proof ((b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1)))))) g_5) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2) => hol.EQ_MP (hol.and (hol.eq (hol.arr A B) g_5 (x_6 : hol.term A => hol.cond B (hol.eq A x_6 a_4) (g_5 a_4) (g_5 x_6))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1)))))) ((b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1)))))) g_5) (thm_1643 B A d_1 s_2 t_3 a_4 g_5) (thm_1695 B A d_1 s_2 t_3 a_4 g_5 hyp_1 hyp_2 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (b x)))) ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))) ;)

(; dict ;)

def thm_1697 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof ((b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1)))))) g_5) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof ((b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1)))))) g_5) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_602 A x_1 P_2 hyp_1) (hol.arr A B) g_5 (b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1)))))) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) (g a)) (b x)))) ((Data.Bool./\ ((Set.member (g a)) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))) ;)

(; dict ;)

def thm_1698 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2) => hol.PROVE_HYP ((b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1)))))) g_5) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1))))))) (thm_1696 B A d_1 s_2 t_3 a_4 g_5 hyp_1 hyp_2 hyp_3) (hyp_4 : hol.proof ((b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1)))))) g_5) => thm_1697 B A d_1 s_2 t_3 a_4 g_5 hyp_4).

(; Theorem: |- (\lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))) (g a)) ;)

(; dict ;)

def thm_1699 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2) -> hol.proof ((a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1))))))) (g_5 a_4)) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2) => hol.EQ_MP (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_7 : hol.term A => hol.cond B (hol.eq A x_7 a_4) (g_5 a_4) (b_6 x_7))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 a_4) t_3) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (b_6 x_7) d_1))))))) ((a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1))))))) (g_5 a_4)) (thm_1189 B A d_1 s_2 t_3 a_4 g_5) (thm_1698 B A d_1 s_2 t_3 a_4 g_5 hyp_1 hyp_2 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))))) ;)

(; dict ;)

def thm_1700 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2) => hol.PROVE_HYP ((a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1))))))) (g_5 a_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))))) (thm_1699 A B d_1 s_2 t_3 a_4 g_5 hyp_1 hyp_2 hyp_3) (hyp_4 : hol.proof ((a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1))))))) (g_5 a_4)) => thm_1424 A B d_1 s_2 t_3 a_4 g_5 hyp_4).

(; Theorem: |- (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))))) ;)

(; dict ;)

def thm_1701 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2) => hol.PROVE_HYP (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))))) (thm_1641 B A d_1 g_5 s_2 hyp_1) (hyp_4 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))) => thm_1700 A B d_1 s_2 t_3 a_4 g_5 hyp_4 hyp_2 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))))) ;)

(; dict ;)

def thm_1702 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))) -> hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))) => hyp_2 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2) => hol.PROVE_HYP (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))))) (thm_1640 B A t_3 g_5 s_2 hyp_2) (hyp_4 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) => thm_1701 A B d_1 s_2 t_3 a_4 g_5 hyp_1 hyp_4 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))))) ;)

(; dict ;)

def thm_1703 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) -> hyp_2 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1)))) -> hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) => hyp_2 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1)))) => hyp_3 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2) => hol.PROVE_HYP (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))))) (thm_1639 B A t_3 d_1 g_5 s_2 hyp_2) (hyp_4 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1))) => thm_1702 A B d_1 s_2 t_3 a_4 g_5 hyp_4 hyp_1 hyp_3).

(; Theorem: |- (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d)))))))) ;)

(; dict ;)

def thm_1704 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> t_3 : hol.term (Set_2Eset B) -> a_4 : hol.term A -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1)))) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => t_3 : hol.term (Set_2Eset B) => a_4 : hol.term A => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2)) (hol.eq B (g_5 x_6) d_1)))) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_2) => hol.PROVE_HYP (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_2)) (hol.eq B (b_7 x_8) d_1)))))))) (thm_1637 B A d_1 t_3 g_5 s_2 hyp_1) (hyp_3 : hol.proof (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) => thm_1703 A B d_1 s_2 t_3 a_4 g_5 hyp_3 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))))) ;)

(; dict ;)

def thm_1705 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> g_4 : hol.term (hol.arr A B) -> s_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_5) -> hol.proof (hol.imp (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (g_4 x_6) d_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)) (hol.eq B (b_7 x_8) d_2))))))))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => g_4 : hol.term (hol.arr A B) => s_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_5) => hyp_2 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (g_4 x_6) d_2)))) => thm_1704 A B d_2 s_5 t_3 a_1 g_4 hyp_2 hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (g x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (g x)) d))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (b x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (b x)) d))))))))) ;)

(; dict ;)

def thm_1706 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> g_4 : hol.term (hol.arr A B) -> s_5 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_5) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (g_4 x_6) d_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)) (hol.eq B (b_7 x_8) d_2))))))))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => g_4 : hol.term (hol.arr A B) => s_5 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_5) => hol.PROP_EXT (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (g_4 x_6) d_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)) (hol.eq B (b_7 x_8) d_2)))))))) (hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)) (hol.eq B (b_7 x_8) d_2)))))))) => (hyp_3 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_4 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_5)) (hol.eq B (b_7 x_8) d_2)))))))) => thm_1634 B A a_1 d_2 t_3 g_4 s_5 hyp_3 hyp_1) (thm_1179 A B d_2 s_5 t_3 a_1 g_4 hyp_2)) (hyp_2 : hol.proof (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_4 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_5)) (hol.eq B (g_4 x_6) d_2)))) => thm_1705 B A a_1 d_2 t_3 g_4 s_5 hyp_1 (thm_1635 B A d_2 t_3 g_4 s_5 hyp_2)).

(; Theorem: |- ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) ;)

(; dict ;)

def thm_1707 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> g_5 : hol.term (hol.arr A B) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2))))))))))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => g_5 : hol.term (hol.arr A B) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4) => hol.EQ_MP (hol.eq hol.bool (hol.and (hol.forall A (x_6 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (g_5 x_6) t_3))) (hol.forall A (x_6 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_6 s_4)) (hol.eq B (g_5 x_6) d_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (hol.and (hol.forall A (x_8 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (b_7 x_8) t_3))) (hol.forall A (x_8 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_8 s_4)) (hol.eq B (b_7 x_8) d_2))))))))) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2))))))))))) (thm_1531 B A a_1 d_2 t_3 g_5 s_4) (thm_1706 B A a_1 d_2 t_3 g_5 s_4 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda g. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= g) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= g) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ;)

(; dict ;)

def thm_1708 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4) -> hol.proof (hol.forall (hol.arr A B) (g_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2)))))))))))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4) => g_5 : hol.term (hol.arr A B) => thm_1707 B A a_1 d_2 t_3 s_4 g_5 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((= (Data.Bool.? \lambda f. ((Data.Bool./\ ((= x) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((Data.Bool./\ ((= x) \lambda x. (((Data.Bool.cond ((= x) a)) a) (b x)))) ((Data.Bool./\ ((Set.member a) t)) (Data.Bool.? \lambda f. ((Data.Bool./\ ((= b) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ;)

(; dict ;)

def thm_1709 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4) -> hol.proof (hol.forall (hol.arr A B) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2)))))))))))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4) => hol.EQ_MP (hol.forall (hol.arr A B) (g_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) g_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2)))))))))))) (hol.forall (hol.arr A B) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2)))))))))))) (thm_1520 B A a_1 d_2 t_3 s_4) (thm_1708 B A a_1 d_2 t_3 s_4 hyp_1).

(; Theorem: |- ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) ;)

(; dict ;)

def thm_1710 : B : hol.type -> A : hol.type -> a_1 : hol.term A -> d_2 : hol.term B -> t_3 : hol.term (Set_2Eset B) -> s_4 : hol.term (Set_2Eset A) -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4) -> hol.proof (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))))))) :=
  B : hol.type => A : hol.type => a_1 : hol.term A => d_2 : hol.term B => t_3 : hol.term (Set_2Eset B) => s_4 : hol.term (Set_2Eset A) => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_4) => hol.EQ_MP (hol.forall (hol.arr A B) (x_5 : hol.term (hol.arr A B) => hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr B hol.bool) hol.bool) (a_6 : hol.term B => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (b_7 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) x_5 (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) a_6 (b_7 x_8))) (hol.and (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) a_6 t_3) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_8 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) b_7 f_8) (hol.and (hol.forall A (x_9 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_8 x_9) t_3))) (hol.forall A (x_9 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_9 s_4)) (hol.eq B (f_8 x_9) d_2)))))))))))) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_1) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_3 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_3))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_4)) (hol.eq B (f_6 x_7) d_2)))))))))) (thm_1516 B A a_1 d_2 t_3 s_4) (thm_1709 B A a_1 d_2 t_3 s_4 hyp_1).

(; Theorem: |- ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) ;)

(; dict ;)

def thm_1711 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) -> hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) -> hol.proof (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hyp_1 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) => hyp_2 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) => hol.EQ_MP (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))) (thm_1503 B A a_4 d_1 t_2 s_3 hyp_1) (thm_1710 B A a_4 d_1 t_2 s_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((= ((Set.insert a) s)) s)) ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) ;)

(; dict ;)

def thm_1712 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) -> hol.proof (hol.imp (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) => hyp_2 : hol.proof (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) => thm_1711 B A d_1 t_2 s_3 a_4 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= ((Set.member a) s)) ((= ((Set.insert a) s)) s))) ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) ;)

(; dict ;)

def thm_1713 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) -> hol.proof (hol.imp (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3)) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) => hol.EQ_MP (hol.imp (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) (hol.imp (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3) s_3)) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) (thm_1477 B A d_1 t_2 s_3 a_4 hyp_1) (thm_1712 B A d_1 t_2 s_3 a_4 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda s. ((= ((Set.member a) s)) ((= ((Set.insert a) s)) s))) ;)

(; dict ;)

def thm_1714 : A : hol.type -> a_1 : hol.term A -> hol.proof (hol.forall (Set_2Eset A) (s_2 : hol.term (Set_2Eset A) => hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_1 s_2) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_1 s_2) s_2))) :=
  A : hol.type => a_1 : hol.term A => thm_47 A a_1.

(; Theorem: |- ((= ((Set.member a) s)) ((= ((Set.insert a) s)) s)) ;)

(; dict ;)

def thm_1715 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> hol.proof (hol.eq hol.bool (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) (hol.eq (Set_2Eset A) (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_1) s_1)) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => thm_1714 A a_2 s_1.

(; Theorem: |- ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) ;)

(; dict ;)

def thm_1716 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) -> hol.proof (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) => thm_1713 B A d_1 t_2 s_3 a_4 hyp_1 (thm_1715 A s_3 a_4).

(; Theorem: |- ((Data.Bool.==> ((Set.member a) s)) ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) ;)

(; dict ;)

def thm_1717 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hyp_1 : hol.proof (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) => thm_1716 B A d_1 t_2 s_3 a_4 hyp_1.

(; Theorem: |- ((Data.Bool.\/ ((Set.member a) s)) (Data.Bool.~ ((Set.member a) s))) ;)

(; dict ;)

def thm_1718 : A : hol.type -> s_1 : hol.term (Set_2Eset A) -> a_2 : hol.term A -> hol.proof (hol.or (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1))) :=
  A : hol.type => s_1 : hol.term (Set_2Eset A) => a_2 : hol.term A => thm_48 (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_2 s_1).

(; Theorem: |- ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) ;)

(; dict ;)

def thm_1719 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hyp_1 : hol.proof (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3)) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) -> hyp_2 : hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) -> hyp_3 : hol.proof (hol.or (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3))) -> hol.proof (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hyp_1 : hol.proof (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3)) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) => hyp_2 : hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) => hyp_3 : hol.proof (hol.or (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3))) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_1101 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3)) (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) ;)

(; dict ;)

def thm_1720 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hyp_1 : hol.proof (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3)) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) -> hyp_2 : hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) -> hol.proof (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hyp_1 : hol.proof (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3)) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) => hyp_2 : hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) => hol.PROVE_HYP (hol.or (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3))) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))) (thm_1718 A s_3 a_4) (hyp_3 : hol.proof (hol.or (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3))) => thm_1719 B A d_1 t_2 s_3 a_4 hyp_1 hyp_2 hyp_3).

(; Theorem: |- ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) ;)

(; dict ;)

def thm_1721 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hyp_1 : hol.proof (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3)) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) -> hol.proof (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hyp_1 : hol.proof (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3)) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) => hol.PROVE_HYP (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))) (thm_1717 B A d_1 t_2 s_3 a_4) (hyp_2 : hol.proof (hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) => thm_1720 B A d_1 t_2 s_3 a_4 hyp_1 hyp_2).

(; Theorem: |- ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))) ;)

(; dict ;)

def thm_1722 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> t_2 : hol.term (Set_2Eset B) -> s_3 : hol.term (Set_2Eset A) -> a_4 : hol.term A -> hol.proof (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => t_2 : hol.term (Set_2Eset B) => s_3 : hol.term (Set_2Eset A) => a_4 : hol.term A => hol.PROVE_HYP (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3)) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))) (thm_1436 B A d_1 t_2 s_3 a_4) (hyp_1 : hol.proof (hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) a_4 s_3)) (hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_4 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_4) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_2 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_2))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) => thm_1721 B A d_1 t_2 s_3 a_4 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))) ;)

(; dict ;)

def thm_1723 : A : hol.type -> B : hol.type -> d_1 : hol.term B -> s_2 : hol.term (Set_2Eset A) -> a_3 : hol.term A -> hol.proof (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_3 s_2)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_3 s_2))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_3) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_2)) (hol.eq B (f_6 x_7) d_1))))))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => s_2 : hol.term (Set_2Eset A) => a_3 : hol.term A => t_4 : hol.term (Set_2Eset B) => thm_1722 B A d_1 t_4 s_2 a_3.

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ;)

(; dict ;)

def thm_1724 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> a_2 : hol.term A -> hol.proof (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => a_2 : hol.term A => s_3 : hol.term (Set_2Eset A) => hol.EQ_MP (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) (hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))) (thm_374 A B d_1 s_3 a_2) (thm_1723 A B d_1 s_3 a_2).

(; Theorem: |- (Data.Bool.! \lambda a. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))))))) ;)

(; dict ;)

def thm_1725 : B : hol.type -> A : hol.type -> d_1 : hol.term B -> hol.proof (hol.forall A (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))))) :=
  B : hol.type => A : hol.type => d_1 : hol.term B => a_2 : hol.term A => hol.EQ_MP (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))))) (hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))))) (thm_371 B A d_1 a_2) (thm_1724 B A d_1 a_2).

(; Theorem: |- (Data.Bool.! \lambda d. (Data.Bool.! \lambda a. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))))) ;)

(; dict ;)

def thm_1726 : A : hol.type -> B : hol.type -> hol.proof (hol.forall B (d_1 : hol.term B => hol.forall A (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))))))) :=
  A : hol.type => B : hol.type => d_1 : hol.term B => hol.EQ_MP (hol.forall A (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))))) (hol.forall A (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1))))))))))))) (thm_368 B A d_1) (thm_1725 B A d_1).

(; Theorem: |- (Data.Bool.! \lambda d. (Data.Bool.! \lambda a. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) ((Set.insert a) s))) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) ((Set.insert a) s)))) ((= (f x)) d)))))))) ((Set.image (select \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda g. ((= (f ((Data.Pair., b) g))) \lambda x. (((Data.Bool.cond ((= x) a)) b) (g x))))))) ((Set.cross t) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))))) ;)

(; thm ;)

def thm_1727 : A : hol.type -> B : hol.type -> hol.proof (hol.forall B (d_1 : hol.term B => hol.forall A (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))))))) :=
  A : hol.type => B : hol.type => hol.EQ_MP (hol.forall B (d_1 : hol.term B => hol.forall A (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))))))) (hol.forall B (d_1 : hol.term B => hol.forall A (a_2 : hol.term A => hol.forall (Set_2Eset A) (s_3 : hol.term (Set_2Eset A) => hol.forall (Set_2Eset B) (t_4 : hol.term (Set_2Eset B) => hol.eq (Set_2Eset (hol.arr A B)) (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3)) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 (Set_2Einsert (hol.arr A (hol.arr (Set_2Eset A) (Set_2Eset A))) a_2 s_3))) (hol.eq B (f_6 x_7) d_1))))))) (Set_2Eimage (hol.arr (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (hol.arr (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))) (Set_2Eset (hol.arr A B)))) (hol.select (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) (f_5 : hol.term (hol.arr (Data_2EPair_2E_2A B (hol.arr A B)) (hol.arr A B)) => hol.forall B (b_6 : hol.term B => hol.forall (hol.arr A B) (g_7 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (f_5 (Data_2EPair_2E_2C (hol.arr B (hol.arr (hol.arr A B) (Data_2EPair_2E_2A B (hol.arr A B)))) b_6 g_7)) (x_8 : hol.term A => hol.cond B (hol.eq A x_8 a_2) b_6 (g_7 x_8)))))) (Set_2Ecross (hol.arr (Set_2Eset B) (hol.arr (Set_2Eset (hol.arr A B)) (Set_2Eset (Data_2EPair_2E_2A B (hol.arr A B))))) t_4 (Set_2EfromPredicate (hol.arr (hol.arr (hol.arr A B) hol.bool) (Set_2Eset (hol.arr A B))) (v_5 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (f_6 : hol.term (hol.arr A B) => hol.and (hol.eq (hol.arr A B) v_5 f_6) (hol.and (hol.forall A (x_7 : hol.term A => hol.imp (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3) (Set_2Emember (hol.arr B (hol.arr (Set_2Eset B) hol.bool)) (f_6 x_7) t_4))) (hol.forall A (x_7 : hol.term A => hol.imp (hol.not (Set_2Emember (hol.arr A (hol.arr (Set_2Eset A) hol.bool)) x_7 s_3)) (hol.eq B (f_6 x_7) d_1)))))))))))))) (thm_365 A B) (thm_1726 A B).
