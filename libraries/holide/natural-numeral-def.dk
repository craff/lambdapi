
(; This file was generated by Holide. ;)

#REQUIRE hol.
#NAME natural_2Dnumeral_2Ddef.

Number_2ENatural_2Enatural : hol.type.

Unwanted_2Eid : A : hol.type -> hol.term A.

Number_2ENatural_2Ezero : A : hol.type -> hol.term A.

Number_2ENatural_2Esuc : A : hol.type -> hol.term A.

Data_2EBool_2E_3F : A : hol.type -> hol.term A.

Data_2EBool_2E_3F_21 : A : hol.type -> hol.term A.

(; Constant Number.Natural.bit0 ;)

def Number_2ENatural_2Ebit0 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) :=
  hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))).

(; Constant Number.Natural.bit1 ;)

def Number_2ENatural_2Ebit1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) :=
  __1946_1 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 __1946_1).

(; axiom ;)

thm_0 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))).

(; axiom ;)

thm_1 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (p_1 x_3) q_2)) q_2))).

(; axiom ;)

thm_2 : hol.proof hol.true.

(; axiom ;)

thm_3 : A : hol.type -> hol.proof (hol.forall (hol.arr A hol.bool) (P_1 : hol.term (hol.arr A hol.bool) => hol.forall A (x_2 : hol.term A => hol.imp (P_1 x_2) (P_1 (hol.select A P_1))))).

(; axiom ;)

thm_4 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr A B) (t_1 : hol.term (hol.arr A B) => hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1)).

(; axiom ;)

thm_5 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp hol.true t_1) t_1)).

(; axiom ;)

thm_6 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 hol.true) hol.true)).

(; axiom ;)

thm_7 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp hol.false t_1) hol.true)).

(; axiom ;)

thm_8 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.imp t_1 t_1)).

(; axiom ;)

thm_9 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))).

(; axiom ;)

thm_10 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (p_1 x_2) (p_1 y_3)) (hol.eq A x_2 y_3)))))).

(; axiom ;)

thm_11 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (n_1 : hol.term Number_2ENatural_2Enatural => n_1)).

(; axiom ;)

thm_12 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.eq A x_1 x_1)).

(; axiom ;)

thm_13 : A : hol.type -> hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1)).

(; axiom ;)

thm_14 : A : hol.type -> hol.proof (hol.forall A (e_1 : hol.term A => hol.forall (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) (f_2 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => Data_2EBool_2E_3F_21 (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) e_1) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_2 (fn_3 n_4) n_4))))))).

(; Theorem: |- ((= Data.Bool./\) Data.Bool./\) ;)

(; dict ;)

def thm_15 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and hol.and) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and.

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_16 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.eq Number_2ENatural_2Enatural) (hol.eq Number_2ENatural_2Enatural)) :=
  hol.REFL (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool)) (hol.eq Number_2ENatural_2Enatural).

(; Theorem: |- ((= Number.Natural.bit0) (select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n)))))))) ;)

(; dict ;)

def thm_17 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) Number_2ENatural_2Ebit0 (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))))) :=
  hol.REFL (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) Number_2ENatural_2Ebit0.

(; Theorem: |- ((= ((= (select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n)))))))) Number.Natural.bit0)) ((= (select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n)))))))) Number.Natural.bit0)) ;)

(; dict ;)

def thm_18 : hol.proof (hol.eq hol.bool (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))) Number_2ENatural_2Ebit0) (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))) Number_2ENatural_2Ebit0)) :=
  hol.REFL hol.bool (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))) Number_2ENatural_2Ebit0).

(; Theorem: |- ((= ((= (select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n)))))))) Number.Natural.bit0)) ((= (select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n)))))))) Number.Natural.bit0)) ;)

(; dict ;)

def thm_19 : hol.proof (hol.eq hol.bool (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))) Number_2ENatural_2Ebit0) (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))) Number_2ENatural_2Ebit0)) :=
  hol.TRANS hol.bool (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))) Number_2ENatural_2Ebit0) (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))) Number_2ENatural_2Ebit0) (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))) Number_2ENatural_2Ebit0) thm_18 thm_18.

(; Theorem: |- ((= (select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n)))))))) Number.Natural.bit0) ;)

(; dict ;)

def thm_20 : hyp_1 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))) Number_2ENatural_2Ebit0) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))) Number_2ENatural_2Ebit0) :=
  hyp_1 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))) Number_2ENatural_2Ebit0) => hyp_1.

(; Theorem: |- ((= Number.Natural.bit0) (select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n)))))))) ;)

(; dict ;)

def thm_21 : hyp_1 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))) Number_2ENatural_2Ebit0) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) Number_2ENatural_2Ebit0 (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))))) :=
  hyp_1 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))) Number_2ENatural_2Ebit0) => hol.SYM (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))) Number_2ENatural_2Ebit0 (thm_20 hyp_1).

(; Theorem: |- ((= Number.Natural.bit0) (select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n)))))))) ;)

(; dict ;)

def thm_22 : hyp_1 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) Number_2ENatural_2Ebit0 (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))))) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) Number_2ENatural_2Ebit0 (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))))) :=
  hyp_1 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) Number_2ENatural_2Ebit0 (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))))) => hyp_1.

(; Theorem: |- ((= (select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n)))))))) Number.Natural.bit0) ;)

(; dict ;)

def thm_23 : hyp_1 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) Number_2ENatural_2Ebit0 (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))))) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))) Number_2ENatural_2Ebit0) :=
  hyp_1 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) Number_2ENatural_2Ebit0 (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))))) => hol.SYM (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) Number_2ENatural_2Ebit0 (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))) (thm_22 hyp_1).

(; Theorem: |- ((= ((= Number.Natural.bit0) (select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))))))) ((= (select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n)))))))) Number.Natural.bit0)) ;)

(; dict ;)

def thm_24 : hol.proof (hol.eq hol.bool (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) Number_2ENatural_2Ebit0 (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))))) (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))) Number_2ENatural_2Ebit0)) :=
  hol.PROP_EXT (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) Number_2ENatural_2Ebit0 (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))))) (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))) Number_2ENatural_2Ebit0) (hyp_1 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))) Number_2ENatural_2Ebit0) => thm_21 hyp_1) (hyp_1 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) Number_2ENatural_2Ebit0 (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))))) => thm_23 hyp_1).

(; Theorem: |- ((= (select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n)))))))) Number.Natural.bit0) ;)

(; dict ;)

def thm_25 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))) Number_2ENatural_2Ebit0) :=
  hol.EQ_MP (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) Number_2ENatural_2Ebit0 (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))))) (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))) Number_2ENatural_2Ebit0) thm_24 thm_17.

(; Theorem: |- ((= (Unwanted.id Number.Natural.zero)) (Unwanted.id Number.Natural.zero)) ;)

(; dict ;)

def thm_26 : hol.proof (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) :=
  hol.REFL Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)).

(; Theorem: |- ((= ((select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))))) (Unwanted.id Number.Natural.zero))) (Number.Natural.bit0 (Unwanted.id Number.Natural.zero))) ;)

(; dict ;)

def thm_27 : hol.proof (hol.eq Number_2ENatural_2Enatural (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Number_2ENatural_2Ebit0 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) :=
  hol.APP_THM Number_2ENatural_2Enatural Number_2ENatural_2Enatural (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))) Number_2ENatural_2Ebit0 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (hol.EQ_MP (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))) Number_2ENatural_2Ebit0) (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))) Number_2ENatural_2Ebit0) thm_19 thm_25) thm_26.

(; Theorem: |- ((= (= ((select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))))) (Unwanted.id Number.Natural.zero)))) (= (Number.Natural.bit0 (Unwanted.id Number.Natural.zero)))) ;)

(; dict ;)

def thm_28 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))) :=
  hol.APP_THM Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural) (hol.eq Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Number_2ENatural_2Ebit0 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) thm_16 thm_27.

(; Theorem: |- ((= ((= ((select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))))) (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) ((= (Number.Natural.bit0 (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) ;)

(; dict ;)

def thm_29 : hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) :=
  hol.APP_THM Number_2ENatural_2Enatural hol.bool (hol.eq Number_2ENatural_2Enatural (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) thm_28 thm_26.

(; Theorem: |- ((= (Data.Bool./\ ((= ((select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))))) (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero)))) (Data.Bool./\ ((= (Number.Natural.bit0 (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero)))) ;)

(; dict ;)

def thm_30 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq Number_2ENatural_2Enatural (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (hol.and (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))) :=
  hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.eq Number_2ENatural_2Enatural (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) thm_15 thm_29.

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_31 : hol.proof (hol.eq (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural)) :=
  hol.REFL (hol.arr (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool) (hol.forall Number_2ENatural_2Enatural).

(; Theorem: |- ((= (Number.Natural.suc n)) (Number.Natural.suc n)) ;)

(; dict ;)

def thm_32 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.REFL Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1).

(; Theorem: |- ((= ((select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))))) (Number.Natural.suc n))) (Number.Natural.bit0 (Number.Natural.suc n))) ;)

(; dict ;)

def thm_33 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Ebit0 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural Number_2ENatural_2Enatural (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3))))))) Number_2ENatural_2Ebit0 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) thm_25 (thm_32 n_1).

(; Theorem: |- ((= (= ((select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))))) (Number.Natural.suc n)))) (= (Number.Natural.bit0 (Number.Natural.suc n)))) ;)

(; dict ;)

def thm_34 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural) (hol.eq Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Ebit0 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) thm_16 (thm_33 n_1).

(; Theorem: |- ((= Number.Natural.suc) Number.Natural.suc) ;)

(; dict ;)

def thm_35 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural))) :=
  hol.REFL (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)).

(; Theorem: |- ((= n) n) ;)

(; dict ;)

def thm_36 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural n_1 n_1) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.REFL Number_2ENatural_2Enatural n_1.

(; Theorem: |- ((= ((select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))))) n)) (Number.Natural.bit0 n)) ;)

(; dict ;)

def thm_37 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) n_1) (Number_2ENatural_2Ebit0 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural Number_2ENatural_2Enatural (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3))))))) Number_2ENatural_2Ebit0 n_1 n_1 thm_25 (thm_36 n_1).

(; Theorem: |- ((= (Number.Natural.suc ((select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))))) n))) (Number.Natural.suc (Number.Natural.bit0 n))) ;)

(; dict ;)

def thm_38 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) n_1) (Number_2ENatural_2Ebit0 n_1) thm_35 (thm_37 n_1).

(; Theorem: |- ((= (Number.Natural.suc (Number.Natural.suc ((select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))))) n)))) (Number.Natural.suc (Number.Natural.suc (Number.Natural.bit0 n)))) ;)

(; dict ;)

def thm_39 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) n_1))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1)) thm_35 (thm_38 n_1).

(; Theorem: |- ((= ((= ((select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))))) (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc ((select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))))) n))))) ((= (Number.Natural.bit0 (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (Number.Natural.bit0 n))))) ;)

(; dict ;)

def thm_40 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) n_1)))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1))))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural hol.bool (hol.eq Number_2ENatural_2Enatural (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) n_1))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1))) (thm_34 n_1) (thm_39 n_1).

(; Theorem: |- ((= \lambda n. ((= ((select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))))) (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc ((select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))))) n))))) \lambda n. ((= (Number.Natural.bit0 (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (Number.Natural.bit0 n))))) ;)

(; dict ;)

def thm_41 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) n_1)))) (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1))))) :=
  hol.ABS_THM Number_2ENatural_2Enatural hol.bool (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) n_1)))) (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1)))) (n_1 : hol.term Number_2ENatural_2Enatural => thm_40 n_1).

(; Theorem: |- ((= (Data.Bool.! \lambda n. ((= ((select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))))) (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc ((select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))))) n)))))) (Data.Bool.! \lambda n. ((= (Number.Natural.bit0 (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (Number.Natural.bit0 n)))))) ;)

(; dict ;)

def thm_42 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) n_1))))) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1)))))) :=
  hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) n_1)))) (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1)))) thm_31 thm_41.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))))) (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= ((select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))))) (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc ((select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))))) n))))))) ((Data.Bool./\ ((= (Number.Natural.bit0 (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (Number.Natural.bit0 (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (Number.Natural.bit0 n))))))) ;)

(; dict ;)

def thm_43 : hol.proof (hol.eq hol.bool (hol.and (hol.eq Number_2ENatural_2Enatural (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) n_1)))))) (hol.and (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1))))))) :=
  hol.APP_THM hol.bool hol.bool (hol.and (hol.eq Number_2ENatural_2Enatural (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (hol.and (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) n_1))))) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1))))) thm_30 thm_42.

(; Theorem: |- ((= (\lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n)))))) (select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))))))) ((Data.Bool./\ ((= ((select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))))) (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= ((select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))))) (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc ((select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))))) n))))))) ;)

(; dict ;)

def thm_44 : hol.proof (hol.eq hol.bool ((fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))))) (hol.and (hol.eq Number_2ENatural_2Enatural (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) n_1))))))) :=
  hol.BETA_CONV (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) hol.bool (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))).

(; Theorem: |- ((= ((Data.Bool.==> ((= p) p')) ((Data.Bool.==> ((Data.Bool.==> p') ((= q) q'))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.==> p') q'))))) ((Data.Bool.==> ((= p) p')) ((Data.Bool.==> ((Data.Bool.==> p') ((= q) q'))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.==> p') q'))))) ;)

(; dict ;)

def thm_45 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_27_3 : hol.term hol.bool -> p_4 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool p_4 p_27_3) (hol.imp (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) (hol.eq hol.bool (hol.imp p_4 q_2) (hol.imp p_27_3 q_27_1)))) (hol.imp (hol.eq hol.bool p_4 p_27_3) (hol.imp (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) (hol.eq hol.bool (hol.imp p_4 q_2) (hol.imp p_27_3 q_27_1))))) :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => p_4 : hol.term hol.bool => hol.REFL hol.bool (hol.imp (hol.eq hol.bool p_4 p_27_3) (hol.imp (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) (hol.eq hol.bool (hol.imp p_4 q_2) (hol.imp p_27_3 q_27_1)))).

(; Theorem: |- ((= ((Data.Bool.==> ((= p) p')) ((Data.Bool.==> ((Data.Bool.==> p') ((= q) q'))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.==> p') q'))))) ((Data.Bool.==> ((= p) p')) ((Data.Bool.==> ((Data.Bool.==> p') ((= q) q'))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.==> p') q'))))) ;)

(; dict ;)

def thm_46 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_27_3 : hol.term hol.bool -> p_4 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp (hol.eq hol.bool p_4 p_27_3) (hol.imp (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) (hol.eq hol.bool (hol.imp p_4 q_2) (hol.imp p_27_3 q_27_1)))) (hol.imp (hol.eq hol.bool p_4 p_27_3) (hol.imp (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) (hol.eq hol.bool (hol.imp p_4 q_2) (hol.imp p_27_3 q_27_1))))) :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => p_4 : hol.term hol.bool => hol.TRANS hol.bool (hol.imp (hol.eq hol.bool p_4 p_27_3) (hol.imp (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) (hol.eq hol.bool (hol.imp p_4 q_2) (hol.imp p_27_3 q_27_1)))) (hol.imp (hol.eq hol.bool p_4 p_27_3) (hol.imp (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) (hol.eq hol.bool (hol.imp p_4 q_2) (hol.imp p_27_3 q_27_1)))) (hol.imp (hol.eq hol.bool p_4 p_27_3) (hol.imp (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) (hol.eq hol.bool (hol.imp p_4 q_2) (hol.imp p_27_3 q_27_1)))) (thm_45 q_27_1 q_2 p_27_3 p_4) (thm_45 q_27_1 q_2 p_27_3 p_4).

(; Theorem: |- p ;)

(; dict ;)

def thm_47 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof p_1 :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_1.

(; Theorem: |- ((Data.Bool.==> p) p') ;)

(; dict ;)

def thm_48 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_2 p_27_1) -> hol.proof (hol.imp p_2 p_27_1) :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_2 p_27_1) => hyp_1.

(; Theorem: |- p' ;)

(; dict ;)

def thm_49 : p_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.imp p_1 p_27_2) -> hol.proof p_27_2 :=
  p_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.imp p_1 p_27_2) => thm_48 p_27_2 p_1 hyp_2 (thm_47 p_1 hyp_1).

(; Theorem: |- p' ;)

(; dict ;)

def thm_50 : p_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.imp p_1 p_27_2) -> hol.proof p_27_2 :=
  p_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.imp p_1 p_27_2) => hol.PROVE_HYP p_1 p_27_2 (thm_47 p_1 hyp_1) (hyp_3 : hol.proof p_1 => thm_49 p_1 p_27_2 hyp_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> p') q') ;)

(; dict ;)

def thm_51 : q_27_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_27_2 q_27_1) -> hol.proof (hol.imp p_27_2 q_27_1) :=
  q_27_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_27_2 q_27_1) => hyp_1.

(; Theorem: |- p' ;)

(; dict ;)

def thm_52 : p_27_1 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hol.proof p_27_1 :=
  p_27_1 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_1.

(; Theorem: |- q' ;)

(; dict ;)

def thm_53 : p_27_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 q_27_2) -> hol.proof q_27_2 :=
  p_27_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 q_27_2) => thm_51 q_27_2 p_27_1 hyp_2 (thm_52 p_27_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> q') q) ;)

(; dict ;)

def thm_54 : q_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp q_27_2 q_1) -> hol.proof (hol.imp q_27_2 q_1) :=
  q_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp q_27_2 q_1) => hyp_1.

(; Theorem: |- q' ;)

(; dict ;)

def thm_55 : q_27_1 : hol.term hol.bool -> hyp_1 : hol.proof q_27_1 -> hol.proof q_27_1 :=
  q_27_1 : hol.term hol.bool => hyp_1 : hol.proof q_27_1 => hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_56 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof q_27_1 -> hyp_2 : hol.proof (hol.imp q_27_1 q_2) -> hol.proof q_2 :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof q_27_1 => hyp_2 : hol.proof (hol.imp q_27_1 q_2) => thm_54 q_2 q_27_1 hyp_2 (thm_55 q_27_1 hyp_1).

(; Theorem: |- q ;)

(; dict ;)

def thm_57 : q_27_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_2 -> hyp_2 : hol.proof (hol.imp p_27_2 q_27_1) -> hyp_3 : hol.proof (hol.imp q_27_1 q_3) -> hol.proof q_3 :=
  q_27_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_2 => hyp_2 : hol.proof (hol.imp p_27_2 q_27_1) => hyp_3 : hol.proof (hol.imp q_27_1 q_3) => hol.PROVE_HYP q_27_1 q_3 (thm_53 p_27_2 q_27_1 hyp_1 hyp_2) (hyp_4 : hol.proof q_27_1 => thm_56 q_27_1 q_3 hyp_4 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> q) q')) q) ;)

(; dict ;)

def thm_58 : p_27_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 q_27_2) -> hyp_3 : hol.proof (hol.imp q_27_2 q_3) -> hol.proof (hol.imp (hol.imp q_3 q_27_2) q_3) :=
  p_27_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 q_27_2) => hyp_3 : hol.proof (hol.imp q_27_2 q_3) => hyp_4 : hol.proof (hol.imp q_3 q_27_2) => thm_57 q_27_2 p_27_1 q_3 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> q') q)) ((Data.Bool.==> ((Data.Bool.==> q) q')) q)) ;)

(; dict ;)

def thm_59 : p_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> q_27_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 q_27_3) -> hol.proof (hol.imp (hol.imp q_27_3 q_2) (hol.imp (hol.imp q_2 q_27_3) q_2)) :=
  p_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => q_27_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 q_27_3) => hyp_3 : hol.proof (hol.imp q_27_3 q_2) => thm_58 p_27_1 q_27_3 q_2 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((= p) q) ;)

(; dict ;)

def thm_60 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) -> hol.proof (hol.eq hol.bool p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_61 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.eq hol.bool p_1 q_2) -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.eq hol.bool p_1 q_2) => hol.EQ_MP p_1 q_2 (thm_60 q_2 p_1 hyp_2) (thm_47 p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> p) q) ;)

(; dict ;)

def thm_62 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) -> hol.proof (hol.imp p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => hyp_2 : hol.proof p_2 => thm_61 p_2 q_1 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= p) q)) ((Data.Bool.==> p) q)) ;)

(; dict ;)

def thm_63 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 q_1) (hol.imp p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => thm_62 q_1 p_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= q) q')) ((Data.Bool.==> q) q')) ;)

(; dict ;)

def thm_64 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool q_2 q_27_1) (hol.imp q_2 q_27_1)) :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_63 q_1 p_2) q_27_1 q_2.

(; Theorem: |- ((Data.Bool.==> p') ((= q) q')) ;)

(; dict ;)

def thm_65 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_27_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) -> hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) => hyp_1.

(; Theorem: |- ((= q) q') ;)

(; dict ;)

def thm_66 : p_27_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_3 q_27_2)) -> hol.proof (hol.eq hol.bool q_3 q_27_2) :=
  p_27_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_3 q_27_2)) => thm_65 q_27_2 q_3 p_27_1 hyp_2 (thm_52 p_27_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> q) q') ;)

(; dict ;)

def thm_67 : p_27_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_3 q_27_2)) -> hol.proof (hol.imp q_3 q_27_2) :=
  p_27_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_3 q_27_2)) => thm_64 q_27_2 q_3 (thm_66 p_27_1 q_27_2 q_3 hyp_1 hyp_2).

(; Theorem: |- ((= (= ((Data.Bool./\ p) q))) (= ((Data.Bool./\ p) q))) ;)

(; dict ;)

def thm_68 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and p_2 q_1)) (hol.eq hol.bool (hol.and p_2 q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and p_2 q_1)).

(; Theorem: |- ((= (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_69 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ p) q)) (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q))) ((= ((Data.Bool./\ p) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)))) ;)

(; dict ;)

def thm_70 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.and p_2 q_1)) (hol.eq hol.bool (hol.and p_2 q_1)) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_68 q_1 p_2) (thm_69 q_1 p_2).

(; Theorem: |- ((= (= (Data.Bool./\ p))) (= (Data.Bool./\ p))) ;)

(; dict ;)

def thm_71 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1))) :=
  p_1 : hol.term hol.bool => hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)).

(; Theorem: |- ((= (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_72 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) :=
  p_1 : hol.term hol.bool => hol.BETA_CONV hol.bool (hol.arr hol.bool hol.bool) (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1.

(; Theorem: |- ((= ((= (Data.Bool./\ p)) (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p))) ((= (Data.Bool./\ p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)))) ;)

(; dict ;)

def thm_73 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3)))) :=
  p_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3)) (thm_71 p_1) (thm_72 p_1).

(; Theorem: |- ((= p) p) ;)

(; dict ;)

def thm_74 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool p_1 p_1) :=
  p_1 : hol.term hol.bool => hol.REFL hol.bool p_1.

(; Theorem: |- ((= (Data.Bool./\ p)) (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p)) ;)

(; dict ;)

def thm_75 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1 p_1 thm_0 (thm_74 p_1).

(; Theorem: |- ((= (Data.Bool./\ p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_76 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) :=
  p_1 : hol.term hol.bool => hol.EQ_MP (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) (thm_73 p_1) (thm_75 p_1).

(; Theorem: |- ((= q) q) ;)

(; dict ;)

def thm_77 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool q_1 q_1) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool q_1.

(; Theorem: |- ((= ((Data.Bool./\ p) q)) (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q)) ;)

(; dict ;)

def thm_78 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and p_2) (q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1 q_1 (thm_76 p_2) (thm_77 q_1).

(; Theorem: |- ((= ((Data.Bool./\ p) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_79 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) (thm_70 q_1 p_2) (thm_78 q_1 p_2).

(; Theorem: |- ((Data.Bool./\ p) q) ;)

(; dict ;)

def thm_80 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.and p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) ;)

(; dict ;)

def thm_81 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => hol.EQ_MP (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_79 q_1 p_2) (thm_80 q_1 p_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) q))) q) ;)

(; dict ;)

def thm_82 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.imp (hol.imp p_2 (hol.imp q_1 q_1)) q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_81 q_1 p_2 hyp_1 q_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_83 : q_1 : hol.term hol.bool -> hyp_1 : hol.proof q_1 -> hol.proof q_1 :=
  q_1 : hol.term hol.bool => hyp_1 : hol.proof q_1 => hyp_1.

(; Theorem: |- ((= p) q) ;)

(; dict ;)

def thm_84 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.eq hol.bool p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.PROP_EXT p_2 q_1 (hyp_3 : hol.proof q_1 => thm_47 p_2 hyp_1) (hyp_3 : hol.proof p_2 => thm_83 q_1 hyp_2).

(; Theorem: |- q ;)

(; dict ;)

def thm_85 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof q_2 -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => hol.EQ_MP p_1 q_2 (thm_84 q_2 p_1 hyp_1 hyp_2) (thm_47 p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> q) q) ;)

(; dict ;)

def thm_86 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.imp q_2 q_2) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => thm_85 p_1 q_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) q)) ;)

(; dict ;)

def thm_87 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp p_2 (hol.imp q_1 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => thm_86 p_2 q_1 hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_88 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_1 q_2) -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_82 q_2 p_1 hyp_1 (thm_87 q_2 p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ((Data.Bool./\ p) q)) ;)

(; dict ;)

def thm_89 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (hol.and p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.SYM hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_79 q_1 p_2).

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) x)) ;)

(; dict ;)

def thm_90 : x_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) -> hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) :=
  x_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) => hyp_1.

(; Theorem: |- ((Data.Bool.==> q) x) ;)

(; dict ;)

def thm_91 : p_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.imp p_1 (hol.imp q_3 x_2)) -> hol.proof (hol.imp q_3 x_2) :=
  p_1 : hol.term hol.bool => x_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.imp p_1 (hol.imp q_3 x_2)) => thm_90 x_2 q_3 p_1 hyp_2 (thm_47 p_1 hyp_1).

(; Theorem: |- x ;)

(; dict ;)

def thm_92 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hyp_3 : hol.proof (hol.imp p_2 (hol.imp q_1 x_3)) -> hol.proof x_3 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hyp_3 : hol.proof (hol.imp p_2 (hol.imp q_1 x_3)) => thm_91 p_2 x_3 q_1 hyp_1 hyp_3 (thm_83 q_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x) ;)

(; dict ;)

def thm_93 : x_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof p_3 -> hyp_2 : hol.proof q_2 -> hol.proof (hol.imp (hol.imp p_3 (hol.imp q_2 x_1)) x_1) :=
  x_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof p_3 => hyp_2 : hol.proof q_2 => hyp_3 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) => thm_92 q_2 p_3 x_1 hyp_1 hyp_2 hyp_3.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) ;)

(; dict ;)

def thm_94 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => x_3 : hol.term hol.bool => thm_93 x_3 q_1 p_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool./\ p) q) ;)

(; dict ;)

def thm_95 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.and p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.EQ_MP (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (hol.and p_2 q_1) (thm_89 q_1 p_2) (thm_94 q_1 p_2 hyp_1 hyp_2).

(; Theorem: |- ((= q) ((Data.Bool./\ p) q)) ;)

(; dict ;)

def thm_96 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.eq hol.bool q_2 (hol.and p_1 q_2)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hol.PROP_EXT q_2 (hol.and p_1 q_2) (hyp_2 : hol.proof (hol.and p_1 q_2) => thm_88 p_1 q_2 hyp_2) (hyp_2 : hol.proof q_2 => thm_95 q_2 p_1 hyp_1 hyp_2).

(; Theorem: |- ((= ((Data.Bool.==> q') q)) ((Data.Bool./\ ((Data.Bool.==> q) q')) ((Data.Bool.==> q') q))) ;)

(; dict ;)

def thm_97 : q_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp q_1 q_27_2) -> hol.proof (hol.eq hol.bool (hol.imp q_27_2 q_1) (hol.and (hol.imp q_1 q_27_2) (hol.imp q_27_2 q_1))) :=
  q_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp q_1 q_27_2) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_96 p_1 q_2 hyp_1) (hol.imp q_1 q_27_2) (hol.imp q_27_2 q_1) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> q') q)) ((Data.Bool./\ ((Data.Bool.==> q) q')) ((Data.Bool.==> q') q))) ;)

(; dict ;)

def thm_98 : p_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> q_27_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_2 q_27_3)) -> hol.proof (hol.eq hol.bool (hol.imp q_27_3 q_2) (hol.and (hol.imp q_2 q_27_3) (hol.imp q_27_3 q_2))) :=
  p_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => q_27_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_2 q_27_3)) => hol.PROVE_HYP (hol.imp q_2 q_27_3) (hol.eq hol.bool (hol.imp q_27_3 q_2) (hol.and (hol.imp q_2 q_27_3) (hol.imp q_27_3 q_2))) (thm_67 p_27_1 q_27_3 q_2 hyp_1 hyp_2) (hyp_3 : hol.proof (hol.imp q_2 q_27_3) => thm_97 q_2 q_27_3 hyp_3).

(; Theorem: |- ((= q) p) ;)

(; dict ;)

def thm_99 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 q_2) -> hol.proof (hol.eq hol.bool q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 q_2) => hol.SYM hol.bool p_1 q_2 (thm_60 q_2 p_1 hyp_1).

(; Theorem: |- p ;)

(; dict ;)

def thm_100 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof q_1 -> hyp_2 : hol.proof (hol.eq hol.bool p_2 q_1) -> hol.proof p_2 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof q_1 => hyp_2 : hol.proof (hol.eq hol.bool p_2 q_1) => hol.EQ_MP q_1 p_2 (thm_99 p_2 q_1 hyp_2) (thm_83 q_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> q) p) ;)

(; dict ;)

def thm_101 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 q_2) -> hol.proof (hol.imp q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 q_2) => hyp_2 : hol.proof q_2 => thm_100 q_2 p_1 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= p) q)) ((Data.Bool.==> q) p)) ;)

(; dict ;)

def thm_102 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 q_1) (hol.imp q_1 p_2)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => thm_101 p_2 q_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= q) q')) ((Data.Bool.==> q') q)) ;)

(; dict ;)

def thm_103 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool q_2 q_27_1) (hol.imp q_27_1 q_2)) :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_102 q_1 p_2) q_27_1 q_2.

(; Theorem: |- ((Data.Bool.==> q') q) ;)

(; dict ;)

def thm_104 : p_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> q_27_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_2 q_27_3)) -> hol.proof (hol.imp q_27_3 q_2) :=
  p_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => q_27_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_2 q_27_3)) => thm_103 q_27_3 q_2 (thm_66 p_27_1 q_27_3 q_2 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool./\ ((Data.Bool.==> q) q')) ((Data.Bool.==> q') q)) ;)

(; dict ;)

def thm_105 : p_27_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_3 q_27_2)) -> hol.proof (hol.and (hol.imp q_3 q_27_2) (hol.imp q_27_2 q_3)) :=
  p_27_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_3 q_27_2)) => hol.EQ_MP (hol.imp q_27_2 q_3) (hol.and (hol.imp q_3 q_27_2) (hol.imp q_27_2 q_3)) (thm_98 p_27_1 q_3 q_27_2 hyp_1 hyp_2) (thm_104 p_27_1 q_3 q_27_2 hyp_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> q') q) ;)

(; dict ;)

def thm_106 : q_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.imp q_1 q_27_2) (hol.imp q_27_2 q_1)) -> hol.proof (hol.imp q_27_2 q_1) :=
  q_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.imp q_1 q_27_2) (hol.imp q_27_2 q_1)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_88 p_1 q_2 hyp_1) (hol.imp q_1 q_27_2) (hol.imp q_27_2 q_1) hyp_1.

(; Theorem: |- ((Data.Bool.==> q') q) ;)

(; dict ;)

def thm_107 : p_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> q_27_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_2 q_27_3)) -> hol.proof (hol.imp q_27_3 q_2) :=
  p_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => q_27_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_2 q_27_3)) => hol.PROVE_HYP (hol.and (hol.imp q_2 q_27_3) (hol.imp q_27_3 q_2)) (hol.imp q_27_3 q_2) (thm_105 p_27_1 q_27_3 q_2 hyp_1 hyp_2) (hyp_3 : hol.proof (hol.and (hol.imp q_2 q_27_3) (hol.imp q_27_3 q_2)) => thm_106 q_2 q_27_3 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> q) q')) q) ;)

(; dict ;)

def thm_108 : p_27_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 q_27_2) -> hyp_3 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_3 q_27_2)) -> hol.proof (hol.imp (hol.imp q_3 q_27_2) q_3) :=
  p_27_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 q_27_2) => hyp_3 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_3 q_27_2)) => thm_59 p_27_1 q_3 q_27_2 hyp_1 hyp_2 (thm_107 p_27_1 q_3 q_27_2 hyp_1 hyp_3).

(; Theorem: |- q ;)

(; dict ;)

def thm_109 : q_27_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_27_2 -> hyp_2 : hol.proof (hol.imp p_27_2 q_27_1) -> hyp_3 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_3 q_27_1)) -> hol.proof q_3 :=
  q_27_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_27_2 => hyp_2 : hol.proof (hol.imp p_27_2 q_27_1) => hyp_3 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_3 q_27_1)) => thm_108 p_27_2 q_27_1 q_3 hyp_1 hyp_2 hyp_3 (thm_67 p_27_2 q_27_1 q_3 hyp_1 hyp_3).

(; Theorem: |- q ;)

(; dict ;)

def thm_110 : q_27_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> q_4 : hol.term hol.bool -> hyp_1 : hol.proof p_3 -> hyp_2 : hol.proof (hol.imp p_3 p_27_2) -> hyp_3 : hol.proof (hol.imp p_27_2 q_27_1) -> hyp_4 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_4 q_27_1)) -> hol.proof q_4 :=
  q_27_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => p_3 : hol.term hol.bool => q_4 : hol.term hol.bool => hyp_1 : hol.proof p_3 => hyp_2 : hol.proof (hol.imp p_3 p_27_2) => hyp_3 : hol.proof (hol.imp p_27_2 q_27_1) => hyp_4 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_4 q_27_1)) => hol.PROVE_HYP p_27_2 q_4 (thm_50 p_3 p_27_2 hyp_1 hyp_2) (hyp_5 : hol.proof p_27_2 => thm_109 q_27_1 p_27_2 q_4 hyp_5 hyp_3 hyp_4).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) p')) q) ;)

(; dict ;)

def thm_111 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_27_3 : hol.term hol.bool -> p_4 : hol.term hol.bool -> hyp_1 : hol.proof p_4 -> hyp_2 : hol.proof (hol.imp p_27_3 q_27_1) -> hyp_3 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) -> hol.proof (hol.imp (hol.imp p_4 p_27_3) q_2) :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => p_4 : hol.term hol.bool => hyp_1 : hol.proof p_4 => hyp_2 : hol.proof (hol.imp p_27_3 q_27_1) => hyp_3 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) => hyp_4 : hol.proof (hol.imp p_4 p_27_3) => thm_110 q_27_1 p_27_3 p_4 q_2 hyp_1 hyp_4 hyp_2 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p') p)) ((Data.Bool.==> ((Data.Bool.==> p) p')) q)) ;)

(; dict ;)

def thm_112 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> p_27_4 : hol.term hol.bool -> hyp_1 : hol.proof p_3 -> hyp_2 : hol.proof (hol.imp p_27_4 q_27_1) -> hyp_3 : hol.proof (hol.imp p_27_4 (hol.eq hol.bool q_2 q_27_1)) -> hol.proof (hol.imp (hol.imp p_27_4 p_3) (hol.imp (hol.imp p_3 p_27_4) q_2)) :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => p_27_4 : hol.term hol.bool => hyp_1 : hol.proof p_3 => hyp_2 : hol.proof (hol.imp p_27_4 q_27_1) => hyp_3 : hol.proof (hol.imp p_27_4 (hol.eq hol.bool q_2 q_27_1)) => hyp_4 : hol.proof (hol.imp p_27_4 p_3) => thm_111 q_27_1 q_2 p_27_4 p_3 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((= p) p')) ((Data.Bool.==> p) p')) ;)

(; dict ;)

def thm_113 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 p_27_1) (hol.imp p_2 p_27_1)) :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_63 q_1 p_2) p_27_1 p_2.

(; Theorem: |- ((= p) p') ;)

(; dict ;)

def thm_114 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 p_27_1) -> hol.proof (hol.eq hol.bool p_2 p_27_1) :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 p_27_1) => hyp_1.

(; Theorem: |- ((Data.Bool.==> p) p') ;)

(; dict ;)

def thm_115 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 p_27_1) -> hol.proof (hol.imp p_2 p_27_1) :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 p_27_1) => thm_113 p_27_1 p_2 (thm_114 p_27_1 p_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> p') p)) ((Data.Bool./\ ((Data.Bool.==> p) p')) ((Data.Bool.==> p') p))) ;)

(; dict ;)

def thm_116 : p_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_1 p_27_2) -> hol.proof (hol.eq hol.bool (hol.imp p_27_2 p_1) (hol.and (hol.imp p_1 p_27_2) (hol.imp p_27_2 p_1))) :=
  p_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_1 p_27_2) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_96 p_1 q_2 hyp_1) (hol.imp p_1 p_27_2) (hol.imp p_27_2 p_1) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> p') p)) ((Data.Bool./\ ((Data.Bool.==> p) p')) ((Data.Bool.==> p') p))) ;)

(; dict ;)

def thm_117 : p_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 p_27_2) -> hol.proof (hol.eq hol.bool (hol.imp p_27_2 p_1) (hol.and (hol.imp p_1 p_27_2) (hol.imp p_27_2 p_1))) :=
  p_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 p_27_2) => hol.PROVE_HYP (hol.imp p_1 p_27_2) (hol.eq hol.bool (hol.imp p_27_2 p_1) (hol.and (hol.imp p_1 p_27_2) (hol.imp p_27_2 p_1))) (thm_115 p_27_2 p_1 hyp_1) (hyp_2 : hol.proof (hol.imp p_1 p_27_2) => thm_116 p_1 p_27_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((= p) p')) ((Data.Bool.==> p') p)) ;)

(; dict ;)

def thm_118 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 p_27_1) (hol.imp p_27_1 p_2)) :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_102 q_1 p_2) p_27_1 p_2.

(; Theorem: |- ((Data.Bool.==> p') p) ;)

(; dict ;)

def thm_119 : p_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 p_27_2) -> hol.proof (hol.imp p_27_2 p_1) :=
  p_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 p_27_2) => thm_118 p_27_2 p_1 (thm_114 p_27_2 p_1 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((Data.Bool.==> p) p')) ((Data.Bool.==> p') p)) ;)

(; dict ;)

def thm_120 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 p_27_1) -> hol.proof (hol.and (hol.imp p_2 p_27_1) (hol.imp p_27_1 p_2)) :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 p_27_1) => hol.EQ_MP (hol.imp p_27_1 p_2) (hol.and (hol.imp p_2 p_27_1) (hol.imp p_27_1 p_2)) (thm_117 p_2 p_27_1 hyp_1) (thm_119 p_2 p_27_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> p') p) ;)

(; dict ;)

def thm_121 : p_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.imp p_1 p_27_2) (hol.imp p_27_2 p_1)) -> hol.proof (hol.imp p_27_2 p_1) :=
  p_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.imp p_1 p_27_2) (hol.imp p_27_2 p_1)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_88 p_1 q_2 hyp_1) (hol.imp p_1 p_27_2) (hol.imp p_27_2 p_1) hyp_1.

(; Theorem: |- ((Data.Bool.==> p') p) ;)

(; dict ;)

def thm_122 : p_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 p_27_2) -> hol.proof (hol.imp p_27_2 p_1) :=
  p_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 p_27_2) => hol.PROVE_HYP (hol.and (hol.imp p_1 p_27_2) (hol.imp p_27_2 p_1)) (hol.imp p_27_2 p_1) (thm_120 p_27_2 p_1 hyp_1) (hyp_2 : hol.proof (hol.and (hol.imp p_1 p_27_2) (hol.imp p_27_2 p_1)) => thm_121 p_1 p_27_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) p')) q) ;)

(; dict ;)

def thm_123 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_27_3 : hol.term hol.bool -> p_4 : hol.term hol.bool -> hyp_1 : hol.proof p_4 -> hyp_2 : hol.proof (hol.eq hol.bool p_4 p_27_3) -> hyp_3 : hol.proof (hol.imp p_27_3 q_27_1) -> hyp_4 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) -> hol.proof (hol.imp (hol.imp p_4 p_27_3) q_2) :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => p_4 : hol.term hol.bool => hyp_1 : hol.proof p_4 => hyp_2 : hol.proof (hol.eq hol.bool p_4 p_27_3) => hyp_3 : hol.proof (hol.imp p_27_3 q_27_1) => hyp_4 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) => thm_112 q_27_1 q_2 p_4 p_27_3 hyp_1 hyp_3 hyp_4 (thm_122 p_4 p_27_3 hyp_2).

(; Theorem: |- q ;)

(; dict ;)

def thm_124 : q_27_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> q_4 : hol.term hol.bool -> hyp_1 : hol.proof p_3 -> hyp_2 : hol.proof (hol.eq hol.bool p_3 p_27_2) -> hyp_3 : hol.proof (hol.imp p_27_2 q_27_1) -> hyp_4 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_4 q_27_1)) -> hol.proof q_4 :=
  q_27_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => p_3 : hol.term hol.bool => q_4 : hol.term hol.bool => hyp_1 : hol.proof p_3 => hyp_2 : hol.proof (hol.eq hol.bool p_3 p_27_2) => hyp_3 : hol.proof (hol.imp p_27_2 q_27_1) => hyp_4 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_4 q_27_1)) => thm_123 q_27_1 q_4 p_27_2 p_3 hyp_1 hyp_2 hyp_3 hyp_4 (thm_115 p_27_2 p_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> p) q) ;)

(; dict ;)

def thm_125 : q_27_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> p_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_4 p_27_2) -> hyp_2 : hol.proof (hol.imp p_27_2 q_27_1) -> hyp_3 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_3 q_27_1)) -> hol.proof (hol.imp p_4 q_3) :=
  q_27_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => p_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_4 p_27_2) => hyp_2 : hol.proof (hol.imp p_27_2 q_27_1) => hyp_3 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_3 q_27_1)) => hyp_4 : hol.proof p_4 => thm_124 q_27_1 p_27_2 p_4 q_3 hyp_4 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p') q')) ((Data.Bool.==> p) q)) ;)

(; dict ;)

def thm_126 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> q_27_3 : hol.term hol.bool -> p_27_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 p_27_4) -> hyp_2 : hol.proof (hol.imp p_27_4 (hol.eq hol.bool q_1 q_27_3)) -> hol.proof (hol.imp (hol.imp p_27_4 q_27_3) (hol.imp p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => q_27_3 : hol.term hol.bool => p_27_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 p_27_4) => hyp_2 : hol.proof (hol.imp p_27_4 (hol.eq hol.bool q_1 q_27_3)) => hyp_3 : hol.proof (hol.imp p_27_4 q_27_3) => thm_125 q_27_3 p_27_4 q_1 p_2 hyp_1 hyp_3 hyp_2.

(; Theorem: |- ((Data.Bool.==> p') p) ;)

(; dict ;)

def thm_127 : p_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_27_2 p_1) -> hol.proof (hol.imp p_27_2 p_1) :=
  p_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_27_2 p_1) => hyp_1.

(; Theorem: |- p ;)

(; dict ;)

def thm_128 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 p_2) -> hol.proof p_2 :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 p_2) => thm_127 p_2 p_27_1 hyp_2 (thm_52 p_27_1 hyp_1).

(; Theorem: |- p ;)

(; dict ;)

def thm_129 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_27_1 p_2) -> hol.proof p_2 :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_27_1 p_2) => hol.PROVE_HYP p_27_1 p_2 (thm_52 p_27_1 hyp_1) (hyp_3 : hol.proof p_27_1 => thm_128 p_27_1 p_2 hyp_3 hyp_2).

(; Theorem: |- p ;)

(; dict ;)

def thm_130 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof (hol.imp p_2 p_27_1) -> hyp_3 : hol.proof (hol.imp p_27_1 p_2) -> hol.proof p_2 :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof (hol.imp p_2 p_27_1) => hyp_3 : hol.proof (hol.imp p_27_1 p_2) => hol.PROVE_HYP p_27_1 p_2 (thm_49 p_2 p_27_1 hyp_1 hyp_2) (hyp_4 : hol.proof p_27_1 => thm_128 p_27_1 p_2 hyp_4 hyp_3).

(; Theorem: |- p ;)

(; dict ;)

def thm_131 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_27_1 -> hyp_2 : hol.proof (hol.imp p_2 p_27_1) -> hyp_3 : hol.proof (hol.imp p_27_1 p_2) -> hol.proof p_2 :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_27_1 => hyp_2 : hol.proof (hol.imp p_2 p_27_1) => hyp_3 : hol.proof (hol.imp p_27_1 p_2) => hol.PROVE_HYP p_2 p_2 (thm_129 p_27_1 p_2 hyp_1 hyp_3) (hyp_4 : hol.proof p_2 => thm_130 p_27_1 p_2 hyp_4 hyp_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> p) q) ;)

(; dict ;)

def thm_132 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_2 q_1) -> hol.proof (hol.imp p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_2 q_1) => hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_133 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.imp p_1 q_2) -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.imp p_1 q_2) => thm_132 q_2 p_1 hyp_2 (thm_47 p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> q) q') ;)

(; dict ;)

def thm_134 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp q_2 q_27_1) -> hol.proof (hol.imp q_2 q_27_1) :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp q_2 q_27_1) => hyp_1.

(; Theorem: |- q' ;)

(; dict ;)

def thm_135 : q_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> hyp_1 : hol.proof q_1 -> hyp_2 : hol.proof (hol.imp q_1 q_27_2) -> hol.proof q_27_2 :=
  q_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => hyp_1 : hol.proof q_1 => hyp_2 : hol.proof (hol.imp q_1 q_27_2) => thm_134 q_27_2 q_1 hyp_2 (thm_83 q_1 hyp_1).

(; Theorem: |- q' ;)

(; dict ;)

def thm_136 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> q_27_3 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof (hol.imp p_2 q_1) -> hyp_3 : hol.proof (hol.imp q_1 q_27_3) -> hol.proof q_27_3 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => q_27_3 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof (hol.imp p_2 q_1) => hyp_3 : hol.proof (hol.imp q_1 q_27_3) => hol.PROVE_HYP q_1 q_27_3 (thm_133 p_2 q_1 hyp_1 hyp_2) (hyp_4 : hol.proof q_1 => thm_135 q_1 q_27_3 hyp_4 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> q) q')) q') ;)

(; dict ;)

def thm_137 : p_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.imp p_1 q_3) -> hol.proof (hol.imp (hol.imp q_3 q_27_2) q_27_2) :=
  p_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.imp p_1 q_3) => hyp_3 : hol.proof (hol.imp q_3 q_27_2) => thm_136 q_3 p_1 q_27_2 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> q') q)) ((Data.Bool.==> ((Data.Bool.==> q) q')) q')) ;)

(; dict ;)

def thm_138 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> q_27_3 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.imp p_1 q_2) -> hol.proof (hol.imp (hol.imp q_27_3 q_2) (hol.imp (hol.imp q_2 q_27_3) q_27_3)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => q_27_3 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.imp p_1 q_2) => hyp_3 : hol.proof (hol.imp q_27_3 q_2) => thm_137 p_1 q_27_3 q_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> q) q')) q') ;)

(; dict ;)

def thm_139 : p_27_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> q_27_3 : hol.term hol.bool -> q_4 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof p_27_1 -> hyp_3 : hol.proof (hol.imp p_2 q_4) -> hyp_4 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_4 q_27_3)) -> hol.proof (hol.imp (hol.imp q_4 q_27_3) q_27_3) :=
  p_27_1 : hol.term hol.bool => p_2 : hol.term hol.bool => q_27_3 : hol.term hol.bool => q_4 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof p_27_1 => hyp_3 : hol.proof (hol.imp p_2 q_4) => hyp_4 : hol.proof (hol.imp p_27_1 (hol.eq hol.bool q_4 q_27_3)) => thm_138 p_2 q_4 q_27_3 hyp_1 hyp_3 (thm_104 p_27_1 q_4 q_27_3 hyp_2 hyp_4).

(; Theorem: |- q' ;)

(; dict ;)

def thm_140 : q_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> q_27_4 : hol.term hol.bool -> hyp_1 : hol.proof p_3 -> hyp_2 : hol.proof p_27_2 -> hyp_3 : hol.proof (hol.imp p_3 q_1) -> hyp_4 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_1 q_27_4)) -> hol.proof q_27_4 :=
  q_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => p_3 : hol.term hol.bool => q_27_4 : hol.term hol.bool => hyp_1 : hol.proof p_3 => hyp_2 : hol.proof p_27_2 => hyp_3 : hol.proof (hol.imp p_3 q_1) => hyp_4 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_1 q_27_4)) => thm_139 p_27_2 p_3 q_27_4 q_1 hyp_1 hyp_2 hyp_3 hyp_4 (thm_67 p_27_2 q_27_4 q_1 hyp_2 hyp_4).

(; Theorem: |- q' ;)

(; dict ;)

def thm_141 : q_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> q_27_4 : hol.term hol.bool -> hyp_1 : hol.proof p_3 -> hyp_2 : hol.proof p_27_2 -> hyp_3 : hol.proof (hol.imp p_3 q_1) -> hyp_4 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_1 q_27_4)) -> hol.proof q_27_4 :=
  q_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => p_3 : hol.term hol.bool => q_27_4 : hol.term hol.bool => hyp_1 : hol.proof p_3 => hyp_2 : hol.proof p_27_2 => hyp_3 : hol.proof (hol.imp p_3 q_1) => hyp_4 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_1 q_27_4)) => hol.PROVE_HYP p_27_2 q_27_4 (thm_52 p_27_2 hyp_2) (hyp_5 : hol.proof p_27_2 => thm_140 q_1 p_27_2 p_3 q_27_4 hyp_1 hyp_5 hyp_3 hyp_4).

(; Theorem: |- q' ;)

(; dict ;)

def thm_142 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> p_27_3 : hol.term hol.bool -> q_27_4 : hol.term hol.bool -> hyp_1 : hol.proof p_27_3 -> hyp_2 : hol.proof (hol.imp p_2 p_27_3) -> hyp_3 : hol.proof (hol.imp p_2 q_1) -> hyp_4 : hol.proof (hol.imp p_27_3 p_2) -> hyp_5 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_1 q_27_4)) -> hol.proof q_27_4 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => q_27_4 : hol.term hol.bool => hyp_1 : hol.proof p_27_3 => hyp_2 : hol.proof (hol.imp p_2 p_27_3) => hyp_3 : hol.proof (hol.imp p_2 q_1) => hyp_4 : hol.proof (hol.imp p_27_3 p_2) => hyp_5 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_1 q_27_4)) => hol.PROVE_HYP p_2 q_27_4 (thm_131 p_27_3 p_2 hyp_1 hyp_2 hyp_4) (hyp_6 : hol.proof p_2 => thm_141 q_1 p_27_3 p_2 q_27_4 hyp_6 hyp_1 hyp_3 hyp_5).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) p')) q') ;)

(; dict ;)

def thm_143 : q_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> p_27_3 : hol.term hol.bool -> p_4 : hol.term hol.bool -> hyp_1 : hol.proof p_27_3 -> hyp_2 : hol.proof (hol.imp p_4 q_1) -> hyp_3 : hol.proof (hol.imp p_27_3 p_4) -> hyp_4 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_1 q_27_2)) -> hol.proof (hol.imp (hol.imp p_4 p_27_3) q_27_2) :=
  q_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => p_4 : hol.term hol.bool => hyp_1 : hol.proof p_27_3 => hyp_2 : hol.proof (hol.imp p_4 q_1) => hyp_3 : hol.proof (hol.imp p_27_3 p_4) => hyp_4 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_1 q_27_2)) => hyp_5 : hol.proof (hol.imp p_4 p_27_3) => thm_142 q_1 p_4 p_27_3 q_27_2 hyp_1 hyp_5 hyp_2 hyp_3 hyp_4.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p') p)) ((Data.Bool.==> ((Data.Bool.==> p) p')) q')) ;)

(; dict ;)

def thm_144 : q_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> p_27_4 : hol.term hol.bool -> hyp_1 : hol.proof p_27_4 -> hyp_2 : hol.proof (hol.imp p_3 q_1) -> hyp_3 : hol.proof (hol.imp p_27_4 (hol.eq hol.bool q_1 q_27_2)) -> hol.proof (hol.imp (hol.imp p_27_4 p_3) (hol.imp (hol.imp p_3 p_27_4) q_27_2)) :=
  q_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => p_3 : hol.term hol.bool => p_27_4 : hol.term hol.bool => hyp_1 : hol.proof p_27_4 => hyp_2 : hol.proof (hol.imp p_3 q_1) => hyp_3 : hol.proof (hol.imp p_27_4 (hol.eq hol.bool q_1 q_27_2)) => hyp_4 : hol.proof (hol.imp p_27_4 p_3) => thm_143 q_1 q_27_2 p_27_4 p_3 hyp_1 hyp_2 hyp_4 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) p')) q') ;)

(; dict ;)

def thm_145 : q_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> p_27_3 : hol.term hol.bool -> p_4 : hol.term hol.bool -> hyp_1 : hol.proof p_27_3 -> hyp_2 : hol.proof (hol.eq hol.bool p_4 p_27_3) -> hyp_3 : hol.proof (hol.imp p_4 q_1) -> hyp_4 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_1 q_27_2)) -> hol.proof (hol.imp (hol.imp p_4 p_27_3) q_27_2) :=
  q_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => p_4 : hol.term hol.bool => hyp_1 : hol.proof p_27_3 => hyp_2 : hol.proof (hol.eq hol.bool p_4 p_27_3) => hyp_3 : hol.proof (hol.imp p_4 q_1) => hyp_4 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_1 q_27_2)) => thm_144 q_1 q_27_2 p_4 p_27_3 hyp_1 hyp_3 hyp_4 (thm_119 p_4 p_27_3 hyp_2).

(; Theorem: |- q' ;)

(; dict ;)

def thm_146 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> p_27_3 : hol.term hol.bool -> q_27_4 : hol.term hol.bool -> hyp_1 : hol.proof p_27_3 -> hyp_2 : hol.proof (hol.eq hol.bool p_2 p_27_3) -> hyp_3 : hol.proof (hol.imp p_2 q_1) -> hyp_4 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_1 q_27_4)) -> hol.proof q_27_4 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => q_27_4 : hol.term hol.bool => hyp_1 : hol.proof p_27_3 => hyp_2 : hol.proof (hol.eq hol.bool p_2 p_27_3) => hyp_3 : hol.proof (hol.imp p_2 q_1) => hyp_4 : hol.proof (hol.imp p_27_3 (hol.eq hol.bool q_1 q_27_4)) => thm_145 q_1 q_27_4 p_27_3 p_2 hyp_1 hyp_2 hyp_3 hyp_4 (thm_115 p_27_3 p_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> p') q') ;)

(; dict ;)

def thm_147 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> q_27_3 : hol.term hol.bool -> p_27_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 p_27_4) -> hyp_2 : hol.proof (hol.imp p_2 q_1) -> hyp_3 : hol.proof (hol.imp p_27_4 (hol.eq hol.bool q_1 q_27_3)) -> hol.proof (hol.imp p_27_4 q_27_3) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => q_27_3 : hol.term hol.bool => p_27_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 p_27_4) => hyp_2 : hol.proof (hol.imp p_2 q_1) => hyp_3 : hol.proof (hol.imp p_27_4 (hol.eq hol.bool q_1 q_27_3)) => hyp_4 : hol.proof p_27_4 => thm_146 q_1 p_2 p_27_4 q_27_3 hyp_4 hyp_1 hyp_2 hyp_3.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) q)) ((Data.Bool.==> p') q')) ;)

(; dict ;)

def thm_148 : q_27_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> p_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_4 p_27_2) -> hyp_2 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_3 q_27_1)) -> hol.proof (hol.imp (hol.imp p_4 q_3) (hol.imp p_27_2 q_27_1)) :=
  q_27_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => p_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_4 p_27_2) => hyp_2 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_3 q_27_1)) => hyp_3 : hol.proof (hol.imp p_4 q_3) => thm_147 q_3 p_4 q_27_1 p_27_2 hyp_1 hyp_3 hyp_2.

(; Theorem: |- ((= ((Data.Bool.==> p) q)) ((Data.Bool.==> p') q')) ;)

(; dict ;)

def thm_149 : q_27_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> p_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_4 p_27_2) -> hyp_2 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_3 q_27_1)) -> hol.proof (hol.eq hol.bool (hol.imp p_4 q_3) (hol.imp p_27_2 q_27_1)) :=
  q_27_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => p_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_4 p_27_2) => hyp_2 : hol.proof (hol.imp p_27_2 (hol.eq hol.bool q_3 q_27_1)) => hol.PROP_EXT (hol.imp p_4 q_3) (hol.imp p_27_2 q_27_1) (hyp_3 : hol.proof (hol.imp p_27_2 q_27_1) => thm_126 q_3 p_4 q_27_1 p_27_2 hyp_1 hyp_2 (thm_51 q_27_1 p_27_2 hyp_3)) (hyp_3 : hol.proof (hol.imp p_4 q_3) => thm_148 q_27_1 p_27_2 q_3 p_4 hyp_1 hyp_2 (thm_132 q_3 p_4 hyp_3)).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p') ((= q) q'))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.==> p') q'))) ;)

(; dict ;)

def thm_150 : p_1 : hol.term hol.bool -> q_27_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> p_27_4 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_1 p_27_4) -> hol.proof (hol.imp (hol.imp p_27_4 (hol.eq hol.bool q_3 q_27_2)) (hol.eq hol.bool (hol.imp p_1 q_3) (hol.imp p_27_4 q_27_2))) :=
  p_1 : hol.term hol.bool => q_27_2 : hol.term hol.bool => q_3 : hol.term hol.bool => p_27_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_1 p_27_4) => hyp_2 : hol.proof (hol.imp p_27_4 (hol.eq hol.bool q_3 q_27_2)) => thm_149 q_27_2 p_27_4 q_3 p_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> ((= p) p')) ((Data.Bool.==> ((Data.Bool.==> p') ((= q) q'))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.==> p') q')))) ;)

(; dict ;)

def thm_151 : q_27_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_27_3 : hol.term hol.bool -> p_4 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_4 p_27_3) (hol.imp (hol.imp p_27_3 (hol.eq hol.bool q_2 q_27_1)) (hol.eq hol.bool (hol.imp p_4 q_2) (hol.imp p_27_3 q_27_1)))) :=
  q_27_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => p_4 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_4 p_27_3) => thm_150 p_4 q_27_1 q_2 p_27_3 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda q'. ((Data.Bool.==> ((= p) p')) ((Data.Bool.==> ((Data.Bool.==> p') ((= q) q'))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.==> p') q'))))) ;)

(; dict ;)

def thm_152 : q_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (q_27_4 : hol.term hol.bool => hol.imp (hol.eq hol.bool p_3 p_27_2) (hol.imp (hol.imp p_27_2 (hol.eq hol.bool q_1 q_27_4)) (hol.eq hol.bool (hol.imp p_3 q_1) (hol.imp p_27_2 q_27_4))))) :=
  q_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => p_3 : hol.term hol.bool => q_27_4 : hol.term hol.bool => hol.EQ_MP (hol.imp (hol.eq hol.bool p_3 p_27_2) (hol.imp (hol.imp p_27_2 (hol.eq hol.bool q_1 q_27_4)) (hol.eq hol.bool (hol.imp p_3 q_1) (hol.imp p_27_2 q_27_4)))) (hol.imp (hol.eq hol.bool p_3 p_27_2) (hol.imp (hol.imp p_27_2 (hol.eq hol.bool q_1 q_27_4)) (hol.eq hol.bool (hol.imp p_3 q_1) (hol.imp p_27_2 q_27_4)))) (thm_46 q_27_4 q_1 p_27_2 p_3) (thm_151 q_27_4 q_1 p_27_2 p_3).

(; Theorem: |- (Data.Bool.! \lambda p'. (Data.Bool.! \lambda q'. ((Data.Bool.==> ((= p) p')) ((Data.Bool.==> ((Data.Bool.==> p') ((= q) q'))) ((= ((Data.Bool.==> p) q)) ((Data.Bool.==> p') q')))))) ;)

(; dict ;)

def thm_153 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.forall hol.bool (p_27_3 : hol.term hol.bool => hol.forall hol.bool (q_27_4 : hol.term hol.bool => hol.imp (hol.eq hol.bool p_2 p_27_3) (hol.imp (hol.imp p_27_3 (hol.eq hol.bool q_1 q_27_4)) (hol.eq hol.bool (hol.imp p_2 q_1) (hol.imp p_27_3 q_27_4)))))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => p_27_3 : hol.term hol.bool => thm_152 q_1 p_27_3 p_2.

(; Theorem: |- (Data.Bool.! \lambda p'. (Data.Bool.! \lambda q'. ((Data.Bool.==> ((= (Data.Bool.? p)) p')) ((Data.Bool.==> ((Data.Bool.==> p') ((= (p (select p))) q'))) ((= ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) ((Data.Bool.==> p') q')))))) ;)

(; dict ;)

def thm_154 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.forall hol.bool (p_27_2 : hol.term hol.bool => hol.forall hol.bool (q_27_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) p_27_2) (hol.imp (hol.imp p_27_2 (hol.eq hol.bool (p_1 (hol.select A p_1)) q_27_3)) (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) (hol.imp p_27_2 q_27_3)))))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_153 q_1 p_2) (p_1 (hol.select A p_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1).

(; Theorem: |- (Data.Bool.! \lambda q'. ((Data.Bool.==> ((= (Data.Bool.? p)) p')) ((Data.Bool.==> ((Data.Bool.==> p') ((= (p (select p))) q'))) ((= ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) ((Data.Bool.==> p') q'))))) ;)

(; dict ;)

def thm_155 : A : hol.type -> p_27_1 : hol.term hol.bool -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.forall hol.bool (q_27_3 : hol.term hol.bool => hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) p_27_1) (hol.imp (hol.imp p_27_1 (hol.eq hol.bool (p_2 (hol.select A p_2)) q_27_3)) (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (p_2 (hol.select A p_2))) (hol.imp p_27_1 q_27_3))))) :=
  A : hol.type => p_27_1 : hol.term hol.bool => p_2 : hol.term (hol.arr A hol.bool) => thm_154 A p_2 p_27_1.

(; Theorem: |- ((Data.Bool.==> ((= (Data.Bool.? p)) p')) ((Data.Bool.==> ((Data.Bool.==> p') ((= (p (select p))) q'))) ((= ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) ((Data.Bool.==> p') q')))) ;)

(; dict ;)

def thm_156 : A : hol.type -> q_27_1 : hol.term hol.bool -> p_27_2 : hol.term hol.bool -> p_3 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_3) p_27_2) (hol.imp (hol.imp p_27_2 (hol.eq hol.bool (p_3 (hol.select A p_3)) q_27_1)) (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_3) (p_3 (hol.select A p_3))) (hol.imp p_27_2 q_27_1)))) :=
  A : hol.type => q_27_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => p_3 : hol.term (hol.arr A hol.bool) => thm_155 A p_27_2 p_3 q_27_1.

(; Theorem: |- ((Data.Bool.==> ((= (Data.Bool.? p)) (Data.Bool.? p))) ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.? p)) ((= (p (select p))) q'))) ((= ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) ((Data.Bool.==> (Data.Bool.? p)) q')))) ;)

(; dict ;)

def thm_157 : A : hol.type -> q_27_1 : hol.term hol.bool -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2)) (hol.imp (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.eq hol.bool (p_2 (hol.select A p_2)) q_27_1)) (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (p_2 (hol.select A p_2))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) q_27_1)))) :=
  A : hol.type => q_27_1 : hol.term hol.bool => p_2 : hol.term (hol.arr A hol.bool) => (A : hol.type => q_27_1 : hol.term hol.bool => p_27_2 : hol.term hol.bool => p_3 : hol.term (hol.arr A hol.bool) => thm_156 A q_27_1 p_27_2 p_3) A q_27_1 (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) p_2.

(; Theorem: |- ((= (Data.Bool.? p)) (Data.Bool.? p)) ;)

(; dict ;)

def thm_158 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.? p)) ((= (p (select p))) q'))) ((= ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) ((Data.Bool.==> (Data.Bool.? p)) q'))) ;)

(; dict ;)

def thm_159 : A : hol.type -> q_27_1 : hol.term hol.bool -> p_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.eq hol.bool (p_2 (hol.select A p_2)) q_27_1)) (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (p_2 (hol.select A p_2))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) q_27_1))) :=
  A : hol.type => q_27_1 : hol.term hol.bool => p_2 : hol.term (hol.arr A hol.bool) => thm_157 A q_27_1 p_2 (thm_158 A p_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.? p)) ((= (p (select p))) Data.Bool.T))) ((= ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) ((Data.Bool.==> (Data.Bool.? p)) Data.Bool.T))) ;)

(; dict ;)

def thm_160 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.eq hol.bool (p_1 (hol.select A p_1)) hol.true)) (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => (A : hol.type => q_27_1 : hol.term hol.bool => p_2 : hol.term (hol.arr A hol.bool) => thm_159 A q_27_1 p_2) A hol.true p_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) ((= (P (select P))) Data.Bool.T))) ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) ((= (P (select P))) Data.Bool.T))) ;)

(; dict ;)

def thm_161 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) ((= (P (select P))) Data.Bool.T))) ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) ((= (P (select P))) Data.Bool.T))) ;)

(; dict ;)

def thm_162 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) (thm_161 A P_1) (thm_161 A P_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) Q))) ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) Q))) ;)

(; dict ;)

def thm_163 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1)) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1))) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1)).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) Q))) ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) Q))) ;)

(; dict ;)

def thm_164 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1)) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1))) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1)) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1)) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1)) (thm_163 A Q_1 P_2) (thm_163 A Q_1 P_2).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_165 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (hol.forall A) (hol.forall A)) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A hol.bool) hol.bool) (hol.forall A).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> (P x)) Q)) \lambda x. ((Data.Bool.==> (P x)) Q)) ;)

(; dict ;)

def thm_166 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1) (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr A hol.bool) (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1).

(; Theorem: |- ((= \lambda x. ((Data.Bool.==> (P x)) Q)) \lambda x. ((Data.Bool.==> (P x)) Q)) ;)

(; dict ;)

def thm_167 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1) (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hol.TRANS (hol.arr A hol.bool) (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1) (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1) (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1) (thm_166 A Q_1 P_2) (thm_166 A Q_1 P_2).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ;)

(; dict ;)

def thm_168 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1))) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1) (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1) (thm_165 A) (thm_167 A Q_1 P_2).

(; Theorem: |- ((= (\lambda x. (P x) x)) (P x)) ;)

(; dict ;)

def thm_169 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((x_3 : hol.term A => P_2 x_3) x_1) (P_2 x_1)) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.BETA_CONV A hol.bool (x_3 : hol.term A => P_2 x_3) x_1.

(; Theorem: |- ((= (P x)) (\lambda x. (P x) x)) ;)

(; dict ;)

def thm_170 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (P_2 x_1) ((x_3 : hol.term A => P_2 x_3) x_1)) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool ((x_3 : hol.term A => P_2 x_3) x_1) (P_2 x_1) (thm_169 A x_1 P_2).

(; Theorem: |- (P x) ;)

(; dict ;)

def thm_171 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (P_2 x_1) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => hyp_1.

(; Theorem: |- (\lambda x. (P x) x) ;)

(; dict ;)

def thm_172 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof ((x_3 : hol.term A => P_2 x_3) x_1) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => hol.EQ_MP (P_2 x_1) ((x_3 : hol.term A => P_2 x_3) x_1) (thm_170 A x_1 P_2) ((A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_171 A x_1 P_2 hyp_1) A x_1 P_2 hyp_1).

(; Theorem: |- ((= (= (Data.Bool.? P))) (= (Data.Bool.? P))) ;)

(; dict ;)

def thm_173 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)).

(; Theorem: |- ((= (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_174 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.BETA_CONV (hol.arr A hol.bool) hol.bool (p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1.

(; Theorem: |- ((= ((= (Data.Bool.? P)) (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P))) ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ;)

(; dict ;)

def thm_175 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (thm_173 A P_1) (thm_174 A P_1).

(; Theorem: |- ((= P) P) ;)

(; dict ;)

def thm_176 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) P_1 P_1) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr A hol.bool) P_1.

(; Theorem: |- ((= (Data.Bool.? P)) (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P)) ;)

(; dict ;)

def thm_177 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1 P_1 (thm_1 A) (thm_176 A P_1).

(; Theorem: |- ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_178 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) (thm_175 A P_1) (thm_177 A P_1).

(; Theorem: |- ((= (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) (Data.Bool.? P)) ;)

(; dict ;)

def thm_179 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (thm_178 A P_1).

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q)) ;)

(; dict ;)

def thm_180 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => hyp_1.

(; Theorem: |- ((Data.Bool.==> (P x)) Q) ;)

(; dict ;)

def thm_181 : A : hol.type -> Q_1 : hol.term hol.bool -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_1)) -> hol.proof (hol.imp (P_3 x_2) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_1)) => thm_180 A Q_1 P_3 hyp_1 x_2.

(; Theorem: |- Q ;)

(; dict ;)

def thm_182 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> Q_3 : hol.term hol.bool -> hyp_1 : hol.proof (P_2 x_1) -> hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) -> hol.proof Q_3 :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => Q_3 : hol.term hol.bool => hyp_1 : hol.proof (P_2 x_1) => hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) => thm_181 A Q_3 x_1 P_2 hyp_2 (thm_171 A x_1 P_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q) ;)

(; dict ;)

def thm_183 : A : hol.type -> x_1 : hol.term A -> Q_2 : hol.term hol.bool -> P_3 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_3 x_1) -> hol.proof (hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_2)) Q_2) :=
  A : hol.type => x_1 : hol.term A => Q_2 : hol.term hol.bool => P_3 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_3 x_1) => hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_2)) => thm_182 A x_1 P_3 Q_2 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda Q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q)) ;)

(; dict ;)

def thm_184 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (hol.forall hol.bool (Q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) Q_3)) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => Q_3 : hol.term hol.bool => thm_183 A x_1 Q_3 P_2 hyp_1.

(; Theorem: |- (Data.Bool.? P) ;)

(; dict ;)

def thm_185 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => hol.EQ_MP (hol.forall hol.bool (Q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) Q_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) (thm_179 A P_2) (thm_184 A x_1 P_2 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda x. (P x)) ;)

(; dict ;)

def thm_186 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof ((x_3 : hol.term A => P_2 x_3) x_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof ((x_3 : hol.term A => P_2 x_3) x_1) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_185 A x_1 P_2 hyp_1) A x_1 (x_3 : hol.term A => P_2 x_3) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda x. (P x)) ;)

(; dict ;)

def thm_187 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => hol.PROVE_HYP ((x_3 : hol.term A => P_2 x_3) x_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) (thm_172 A x_1 P_2 hyp_1) (hyp_2 : hol.proof ((x_3 : hol.term A => P_2 x_3) x_1) => thm_186 A x_1 P_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) Q) ;)

(; dict ;)

def thm_188 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1) => hyp_1.

(; Theorem: |- (Data.Bool.? \lambda x. (P x)) ;)

(; dict ;)

def thm_189 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) => hyp_1.

(; Theorem: |- Q ;)

(; dict ;)

def thm_190 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_1 x_3)) -> hyp_2 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_1 x_3)) Q_2) -> hol.proof Q_2 :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_1 x_3)) => hyp_2 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_1 x_3)) Q_2) => thm_188 A Q_2 P_1 hyp_2 (thm_189 A P_1 hyp_1).

(; Theorem: |- Q ;)

(; dict ;)

def thm_191 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> Q_3 : hol.term hol.bool -> hyp_1 : hol.proof (P_2 x_1) -> hyp_2 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_4 : hol.term A => P_2 x__1_4)) Q_3) -> hol.proof Q_3 :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => Q_3 : hol.term hol.bool => hyp_1 : hol.proof (P_2 x_1) => hyp_2 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_4 : hol.term A => P_2 x__1_4)) Q_3) => hol.PROVE_HYP (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => P_2 x_4)) Q_3 (thm_187 A x_1 P_2 hyp_1) (hyp_3 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_4 : hol.term A => P_2 x_4)) => (A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_1 x_3)) => hyp_2 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_1 x_3)) Q_2) => thm_190 A P_1 Q_2 hyp_1 hyp_2) A P_2 Q_3 hyp_3 hyp_2).

(; Theorem: |- ((Data.Bool.==> (P x)) Q) ;)

(; dict ;)

def thm_192 : A : hol.type -> Q_1 : hol.term hol.bool -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_4 : hol.term A => P_3 x__1_4)) Q_1) -> hol.proof (hol.imp (P_3 x_2) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_4 : hol.term A => P_3 x__1_4)) Q_1) => hyp_2 : hol.proof (P_3 x_2) => thm_191 A x_2 P_3 Q_1 hyp_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q)) ;)

(; dict ;)

def thm_193 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_3 : hol.term A => P_2 x__1_3)) Q_1) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_3 : hol.term A => P_2 x__1_3)) Q_1) => x_3 : hol.term A => thm_192 A Q_1 x_3 P_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) Q)) (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ;)

(; dict ;)

def thm_194 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1) (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1))) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1) => hol.EQ_MP (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (thm_168 A Q_1 P_2) (thm_193 A Q_1 P_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ((Data.Bool.==> (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ;)

(; dict ;)

def thm_195 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_63 q_1 p_2) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_196 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => thm_195 A P_1 (thm_178 A P_1).

(; Theorem: |- (Data.Bool.? P) ;)

(; dict ;)

def thm_197 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)) ;)

(; dict ;)

def thm_198 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => thm_196 A P_1 (thm_197 A P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q) ;)

(; dict ;)

def thm_199 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) => thm_198 A P_2 hyp_1 Q_1.

(; Theorem: |- Q ;)

(; dict ;)

def thm_200 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) Q_2)) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof Q_2 :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) Q_2)) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => thm_199 A Q_2 P_1 hyp_2 (thm_180 A Q_2 P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? P)) Q) ;)

(; dict ;)

def thm_201 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) => thm_200 A P_2 Q_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ((Data.Bool.==> (Data.Bool.? P)) Q)) ;)

(; dict ;)

def thm_202 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => thm_201 A Q_1 P_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. (P x) x)) Q))) ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) Q)) ;)

(; dict ;)

def thm_203 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp ((x_4 : hol.term A => P_2 x_4) x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_202 A Q_1 P_2) A Q_1 (x_3 : hol.term A => P_2 x_3).

(; Theorem: |- (\lambda x. (P x) x) ;)

(; dict ;)

def thm_204 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof ((x_3 : hol.term A => P_2 x_3) x_1) -> hol.proof ((x_3 : hol.term A => P_2 x_3) x_1) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof ((x_3 : hol.term A => P_2 x_3) x_1) => hyp_1.

(; Theorem: |- (P x) ;)

(; dict ;)

def thm_205 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof ((x_3 : hol.term A => P_2 x_3) x_1) -> hol.proof (P_2 x_1) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof ((x_3 : hol.term A => P_2 x_3) x_1) => hol.EQ_MP ((x_3 : hol.term A => P_2 x_3) x_1) (P_2 x_1) (thm_169 A x_1 P_2) (thm_204 A x_1 P_2 hyp_1).

(; Theorem: |- Q ;)

(; dict ;)

def thm_206 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> Q_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) -> hyp_2 : hol.proof ((x_4 : hol.term A => P_2 x_4) x_1) -> hol.proof Q_3 :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => Q_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) => hyp_2 : hol.proof ((x_4 : hol.term A => P_2 x_4) x_1) => thm_181 A Q_3 x_1 P_2 hyp_1 (thm_205 A x_1 P_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> (\lambda x. (P x) x)) Q) ;)

(; dict ;)

def thm_207 : A : hol.type -> Q_1 : hol.term hol.bool -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_1)) -> hol.proof (hol.imp ((x_4 : hol.term A => P_3 x_4) x_2) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_1)) => hyp_2 : hol.proof ((x_4 : hol.term A => P_3 x_4) x_2) => thm_206 A x_2 P_3 Q_1 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda x. (P x) x)) Q)) ;)

(; dict ;)

def thm_208 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.imp ((x_4 : hol.term A => P_2 x_4) x_3) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => x_3 : hol.term A => thm_207 A Q_1 x_3 P_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) Q) ;)

(; dict ;)

def thm_209 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => thm_203 A Q_1 P_2 (thm_208 A Q_1 P_2 hyp_1).

(; Theorem: |- Q ;)

(; dict ;)

def thm_210 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) Q_2)) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_1 x_3)) -> hol.proof Q_2 :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) Q_2)) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_1 x_3)) => thm_209 A Q_2 P_1 hyp_1 (thm_189 A P_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) Q)) ;)

(; dict ;)

def thm_211 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) => thm_210 A P_2 Q_1 hyp_1 hyp_2.

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) Q)) ;)

(; dict ;)

def thm_212 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hol.PROP_EXT (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1) (hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1) => thm_194 A Q_1 P_2 (thm_188 A Q_1 P_2 hyp_1)) (hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => thm_211 A Q_1 P_2 (thm_180 A Q_1 P_2 hyp_1)).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) ((= (P (select P))) Data.Bool.T)))) ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) ((= (P (select P))) Data.Bool.T))) ;)

(; dict ;)

def thm_213 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => hol.imp (P_1 x_2) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (hol.forall A (x__1_3 : hol.term A => hol.imp (P_2 x__1_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x__1_3 : hol.term A => P_2 x__1_3)) Q_1)) (hol.eq hol.bool (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_3 : hol.term A => P_2 x_3)) Q_1)) (thm_164 A Q_1 P_2) ((A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_212 A Q_1 P_2) A Q_1 P_2)) A Q_1 P_2) A (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true) P_1.

(; Theorem: |- ((= ((Data.Bool.==> (P x)) ((= (P (select P))) Data.Bool.T))) ((Data.Bool.==> (P x)) ((= (P (select P))) Data.Bool.T))) ;)

(; dict ;)

def thm_214 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (P_2 x_1) (hol.eq hol.bool (P_2 (hol.select A P_2)) hol.true)) (hol.imp (P_2 x_1) (hol.eq hol.bool (P_2 (hol.select A P_2)) hol.true))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.imp (P_2 x_1) (hol.eq hol.bool (P_2 (hol.select A P_2)) hol.true)).

(; Theorem: |- ((= t) Data.Bool.T) ;)

(; dict ;)

def thm_215 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof (hol.eq hol.bool t_1 hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hyp_1.

(; Theorem: |- ((= Data.Bool.T) t) ;)

(; dict ;)

def thm_216 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof (hol.eq hol.bool hol.true t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hol.SYM hol.bool t_1 hol.true (thm_215 t_1 hyp_1).

(; Theorem: |- t ;)

(; dict ;)

def thm_217 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof t_1 :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hol.EQ_MP hol.true t_1 (thm_216 t_1 hyp_1) thm_2.

(; Theorem: |- t ;)

(; dict ;)

def thm_218 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof t_1 -> hol.proof t_1 :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof t_1 => hyp_1.

(; Theorem: |- ((= t) Data.Bool.T) ;)

(; dict ;)

def thm_219 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof t_1 -> hol.proof (hol.eq hol.bool t_1 hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof t_1 => hol.PROP_EXT t_1 hol.true (hyp_2 : hol.proof hol.true => thm_218 t_1 hyp_1) (hyp_2 : hol.proof t_1 => thm_2).

(; Theorem: |- ((= t) ((= t) Data.Bool.T)) ;)

(; dict ;)

def thm_220 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool t_1 (hol.eq hol.bool t_1 hol.true)) :=
  t_1 : hol.term hol.bool => hol.PROP_EXT t_1 (hol.eq hol.bool t_1 hol.true) (hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => thm_217 t_1 hyp_1) (hyp_1 : hol.proof t_1 => thm_219 t_1 hyp_1).

(; Theorem: |- ((= (P (select P))) ((= (P (select P))) Data.Bool.T)) ;)

(; dict ;)

def thm_221 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (P_1 (hol.select A P_1)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (t_1 : hol.term hol.bool => thm_220 t_1) (P_1 (hol.select A P_1)).

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) (P (select P)))) ;)

(; dict ;)

def thm_222 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.forall A (x_2 : hol.term A => hol.imp (P_1 x_2) (P_1 (hol.select A P_1)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => thm_3 A P_1.

(; Theorem: |- ((Data.Bool.==> (P x)) (P (select P))) ;)

(; dict ;)

def thm_223 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (P_2 x_1) (P_2 (hol.select A P_2))) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => thm_222 A P_2 x_1.

(; Theorem: |- (P (select P)) ;)

(; dict ;)

def thm_224 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (P_2 (hol.select A P_2)) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_223 A x_1 P_2 (thm_171 A x_1 P_2 hyp_1).

(; Theorem: |- ((= (P (select P))) Data.Bool.T) ;)

(; dict ;)

def thm_225 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (hol.eq hol.bool (P_2 (hol.select A P_2)) hol.true) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => hol.EQ_MP (P_2 (hol.select A P_2)) (hol.eq hol.bool (P_2 (hol.select A P_2)) hol.true) (thm_221 A P_2) (thm_224 A x_1 P_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> (P x)) ((= (P (select P))) Data.Bool.T)) ;)

(; dict ;)

def thm_226 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (P_2 x_1) (hol.eq hol.bool (P_2 (hol.select A P_2)) hol.true)) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_225 A x_1 P_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) ((= (P (select P))) Data.Bool.T))) ;)

(; dict ;)

def thm_227 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.forall A (x_2 : hol.term A => hol.imp (P_1 x_2) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => x_2 : hol.term A => hol.EQ_MP (hol.imp (P_1 x_2) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) (hol.imp (P_1 x_2) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) (thm_214 A x_2 P_1) (thm_226 A x_2 P_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x. (P x))) ((= (P (select P))) Data.Bool.T)) ;)

(; dict ;)

def thm_228 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.forall A (x_2 : hol.term A => hol.imp (P_1 x_2) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) (thm_213 A P_1) (thm_227 A P_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda x. (p x))) ((= (p (select p))) Data.Bool.T)) ;)

(; dict ;)

def thm_229 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2)) (hol.eq hol.bool (p_1 (hol.select A p_1)) hol.true)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => (A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => P_1 x_2)) (hol.eq hol.bool (P_1 (hol.select A P_1)) hol.true)) (thm_162 A P_1) (thm_228 A P_1)) A P_1) A p_1.

(; Theorem: |- ((= Data.Bool.?) Data.Bool.?) ;)

(; dict ;)

def thm_230 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)).

(; Theorem: |- ((= \lambda x. (t x)) t) ;)

(; dict ;)

def thm_231 : B : hol.type -> A : hol.type -> t_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A B) (x_2 : hol.term A => t_1 x_2) t_1) :=
  B : hol.type => A : hol.type => t_1 : hol.term (hol.arr A B) => thm_4 B A t_1.

(; Theorem: |- ((= \lambda x. (t x)) t) ;)

(; dict ;)

def thm_232 : A : hol.type -> t_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_2 : hol.term A => t_1 x_2) t_1) :=
  A : hol.type => t_1 : hol.term (hol.arr A hol.bool) => (B : hol.type => A : hol.type => t_1 : hol.term (hol.arr A B) => thm_231 B A t_1) hol.bool A t_1.

(; Theorem: |- ((= \lambda x. (p x)) p) ;)

(; dict ;)

def thm_233 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (x_2 : hol.term A => p_1 x_2) p_1) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => (A : hol.type => t_1 : hol.term (hol.arr A hol.bool) => thm_232 A t_1) A p_1.

(; Theorem: |- ((= (Data.Bool.? \lambda x. (p x))) (Data.Bool.? p)) ;)

(; dict ;)

def thm_234 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (x_2 : hol.term A => p_1 x_2) p_1 (thm_230 A) (thm_233 A p_1).

(; Theorem: |- ((= ((= (Data.Bool.? p)) Data.Bool.T)) ((= (Data.Bool.? p)) Data.Bool.T)) ;)

(; dict ;)

def thm_235 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.REFL hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true).

(; Theorem: |- ((= ((= (Data.Bool.? p)) Data.Bool.T)) ((= (Data.Bool.? p)) Data.Bool.T)) ;)

(; dict ;)

def thm_236 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) (thm_235 A p_1) (thm_235 A p_1).

(; Theorem: |- ((= (Data.Bool.? p)) ((= (Data.Bool.? p)) Data.Bool.T)) ;)

(; dict ;)

def thm_237 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => (t_1 : hol.term hol.bool => thm_220 t_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1).

(; Theorem: |- (Data.Bool.? p) ;)

(; dict ;)

def thm_238 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) => hyp_1.

(; Theorem: |- ((= (Data.Bool.? p)) Data.Bool.T) ;)

(; dict ;)

def thm_239 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) => hol.EQ_MP (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) (thm_237 A p_1) (thm_238 A p_1 hyp_1).

(; Theorem: |- ((= (Data.Bool.? \lambda x. (p x))) Data.Bool.T) ;)

(; dict ;)

def thm_240 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2)) hol.true) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) => hol.TRANS hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true (thm_234 A p_1) (hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) (thm_236 A p_1) (thm_239 A p_1 hyp_1)).

(; Theorem: |- ((= Data.Bool.T) (Data.Bool.? \lambda x. (p x))) ;)

(; dict ;)

def thm_241 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) -> hol.proof (hol.eq hol.bool hol.true (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) => hol.SYM hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2)) hol.true (thm_240 A p_1 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda x. (p x)) ;)

(; dict ;)

def thm_242 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) => hol.EQ_MP hol.true (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (x_2 : hol.term A => p_1 x_2)) (thm_241 A p_1 hyp_1) thm_2.

(; Theorem: |- ((= (p (select p))) Data.Bool.T) ;)

(; dict ;)

def thm_243 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) -> hol.proof (hol.eq hol.bool (p_1 (hol.select A p_1)) hol.true) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) => thm_229 A p_1 (thm_242 A p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? p)) ((= (p (select p))) Data.Bool.T)) ;)

(; dict ;)

def thm_244 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (hol.eq hol.bool (p_1 (hol.select A p_1)) hol.true)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) => thm_243 A p_1 hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) ((Data.Bool.==> (Data.Bool.? p)) Data.Bool.T)) ;)

(; dict ;)

def thm_245 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true)) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_160 A p_1 (thm_244 A p_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_246 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ;)

(; dict ;)

def thm_247 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (thm_246 t_1) (thm_246 t_1).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_248 : hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.forall hol.bool) (hol.forall hol.bool)) :=
  hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.forall hol.bool).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_249 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_250 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) thm_249 thm_249.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))))) ;)

(; dict ;)

def thm_251 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) thm_248 thm_250.

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_252 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_253 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (thm_252 t_1) (thm_252 t_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_254 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_5 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_255 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_96 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_256 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) (hol.EQ_MP (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (thm_253 t_1) (thm_254 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.true t_1) t_1) => thm_255 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_257 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) :=
  t_1 : hol.term hol.bool => thm_6 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_258 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_96 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_259 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (thm_246 t_1) (thm_257 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) => thm_258 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_260 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_261 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (thm_260 t_1) (thm_260 t_1).

(; Theorem: |- ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T) ;)

(; dict ;)

def thm_262 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) :=
  t_1 : hol.term hol.bool => thm_7 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_263 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_96 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_264 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (thm_261 t_1) (thm_262 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) => thm_263 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_265 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_266 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_265 t_1) (thm_265 t_1).

(; Theorem: |- ((= \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_267 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true).

(; Theorem: |- ((= \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_268 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) thm_267 thm_267.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T))) (Data.Bool.! \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T))) ;)

(; dict ;)

def thm_269 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true) thm_248 thm_268.

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_270 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) (hol.eq hol.bool) (hol.eq hol.bool)) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) (hol.eq hol.bool).

(; Theorem: |- ((= ((Data.Bool.==> t) t)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_271 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => (t_1 : hol.term hol.bool => thm_220 t_1) (hol.imp t_1 t_1).

(; Theorem: |- ((Data.Bool.==> t) t) ;)

(; dict ;)

def thm_272 : t_1 : hol.term hol.bool -> hol.proof (hol.imp t_1 t_1) :=
  t_1 : hol.term hol.bool => thm_8 t_1.

(; Theorem: |- ((= ((Data.Bool.==> t) t)) Data.Bool.T) ;)

(; dict ;)

def thm_273 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.imp t_1 t_1) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_271 t_1) (thm_272 t_1).

(; Theorem: |- ((= (= ((Data.Bool.==> t) t))) (= Data.Bool.T)) ;)

(; dict ;)

def thm_274 : t_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.imp t_1 t_1)) (hol.eq hol.bool hol.true)) :=
  t_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) (hol.eq hol.bool) (hol.eq hol.bool) (hol.imp t_1 t_1) hol.true thm_270 (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_265 t_1) (thm_273 t_1)).

(; Theorem: |- ((= Data.Bool.T) Data.Bool.T) ;)

(; dict ;)

def thm_275 : hol.proof (hol.eq hol.bool hol.true hol.true) :=
  hol.REFL hol.bool hol.true.

(; Theorem: |- ((= ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= Data.Bool.T) Data.Bool.T)) ;)

(; dict ;)

def thm_276 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool hol.true hol.true)) :=
  t_1 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.imp t_1 t_1)) (hol.eq hol.bool hol.true) hol.true hol.true (thm_274 t_1) thm_275.

(; Theorem: |- ((= ((= Data.Bool.T) Data.Bool.T)) ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_277 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.SYM hol.bool (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool hol.true hol.true) (thm_276 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ;)

(; dict ;)

def thm_278 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_1 t_1) hol.true)) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool hol.true hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_277 t_1) thm_275.

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_279 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_96 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) hyp_1.

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_280 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (thm_266 t_1) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_2 t_2) hol.true)) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.eq hol.bool (hol.imp t_2 t_2) hol.true)) thm_269 thm_278 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) => thm_279 t_1 hyp_1).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_281 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)).

(; Theorem: |- ((= ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_282 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (thm_281 t_1) (thm_281 t_1).

(; Theorem: |- ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_283 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => thm_9 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_284 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (thm_280 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)) (thm_282 t_1) (thm_283 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_285 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (thm_264 t_1) (thm_284 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_286 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (thm_259 t_1) (thm_285 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_287 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (thm_256 t_1) (thm_286 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_288 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))))) :=
  t_1 : hol.term hol.bool => thm_287 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_289 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_88 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> Data.Bool.F) t)) Data.Bool.T)) ((Data.Bool./\ ((= ((Data.Bool.==> t) t)) Data.Bool.T)) ((= ((Data.Bool.==> t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_290 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.imp t_2 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_2) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_2 t_2) hol.true) (hol.eq hol.bool (hol.imp t_2 hol.false) (hol.not t_2))))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.imp hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.imp t_2 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_2) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_2 t_2) hol.true) (hol.eq hol.bool (hol.imp t_2 hol.false) (hol.not t_2))))))) thm_251 thm_288 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))))) => thm_289 t_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) p))) p) ;)

(; dict ;)

def thm_291 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.imp (hol.imp p_2 (hol.imp q_1 p_2)) p_2) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_81 q_1 p_2 hyp_1 p_2.

(; Theorem: |- ((= q) p) ;)

(; dict ;)

def thm_292 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof q_2 -> hol.proof (hol.eq hol.bool q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => hol.SYM hol.bool p_1 q_2 (thm_84 q_2 p_1 hyp_1 hyp_2).

(; Theorem: |- p ;)

(; dict ;)

def thm_293 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof p_2 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.EQ_MP q_1 p_2 (thm_292 p_2 q_1 hyp_1 hyp_2) (thm_83 q_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> q) p) ;)

(; dict ;)

def thm_294 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.imp q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => thm_293 q_2 p_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) p)) ;)

(; dict ;)

def thm_295 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp p_2 (hol.imp q_1 p_2)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => thm_294 p_2 q_1 hyp_1.

(; Theorem: |- p ;)

(; dict ;)

def thm_296 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof p_2 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_291 q_1 p_2 hyp_1 (thm_295 q_1 p_2).

(; Theorem: |- ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_297 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) -> hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_296 q_1 p_2 hyp_1) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1)))) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) hyp_1.

(; Theorem: |- ((= ((Data.Bool.==> t) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_298 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (thm_290 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.and (hol.eq hol.bool (hol.imp hol.false t_1) hol.true) (hol.and (hol.eq hol.bool (hol.imp t_1 t_1) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.false) (hol.not t_1))))) => thm_297 t_1 hyp_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? p)) Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_299 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) hol.true) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (hol.eq hol.bool (hol.imp t_1 hol.true) hol.true) (thm_247 t_1) (thm_298 t_1)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1).

(; Theorem: |- ((= ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) Data.Bool.T) ;)

(; dict ;)

def thm_300 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) hol.true) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.TRANS hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) hol.true) hol.true (thm_245 A p_1) (thm_299 A p_1).

(; Theorem: |- ((= Data.Bool.T) ((Data.Bool.==> (Data.Bool.? p)) (p (select p)))) ;)

(; dict ;)

def thm_301 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool hol.true (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1)))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) hol.true (thm_300 A p_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? p)) (p (select p))) ;)

(; dict ;)

def thm_302 : A : hol.type -> p_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) :=
  A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP hol.true (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_1) (p_1 (hol.select A p_1))) (thm_301 A p_1) thm_2.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n)))))))) (\lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n)))))) (select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))))))) ;)

(; dict ;)

def thm_303 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))) ((fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))))) :=
  (A : hol.type => p_1 : hol.term (hol.arr A hol.bool) => thm_302 A p_1) (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))).

(; Theorem: |- ((= Data.Bool.?) Data.Bool.?) ;)

(; dict ;)

def thm_304 : hol.proof (hol.eq (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) hol.bool) hol.bool))) :=
  hol.REFL (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) hol.bool) hol.bool)).

(; Theorem: |- ((= (Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero)))) (Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero)))) ;)

(; dict ;)

def thm_305 : fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))) :=
  fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))).

(; Theorem: |- ((= (= (fn (Number.Natural.suc n)))) (= (fn (Number.Natural.suc n)))) ;)

(; dict ;)

def thm_306 : n_1 : hol.term Number_2ENatural_2Enatural -> fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1))) (hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.REFL (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1))).

(; Theorem: |- ((= (\lambda m. \lambda n. (Number.Natural.suc (Number.Natural.suc m)) (fn n))) \lambda n_1. (Number.Natural.suc (Number.Natural.suc (fn n)))) ;)

(; dict ;)

def thm_307 : n_1 : hol.term Number_2ENatural_2Enatural -> fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) ((m_3 : hol.term Number_2ENatural_2Enatural => n_4 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_3)) (fn_2 n_1)) (n__1_3 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.BETA_CONV Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (m_3 : hol.term Number_2ENatural_2Enatural => n_4 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_3)) (fn_2 n_1).

(; Theorem: |- ((= ((\lambda m. \lambda n. (Number.Natural.suc (Number.Natural.suc m)) (fn n)) n)) (\lambda n_1. (Number.Natural.suc (Number.Natural.suc (fn n))) n)) ;)

(; dict ;)

def thm_308 : n_1 : hol.term Number_2ENatural_2Enatural -> fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) -> hol.proof (hol.eq Number_2ENatural_2Enatural ((m_3 : hol.term Number_2ENatural_2Enatural => n_4 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_3)) (fn_2 n_1) n_1) ((n__1_3 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_1))) n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.APP_THM Number_2ENatural_2Enatural Number_2ENatural_2Enatural ((m_3 : hol.term Number_2ENatural_2Enatural => n_4 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_3)) (fn_2 n_1)) (n__1_3 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_1))) n_1 n_1 (thm_307 n_1 fn_2) (thm_36 n_1).

(; Theorem: |- ((= (\lambda n'. (Number.Natural.suc (Number.Natural.suc (fn n))) n)) (Number.Natural.suc (Number.Natural.suc (fn n)))) ;)

(; dict ;)

def thm_309 : n_1 : hol.term Number_2ENatural_2Enatural -> fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) -> hol.proof (hol.eq Number_2ENatural_2Enatural ((n_27_3 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_1))) n_1) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.BETA_CONV Number_2ENatural_2Enatural Number_2ENatural_2Enatural (n_27_3 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_1))) n_1.

(; Theorem: |- ((= ((\lambda m. \lambda n. (Number.Natural.suc (Number.Natural.suc m)) (fn n)) n)) (Number.Natural.suc (Number.Natural.suc (fn n)))) ;)

(; dict ;)

def thm_310 : n_1 : hol.term Number_2ENatural_2Enatural -> fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) -> hol.proof (hol.eq Number_2ENatural_2Enatural ((m_3 : hol.term Number_2ENatural_2Enatural => n_4 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_3)) (fn_2 n_1) n_1) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.TRANS Number_2ENatural_2Enatural ((m_3 : hol.term Number_2ENatural_2Enatural => n_4 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_3)) (fn_2 n_1) n_1) ((n__1_3 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_1))) n_1) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_1))) (thm_308 n_1 fn_2) (thm_309 n_1 fn_2).

(; Theorem: |- ((= ((= (fn (Number.Natural.suc n))) ((\lambda m. \lambda n. (Number.Natural.suc (Number.Natural.suc m)) (fn n)) n))) ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))) ;)

(; dict ;)

def thm_311 : n_1 : hol.term Number_2ENatural_2Enatural -> fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) ((m_3 : hol.term Number_2ENatural_2Enatural => n_4 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_3)) (fn_2 n_1) n_1)) (hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_1))))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.APP_THM Number_2ENatural_2Enatural hol.bool (hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1))) (hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1))) ((m_3 : hol.term Number_2ENatural_2Enatural => n_4 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_3)) (fn_2 n_1) n_1) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_1))) (thm_306 n_1 fn_2) (thm_310 n_1 fn_2).

(; Theorem: |- ((= \lambda n. ((= (fn (Number.Natural.suc n))) ((\lambda m. \lambda n. (Number.Natural.suc (Number.Natural.suc m)) (fn n)) n))) \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))) ;)

(; dict ;)

def thm_312 : fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) ((m_3 : hol.term Number_2ENatural_2Enatural => n_4 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_3)) (fn_1 n_2) n_2)) (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))) :=
  fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.ABS_THM Number_2ENatural_2Enatural hol.bool (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) ((m_3 : hol.term Number_2ENatural_2Enatural => n_4 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_3)) (fn_1 n_2) n_2)) (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))) (n_2 : hol.term Number_2ENatural_2Enatural => thm_311 n_2 fn_1).

(; Theorem: |- ((= (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((\lambda m. \lambda n. (Number.Natural.suc (Number.Natural.suc m)) (fn n)) n)))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n)))))) ;)

(; dict ;)

def thm_313 : fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) ((m_3 : hol.term Number_2ENatural_2Enatural => n_4 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_3)) (fn_1 n_2) n_2))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))) :=
  fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) ((m_3 : hol.term Number_2ENatural_2Enatural => n_4 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_3)) (fn_1 n_2) n_2)) (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))) thm_31 (thm_312 fn_1).

(; Theorem: |- ((= ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((\lambda m. \lambda n. (Number.Natural.suc (Number.Natural.suc m)) (fn n)) n))))) ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))))) ;)

(; dict ;)

def thm_314 : fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) ((m_3 : hol.term Number_2ENatural_2Enatural => n_4 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_3)) (fn_1 n_2) n_2)))) (hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))) :=
  fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) ((m_3 : hol.term Number_2ENatural_2Enatural => n_4 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_3)) (fn_1 n_2) n_2))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))) (thm_305 fn_1) (thm_313 fn_1).

(; Theorem: |- ((= \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((\lambda m. \lambda n. (Number.Natural.suc (Number.Natural.suc m)) (fn n)) n))))) \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))))) ;)

(; dict ;)

def thm_315 : hol.proof (hol.eq (hol.arr (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) hol.bool) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) ((m_3 : hol.term Number_2ENatural_2Enatural => n_4 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_3)) (fn_1 n_2) n_2)))) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))) :=
  hol.ABS_THM (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) hol.bool (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) ((m_3 : hol.term Number_2ENatural_2Enatural => n_4 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_3)) (fn_1 n_2) n_2)))) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => thm_314 fn_1).

(; Theorem: |- ((= (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((\lambda m. \lambda n. (Number.Natural.suc (Number.Natural.suc m)) (fn n)) n)))))) (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n)))))))) ;)

(; dict ;)

def thm_316 : hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) ((m_3 : hol.term Number_2ENatural_2Enatural => n_4 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_3)) (fn_1 n_2) n_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))))) :=
  hol.APP_THM (hol.arr (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) hol.bool) hol.bool)) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) ((m_3 : hol.term Number_2ENatural_2Enatural => n_4 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_3)) (fn_1 n_2) n_2)))) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))) thm_304 thm_315.

(; Theorem: |- ((Data.Bool.==> ((= (Data.Bool.?! P)) ((Data.Bool./\ (Data.Bool.? P)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))))) ((Data.Bool.==> (Data.Bool.?! P)) ((Data.Bool./\ (Data.Bool.? P)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))))) ;)

(; dict ;)

def thm_317 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) (hol.imp (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_63 q_1 p_2) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1).

(; Theorem: |- ((= (= (Data.Bool.?! P))) (= (Data.Bool.?! P))) ;)

(; dict ;)

def thm_318 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)).

(; Theorem: |- ((= (\lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))) P)) ((Data.Bool./\ (Data.Bool.? P)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))))) ;)

(; dict ;)

def thm_319 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) P_1) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.BETA_CONV (hol.arr A hol.bool) hol.bool (p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) P_1.

(; Theorem: |- ((= ((= (Data.Bool.?! P)) (\lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))) P))) ((= (Data.Bool.?! P)) ((Data.Bool./\ (Data.Bool.? P)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))))) ;)

(; dict ;)

def thm_320 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) P_1) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) (thm_318 A P_1) (thm_319 A P_1).

(; Theorem: |- ((= (Data.Bool.?! P)) (\lambda p. ((Data.Bool./\ (Data.Bool.? p)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (p x)) (p y))) ((= x) y))))) P)) ;)

(; dict ;)

def thm_321 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) P_1)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool)) (p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) P_1 P_1 (thm_10 A) (thm_176 A P_1).

(; Theorem: |- ((= (Data.Bool.?! P)) ((Data.Bool./\ (Data.Bool.? P)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))))) ;)

(; dict ;)

def thm_322 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) p_2) (hol.forall A (x_3 : hol.term A => hol.forall A (y_4 : hol.term A => hol.imp (hol.and (p_2 x_3) (p_2 y_4)) (hol.eq A x_3 y_4))))) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) (thm_320 A P_1) (thm_321 A P_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.?! P)) ((Data.Bool./\ (Data.Bool.? P)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y)))))) ;)

(; dict ;)

def thm_323 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => thm_317 A P_1 (thm_322 A P_1).

(; Theorem: |- (Data.Bool.?! P) ;)

(; dict ;)

def thm_324 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.? P)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ (P x)) (P y))) ((= x) y))))) ;)

(; dict ;)

def thm_325 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => thm_323 A P_1 (thm_324 A P_1 hyp_1).

(; Theorem: |- (Data.Bool.? P) ;)

(; dict ;)

def thm_326 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_296 q_1 p_2 hyp_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3)))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) hyp_1.

(; Theorem: |- (Data.Bool.? P) ;)

(; dict ;)

def thm_327 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => hol.PROVE_HYP (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (thm_325 A P_1 hyp_1) (hyp_2 : hol.proof (hol.and (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall A (x_2 : hol.term A => hol.forall A (y_3 : hol.term A => hol.imp (hol.and (P_1 x_2) (P_1 y_3)) (hol.eq A x_2 y_3))))) => thm_326 A P_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.?! P)) (Data.Bool.? P)) ;)

(; dict ;)

def thm_328 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F_21 (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => thm_327 A P_1 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.?! \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) e)) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((f (fn n)) n)))))) (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) e)) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((f (fn n)) n)))))) ;)

(; dict ;)

def thm_329 : A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) -> e_2 : hol.term A -> hol.proof (hol.imp (Data_2EBool_2E_3F_21 (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) e_2) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_1 (fn_3 n_4) n_4))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) e_2) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_1 (fn_3 n_4) n_4)))))) :=
  A : hol.type => f_1 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => e_2 : hol.term A => (A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => thm_328 A P_1) (hol.arr Number_2ENatural_2Enatural A) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) e_2) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_1 (fn_3 n_4) n_4)))).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_330 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) hol.bool) hol.bool) (hol.forall (hol.arr A (hol.arr Number_2ENatural_2Enatural A))) (hol.forall (hol.arr A (hol.arr Number_2ENatural_2Enatural A)))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) hol.bool) hol.bool) (hol.forall (hol.arr A (hol.arr Number_2ENatural_2Enatural A))).

(; Theorem: |- ((= Data.Bool.?!) Data.Bool.?!) ;)

(; dict ;)

def thm_331 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool)) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool)).

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_332 : A : hol.type -> hol.proof (hol.eq (hol.arr A (hol.arr A hol.bool)) (hol.eq A) (hol.eq A)) :=
  A : hol.type => hol.REFL (hol.arr A (hol.arr A hol.bool)) (hol.eq A).

(; Theorem: |- ((= fn) fn) ;)

(; dict ;)

def thm_333 : A : hol.type -> fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural A) fn_1 fn_1) :=
  A : hol.type => fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.REFL (hol.arr Number_2ENatural_2Enatural A) fn_1.

(; Theorem: |- ((= ((= Number.Natural.zero) (Unwanted.id Number.Natural.zero))) ((= Number.Natural.zero) (Unwanted.id Number.Natural.zero))) ;)

(; dict ;)

def thm_334 : hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) :=
  hol.REFL hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))).

(; Theorem: |- ((= ((= Number.Natural.zero) (Unwanted.id Number.Natural.zero))) ((= Number.Natural.zero) (Unwanted.id Number.Natural.zero))) ;)

(; dict ;)

def thm_335 : hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) :=
  hol.TRANS hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) thm_334 thm_334.

(; Theorem: |- ((= (= Number.Natural.zero)) (= Number.Natural.zero)) ;)

(; dict ;)

def thm_336 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) :=
  hol.REFL (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)).

(; Theorem: |- ((= ((= (Unwanted.id n)) n)) ((= (Unwanted.id n)) n)) ;)

(; dict ;)

def thm_337 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1) (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.REFL hol.bool (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1).

(; Theorem: |- ((= ((= (Unwanted.id n)) n)) ((= (Unwanted.id n)) n)) ;)

(; dict ;)

def thm_338 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1) (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1) (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1) (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1) (thm_337 n_1) (thm_337 n_1).

(; Theorem: |- ((= ((= Unwanted.id) \lambda n. n)) ((= Unwanted.id) \lambda n. n)) ;)

(; dict ;)

def thm_339 : hol.proof (hol.eq hol.bool (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (n_1 : hol.term Number_2ENatural_2Enatural => n_1)) (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (n_1 : hol.term Number_2ENatural_2Enatural => n_1))) :=
  hol.REFL hol.bool (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (n_1 : hol.term Number_2ENatural_2Enatural => n_1)).

(; Theorem: |- ((= ((= Unwanted.id) \lambda n. n)) ((= Unwanted.id) \lambda n. n)) ;)

(; dict ;)

def thm_340 : hol.proof (hol.eq hol.bool (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (n_1 : hol.term Number_2ENatural_2Enatural => n_1)) (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (n_1 : hol.term Number_2ENatural_2Enatural => n_1))) :=
  hol.TRANS hol.bool (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (n_1 : hol.term Number_2ENatural_2Enatural => n_1)) (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (n_1 : hol.term Number_2ENatural_2Enatural => n_1)) (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (n_1 : hol.term Number_2ENatural_2Enatural => n_1)) thm_339 thm_339.

(; Theorem: |- ((= (Unwanted.id n)) (\lambda n. n n)) ;)

(; dict ;)

def thm_341 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) ((n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1 n_1 (hol.EQ_MP (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (n_2 : hol.term Number_2ENatural_2Enatural => n_2)) (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (n_2 : hol.term Number_2ENatural_2Enatural => n_2)) thm_340 thm_11) (thm_36 n_1).

(; Theorem: |- ((= (\lambda n. n n)) n) ;)

(; dict ;)

def thm_342 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural ((n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1) n_1) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.BETA_CONV Number_2ENatural_2Enatural Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1.

(; Theorem: |- ((= \lambda n. (\lambda n. n n)) \lambda n. n) ;)

(; dict ;)

def thm_343 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (n_1 : hol.term Number_2ENatural_2Enatural => (n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1) (n_1 : hol.term Number_2ENatural_2Enatural => n_1)) :=
  hol.ABS_THM Number_2ENatural_2Enatural Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => (n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1) (n_1 : hol.term Number_2ENatural_2Enatural => n_1) (n_1 : hol.term Number_2ENatural_2Enatural => thm_342 n_1).

(; Theorem: |- ((= (\lambda n. (\lambda n. n n) n)) (\lambda n. n n)) ;)

(; dict ;)

def thm_344 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural ((n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => n_3) n_2) n_1) ((n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => n_3) n_2) (n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1 n_1 thm_343 (thm_36 n_1).

(; Theorem: |- ((= (= (\lambda n. (\lambda n. n n) n))) (= (\lambda n. n n))) ;)

(; dict ;)

def thm_345 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural ((n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => n_3) n_2) n_1)) (hol.eq Number_2ENatural_2Enatural ((n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural) (hol.eq Number_2ENatural_2Enatural) ((n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => n_3) n_2) n_1) ((n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1) thm_16 (thm_344 n_1).

(; Theorem: |- ((= ((= (\lambda n. (\lambda n. n n) n)) (\lambda n. n n))) ((= (\lambda n. n n)) n)) ;)

(; dict ;)

def thm_346 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural ((n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => n_3) n_2) n_1) ((n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1)) (hol.eq Number_2ENatural_2Enatural ((n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1) n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural hol.bool (hol.eq Number_2ENatural_2Enatural ((n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => n_3) n_2) n_1)) (hol.eq Number_2ENatural_2Enatural ((n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1)) ((n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1) n_1 (thm_345 n_1) (thm_342 n_1).

(; Theorem: |- ((= (Unwanted.id n)) n) ;)

(; dict ;)

def thm_347 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) ((n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1) n_1 (thm_341 n_1) (hol.EQ_MP (hol.eq Number_2ENatural_2Enatural ((n_2 : hol.term Number_2ENatural_2Enatural => (n_3 : hol.term Number_2ENatural_2Enatural => n_3) n_2) n_1) ((n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1)) (hol.eq Number_2ENatural_2Enatural ((n_2 : hol.term Number_2ENatural_2Enatural => n_2) n_1) n_1) (thm_346 n_1) (thm_344 n_1)).

(; Theorem: |- ((= (= (Unwanted.id n))) (= n)) ;)

(; dict ;)

def thm_348 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (hol.eq Number_2ENatural_2Enatural n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural hol.bool) (hol.eq Number_2ENatural_2Enatural) (hol.eq Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1 thm_16 (thm_347 n_1).

(; Theorem: |- ((= ((= (Unwanted.id n)) n)) ((= n) n)) ;)

(; dict ;)

def thm_349 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1) (hol.eq Number_2ENatural_2Enatural n_1 n_1)) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural hol.bool (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (hol.eq Number_2ENatural_2Enatural n_1) n_1 n_1 (thm_348 n_1) (thm_36 n_1).

(; Theorem: |- ((= ((= ((= x) x)) Data.Bool.T)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_350 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true).

(; Theorem: |- ((= ((= ((= x) x)) Data.Bool.T)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_351 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_350 A x_1) (thm_350 A x_1).

(; Theorem: |- ((= \lambda x. ((= ((= x) x)) Data.Bool.T)) \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_352 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => hol.REFL (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true).

(; Theorem: |- ((= \lambda x. ((= ((= x) x)) Data.Bool.T)) \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_353 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => hol.TRANS (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_352 A) (thm_352 A).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T))) (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T))) ;)

(; dict ;)

def thm_354 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true))) :=
  A : hol.type => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_165 A) (thm_353 A).

(; Theorem: |- ((= ((= x) x)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_355 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_1 x_1) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => (t_1 : hol.term hol.bool => thm_220 t_1) (hol.eq A x_1 x_1).

(; Theorem: |- ((= x) x) ;)

(; dict ;)

def thm_356 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq A x_1 x_1) :=
  A : hol.type => x_1 : hol.term A => thm_12 A x_1.

(; Theorem: |- ((= ((= x) x)) Data.Bool.T) ;)

(; dict ;)

def thm_357 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) :=
  A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq A x_1 x_1) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_355 A x_1) (thm_356 A x_1).

(; Theorem: |- (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_358 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => (A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_350 A x_1) (thm_357 A x_1)) A x_1.

(; Theorem: |- ((= ((= x) x)) Data.Bool.T) ;)

(; dict ;)

def thm_359 : x_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural x_1 x_1) hol.true) :=
  x_1 : hol.term Number_2ENatural_2Enatural => (A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_351 A x_1) (hol.EQ_MP (hol.forall A (x_2 : hol.term A => hol.eq hol.bool (hol.eq A x_2 x_2) hol.true)) (hol.forall A (x_2 : hol.term A => hol.eq hol.bool (hol.eq A x_2 x_2) hol.true)) (thm_354 A) (thm_358 A) x_1)) Number_2ENatural_2Enatural x_1.

(; Theorem: |- ((= ((= n) n)) Data.Bool.T) ;)

(; dict ;)

def thm_360 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural n_1 n_1) hol.true) :=
  n_1 : hol.term Number_2ENatural_2Enatural => (x_1 : hol.term Number_2ENatural_2Enatural => thm_359 x_1) n_1.

(; Theorem: |- ((= ((= (Unwanted.id n)) n)) Data.Bool.T) ;)

(; dict ;)

def thm_361 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1) hol.true) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS hol.bool (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1) (hol.eq Number_2ENatural_2Enatural n_1 n_1) hol.true (thm_349 n_1) (thm_360 n_1).

(; Theorem: |- ((= \lambda n. ((= (Unwanted.id n)) n)) \lambda n. Data.Bool.T) ;)

(; dict ;)

def thm_362 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural hol.bool) (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1) (n_1 : hol.term Number_2ENatural_2Enatural => hol.true)) :=
  hol.ABS_THM Number_2ENatural_2Enatural hol.bool (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1) (n_1 : hol.term Number_2ENatural_2Enatural => hol.true) (n_1 : hol.term Number_2ENatural_2Enatural => thm_361 n_1).

(; Theorem: |- ((= (Data.Bool.! \lambda n. ((= (Unwanted.id n)) n))) (Data.Bool.! \lambda n. Data.Bool.T)) ;)

(; dict ;)

def thm_363 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1)) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.true))) :=
  hol.APP_THM (hol.arr Number_2ENatural_2Enatural hol.bool) hol.bool (hol.forall Number_2ENatural_2Enatural) (hol.forall Number_2ENatural_2Enatural) (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1) (n_1 : hol.term Number_2ENatural_2Enatural => hol.true) thm_31 thm_362.

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. t)) t)) ((= (Data.Bool.! \lambda x. t)) t)) ;)

(; dict ;)

def thm_364 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda n. t)) t)) ((= (Data.Bool.! \lambda n. t)) t)) ;)

(; dict ;)

def thm_365 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (n_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (n_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.forall A (n_2 : hol.term A => t_1)) t_1).

(; Theorem: |- ((= ((= (Data.Bool.! \lambda x. t)) t)) ((= (Data.Bool.! \lambda n. t)) t)) ;)

(; dict ;)

def thm_366 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (n_2 : hol.term A => t_1)) t_1)) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (n_2 : hol.term A => t_1)) t_1) (thm_364 A t_1) (thm_365 A t_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. t)) t) ;)

(; dict ;)

def thm_367 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) :=
  A : hol.type => t_1 : hol.term hol.bool => thm_13 A t_1.

(; Theorem: |- ((= (Data.Bool.! \lambda n. t)) t) ;)

(; dict ;)

def thm_368 : A : hol.type -> t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall A (n_2 : hol.term A => t_1)) t_1) :=
  A : hol.type => t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.forall A (x_2 : hol.term A => t_1)) t_1) (hol.eq hol.bool (hol.forall A (n_2 : hol.term A => t_1)) t_1) (thm_366 A t_1) (thm_367 A t_1).

(; Theorem: |- ((= (Data.Bool.! \lambda n. t)) t) ;)

(; dict ;)

def thm_369 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => t_1)) t_1) :=
  t_1 : hol.term hol.bool => (A : hol.type => t_1 : hol.term hol.bool => thm_368 A t_1) Number_2ENatural_2Enatural t_1.

(; Theorem: |- ((= (Data.Bool.! \lambda n. Data.Bool.T)) Data.Bool.T) ;)

(; dict ;)

def thm_370 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.true)) hol.true) :=
  (t_1 : hol.term hol.bool => thm_369 t_1) hol.true.

(; Theorem: |- ((= (Data.Bool.! \lambda n. ((= (Unwanted.id n)) n))) Data.Bool.T) ;)

(; dict ;)

def thm_371 : hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1)) hol.true) :=
  hol.TRANS hol.bool (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1)) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.true)) hol.true thm_363 thm_370.

(; Theorem: |- ((= Data.Bool.T) (Data.Bool.! \lambda n. ((= (Unwanted.id n)) n))) ;)

(; dict ;)

def thm_372 : hol.proof (hol.eq hol.bool hol.true (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1))) :=
  hol.SYM hol.bool (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1)) hol.true thm_371.

(; Theorem: |- (Data.Bool.! \lambda n. ((= (Unwanted.id n)) n)) ;)

(; dict ;)

def thm_373 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1)) :=
  hol.EQ_MP hol.true (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1)) thm_372 thm_2.

(; Theorem: |- ((= (Unwanted.id Number.Natural.zero)) Number.Natural.zero) ;)

(; dict ;)

def thm_374 : hol.proof (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) :=
  (n_1 : hol.term Number_2ENatural_2Enatural => hol.EQ_MP (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1) (hol.eq Number_2ENatural_2Enatural (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1) n_1) (thm_338 n_1) (thm_373 n_1)) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural).

(; Theorem: |- ((= ((= Number.Natural.zero) (Unwanted.id Number.Natural.zero))) ((= Number.Natural.zero) Number.Natural.zero)) ;)

(; dict ;)

def thm_375 : hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) :=
  hol.APP_THM Number_2ENatural_2Enatural hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) thm_336 thm_374.

(; Theorem: |- ((= ((= Number.Natural.zero) Number.Natural.zero)) Data.Bool.T) ;)

(; dict ;)

def thm_376 : hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) hol.true) :=
  (x_1 : hol.term Number_2ENatural_2Enatural => thm_359 x_1) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural).

(; Theorem: |- ((= ((= Number.Natural.zero) (Unwanted.id Number.Natural.zero))) Data.Bool.T) ;)

(; dict ;)

def thm_377 : hol.proof (hol.eq hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) hol.true) :=
  hol.TRANS hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) hol.true thm_375 thm_376.

(; Theorem: |- ((= Data.Bool.T) ((= Number.Natural.zero) (Unwanted.id Number.Natural.zero))) ;)

(; dict ;)

def thm_378 : hol.proof (hol.eq hol.bool hol.true (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) :=
  hol.SYM hol.bool (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) hol.true thm_377.

(; Theorem: |- ((= Number.Natural.zero) (Unwanted.id Number.Natural.zero)) ;)

(; dict ;)

def thm_379 : hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) :=
  hol.EQ_MP hol.true (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) thm_378 thm_2.

(; Theorem: |- ((= (fn Number.Natural.zero)) (fn (Unwanted.id Number.Natural.zero))) ;)

(; dict ;)

def thm_380 : A : hol.type -> fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq A (fn_1 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) :=
  A : hol.type => fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.APP_THM Number_2ENatural_2Enatural A fn_1 fn_1 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (thm_333 A fn_1) (hol.EQ_MP (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ezero Number_2ENatural_2Enatural) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) thm_335 thm_379).

(; Theorem: |- ((= (= (fn Number.Natural.zero))) (= (fn (Unwanted.id Number.Natural.zero)))) ;)

(; dict ;)

def thm_381 : A : hol.type -> fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq (hol.arr A hol.bool) (hol.eq A (fn_1 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.eq A (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))))) :=
  A : hol.type => fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.APP_THM A (hol.arr A hol.bool) (hol.eq A) (hol.eq A) (fn_1 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (thm_332 A) (thm_380 A fn_1).

(; Theorem: |- ((= e) e) ;)

(; dict ;)

def thm_382 : A : hol.type -> e_1 : hol.term A -> hol.proof (hol.eq A e_1 e_1) :=
  A : hol.type => e_1 : hol.term A => hol.REFL A e_1.

(; Theorem: |- ((= ((= (fn Number.Natural.zero)) e)) ((= (fn (Unwanted.id Number.Natural.zero))) e)) ;)

(; dict ;)

def thm_383 : A : hol.type -> e_1 : hol.term A -> fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.eq A (fn_2 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) e_1) (hol.eq A (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) e_1)) :=
  A : hol.type => e_1 : hol.term A => fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.APP_THM A hol.bool (hol.eq A (fn_2 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.eq A (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) e_1 e_1 (thm_381 A fn_2) (thm_382 A e_1).

(; Theorem: |- ((= (Data.Bool./\ ((= (fn Number.Natural.zero)) e))) (Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) e))) ;)

(; dict ;)

def thm_384 : A : hol.type -> e_1 : hol.term A -> fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq A (fn_2 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) e_1)) (hol.and (hol.eq A (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) e_1))) :=
  A : hol.type => e_1 : hol.term A => fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.eq A (fn_2 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) e_1) (hol.eq A (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) e_1) thm_15 (thm_383 A e_1 fn_2).

(; Theorem: |- ((= (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((f (fn n)) n)))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((f (fn n)) n)))) ;)

(; dict ;)

def thm_385 : A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) -> fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_1 (fn_2 n_3) n_3))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_1 (fn_2 n_3) n_3)))) :=
  A : hol.type => f_1 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.REFL hol.bool (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_1 (fn_2 n_3) n_3))).

(; Theorem: |- ((= ((Data.Bool./\ ((= (fn Number.Natural.zero)) e)) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((f (fn n)) n))))) ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) e)) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((f (fn n)) n))))) ;)

(; dict ;)

def thm_386 : A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) -> e_2 : hol.term A -> fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq A (fn_3 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) e_2) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_1 (fn_3 n_4) n_4)))) (hol.and (hol.eq A (fn_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) e_2) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_1 (fn_3 n_4) n_4))))) :=
  A : hol.type => f_1 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => e_2 : hol.term A => fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq A (fn_3 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) e_2)) (hol.and (hol.eq A (fn_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) e_2)) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_1 (fn_3 n_4) n_4))) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_1 (fn_3 n_4) n_4))) (thm_384 A e_2 fn_3) (thm_385 A f_1 fn_3).

(; Theorem: |- ((= \lambda fn. ((Data.Bool./\ ((= (fn Number.Natural.zero)) e)) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((f (fn n)) n))))) \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) e)) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((f (fn n)) n))))) ;)

(; dict ;)

def thm_387 : A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) -> e_2 : hol.term A -> hol.proof (hol.eq (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) e_2) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_1 (fn_3 n_4) n_4)))) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) e_2) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_1 (fn_3 n_4) n_4))))) :=
  A : hol.type => f_1 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => e_2 : hol.term A => hol.ABS_THM (hol.arr Number_2ENatural_2Enatural A) hol.bool (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) e_2) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_1 (fn_3 n_4) n_4)))) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) e_2) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_1 (fn_3 n_4) n_4)))) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => thm_386 A f_1 e_2 fn_3).

(; Theorem: |- ((= (Data.Bool.?! \lambda fn. ((Data.Bool./\ ((= (fn Number.Natural.zero)) e)) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((f (fn n)) n)))))) (Data.Bool.?! \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) e)) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((f (fn n)) n)))))) ;)

(; dict ;)

def thm_388 : A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) -> e_2 : hol.term A -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F_21 (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) e_2) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_1 (fn_3 n_4) n_4))))) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) e_2) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_1 (fn_3 n_4) n_4)))))) :=
  A : hol.type => f_1 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => e_2 : hol.term A => hol.APP_THM (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool (Data_2EBool_2E_3F_21 (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool)) (Data_2EBool_2E_3F_21 (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool)) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) e_2) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_1 (fn_3 n_4) n_4)))) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) e_2) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_1 (fn_3 n_4) n_4)))) (thm_331 A) (thm_387 A f_1 e_2).

(; Theorem: |- ((= \lambda f. (Data.Bool.?! \lambda fn. ((Data.Bool./\ ((= (fn Number.Natural.zero)) e)) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((f (fn n)) n)))))) \lambda f. (Data.Bool.?! \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) e)) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((f (fn n)) n)))))) ;)

(; dict ;)

def thm_389 : A : hol.type -> e_1 : hol.term A -> hol.proof (hol.eq (hol.arr (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) hol.bool) (f_2 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => Data_2EBool_2E_3F_21 (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) e_1) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_2 (fn_3 n_4) n_4))))) (f_2 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => Data_2EBool_2E_3F_21 (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) e_1) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_2 (fn_3 n_4) n_4)))))) :=
  A : hol.type => e_1 : hol.term A => hol.ABS_THM (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) hol.bool (f_2 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => Data_2EBool_2E_3F_21 (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) e_1) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_2 (fn_3 n_4) n_4))))) (f_2 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => Data_2EBool_2E_3F_21 (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) e_1) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_2 (fn_3 n_4) n_4))))) (f_2 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => thm_388 A f_2 e_1).

(; Theorem: |- ((= (Data.Bool.! \lambda f. (Data.Bool.?! \lambda fn. ((Data.Bool./\ ((= (fn Number.Natural.zero)) e)) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((f (fn n)) n))))))) (Data.Bool.! \lambda f. (Data.Bool.?! \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) e)) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((f (fn n)) n))))))) ;)

(; dict ;)

def thm_390 : A : hol.type -> e_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) (f_2 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => Data_2EBool_2E_3F_21 (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) e_1) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_2 (fn_3 n_4) n_4)))))) (hol.forall (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) (f_2 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => Data_2EBool_2E_3F_21 (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) e_1) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_2 (fn_3 n_4) n_4))))))) :=
  A : hol.type => e_1 : hol.term A => hol.APP_THM (hol.arr (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) hol.bool) hol.bool (hol.forall (hol.arr A (hol.arr Number_2ENatural_2Enatural A))) (hol.forall (hol.arr A (hol.arr Number_2ENatural_2Enatural A))) (f_2 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => Data_2EBool_2E_3F_21 (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) e_1) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_2 (fn_3 n_4) n_4))))) (f_2 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => Data_2EBool_2E_3F_21 (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) e_1) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_2 (fn_3 n_4) n_4))))) (thm_330 A) (thm_389 A e_1).

(; Theorem: |- ((= \lambda e. (Data.Bool.! \lambda f. (Data.Bool.?! \lambda fn. ((Data.Bool./\ ((= (fn Number.Natural.zero)) e)) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((f (fn n)) n))))))) \lambda e. (Data.Bool.! \lambda f. (Data.Bool.?! \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) e)) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((f (fn n)) n))))))) ;)

(; dict ;)

def thm_391 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (e_1 : hol.term A => hol.forall (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) (f_2 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => Data_2EBool_2E_3F_21 (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) e_1) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_2 (fn_3 n_4) n_4)))))) (e_1 : hol.term A => hol.forall (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) (f_2 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => Data_2EBool_2E_3F_21 (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) e_1) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_2 (fn_3 n_4) n_4))))))) :=
  A : hol.type => hol.ABS_THM A hol.bool (e_1 : hol.term A => hol.forall (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) (f_2 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => Data_2EBool_2E_3F_21 (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) e_1) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_2 (fn_3 n_4) n_4)))))) (e_1 : hol.term A => hol.forall (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) (f_2 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => Data_2EBool_2E_3F_21 (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) e_1) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_2 (fn_3 n_4) n_4)))))) (e_1 : hol.term A => thm_390 A e_1).

(; Theorem: |- ((= (Data.Bool.! \lambda e. (Data.Bool.! \lambda f. (Data.Bool.?! \lambda fn. ((Data.Bool./\ ((= (fn Number.Natural.zero)) e)) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((f (fn n)) n)))))))) (Data.Bool.! \lambda e. (Data.Bool.! \lambda f. (Data.Bool.?! \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) e)) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((f (fn n)) n)))))))) ;)

(; dict ;)

def thm_392 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall A (e_1 : hol.term A => hol.forall (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) (f_2 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => Data_2EBool_2E_3F_21 (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) e_1) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_2 (fn_3 n_4) n_4))))))) (hol.forall A (e_1 : hol.term A => hol.forall (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) (f_2 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => Data_2EBool_2E_3F_21 (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) e_1) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_2 (fn_3 n_4) n_4)))))))) :=
  A : hol.type => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (e_1 : hol.term A => hol.forall (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) (f_2 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => Data_2EBool_2E_3F_21 (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) e_1) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_2 (fn_3 n_4) n_4)))))) (e_1 : hol.term A => hol.forall (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) (f_2 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => Data_2EBool_2E_3F_21 (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) e_1) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_2 (fn_3 n_4) n_4)))))) (thm_165 A) (thm_391 A).

(; Theorem: |- (Data.Bool.! \lambda e. (Data.Bool.! \lambda f. (Data.Bool.?! \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) e)) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((f (fn n)) n))))))) ;)

(; dict ;)

def thm_393 : A : hol.type -> hol.proof (hol.forall A (e_1 : hol.term A => hol.forall (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) (f_2 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => Data_2EBool_2E_3F_21 (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) e_1) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_2 (fn_3 n_4) n_4))))))) :=
  A : hol.type => hol.EQ_MP (hol.forall A (e_1 : hol.term A => hol.forall (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) (f_2 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => Data_2EBool_2E_3F_21 (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)) e_1) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_2 (fn_3 n_4) n_4))))))) (hol.forall A (e_1 : hol.term A => hol.forall (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) (f_2 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => Data_2EBool_2E_3F_21 (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) e_1) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_2 (fn_3 n_4) n_4))))))) (thm_392 A) (thm_14 A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.?! \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) e)) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((f (fn n)) n)))))) ;)

(; dict ;)

def thm_394 : A : hol.type -> e_1 : hol.term A -> hol.proof (hol.forall (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) (f_2 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => Data_2EBool_2E_3F_21 (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) e_1) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_2 (fn_3 n_4) n_4)))))) :=
  A : hol.type => e_1 : hol.term A => thm_393 A e_1.

(; Theorem: |- (Data.Bool.?! \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) e)) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((f (fn n)) n))))) ;)

(; dict ;)

def thm_395 : A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) -> e_2 : hol.term A -> hol.proof (Data_2EBool_2E_3F_21 (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) e_2) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_1 (fn_3 n_4) n_4))))) :=
  A : hol.type => f_1 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => e_2 : hol.term A => thm_394 A e_2 f_1.

(; Theorem: |- (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) e)) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((f (fn n)) n))))) ;)

(; dict ;)

def thm_396 : A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) -> e_2 : hol.term A -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) e_2) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_1 (fn_3 n_4) n_4))))) :=
  A : hol.type => f_1 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => e_2 : hol.term A => thm_329 A f_1 e_2 (thm_395 A f_1 e_2).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) e)) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((f (fn n)) n)))))) ;)

(; dict ;)

def thm_397 : A : hol.type -> e_1 : hol.term A -> hol.proof (hol.forall (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) (f_2 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) e_1) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_2 (fn_3 n_4) n_4)))))) :=
  A : hol.type => e_1 : hol.term A => f_2 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => thm_396 A f_2 e_1.

(; Theorem: |- (Data.Bool.! \lambda e. (Data.Bool.! \lambda f. (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) e)) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((f (fn n)) n))))))) ;)

(; dict ;)

def thm_398 : A : hol.type -> hol.proof (hol.forall A (e_1 : hol.term A => hol.forall (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) (f_2 : hol.term (hol.arr A (hol.arr Number_2ENatural_2Enatural A)) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural A) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural A) => hol.and (hol.eq A (fn_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) e_1) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq A (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_2 (fn_3 n_4) n_4))))))) :=
  A : hol.type => e_1 : hol.term A => thm_397 A e_1.

(; Theorem: |- (Data.Bool.! \lambda e. (Data.Bool.! \lambda f. (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) e)) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((f (fn n)) n))))))) ;)

(; dict ;)

def thm_399 : hol.proof (hol.forall Number_2ENatural_2Enatural (e_1 : hol.term Number_2ENatural_2Enatural => hol.forall (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (f_2 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_3 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) e_1) (hol.forall Number_2ENatural_2Enatural (n_4 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_3 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_4)) (f_2 (fn_3 n_4) n_4))))))) :=
  (A : hol.type => thm_398 A) Number_2ENatural_2Enatural.

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((f (fn n)) n)))))) ;)

(; dict ;)

def thm_400 : hol.proof (hol.forall (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (f_1 : hol.term (hol.arr Number_2ENatural_2Enatural (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) hol.bool) hol.bool) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (f_1 (fn_2 n_3) n_3)))))) :=
  thm_399 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)).

(; Theorem: |- (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) ((\lambda m. \lambda n. (Number.Natural.suc (Number.Natural.suc m)) (fn n)) n))))) ;)

(; dict ;)

def thm_401 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) ((m_3 : hol.term Number_2ENatural_2Enatural => n_4 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_3)) (fn_1 n_2) n_2))))) :=
  thm_400 (m_1 : hol.term Number_2ENatural_2Enatural => n_2 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_1)).

(; Theorem: |- (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))))) ;)

(; dict ;)

def thm_402 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))) :=
  hol.EQ_MP (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) ((m_3 : hol.term Number_2ENatural_2Enatural => n_4 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) m_3)) (fn_1 n_2) n_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2))))))) thm_316 thm_401.

(; Theorem: |- (\lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n)))))) (select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n)))))))) ;)

(; dict ;)

def thm_403 : hol.proof ((fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))))) :=
  thm_303 thm_402.

(; Theorem: |- ((Data.Bool./\ ((= ((select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))))) (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= ((select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))))) (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc ((select \lambda fn. ((Data.Bool./\ ((= (fn (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (fn (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (fn n))))))) n)))))) ;)

(; dict ;)

def thm_404 : hol.proof (hol.and (hol.eq Number_2ENatural_2Enatural (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) n_1)))))) :=
  hol.EQ_MP ((fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))))) (hol.and (hol.eq Number_2ENatural_2Enatural (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) n_1)))))) thm_44 thm_403.

(; Theorem: |- ((Data.Bool./\ ((= (Number.Natural.bit0 (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero))) (Data.Bool.! \lambda n. ((= (Number.Natural.bit0 (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (Number.Natural.bit0 n)))))) ;)

(; dict ;)

def thm_405 : hol.proof (hol.and (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1)))))) :=
  hol.EQ_MP (hol.and (hol.eq Number_2ENatural_2Enatural (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_1 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_2 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_1 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_1 n_2)))))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (hol.select (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 : hol.term (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) => hol.and (hol.eq Number_2ENatural_2Enatural (fn_2 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_3 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (fn_2 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_3)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (fn_2 n_3)))))) n_1)))))) (hol.and (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1)))))) thm_43 thm_404.

(; Theorem: |- ((= (Number.Natural.bit0 (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero)) ;)

(; dict ;)

def thm_406 : hyp_1 : hol.proof (hol.and (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1)))))) -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) :=
  hyp_1 : hol.proof (hol.and (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1)))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_296 q_1 p_2 hyp_1) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1))))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) hyp_1.

(; Theorem: |- ((= (Number.Natural.bit0 (Unwanted.id Number.Natural.zero))) (Unwanted.id Number.Natural.zero)) ;)

(; dict ;)

def thm_407 : hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) :=
  hol.PROVE_HYP (hol.and (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1)))))) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) thm_405 (hyp_1 : hol.proof (hol.and (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1)))))) => thm_406 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda n. ((= (Number.Natural.bit0 (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (Number.Natural.bit0 n))))) ;)

(; dict ;)

def thm_408 : hyp_1 : hol.proof (hol.and (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1)))))) -> hol.proof (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1))))) :=
  hyp_1 : hol.proof (hol.and (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1)))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_88 p_1 q_2 hyp_1) (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1))))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda n. ((= (Number.Natural.bit0 (Number.Natural.suc n))) (Number.Natural.suc (Number.Natural.suc (Number.Natural.bit0 n))))) ;)

(; dict ;)

def thm_409 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1))))) :=
  hol.PROVE_HYP (hol.and (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1)))))) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1))))) thm_405 (hyp_1 : hol.proof (hol.and (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit0 (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1)))))) => thm_408 hyp_1).

(; Theorem: |- ((= Number.Natural.bit1) \lambda _1946. (Number.Natural.suc (Number.Natural.bit0 _1946))) ;)

(; dict ;)

def thm_410 : hol.proof (hol.eq (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) Number_2ENatural_2Ebit1 (__1946_1 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 __1946_1))) :=
  hol.REFL (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) Number_2ENatural_2Ebit1.

(; Theorem: |- ((= _1946) _1946) ;)

(; dict ;)

def thm_411 : __1946_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural __1946_1 __1946_1) :=
  __1946_1 : hol.term Number_2ENatural_2Enatural => hol.REFL Number_2ENatural_2Enatural __1946_1.

(; Theorem: |- ((= (Number.Natural.bit1 _1946)) (\lambda _1946. (Number.Natural.suc (Number.Natural.bit0 _1946)) _1946)) ;)

(; dict ;)

def thm_412 : __1946_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit1 __1946_1) ((__1946_2 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 __1946_2)) __1946_1)) :=
  __1946_1 : hol.term Number_2ENatural_2Enatural => hol.APP_THM Number_2ENatural_2Enatural Number_2ENatural_2Enatural Number_2ENatural_2Ebit1 (__1946_2 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 __1946_2)) __1946_1 __1946_1 thm_410 (thm_411 __1946_1).

(; Theorem: |- ((= (\lambda _1946. (Number.Natural.suc (Number.Natural.bit0 _1946)) _1946)) (Number.Natural.suc (Number.Natural.bit0 _1946))) ;)

(; dict ;)

def thm_413 : __1946_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural ((__1946_2 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 __1946_2)) __1946_1) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 __1946_1))) :=
  __1946_1 : hol.term Number_2ENatural_2Enatural => hol.BETA_CONV Number_2ENatural_2Enatural Number_2ENatural_2Enatural (__1946_2 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 __1946_2)) __1946_1.

(; Theorem: |- ((= (Number.Natural.bit1 _1946)) (Number.Natural.suc (Number.Natural.bit0 _1946))) ;)

(; dict ;)

def thm_414 : __1946_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit1 __1946_1) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 __1946_1))) :=
  __1946_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS Number_2ENatural_2Enatural (Number_2ENatural_2Ebit1 __1946_1) ((__1946_2 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 __1946_2)) __1946_1) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 __1946_1)) (thm_412 __1946_1) (thm_413 __1946_1).

(; Theorem: |- (Data.Bool.! \lambda _1946. ((= (Number.Natural.bit1 _1946)) (Number.Natural.suc (Number.Natural.bit0 _1946)))) ;)

(; dict ;)

def thm_415 : hol.proof (hol.forall Number_2ENatural_2Enatural (__1946_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit1 __1946_1) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 __1946_1)))) :=
  __1946_1 : hol.term Number_2ENatural_2Enatural => thm_414 __1946_1.

(; Theorem: |- ((= (Number.Natural.bit1 n)) (Number.Natural.suc (Number.Natural.bit0 n))) ;)

(; dict ;)

def thm_416 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit1 n_1) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => (__1946_1 : hol.term Number_2ENatural_2Enatural => thm_415 __1946_1) n_1.

(; Theorem: |- ((= (Number.Natural.suc (Number.Natural.bit0 n))) (Number.Natural.suc (Number.Natural.bit0 n))) ;)

(; dict ;)

def thm_417 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.REFL Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1)).

(; Theorem: |- ((= (Number.Natural.suc (Number.Natural.bit0 n))) (Number.Natural.suc (Number.Natural.bit0 n))) ;)

(; dict ;)

def thm_418 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.SYM Number_2ENatural_2Enatural (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1)) (thm_417 n_1).

(; Theorem: |- ((= (Number.Natural.bit1 n)) (Number.Natural.suc (Number.Natural.bit0 n))) ;)

(; dict ;)

def thm_419 : n_1 : hol.term Number_2ENatural_2Enatural -> hol.proof (hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit1 n_1) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => hol.TRANS Number_2ENatural_2Enatural (Number_2ENatural_2Ebit1 n_1) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1)) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1)) (thm_416 n_1) (thm_418 n_1).

(; Theorem: |- (Data.Bool.! \lambda n. ((= (Number.Natural.bit1 n)) (Number.Natural.suc (Number.Natural.bit0 n)))) ;)

(; dict ;)

def thm_420 : hol.proof (hol.forall Number_2ENatural_2Enatural (n_1 : hol.term Number_2ENatural_2Enatural => hol.eq Number_2ENatural_2Enatural (Number_2ENatural_2Ebit1 n_1) (Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ebit0 n_1)))) :=
  n_1 : hol.term Number_2ENatural_2Enatural => thm_419 n_1.
