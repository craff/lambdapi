
(; This file was generated by Holide. ;)

#REQUIRE hol.
#NAME list_2Dlast_2Ddef.

Data_2EList_2Elist : hol.type -> hol.type.

Data_2EList_2E_3A_3A : A : hol.type -> hol.term A.

Data_2EList_2Enull : A : hol.type -> hol.term A.

Data_2EBool_2E_3F : A : hol.type -> hol.term A.

Data_2EList_2E_5B_5D : A : hol.type -> hol.term A.

(; Constant Data.List.last ;)

def Data_2EList_2Elast : A : hol.type -> hol.term (hol.arr (Data_2EList_2Elist A) A) :=
  A : hol.type => hol.select (hol.arr (Data_2EList_2Elist A) A) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3))))).

(; axiom ;)

thm_0 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))).

(; axiom ;)

thm_1 : A : hol.type -> B : hol.type -> hol.proof (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A (hol.arr (Data_2EList_2Elist A) (hol.arr B B))) (f_2 : hol.term (hol.arr A (hol.arr (Data_2EList_2Elist A) (hol.arr B B))) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) B) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr (Data_2EList_2Elist A) B) => hol.and (hol.eq B (fn_3 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_4 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_5 : hol.term (Data_2EList_2Elist A) => hol.eq B (fn_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_4 t_5)) (f_2 h_4 t_5 (fn_3 t_5))))))))).

(; axiom ;)

thm_2 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (p_1 x_3) q_2)) q_2))).

(; axiom ;)

thm_3 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))).

(; defineConstList ;)

thm_4 : A : hol.type -> hol.proof (hol.forall A (h_1 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_2 : hol.term (Data_2EList_2Elist A) => hol.eq A (Data_2EList_2Elast A (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_1 t_2)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_2) h_1 (Data_2EList_2Elast A t_2))))).

(; Theorem: |- ((= \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t)))))) \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t)))))) ;)

(; dict ;)

def thm_5 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3))))) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3)))))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3))))).

(; Theorem: |- ((= LAST) (select \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))))) ;)

(; dict ;)

def thm_6 : A : hol.type -> LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> hyp_1 : hol.proof (hol.eq (hol.arr (Data_2EList_2Elist A) A) LAST_1 (hol.select (hol.arr (Data_2EList_2Elist A) A) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))))) -> hol.proof (hol.eq (hol.arr (Data_2EList_2Elist A) A) LAST_1 (hol.select (hol.arr (Data_2EList_2Elist A) A) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))))) :=
  A : hol.type => LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hyp_1 : hol.proof (hol.eq (hol.arr (Data_2EList_2Elist A) A) LAST_1 (hol.select (hol.arr (Data_2EList_2Elist A) A) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))))) => hyp_1.

(; Theorem: |- ((= (select \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))))) LAST) ;)

(; dict ;)

def thm_7 : A : hol.type -> LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> hyp_1 : hol.proof (hol.eq (hol.arr (Data_2EList_2Elist A) A) LAST_1 (hol.select (hol.arr (Data_2EList_2Elist A) A) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))))) -> hol.proof (hol.eq (hol.arr (Data_2EList_2Elist A) A) (hol.select (hol.arr (Data_2EList_2Elist A) A) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4)))))) LAST_1) :=
  A : hol.type => LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hyp_1 : hol.proof (hol.eq (hol.arr (Data_2EList_2Elist A) A) LAST_1 (hol.select (hol.arr (Data_2EList_2Elist A) A) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))))) => hol.SYM (hol.arr (Data_2EList_2Elist A) A) LAST_1 (hol.select (hol.arr (Data_2EList_2Elist A) A) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4)))))) (thm_6 A LAST_1 hyp_1).

(; Theorem: |- ((= (\lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))) (select \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t)))))))) (\lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))) LAST)) ;)

(; dict ;)

def thm_8 : A : hol.type -> LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> hyp_1 : hol.proof (hol.eq (hol.arr (Data_2EList_2Elist A) A) LAST_1 (hol.select (hol.arr (Data_2EList_2Elist A) A) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))))) -> hol.proof (hol.eq hol.bool ((LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))) (hol.select (hol.arr (Data_2EList_2Elist A) A) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))))) ((LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))) LAST_1)) :=
  A : hol.type => LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hyp_1 : hol.proof (hol.eq (hol.arr (Data_2EList_2Elist A) A) LAST_1 (hol.select (hol.arr (Data_2EList_2Elist A) A) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))))) => hol.APP_THM (hol.arr (Data_2EList_2Elist A) A) hol.bool (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))) (hol.select (hol.arr (Data_2EList_2Elist A) A) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4)))))) LAST_1 (thm_5 A) (thm_7 A LAST_1 hyp_1).

(; Theorem: |- ((= (\lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))) LAST)) (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t)))))) ;)

(; dict ;)

def thm_9 : A : hol.type -> LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> hol.proof (hol.eq hol.bool ((LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))) LAST_1) (hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3)))))) :=
  A : hol.type => LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.BETA_CONV (hol.arr (Data_2EList_2Elist A) A) hol.bool (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))) LAST_1.

(; Theorem: |- ((= (\lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))) (select \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t)))))))) (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t)))))) ;)

(; dict ;)

def thm_10 : A : hol.type -> LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> hyp_1 : hol.proof (hol.eq (hol.arr (Data_2EList_2Elist A) A) LAST_1 (hol.select (hol.arr (Data_2EList_2Elist A) A) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))))) -> hol.proof (hol.eq hol.bool ((LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))) (hol.select (hol.arr (Data_2EList_2Elist A) A) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))))) (hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3)))))) :=
  A : hol.type => LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hyp_1 : hol.proof (hol.eq (hol.arr (Data_2EList_2Elist A) A) LAST_1 (hol.select (hol.arr (Data_2EList_2Elist A) A) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))))) => hol.TRANS hol.bool ((LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))) (hol.select (hol.arr (Data_2EList_2Elist A) A) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))))) ((LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))) LAST_1) (hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3))))) (thm_8 A LAST_1 hyp_1) (thm_9 A LAST_1).

(; Theorem: |- ((= ((= Data.Bool.?) \lambda p. (p (select p)))) ((= Data.Bool.?) \lambda p. (p (select p)))) ;)

(; dict ;)

def thm_11 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))) (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1)))) :=
  A : hol.type => hol.REFL hol.bool (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))).

(; Theorem: |- ((= ((= Data.Bool.?) \lambda p. (p (select p)))) ((= Data.Bool.?) \lambda p. (p (select p)))) ;)

(; dict ;)

def thm_12 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))) (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1)))) :=
  A : hol.type => hol.TRANS hol.bool (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))) (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))) (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))) (thm_11 A) (thm_11 A).

(; Theorem: |- ((= Data.Bool.?) \lambda p. (p (select p))) ;)

(; dict ;)

def thm_13 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool)) (p_1 : hol.term (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) => p_1 (hol.select (hol.arr (Data_2EList_2Elist A) A) p_1))) :=
  A : hol.type => (A : hol.type => hol.EQ_MP (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))) (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))) (thm_12 A) (thm_0 A)) (hol.arr (Data_2EList_2Elist A) A).

(; Theorem: |- ((= (Data.Bool.? \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))))) (\lambda p. (p (select p)) \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))))) ;)

(; dict ;)

def thm_14 : A : hol.type -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3)))))) ((p_1 : hol.term (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) => p_1 (hol.select (hol.arr (Data_2EList_2Elist A) A) p_1)) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3))))))) :=
  A : hol.type => hol.APP_THM (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool)) (p_1 : hol.term (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) => p_1 (hol.select (hol.arr (Data_2EList_2Elist A) A) p_1)) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3))))) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3))))) (thm_13 A) (thm_5 A).

(; Theorem: |- ((= (\lambda p. (p (select p)) \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))))) (\lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))) (select \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t)))))))) ;)

(; dict ;)

def thm_15 : A : hol.type -> hol.proof (hol.eq hol.bool ((p_1 : hol.term (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) => p_1 (hol.select (hol.arr (Data_2EList_2Elist A) A) p_1)) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3)))))) ((LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3))))) (hol.select (hol.arr (Data_2EList_2Elist A) A) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3)))))))) :=
  A : hol.type => hol.BETA_CONV (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool (p_1 : hol.term (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) => p_1 (hol.select (hol.arr (Data_2EList_2Elist A) A) p_1)) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3))))).

(; Theorem: |- ((= (Data.Bool.? \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))))) (\lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))) (select \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t)))))))) ;)

(; dict ;)

def thm_16 : A : hol.type -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3)))))) ((LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3))))) (hol.select (hol.arr (Data_2EList_2Elist A) A) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3)))))))) :=
  A : hol.type => hol.TRANS hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3)))))) ((p_1 : hol.term (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) => p_1 (hol.select (hol.arr (Data_2EList_2Elist A) A) p_1)) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3)))))) ((LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3))))) (hol.select (hol.arr (Data_2EList_2Elist A) A) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3))))))) (thm_14 A) (thm_15 A).

(; Theorem: |- ((= Data.Bool.?) Data.Bool.?) ;)

(; dict ;)

def thm_17 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool)).

(; Theorem: |- ((= (Data.Bool./\ ((= (fn Data.List.[])) b))) (Data.Bool./\ ((= (fn Data.List.[])) b))) ;)

(; dict ;)

def thm_18 : A : hol.type -> b_1 : hol.term A -> fn_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq A (fn_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1)) (hol.and (hol.eq A (fn_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1))) :=
  A : hol.type => b_1 : hol.term A => fn_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (hol.eq A (fn_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1)).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_19 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (hol.forall A) (hol.forall A)) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A hol.bool) hol.bool) (hol.forall A).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_20 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (Data_2EList_2Elist A) hol.bool) hol.bool) (hol.forall (Data_2EList_2Elist A)) (hol.forall (Data_2EList_2Elist A))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr (Data_2EList_2Elist A) hol.bool) hol.bool) (hol.forall (Data_2EList_2Elist A)).

(; Theorem: |- ((= (= (fn ((Data.List.:: h) t)))) (= (fn ((Data.List.:: h) t)))) ;)

(; dict ;)

def thm_21 : A : hol.type -> t_1 : hol.term (Data_2EList_2Elist A) -> h_2 : hol.term A -> fn_3 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> hol.proof (hol.eq (hol.arr A hol.bool) (hol.eq A (fn_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_1))) (hol.eq A (fn_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_1)))) :=
  A : hol.type => t_1 : hol.term (Data_2EList_2Elist A) => h_2 : hol.term A => fn_3 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.REFL (hol.arr A hol.bool) (hol.eq A (fn_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_1))).

(; Theorem: |- ((= (\lambda h. \lambda t. \lambda _16228. (((Data.Bool.cond (Data.List.null t)) h) _16228) h)) \lambda t. \lambda _16228. (((Data.Bool.cond (Data.List.null t)) h) _16228)) ;)

(; dict ;)

def thm_22 : A : hol.type -> h_1 : hol.term A -> hol.proof (hol.eq (hol.arr (Data_2EList_2Elist A) (hol.arr A A)) ((h_2 : hol.term A => t_3 : hol.term (Data_2EList_2Elist A) => __16228_4 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 __16228_4) h_1) (t_2 : hol.term (Data_2EList_2Elist A) => __16228_3 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_2) h_1 __16228_3)) :=
  A : hol.type => h_1 : hol.term A => hol.BETA_CONV A (hol.arr (Data_2EList_2Elist A) (hol.arr A A)) (h_2 : hol.term A => t_3 : hol.term (Data_2EList_2Elist A) => __16228_4 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 __16228_4) h_1.

(; Theorem: |- ((= t) t) ;)

(; dict ;)

def thm_23 : A : hol.type -> t_1 : hol.term (Data_2EList_2Elist A) -> hol.proof (hol.eq (Data_2EList_2Elist A) t_1 t_1) :=
  A : hol.type => t_1 : hol.term (Data_2EList_2Elist A) => hol.REFL (Data_2EList_2Elist A) t_1.

(; Theorem: |- ((= ((\lambda h. \lambda t. \lambda _16228. (((Data.Bool.cond (Data.List.null t)) h) _16228) h) t)) (\lambda t. \lambda _16228. (((Data.Bool.cond (Data.List.null t)) h) _16228) t)) ;)

(; dict ;)

def thm_24 : A : hol.type -> t_1 : hol.term (Data_2EList_2Elist A) -> h_2 : hol.term A -> hol.proof (hol.eq (hol.arr A A) ((h_3 : hol.term A => t_4 : hol.term (Data_2EList_2Elist A) => __16228_5 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 __16228_5) h_2 t_1) ((t_3 : hol.term (Data_2EList_2Elist A) => __16228_4 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 __16228_4) t_1)) :=
  A : hol.type => t_1 : hol.term (Data_2EList_2Elist A) => h_2 : hol.term A => hol.APP_THM (Data_2EList_2Elist A) (hol.arr A A) ((h_3 : hol.term A => t_4 : hol.term (Data_2EList_2Elist A) => __16228_5 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 __16228_5) h_2) (t_3 : hol.term (Data_2EList_2Elist A) => __16228_4 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 __16228_4) t_1 t_1 (thm_22 A h_2) (thm_23 A t_1).

(; Theorem: |- ((= (\lambda t. \lambda _16228. (((Data.Bool.cond (Data.List.null t)) h) _16228) t)) \lambda _16228. (((Data.Bool.cond (Data.List.null t)) h) _16228)) ;)

(; dict ;)

def thm_25 : A : hol.type -> t_1 : hol.term (Data_2EList_2Elist A) -> h_2 : hol.term A -> hol.proof (hol.eq (hol.arr A A) ((t_3 : hol.term (Data_2EList_2Elist A) => __16228_4 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 __16228_4) t_1) (__16228_3 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_1) h_2 __16228_3)) :=
  A : hol.type => t_1 : hol.term (Data_2EList_2Elist A) => h_2 : hol.term A => hol.BETA_CONV (Data_2EList_2Elist A) (hol.arr A A) (t_3 : hol.term (Data_2EList_2Elist A) => __16228_4 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 __16228_4) t_1.

(; Theorem: |- ((= ((\lambda h. \lambda t. \lambda _16228. (((Data.Bool.cond (Data.List.null t)) h) _16228) h) t)) \lambda _16228. (((Data.Bool.cond (Data.List.null t)) h) _16228)) ;)

(; dict ;)

def thm_26 : A : hol.type -> t_1 : hol.term (Data_2EList_2Elist A) -> h_2 : hol.term A -> hol.proof (hol.eq (hol.arr A A) ((h_3 : hol.term A => t_4 : hol.term (Data_2EList_2Elist A) => __16228_5 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 __16228_5) h_2 t_1) (__16228_3 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_1) h_2 __16228_3)) :=
  A : hol.type => t_1 : hol.term (Data_2EList_2Elist A) => h_2 : hol.term A => hol.TRANS (hol.arr A A) ((h_3 : hol.term A => t_4 : hol.term (Data_2EList_2Elist A) => __16228_5 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 __16228_5) h_2 t_1) ((t_3 : hol.term (Data_2EList_2Elist A) => __16228_4 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 __16228_4) t_1) (__16228_3 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_1) h_2 __16228_3) (thm_24 A t_1 h_2) (thm_25 A t_1 h_2).

(; Theorem: |- ((= (fn t)) (fn t)) ;)

(; dict ;)

def thm_27 : A : hol.type -> t_1 : hol.term (Data_2EList_2Elist A) -> fn_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> hol.proof (hol.eq A (fn_2 t_1) (fn_2 t_1)) :=
  A : hol.type => t_1 : hol.term (Data_2EList_2Elist A) => fn_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.REFL A (fn_2 t_1).

(; Theorem: |- ((= (((\lambda h. \lambda t. \lambda _16228. (((Data.Bool.cond (Data.List.null t)) h) _16228) h) t) (fn t))) (\lambda _16228. (((Data.Bool.cond (Data.List.null t)) h) _16228) (fn t))) ;)

(; dict ;)

def thm_28 : A : hol.type -> fn_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> t_2 : hol.term (Data_2EList_2Elist A) -> h_3 : hol.term A -> hol.proof (hol.eq A ((h_4 : hol.term A => t_5 : hol.term (Data_2EList_2Elist A) => __16228_6 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 __16228_6) h_3 t_2 (fn_1 t_2)) ((__16228_4 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_2) h_3 __16228_4) (fn_1 t_2))) :=
  A : hol.type => fn_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => t_2 : hol.term (Data_2EList_2Elist A) => h_3 : hol.term A => hol.APP_THM A A ((h_4 : hol.term A => t_5 : hol.term (Data_2EList_2Elist A) => __16228_6 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 __16228_6) h_3 t_2) (__16228_4 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_2) h_3 __16228_4) (fn_1 t_2) (fn_1 t_2) (thm_26 A t_2 h_3) (thm_27 A t_2 fn_1).

(; Theorem: |- ((= (\lambda _16228. (((Data.Bool.cond (Data.List.null t)) h) _16228) (fn t))) (((Data.Bool.cond (Data.List.null t)) h) (fn t))) ;)

(; dict ;)

def thm_29 : A : hol.type -> fn_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> h_2 : hol.term A -> t_3 : hol.term (Data_2EList_2Elist A) -> hol.proof (hol.eq A ((__16228_4 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 __16228_4) (fn_1 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (fn_1 t_3))) :=
  A : hol.type => fn_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => h_2 : hol.term A => t_3 : hol.term (Data_2EList_2Elist A) => hol.BETA_CONV A A (__16228_4 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 __16228_4) (fn_1 t_3).

(; Theorem: |- ((= (((\lambda h. \lambda t. \lambda _16228. (((Data.Bool.cond (Data.List.null t)) h) _16228) h) t) (fn t))) (((Data.Bool.cond (Data.List.null t)) h) (fn t))) ;)

(; dict ;)

def thm_30 : A : hol.type -> fn_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> t_2 : hol.term (Data_2EList_2Elist A) -> h_3 : hol.term A -> hol.proof (hol.eq A ((h_4 : hol.term A => t_5 : hol.term (Data_2EList_2Elist A) => __16228_6 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 __16228_6) h_3 t_2 (fn_1 t_2)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_2) h_3 (fn_1 t_2))) :=
  A : hol.type => fn_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => t_2 : hol.term (Data_2EList_2Elist A) => h_3 : hol.term A => hol.TRANS A ((h_4 : hol.term A => t_5 : hol.term (Data_2EList_2Elist A) => __16228_6 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 __16228_6) h_3 t_2 (fn_1 t_2)) ((__16228_4 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_2) h_3 __16228_4) (fn_1 t_2)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_2) h_3 (fn_1 t_2)) (thm_28 A fn_1 t_2 h_3) (thm_29 A fn_1 h_3 t_2).

(; Theorem: |- ((= ((= (fn ((Data.List.:: h) t))) (((\lambda h. \lambda t. \lambda _16228. (((Data.Bool.cond (Data.List.null t)) h) _16228) h) t) (fn t)))) ((= (fn ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (fn t)))) ;)

(; dict ;)

def thm_31 : A : hol.type -> t_1 : hol.term (Data_2EList_2Elist A) -> h_2 : hol.term A -> fn_3 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> hol.proof (hol.eq hol.bool (hol.eq A (fn_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_1)) ((h_4 : hol.term A => t_5 : hol.term (Data_2EList_2Elist A) => __16228_6 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 __16228_6) h_2 t_1 (fn_3 t_1))) (hol.eq A (fn_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_1)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_1) h_2 (fn_3 t_1)))) :=
  A : hol.type => t_1 : hol.term (Data_2EList_2Elist A) => h_2 : hol.term A => fn_3 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.APP_THM A hol.bool (hol.eq A (fn_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_1))) (hol.eq A (fn_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_1))) ((h_4 : hol.term A => t_5 : hol.term (Data_2EList_2Elist A) => __16228_6 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 __16228_6) h_2 t_1 (fn_3 t_1)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_1) h_2 (fn_3 t_1)) (thm_21 A t_1 h_2 fn_3) (thm_30 A fn_3 t_1 h_2).

(; Theorem: |- ((= \lambda t. ((= (fn ((Data.List.:: h) t))) (((\lambda h. \lambda t. \lambda _16228. (((Data.Bool.cond (Data.List.null t)) h) _16228) h) t) (fn t)))) \lambda t. ((= (fn ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (fn t)))) ;)

(; dict ;)

def thm_32 : A : hol.type -> h_1 : hol.term A -> fn_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> hol.proof (hol.eq (hol.arr (Data_2EList_2Elist A) hol.bool) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_1 t_3)) ((h_4 : hol.term A => t_5 : hol.term (Data_2EList_2Elist A) => __16228_6 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 __16228_6) h_1 t_3 (fn_2 t_3))) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_1 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_1 (fn_2 t_3)))) :=
  A : hol.type => h_1 : hol.term A => fn_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.ABS_THM (Data_2EList_2Elist A) hol.bool (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_1 t_3)) ((h_4 : hol.term A => t_5 : hol.term (Data_2EList_2Elist A) => __16228_6 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 __16228_6) h_1 t_3 (fn_2 t_3))) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_1 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_1 (fn_2 t_3))) (t_3 : hol.term (Data_2EList_2Elist A) => thm_31 A t_3 h_1 fn_2).

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((= (fn ((Data.List.:: h) t))) (((\lambda h. \lambda t. \lambda _16228. (((Data.Bool.cond (Data.List.null t)) h) _16228) h) t) (fn t))))) (Data.Bool.! \lambda t. ((= (fn ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (fn t))))) ;)

(; dict ;)

def thm_33 : A : hol.type -> h_1 : hol.term A -> fn_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> hol.proof (hol.eq hol.bool (hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_1 t_3)) ((h_4 : hol.term A => t_5 : hol.term (Data_2EList_2Elist A) => __16228_6 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 __16228_6) h_1 t_3 (fn_2 t_3)))) (hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_1 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_1 (fn_2 t_3))))) :=
  A : hol.type => h_1 : hol.term A => fn_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.APP_THM (hol.arr (Data_2EList_2Elist A) hol.bool) hol.bool (hol.forall (Data_2EList_2Elist A)) (hol.forall (Data_2EList_2Elist A)) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_1 t_3)) ((h_4 : hol.term A => t_5 : hol.term (Data_2EList_2Elist A) => __16228_6 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 __16228_6) h_1 t_3 (fn_2 t_3))) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_1 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_1 (fn_2 t_3))) (thm_20 A) (thm_32 A h_1 fn_2).

(; Theorem: |- ((= \lambda h. (Data.Bool.! \lambda t. ((= (fn ((Data.List.:: h) t))) (((\lambda h. \lambda t. \lambda _16228. (((Data.Bool.cond (Data.List.null t)) h) _16228) h) t) (fn t))))) \lambda h. (Data.Bool.! \lambda t. ((= (fn ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (fn t))))) ;)

(; dict ;)

def thm_34 : A : hol.type -> fn_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> hol.proof (hol.eq (hol.arr A hol.bool) (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) ((h_4 : hol.term A => t_5 : hol.term (Data_2EList_2Elist A) => __16228_6 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 __16228_6) h_2 t_3 (fn_1 t_3)))) (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (fn_1 t_3))))) :=
  A : hol.type => fn_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.ABS_THM A hol.bool (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) ((h_4 : hol.term A => t_5 : hol.term (Data_2EList_2Elist A) => __16228_6 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 __16228_6) h_2 t_3 (fn_1 t_3)))) (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (fn_1 t_3)))) (h_2 : hol.term A => thm_33 A h_2 fn_1).

(; Theorem: |- ((= (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (fn ((Data.List.:: h) t))) (((\lambda h. \lambda t. \lambda _16228. (((Data.Bool.cond (Data.List.null t)) h) _16228) h) t) (fn t)))))) (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (fn ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (fn t)))))) ;)

(; dict ;)

def thm_35 : A : hol.type -> fn_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> hol.proof (hol.eq hol.bool (hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) ((h_4 : hol.term A => t_5 : hol.term (Data_2EList_2Elist A) => __16228_6 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 __16228_6) h_2 t_3 (fn_1 t_3))))) (hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (fn_1 t_3)))))) :=
  A : hol.type => fn_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) ((h_4 : hol.term A => t_5 : hol.term (Data_2EList_2Elist A) => __16228_6 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 __16228_6) h_2 t_3 (fn_1 t_3)))) (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (fn_1 t_3)))) (thm_19 A) (thm_34 A fn_1).

(; Theorem: |- ((= ((Data.Bool./\ ((= (fn Data.List.[])) b)) (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (fn ((Data.List.:: h) t))) (((\lambda h. \lambda t. \lambda _16228. (((Data.Bool.cond (Data.List.null t)) h) _16228) h) t) (fn t))))))) ((Data.Bool./\ ((= (fn Data.List.[])) b)) (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (fn ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (fn t))))))) ;)

(; dict ;)

def thm_36 : A : hol.type -> b_1 : hol.term A -> fn_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq A (fn_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) ((h_5 : hol.term A => t_6 : hol.term (Data_2EList_2Elist A) => __16228_7 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_6) h_5 __16228_7) h_3 t_4 (fn_2 t_4)))))) (hol.and (hol.eq A (fn_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (fn_2 t_4))))))) :=
  A : hol.type => b_1 : hol.term A => fn_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq A (fn_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1)) (hol.and (hol.eq A (fn_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1)) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) ((h_5 : hol.term A => t_6 : hol.term (Data_2EList_2Elist A) => __16228_7 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_6) h_5 __16228_7) h_3 t_4 (fn_2 t_4))))) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (fn_2 t_4))))) (thm_18 A b_1 fn_2) (thm_35 A fn_2).

(; Theorem: |- ((= \lambda fn. ((Data.Bool./\ ((= (fn Data.List.[])) b)) (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (fn ((Data.List.:: h) t))) (((\lambda h. \lambda t. \lambda _16228. (((Data.Bool.cond (Data.List.null t)) h) _16228) h) t) (fn t))))))) \lambda fn. ((Data.Bool./\ ((= (fn Data.List.[])) b)) (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (fn ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (fn t))))))) ;)

(; dict ;)

def thm_37 : A : hol.type -> b_1 : hol.term A -> hol.proof (hol.eq (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) (fn_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (fn_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) ((h_5 : hol.term A => t_6 : hol.term (Data_2EList_2Elist A) => __16228_7 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_6) h_5 __16228_7) h_3 t_4 (fn_2 t_4)))))) (fn_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (fn_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (fn_2 t_4))))))) :=
  A : hol.type => b_1 : hol.term A => hol.ABS_THM (hol.arr (Data_2EList_2Elist A) A) hol.bool (fn_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (fn_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) ((h_5 : hol.term A => t_6 : hol.term (Data_2EList_2Elist A) => __16228_7 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_6) h_5 __16228_7) h_3 t_4 (fn_2 t_4)))))) (fn_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (fn_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (fn_2 t_4)))))) (fn_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => thm_36 A b_1 fn_2).

(; Theorem: |- ((= (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn Data.List.[])) b)) (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (fn ((Data.List.:: h) t))) (((\lambda h. \lambda t. \lambda _16228. (((Data.Bool.cond (Data.List.null t)) h) _16228) h) t) (fn t)))))))) (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn Data.List.[])) b)) (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (fn ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (fn t)))))))) ;)

(; dict ;)

def thm_38 : A : hol.type -> b_1 : hol.term A -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (fn_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (fn_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) ((h_5 : hol.term A => t_6 : hol.term (Data_2EList_2Elist A) => __16228_7 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_6) h_5 __16228_7) h_3 t_4 (fn_2 t_4))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (fn_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (fn_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (fn_2 t_4)))))))) :=
  A : hol.type => b_1 : hol.term A => hol.APP_THM (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool)) (fn_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (fn_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) ((h_5 : hol.term A => t_6 : hol.term (Data_2EList_2Elist A) => __16228_7 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_6) h_5 __16228_7) h_3 t_4 (fn_2 t_4)))))) (fn_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (fn_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (fn_2 t_4)))))) (thm_17 A) (thm_37 A b_1).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn Data.List.[])) b)) (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (fn ((Data.List.:: h) t))) (((f h) t) (fn t)))))))) ;)

(; dict ;)

def thm_39 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> hol.proof (hol.forall (hol.arr A (hol.arr (Data_2EList_2Elist A) (hol.arr B B))) (f_2 : hol.term (hol.arr A (hol.arr (Data_2EList_2Elist A) (hol.arr B B))) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) B) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr (Data_2EList_2Elist A) B) => hol.and (hol.eq B (fn_3 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_4 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_5 : hol.term (Data_2EList_2Elist A) => hol.eq B (fn_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_4 t_5)) (f_2 h_4 t_5 (fn_3 t_5)))))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => thm_1 A B b_1.

(; Theorem: |- (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn Data.List.[])) b)) (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (fn ((Data.List.:: h) t))) (((f h) t) (fn t))))))) ;)

(; dict ;)

def thm_40 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr (Data_2EList_2Elist A) (hol.arr B B))) -> b_2 : hol.term B -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) B) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr (Data_2EList_2Elist A) B) => hol.and (hol.eq B (fn_3 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_2) (hol.forall A (h_4 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_5 : hol.term (Data_2EList_2Elist A) => hol.eq B (fn_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_4 t_5)) (f_1 h_4 t_5 (fn_3 t_5))))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr (Data_2EList_2Elist A) (hol.arr B B))) => b_2 : hol.term B => thm_39 B A b_2 f_1.

(; Theorem: |- (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn Data.List.[])) b)) (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (fn ((Data.List.:: h) t))) (((f h) t) (fn t))))))) ;)

(; dict ;)

def thm_41 : A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr (Data_2EList_2Elist A) (hol.arr A A))) -> b_2 : hol.term A -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (fn_3 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_2) (hol.forall A (h_4 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_5 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_4 t_5)) (f_1 h_4 t_5 (fn_3 t_5))))))) :=
  A : hol.type => f_1 : hol.term (hol.arr A (hol.arr (Data_2EList_2Elist A) (hol.arr A A))) => b_2 : hol.term A => (B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr (Data_2EList_2Elist A) (hol.arr B B))) => b_2 : hol.term B => thm_40 B A f_1 b_2) A A f_1 b_2.

(; Theorem: |- (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn Data.List.[])) b)) (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (fn ((Data.List.:: h) t))) (((\lambda h. \lambda t. \lambda _16228. (((Data.Bool.cond (Data.List.null t)) h) _16228) h) t) (fn t))))))) ;)

(; dict ;)

def thm_42 : A : hol.type -> b_1 : hol.term A -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (fn_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (fn_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) ((h_5 : hol.term A => t_6 : hol.term (Data_2EList_2Elist A) => __16228_7 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_6) h_5 __16228_7) h_3 t_4 (fn_2 t_4))))))) :=
  A : hol.type => b_1 : hol.term A => (A : hol.type => f_1 : hol.term (hol.arr A (hol.arr (Data_2EList_2Elist A) (hol.arr A A))) => b_2 : hol.term A => thm_41 A f_1 b_2) A (h_2 : hol.term A => t_3 : hol.term (Data_2EList_2Elist A) => __16228_4 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 __16228_4) b_1.

(; Theorem: |- (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn Data.List.[])) b)) (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (fn ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (fn t))))))) ;)

(; dict ;)

def thm_43 : A : hol.type -> b_1 : hol.term A -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (fn_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (fn_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (fn_2 t_4))))))) :=
  A : hol.type => b_1 : hol.term A => hol.EQ_MP (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (fn_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (fn_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) ((h_5 : hol.term A => t_6 : hol.term (Data_2EList_2Elist A) => __16228_7 : hol.term A => hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_6) h_5 __16228_7) h_3 t_4 (fn_2 t_4))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (fn_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (fn_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (fn_2 t_4))))))) (thm_38 A b_1) (thm_42 A b_1).

(; Theorem: |- ((= p) q) ;)

(; dict ;)

def thm_44 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) -> hol.proof (hol.eq hol.bool p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => hyp_1.

(; Theorem: |- p ;)

(; dict ;)

def thm_45 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof p_1 :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_46 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.eq hol.bool p_1 q_2) -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.eq hol.bool p_1 q_2) => hol.EQ_MP p_1 q_2 (thm_44 q_2 p_1 hyp_2) (thm_45 p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> p) q) ;)

(; dict ;)

def thm_47 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) -> hol.proof (hol.imp p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => hyp_2 : hol.proof p_2 => thm_46 p_2 q_1 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= p) q)) ((Data.Bool.==> p) q)) ;)

(; dict ;)

def thm_48 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 q_1) (hol.imp p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => thm_47 q_1 p_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ((Data.Bool.==> (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ;)

(; dict ;)

def thm_49 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_48 q_1 p_2) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1).

(; Theorem: |- ((= (= (Data.Bool.? P))) (= (Data.Bool.? P))) ;)

(; dict ;)

def thm_50 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)).

(; Theorem: |- ((= (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_51 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.BETA_CONV (hol.arr A hol.bool) hol.bool (p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1.

(; Theorem: |- ((= ((= (Data.Bool.? P)) (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P))) ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ;)

(; dict ;)

def thm_52 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (thm_50 A P_1) (thm_51 A P_1).

(; Theorem: |- ((= P) P) ;)

(; dict ;)

def thm_53 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) P_1 P_1) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr A hol.bool) P_1.

(; Theorem: |- ((= (Data.Bool.? P)) (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P)) ;)

(; dict ;)

def thm_54 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1 P_1 (thm_2 A) (thm_53 A P_1).

(; Theorem: |- ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_55 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) (thm_52 A P_1) (thm_54 A P_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_56 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => thm_49 A P_1 (thm_55 A P_1).

(; Theorem: |- (Data.Bool.? P) ;)

(; dict ;)

def thm_57 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)) ;)

(; dict ;)

def thm_58 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => thm_56 A P_1 (thm_57 A P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q) ;)

(; dict ;)

def thm_59 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) => thm_58 A P_2 hyp_1 Q_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q)) ;)

(; dict ;)

def thm_60 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => hyp_1.

(; Theorem: |- Q ;)

(; dict ;)

def thm_61 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) Q_2)) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof Q_2 :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) Q_2)) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => thm_59 A Q_2 P_1 hyp_2 (thm_60 A Q_2 P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? P)) Q) ;)

(; dict ;)

def thm_62 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) => thm_61 A P_2 Q_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ((Data.Bool.==> (Data.Bool.? P)) Q)) ;)

(; dict ;)

def thm_63 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => thm_62 A Q_1 P_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda LAST. ((Data.Bool./\ ((= (LAST Data.List.[])) b)) (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t)))))) x)) (Data.Bool.? \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))))))) ((Data.Bool.==> (Data.Bool.? \lambda LAST. ((Data.Bool./\ ((= (LAST Data.List.[])) b)) (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t)))))))) (Data.Bool.? \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t)))))))) ;)

(; dict ;)

def thm_64 : A : hol.type -> b_1 : hol.term A -> hol.proof (hol.imp (hol.forall (hol.arr (Data_2EList_2Elist A) A) (x_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.imp ((LAST_3 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (LAST_3 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_4 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_5 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_4 t_5)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 (LAST_3 t_5)))))) x_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_3 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_4 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_5 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_4 t_5)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 (LAST_3 t_5)))))))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (LAST_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4)))))))) :=
  A : hol.type => b_1 : hol.term A => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_63 A Q_1 P_2) (hol.arr (Data_2EList_2Elist A) A) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4)))))) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (LAST_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4)))))).

(; Theorem: |- ((= (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t)))))) (\lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))) LAST)) ;)

(; dict ;)

def thm_65 : A : hol.type -> LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> hol.proof (hol.eq hol.bool (hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3))))) ((LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))) LAST_1)) :=
  A : hol.type => LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.SYM hol.bool ((LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))) LAST_1) (hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3))))) (thm_9 A LAST_1).

(; Theorem: |- ((Data.Bool./\ ((= (LAST Data.List.[])) b)) (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t)))))) ;)

(; dict ;)

def thm_66 : A : hol.type -> b_1 : hol.term A -> LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> hyp_1 : hol.proof (hol.and (hol.eq A (LAST_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4)))))) -> hol.proof (hol.and (hol.eq A (LAST_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4)))))) :=
  A : hol.type => b_1 : hol.term A => LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hyp_1 : hol.proof (hol.and (hol.eq A (LAST_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4)))))) => hyp_1.

(; Theorem: |- ((= (= ((Data.Bool./\ p) q))) (= ((Data.Bool./\ p) q))) ;)

(; dict ;)

def thm_67 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and p_2 q_1)) (hol.eq hol.bool (hol.and p_2 q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and p_2 q_1)).

(; Theorem: |- ((= (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_68 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ p) q)) (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q))) ((= ((Data.Bool./\ p) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)))) ;)

(; dict ;)

def thm_69 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.and p_2 q_1)) (hol.eq hol.bool (hol.and p_2 q_1)) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_67 q_1 p_2) (thm_68 q_1 p_2).

(; Theorem: |- ((= (= (Data.Bool./\ p))) (= (Data.Bool./\ p))) ;)

(; dict ;)

def thm_70 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1))) :=
  p_1 : hol.term hol.bool => hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)).

(; Theorem: |- ((= (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_71 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) :=
  p_1 : hol.term hol.bool => hol.BETA_CONV hol.bool (hol.arr hol.bool hol.bool) (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1.

(; Theorem: |- ((= ((= (Data.Bool./\ p)) (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p))) ((= (Data.Bool./\ p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)))) ;)

(; dict ;)

def thm_72 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3)))) :=
  p_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3)) (thm_70 p_1) (thm_71 p_1).

(; Theorem: |- ((= p) p) ;)

(; dict ;)

def thm_73 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool p_1 p_1) :=
  p_1 : hol.term hol.bool => hol.REFL hol.bool p_1.

(; Theorem: |- ((= (Data.Bool./\ p)) (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p)) ;)

(; dict ;)

def thm_74 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1 p_1 thm_3 (thm_73 p_1).

(; Theorem: |- ((= (Data.Bool./\ p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_75 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) :=
  p_1 : hol.term hol.bool => hol.EQ_MP (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) (thm_72 p_1) (thm_74 p_1).

(; Theorem: |- ((= q) q) ;)

(; dict ;)

def thm_76 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool q_1 q_1) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool q_1.

(; Theorem: |- ((= ((Data.Bool./\ p) q)) (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q)) ;)

(; dict ;)

def thm_77 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and p_2) (q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1 q_1 (thm_75 p_2) (thm_76 q_1).

(; Theorem: |- ((= ((Data.Bool./\ p) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_78 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) (thm_69 q_1 p_2) (thm_77 q_1 p_2).

(; Theorem: |- ((Data.Bool./\ p) q) ;)

(; dict ;)

def thm_79 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.and p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) ;)

(; dict ;)

def thm_80 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => hol.EQ_MP (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_78 q_1 p_2) (thm_79 q_1 p_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) q))) q) ;)

(; dict ;)

def thm_81 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.imp (hol.imp p_2 (hol.imp q_1 q_1)) q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_80 q_1 p_2 hyp_1 q_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_82 : q_1 : hol.term hol.bool -> hyp_1 : hol.proof q_1 -> hol.proof q_1 :=
  q_1 : hol.term hol.bool => hyp_1 : hol.proof q_1 => hyp_1.

(; Theorem: |- ((= q) p) ;)

(; dict ;)

def thm_83 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof q_2 -> hol.proof (hol.eq hol.bool q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => hol.PROP_EXT q_2 p_1 (hyp_3 : hol.proof p_1 => thm_82 q_2 hyp_2) (hyp_3 : hol.proof q_2 => thm_45 p_1 hyp_1).

(; Theorem: |- ((= p) q) ;)

(; dict ;)

def thm_84 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.eq hol.bool p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.SYM hol.bool q_1 p_2 (thm_83 p_2 q_1 hyp_1 hyp_2).

(; Theorem: |- q ;)

(; dict ;)

def thm_85 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof q_2 -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => hol.EQ_MP p_1 q_2 (thm_84 q_2 p_1 hyp_1 hyp_2) (thm_45 p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> q) q) ;)

(; dict ;)

def thm_86 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.imp q_2 q_2) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => thm_85 p_1 q_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) q)) ;)

(; dict ;)

def thm_87 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp p_2 (hol.imp q_1 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => thm_86 p_2 q_1 hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_88 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_1 q_2) -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_81 q_2 p_1 hyp_1 (thm_87 q_2 p_1).

(; Theorem: |- (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))) ;)

(; dict ;)

def thm_89 : A : hol.type -> b_1 : hol.term A -> LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> hyp_1 : hol.proof (hol.and (hol.eq A (LAST_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4)))))) -> hol.proof (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))) :=
  A : hol.type => b_1 : hol.term A => LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hyp_1 : hol.proof (hol.and (hol.eq A (LAST_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4)))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_88 p_1 q_2 hyp_1) (hol.eq A (LAST_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))) ;)

(; dict ;)

def thm_90 : A : hol.type -> b_1 : hol.term A -> LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> hyp_1 : hol.proof (hol.and (hol.eq A (LAST_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4)))))) -> hol.proof (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))) :=
  A : hol.type => b_1 : hol.term A => LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hyp_1 : hol.proof (hol.and (hol.eq A (LAST_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4)))))) => hol.PROVE_HYP (hol.and (hol.eq A (LAST_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4)))))) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))) (thm_66 A b_1 LAST_2 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq A (LAST_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4)))))) => thm_89 A b_1 LAST_2 hyp_2).

(; Theorem: |- (\lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))) LAST) ;)

(; dict ;)

def thm_91 : A : hol.type -> b_1 : hol.term A -> LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> hyp_1 : hol.proof (hol.and (hol.eq A (LAST_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4)))))) -> hol.proof ((LAST_3 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_4 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_5 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_4 t_5)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 (LAST_3 t_5))))) LAST_2) :=
  A : hol.type => b_1 : hol.term A => LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hyp_1 : hol.proof (hol.and (hol.eq A (LAST_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4)))))) => hol.EQ_MP (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))) ((LAST_3 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_4 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_5 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_4 t_5)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 (LAST_3 t_5))))) LAST_2) (thm_65 A LAST_2) (thm_90 A b_1 LAST_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) (Data.Bool.? P)) ;)

(; dict ;)

def thm_92 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (thm_55 A P_1).

(; Theorem: |- ((Data.Bool.==> (P x)) Q) ;)

(; dict ;)

def thm_93 : A : hol.type -> Q_1 : hol.term hol.bool -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_1)) -> hol.proof (hol.imp (P_3 x_2) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_1)) => thm_60 A Q_1 P_3 hyp_1 x_2.

(; Theorem: |- (P x) ;)

(; dict ;)

def thm_94 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (P_2 x_1) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => hyp_1.

(; Theorem: |- Q ;)

(; dict ;)

def thm_95 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> Q_3 : hol.term hol.bool -> hyp_1 : hol.proof (P_2 x_1) -> hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) -> hol.proof Q_3 :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => Q_3 : hol.term hol.bool => hyp_1 : hol.proof (P_2 x_1) => hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) => thm_93 A Q_3 x_1 P_2 hyp_2 (thm_94 A x_1 P_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q) ;)

(; dict ;)

def thm_96 : A : hol.type -> x_1 : hol.term A -> Q_2 : hol.term hol.bool -> P_3 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_3 x_1) -> hol.proof (hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_2)) Q_2) :=
  A : hol.type => x_1 : hol.term A => Q_2 : hol.term hol.bool => P_3 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_3 x_1) => hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_2)) => thm_95 A x_1 P_3 Q_2 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda Q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q)) ;)

(; dict ;)

def thm_97 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (hol.forall hol.bool (Q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) Q_3)) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => Q_3 : hol.term hol.bool => thm_96 A x_1 Q_3 P_2 hyp_1.

(; Theorem: |- (Data.Bool.? P) ;)

(; dict ;)

def thm_98 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => hol.EQ_MP (hol.forall hol.bool (Q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) Q_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) (thm_92 A P_2) (thm_97 A x_1 P_2 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t)))))) ;)

(; dict ;)

def thm_99 : A : hol.type -> LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> hyp_1 : hol.proof ((LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))) LAST_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4)))))) :=
  A : hol.type => LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hyp_1 : hol.proof ((LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))) LAST_1) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_98 A x_1 P_2 hyp_1) (hol.arr (Data_2EList_2Elist A) A) LAST_1 (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t)))))) ;)

(; dict ;)

def thm_100 : A : hol.type -> b_1 : hol.term A -> LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> hyp_1 : hol.proof (hol.and (hol.eq A (LAST_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4)))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_3 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_4 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_5 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_4 t_5)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 (LAST_3 t_5)))))) :=
  A : hol.type => b_1 : hol.term A => LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hyp_1 : hol.proof (hol.and (hol.eq A (LAST_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4)))))) => hol.PROVE_HYP ((LAST_3 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_4 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_5 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_4 t_5)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 (LAST_3 t_5))))) LAST_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_3 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_4 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_5 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_4 t_5)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 (LAST_3 t_5)))))) (thm_91 A b_1 LAST_2 hyp_1) (hyp_2 : hol.proof ((LAST_3 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_4 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_5 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_4 t_5)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 (LAST_3 t_5))))) LAST_2) => thm_99 A LAST_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= (LAST Data.List.[])) b)) (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))))) (Data.Bool.? \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))))) ;)

(; dict ;)

def thm_101 : A : hol.type -> b_1 : hol.term A -> LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> hol.proof (hol.imp (hol.and (hol.eq A (LAST_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_3 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_4 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_5 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_4 t_5)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 (LAST_3 t_5))))))) :=
  A : hol.type => b_1 : hol.term A => LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hyp_1 : hol.proof (hol.and (hol.eq A (LAST_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4)))))) => thm_100 A b_1 LAST_2 hyp_1.

(; Theorem: |- ((= (\lambda LAST. ((Data.Bool./\ ((= (LAST Data.List.[])) b)) (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t)))))) LAST)) ((Data.Bool./\ ((= (LAST Data.List.[])) b)) (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))))) ;)

(; dict ;)

def thm_102 : A : hol.type -> LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> b_2 : hol.term A -> hol.proof (hol.eq hol.bool ((LAST_3 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (LAST_3 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_2) (hol.forall A (h_4 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_5 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_4 t_5)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 (LAST_3 t_5)))))) LAST_1) (hol.and (hol.eq A (LAST_1 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_2) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_1 t_4))))))) :=
  A : hol.type => LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => b_2 : hol.term A => hol.BETA_CONV (hol.arr (Data_2EList_2Elist A) A) hol.bool (LAST_3 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (LAST_3 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_2) (hol.forall A (h_4 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_5 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_4 t_5)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 (LAST_3 t_5)))))) LAST_1.

(; Theorem: |- (\lambda LAST. ((Data.Bool./\ ((= (LAST Data.List.[])) b)) (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t)))))) LAST) ;)

(; dict ;)

def thm_103 : A : hol.type -> LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> b_2 : hol.term A -> hyp_1 : hol.proof ((LAST_3 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (LAST_3 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_2) (hol.forall A (h_4 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_5 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_4 t_5)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 (LAST_3 t_5)))))) LAST_1) -> hol.proof ((LAST_3 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (LAST_3 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_2) (hol.forall A (h_4 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_5 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_4 t_5)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 (LAST_3 t_5)))))) LAST_1) :=
  A : hol.type => LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => b_2 : hol.term A => hyp_1 : hol.proof ((LAST_3 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (LAST_3 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_2) (hol.forall A (h_4 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_5 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_4 t_5)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 (LAST_3 t_5)))))) LAST_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= (LAST Data.List.[])) b)) (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t)))))) ;)

(; dict ;)

def thm_104 : A : hol.type -> b_1 : hol.term A -> LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> hyp_1 : hol.proof ((LAST_3 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (LAST_3 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_4 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_5 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_4 t_5)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 (LAST_3 t_5)))))) LAST_2) -> hol.proof (hol.and (hol.eq A (LAST_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4)))))) :=
  A : hol.type => b_1 : hol.term A => LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hyp_1 : hol.proof ((LAST_3 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (LAST_3 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_4 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_5 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_4 t_5)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 (LAST_3 t_5)))))) LAST_2) => hol.EQ_MP ((LAST_3 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (LAST_3 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_4 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_5 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_4 t_5)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 (LAST_3 t_5)))))) LAST_2) (hol.and (hol.eq A (LAST_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4)))))) (thm_102 A LAST_2 b_1) (thm_103 A LAST_2 b_1 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t)))))) ;)

(; dict ;)

def thm_105 : A : hol.type -> LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> b_2 : hol.term A -> hyp_1 : hol.proof ((LAST_3 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (LAST_3 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_2) (hol.forall A (h_4 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_5 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_4 t_5)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 (LAST_3 t_5)))))) LAST_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_3 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_4 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_5 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_4 t_5)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 (LAST_3 t_5)))))) :=
  A : hol.type => LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => b_2 : hol.term A => hyp_1 : hol.proof ((LAST_3 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (LAST_3 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_2) (hol.forall A (h_4 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_5 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_4 t_5)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 (LAST_3 t_5)))))) LAST_1) => thm_101 A b_2 LAST_1 (thm_104 A b_2 LAST_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda LAST. ((Data.Bool./\ ((= (LAST Data.List.[])) b)) (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t)))))) LAST)) (Data.Bool.? \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))))) ;)

(; dict ;)

def thm_106 : A : hol.type -> LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> b_2 : hol.term A -> hol.proof (hol.imp ((LAST_3 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (LAST_3 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_2) (hol.forall A (h_4 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_5 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_4 t_5)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 (LAST_3 t_5)))))) LAST_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_3 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_4 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_5 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_4 t_5)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 (LAST_3 t_5))))))) :=
  A : hol.type => LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => b_2 : hol.term A => hyp_1 : hol.proof ((LAST_3 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (LAST_3 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_2) (hol.forall A (h_4 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_5 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_4 t_5)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 (LAST_3 t_5)))))) LAST_1) => thm_105 A LAST_1 b_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda LAST. ((Data.Bool.==> (\lambda LAST. ((Data.Bool./\ ((= (LAST Data.List.[])) b)) (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t)))))) LAST)) (Data.Bool.? \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t)))))))) ;)

(; dict ;)

def thm_107 : A : hol.type -> b_1 : hol.term A -> hol.proof (hol.forall (hol.arr (Data_2EList_2Elist A) A) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.imp ((LAST_3 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (LAST_3 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_4 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_5 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_4 t_5)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 (LAST_3 t_5)))))) LAST_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_3 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_4 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_5 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_3 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_4 t_5)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_5) h_4 (LAST_3 t_5)))))))) :=
  A : hol.type => b_1 : hol.term A => LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => thm_106 A LAST_2 b_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda LAST. ((Data.Bool./\ ((= (LAST Data.List.[])) b)) (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t)))))))) (Data.Bool.? \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))))) ;)

(; dict ;)

def thm_108 : A : hol.type -> b_1 : hol.term A -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (LAST_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))))) :=
  A : hol.type => b_1 : hol.term A => thm_64 A b_1 (thm_107 A b_1).

(; Theorem: |- (Data.Bool.? \lambda LAST. ((Data.Bool./\ ((= (LAST Data.List.[])) b)) (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))))) ;)

(; dict ;)

def thm_109 : A : hol.type -> b_1 : hol.term A -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (LAST_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (LAST_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))))) :=
  A : hol.type => b_1 : hol.term A => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (LAST_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))))) => hyp_1.

(; Theorem: |- (Data.Bool.? \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t)))))) ;)

(; dict ;)

def thm_110 : A : hol.type -> b_1 : hol.term A -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (LAST_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4)))))) :=
  A : hol.type => b_1 : hol.term A => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (LAST_2 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) b_1) (hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))))) => thm_108 A b_1 (thm_109 A b_1 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t)))))) ;)

(; dict ;)

def thm_111 : A : hol.type -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3)))))) :=
  A : hol.type => hol.PROVE_HYP (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (fn_1 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) (hol.witness A)) (hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (fn_1 t_3))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3)))))) (thm_43 A (hol.witness A)) (hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.and (hol.eq A (fn_1 (Data_2EList_2E_5B_5D (Data_2EList_2Elist A))) (hol.witness A)) (hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (fn_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (fn_1 t_3))))))) => thm_110 A (hol.witness A) hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))) x)) (Data.Bool.? \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))))))) ((Data.Bool.==> (Data.Bool.? \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))))) (Data.Bool.? \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t)))))))) ;)

(; dict ;)

def thm_112 : A : hol.type -> hol.proof (hol.imp (hol.forall (hol.arr (Data_2EList_2Elist A) A) (x_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.imp ((LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))) x_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4)))))))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3)))))))) :=
  A : hol.type => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_63 A Q_1 P_2) (hol.arr (Data_2EList_2Elist A) A) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3)))))) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3))))).

(; Theorem: |- ((Data.Bool.==> (\lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))) LAST)) (Data.Bool.? \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))))) ;)

(; dict ;)

def thm_113 : A : hol.type -> LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> hol.proof (hol.imp ((LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))) LAST_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))))) :=
  A : hol.type => LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hyp_1 : hol.proof ((LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))) LAST_1) => thm_99 A LAST_1 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda LAST. ((Data.Bool.==> (\lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))) LAST)) (Data.Bool.? \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t)))))))) ;)

(; dict ;)

def thm_114 : A : hol.type -> hol.proof (hol.forall (hol.arr (Data_2EList_2Elist A) A) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.imp ((LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))) LAST_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4)))))))) :=
  A : hol.type => LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => thm_113 A LAST_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))))) (Data.Bool.? \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))))) ;)

(; dict ;)

def thm_115 : A : hol.type -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3))))))) :=
  A : hol.type => thm_112 A (thm_114 A).

(; Theorem: |- (Data.Bool.? \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t)))))) ;)

(; dict ;)

def thm_116 : A : hol.type -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3)))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3)))))) :=
  A : hol.type => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3)))))) => hyp_1.

(; Theorem: |- (Data.Bool.? \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t)))))) ;)

(; dict ;)

def thm_117 : A : hol.type -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3)))))) :=
  A : hol.type => hol.PROVE_HYP (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3)))))) (thm_111 A) (hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3)))))) => thm_115 A (thm_116 A hyp_1)).

(; Theorem: |- (Data.Bool.? \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t)))))) ;)

(; dict ;)

def thm_118 : A : hol.type -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3)))))) :=
  A : hol.type => hol.PROVE_HYP (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3)))))) (thm_117 A) (hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3)))))) => thm_116 A hyp_1).

(; Theorem: |- (\lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))) (select \lambda LAST. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))))) ;)

(; dict ;)

def thm_119 : A : hol.type -> hol.proof ((LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3))))) (hol.select (hol.arr (Data_2EList_2Elist A) A) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3))))))) :=
  A : hol.type => hol.EQ_MP (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EList_2Elist A) A) hol.bool) hol.bool) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3)))))) ((LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3))))) (hol.select (hol.arr (Data_2EList_2Elist A) A) (LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3))))))) (thm_16 A) (thm_118 A).

(; Theorem: |- (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (LAST ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (LAST t))))) ;)

(; dict ;)

def thm_120 : A : hol.type -> LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) -> hyp_1 : hol.proof (hol.eq (hol.arr (Data_2EList_2Elist A) A) LAST_1 (hol.select (hol.arr (Data_2EList_2Elist A) A) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))))) -> hol.proof (hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3))))) :=
  A : hol.type => LAST_1 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hyp_1 : hol.proof (hol.eq (hol.arr (Data_2EList_2Elist A) A) LAST_1 (hol.select (hol.arr (Data_2EList_2Elist A) A) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))))) => hol.EQ_MP ((LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))) (hol.select (hol.arr (Data_2EList_2Elist A) A) (LAST_2 : hol.term (hol.arr (Data_2EList_2Elist A) A) => hol.forall A (h_3 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_4 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_2 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_3 t_4)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_4) h_3 (LAST_2 t_4))))))) (hol.forall A (h_2 : hol.term A => hol.forall (Data_2EList_2Elist A) (t_3 : hol.term (Data_2EList_2Elist A) => hol.eq A (LAST_1 (Data_2EList_2E_3A_3A (hol.arr A (hol.arr (Data_2EList_2Elist A) (Data_2EList_2Elist A))) h_2 t_3)) (hol.cond A (Data_2EList_2Enull (hol.arr (Data_2EList_2Elist A) hol.bool) t_3) h_2 (LAST_1 t_3))))) (thm_10 A LAST_1 hyp_1) (thm_119 A).
