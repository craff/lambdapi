
(; This file was generated by Holide. ;)

#REQUIRE hol.
#NAME bool_2Ddef_2Da9.

(; Theorem: |- ((= Data.Bool.cond) \lambda t. \lambda t1. \lambda t2. (select \lambda x. ((Data.Bool./\ ((Data.Bool.==> ((= t) Data.Bool.T)) ((= x) t1))) ((Data.Bool.==> ((= t) Data.Bool.F)) ((= x) t2))))) ;)

(; dict ;)

def thm_0 : A : hol.type -> hol.proof (hol.eq (hol.arr hol.bool (hol.arr A (hol.arr A A))) (hol.cond A) (t_1 : hol.term hol.bool => t1_2 : hol.term A => t2_3 : hol.term A => hol.select A (x_4 : hol.term A => hol.and (hol.imp (hol.eq hol.bool t_1 hol.true) (hol.eq A x_4 t1_2)) (hol.imp (hol.eq hol.bool t_1 hol.false) (hol.eq A x_4 t2_3))))) :=
  A : hol.type => hol.REFL (hol.arr hol.bool (hol.arr A (hol.arr A A))) (hol.cond A).
