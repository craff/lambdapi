
(; This file was generated by Holide. ;)

#REQUIRE hol.
#NAME option_2Ddest_2Dthm.

Data_2EOption_2Eoption : hol.type -> hol.type.

Data_2EOption_2Ecase_2Enone_2Esome : A : hol.type -> hol.term A.

Data_2EOption_2Enone : A : hol.type -> hol.term A.

Data_2EOption_2Esome : A : hol.type -> hol.term A.

Data_2EBool_2E_3F : A : hol.type -> hol.term A.

(; axiom ;)

thm_0 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (p_1 x_3) q_2)) q_2))).

(; axiom ;)

thm_1 : A : hol.type -> B : hol.type -> hol.proof (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))).

(; axiom ;)

thm_2 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))).

(; axiom ;)

thm_3 : A : hol.type -> B : hol.type -> hol.proof (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3))))).

(; axiom ;)

thm_4 : hol.proof hol.true.

(; axiom ;)

thm_5 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.eq A x_1 x_1)).

(; axiom ;)

thm_6 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.or (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp p_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))).

(; axiom ;)

thm_7 : A : hol.type -> hol.proof (hol.forall (Data_2EOption_2Eoption A) (x_1 : hol.term (Data_2EOption_2Eoption A) => hol.or (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2))))).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_8 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) (hol.forall (Data_2EOption_2Eoption A)) (hol.forall (Data_2EOption_2Eoption A))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) (hol.forall (Data_2EOption_2Eoption A)).

(; Theorem: |- ((= \lambda x. ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x)) \lambda x. ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x)) ;)

(; dict ;)

def thm_9 : A : hol.type -> hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) hol.bool) (x_1 : hol.term (Data_2EOption_2Eoption A) => hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1) (x_1 : hol.term (Data_2EOption_2Eoption A) => hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1)) :=
  A : hol.type => hol.REFL (hol.arr (Data_2EOption_2Eoption A) hol.bool) (x_1 : hol.term (Data_2EOption_2Eoption A) => hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1).

(; Theorem: |- ((= \lambda x. ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x)) \lambda x. ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x)) ;)

(; dict ;)

def thm_10 : A : hol.type -> hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) hol.bool) (x_1 : hol.term (Data_2EOption_2Eoption A) => hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1) (x_1 : hol.term (Data_2EOption_2Eoption A) => hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1)) :=
  A : hol.type => hol.TRANS (hol.arr (Data_2EOption_2Eoption A) hol.bool) (x_1 : hol.term (Data_2EOption_2Eoption A) => hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1) (x_1 : hol.term (Data_2EOption_2Eoption A) => hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1) (x_1 : hol.term (Data_2EOption_2Eoption A) => hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1) (thm_9 A) (thm_9 A).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x))) (Data.Bool.! \lambda x. ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x))) ;)

(; dict ;)

def thm_11 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall (Data_2EOption_2Eoption A) (x_1 : hol.term (Data_2EOption_2Eoption A) => hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1)) (hol.forall (Data_2EOption_2Eoption A) (x_1 : hol.term (Data_2EOption_2Eoption A) => hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1))) :=
  A : hol.type => hol.APP_THM (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool (hol.forall (Data_2EOption_2Eoption A)) (hol.forall (Data_2EOption_2Eoption A)) (x_1 : hol.term (Data_2EOption_2Eoption A) => hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1) (x_1 : hol.term (Data_2EOption_2Eoption A) => hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1) (thm_8 A) (thm_10 A).

(; Theorem: |- ((= p) q) ;)

(; dict ;)

def thm_12 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) -> hol.proof (hol.eq hol.bool p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => hyp_1.

(; Theorem: |- p ;)

(; dict ;)

def thm_13 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof p_1 :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_14 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.eq hol.bool p_1 q_2) -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.eq hol.bool p_1 q_2) => hol.EQ_MP p_1 q_2 (thm_12 q_2 p_1 hyp_2) (thm_13 p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> p) q) ;)

(; dict ;)

def thm_15 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) -> hol.proof (hol.imp p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => hyp_2 : hol.proof p_2 => thm_14 p_2 q_1 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= p) q)) ((Data.Bool.==> p) q)) ;)

(; dict ;)

def thm_16 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 q_1) (hol.imp p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => thm_15 q_1 p_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ((Data.Bool.==> (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ;)

(; dict ;)

def thm_17 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_16 q_1 p_2) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1).

(; Theorem: |- ((= (= (Data.Bool.? P))) (= (Data.Bool.? P))) ;)

(; dict ;)

def thm_18 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)).

(; Theorem: |- ((= (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_19 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.BETA_CONV (hol.arr A hol.bool) hol.bool (p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1.

(; Theorem: |- ((= ((= (Data.Bool.? P)) (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P))) ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ;)

(; dict ;)

def thm_20 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (thm_18 A P_1) (thm_19 A P_1).

(; Theorem: |- ((= P) P) ;)

(; dict ;)

def thm_21 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) P_1 P_1) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr A hol.bool) P_1.

(; Theorem: |- ((= (Data.Bool.? P)) (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P)) ;)

(; dict ;)

def thm_22 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1 P_1 (thm_0 A) (thm_21 A P_1).

(; Theorem: |- ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_23 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) (thm_20 A P_1) (thm_22 A P_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_24 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => thm_17 A P_1 (thm_23 A P_1).

(; Theorem: |- (Data.Bool.? P) ;)

(; dict ;)

def thm_25 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)) ;)

(; dict ;)

def thm_26 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => thm_24 A P_1 (thm_25 A P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q) ;)

(; dict ;)

def thm_27 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) => thm_26 A P_2 hyp_1 Q_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q)) ;)

(; dict ;)

def thm_28 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => hyp_1.

(; Theorem: |- Q ;)

(; dict ;)

def thm_29 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) Q_2)) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof Q_2 :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) Q_2)) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => thm_27 A Q_2 P_1 hyp_2 (thm_28 A Q_2 P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? P)) Q) ;)

(; dict ;)

def thm_30 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) => thm_29 A P_2 Q_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ((Data.Bool.==> (Data.Bool.? P)) Q)) ;)

(; dict ;)

def thm_31 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => thm_30 A Q_1 P_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda a. ((= x) (Data.Option.some a)) x)) ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x)))) ((Data.Bool.==> (Data.Bool.? \lambda a. ((= x) (Data.Option.some a)))) ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x))) ;)

(; dict ;)

def thm_32 : A : hol.type -> x_1 : hol.term (Data_2EOption_2Eoption A) -> hol.proof (hol.imp (hol.forall A (x_2 : hol.term A => hol.imp ((a_3 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) x_2) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2))) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1))) :=
  A : hol.type => x_1 : hol.term (Data_2EOption_2Eoption A) => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_31 A Q_1 P_2) A (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)).

(; Theorem: |- ((= x) (Data.Option.some a)) ;)

(; dict ;)

def thm_33 : A : hol.type -> a_1 : hol.term A -> x_2 : hol.term (Data_2EOption_2Eoption A) -> hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) -> hol.proof (hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) :=
  A : hol.type => a_1 : hol.term A => x_2 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) => hyp_1.

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_34 : A : hol.type -> hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) (hol.arr (Data_2EOption_2Eoption A) hol.bool)) (hol.eq (Data_2EOption_2Eoption A)) (hol.eq (Data_2EOption_2Eoption A))) :=
  A : hol.type => hol.REFL (hol.arr (Data_2EOption_2Eoption A) (hol.arr (Data_2EOption_2Eoption A) hol.bool)) (hol.eq (Data_2EOption_2Eoption A)).

(; Theorem: |- ((= ((Data.Option.case.none.some Data.Option.none) Data.Option.some)) ((Data.Option.case.none.some Data.Option.none) Data.Option.some)) ;)

(; dict ;)

def thm_35 : A : hol.type -> hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)))) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))))) :=
  A : hol.type => hol.REFL (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)))).

(; Theorem: |- ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) (((Data.Option.case.none.some Data.Option.none) Data.Option.some) (Data.Option.some a))) ;)

(; dict ;)

def thm_36 : A : hol.type -> a_1 : hol.term A -> x_2 : hol.term (Data_2EOption_2Eoption A) -> hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) -> hol.proof (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_2) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))) :=
  A : hol.type => a_1 : hol.term A => x_2 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) => hol.APP_THM (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)))) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)))) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1) (thm_35 A) (thm_33 A a_1 x_2 hyp_1).

(; Theorem: |- ((= ((= (((Data.Option.case.none.some b) f) (Data.Option.some a))) (f a))) ((= (((Data.Option.case.none.some b) f) (Data.Option.some a))) (f a))) ;)

(; dict ;)

def thm_37 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> b_3 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_3 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) (f_2 a_1)) (hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_3 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) (f_2 a_1))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => f_2 : hol.term (hol.arr A B) => b_3 : hol.term B => hol.REFL hol.bool (hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_3 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) (f_2 a_1)).

(; Theorem: |- ((= ((= (((Data.Option.case.none.some b) f) (Data.Option.some a))) (f a))) ((= (((Data.Option.case.none.some b) f) (Data.Option.some a))) (f a))) ;)

(; dict ;)

def thm_38 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> b_3 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_3 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) (f_2 a_1)) (hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_3 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) (f_2 a_1))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => f_2 : hol.term (hol.arr A B) => b_3 : hol.term B => hol.TRANS hol.bool (hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_3 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) (f_2 a_1)) (hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_3 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) (f_2 a_1)) (hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_3 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) (f_2 a_1)) (thm_37 A B a_1 f_2 b_3) (thm_37 A B a_1 f_2 b_3).

(; Theorem: |- ((= (= ((Data.Bool./\ p) q))) (= ((Data.Bool./\ p) q))) ;)

(; dict ;)

def thm_39 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and p_2 q_1)) (hol.eq hol.bool (hol.and p_2 q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and p_2 q_1)).

(; Theorem: |- ((= (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_40 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ p) q)) (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q))) ((= ((Data.Bool./\ p) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)))) ;)

(; dict ;)

def thm_41 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.and p_2 q_1)) (hol.eq hol.bool (hol.and p_2 q_1)) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_39 q_1 p_2) (thm_40 q_1 p_2).

(; Theorem: |- ((= (= (Data.Bool./\ p))) (= (Data.Bool./\ p))) ;)

(; dict ;)

def thm_42 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1))) :=
  p_1 : hol.term hol.bool => hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)).

(; Theorem: |- ((= (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_43 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) :=
  p_1 : hol.term hol.bool => hol.BETA_CONV hol.bool (hol.arr hol.bool hol.bool) (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1.

(; Theorem: |- ((= ((= (Data.Bool./\ p)) (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p))) ((= (Data.Bool./\ p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)))) ;)

(; dict ;)

def thm_44 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3)))) :=
  p_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3)) (thm_42 p_1) (thm_43 p_1).

(; Theorem: |- ((= p) p) ;)

(; dict ;)

def thm_45 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool p_1 p_1) :=
  p_1 : hol.term hol.bool => hol.REFL hol.bool p_1.

(; Theorem: |- ((= (Data.Bool./\ p)) (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p)) ;)

(; dict ;)

def thm_46 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1 p_1 thm_2 (thm_45 p_1).

(; Theorem: |- ((= (Data.Bool./\ p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_47 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) :=
  p_1 : hol.term hol.bool => hol.EQ_MP (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) (thm_44 p_1) (thm_46 p_1).

(; Theorem: |- ((= q) q) ;)

(; dict ;)

def thm_48 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool q_1 q_1) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool q_1.

(; Theorem: |- ((= ((Data.Bool./\ p) q)) (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q)) ;)

(; dict ;)

def thm_49 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and p_2) (q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1 q_1 (thm_47 p_2) (thm_48 q_1).

(; Theorem: |- ((= ((Data.Bool./\ p) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_50 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) (thm_41 q_1 p_2) (thm_49 q_1 p_2).

(; Theorem: |- ((Data.Bool./\ p) q) ;)

(; dict ;)

def thm_51 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.and p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) ;)

(; dict ;)

def thm_52 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => hol.EQ_MP (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_50 q_1 p_2) (thm_51 q_1 p_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) q))) q) ;)

(; dict ;)

def thm_53 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.imp (hol.imp p_2 (hol.imp q_1 q_1)) q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_52 q_1 p_2 hyp_1 q_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_54 : q_1 : hol.term hol.bool -> hyp_1 : hol.proof q_1 -> hol.proof q_1 :=
  q_1 : hol.term hol.bool => hyp_1 : hol.proof q_1 => hyp_1.

(; Theorem: |- ((= p) q) ;)

(; dict ;)

def thm_55 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.eq hol.bool p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.PROP_EXT p_2 q_1 (hyp_3 : hol.proof q_1 => thm_13 p_2 hyp_1) (hyp_3 : hol.proof p_2 => thm_54 q_1 hyp_2).

(; Theorem: |- q ;)

(; dict ;)

def thm_56 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof q_2 -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => hol.EQ_MP p_1 q_2 (thm_55 q_2 p_1 hyp_1 hyp_2) (thm_13 p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> q) q) ;)

(; dict ;)

def thm_57 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.imp q_2 q_2) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => thm_56 p_1 q_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) q)) ;)

(; dict ;)

def thm_58 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp p_2 (hol.imp q_1 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => thm_57 p_2 q_1 hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_59 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_1 q_2) -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_53 q_2 p_1 hyp_1 (thm_58 q_2 p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ((Data.Bool./\ p) q)) ;)

(; dict ;)

def thm_60 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (hol.and p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.SYM hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_50 q_1 p_2).

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) x)) ;)

(; dict ;)

def thm_61 : x_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) -> hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) :=
  x_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) => hyp_1.

(; Theorem: |- ((Data.Bool.==> q) x) ;)

(; dict ;)

def thm_62 : p_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.imp p_1 (hol.imp q_3 x_2)) -> hol.proof (hol.imp q_3 x_2) :=
  p_1 : hol.term hol.bool => x_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.imp p_1 (hol.imp q_3 x_2)) => thm_61 x_2 q_3 p_1 hyp_2 (thm_13 p_1 hyp_1).

(; Theorem: |- x ;)

(; dict ;)

def thm_63 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hyp_3 : hol.proof (hol.imp p_2 (hol.imp q_1 x_3)) -> hol.proof x_3 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hyp_3 : hol.proof (hol.imp p_2 (hol.imp q_1 x_3)) => thm_62 p_2 x_3 q_1 hyp_1 hyp_3 (thm_54 q_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x) ;)

(; dict ;)

def thm_64 : x_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof p_3 -> hyp_2 : hol.proof q_2 -> hol.proof (hol.imp (hol.imp p_3 (hol.imp q_2 x_1)) x_1) :=
  x_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof p_3 => hyp_2 : hol.proof q_2 => hyp_3 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) => thm_63 q_2 p_3 x_1 hyp_1 hyp_2 hyp_3.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) ;)

(; dict ;)

def thm_65 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => x_3 : hol.term hol.bool => thm_64 x_3 q_1 p_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool./\ p) q) ;)

(; dict ;)

def thm_66 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.and p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.EQ_MP (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (hol.and p_2 q_1) (thm_60 q_1 p_2) (thm_65 q_1 p_2 hyp_1 hyp_2).

(; Theorem: |- ((= q) ((Data.Bool./\ p) q)) ;)

(; dict ;)

def thm_67 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.eq hol.bool q_2 (hol.and p_1 q_2)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hol.PROP_EXT q_2 (hol.and p_1 q_2) (hyp_2 : hol.proof (hol.and p_1 q_2) => thm_59 p_1 q_2 hyp_2) (hyp_2 : hol.proof q_2 => thm_66 q_2 p_1 hyp_1 hyp_2).

(; Theorem: |- ((= (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((Data.Option.case.none.some b) f) (Data.Option.some a))) (f a)))))) ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((Data.Option.case.none.some b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((Data.Option.case.none.some b) f) (Data.Option.some a))) (f a))))))) ;)

(; dict ;)

def thm_68 : A : hol.type -> B : hol.type -> hyp_1 : hol.proof (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) -> hol.proof (hol.eq hol.bool (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3))))) (hol.and (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3))))))) :=
  A : hol.type => B : hol.type => hyp_1 : hol.proof (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_67 p_1 q_2 hyp_1) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3))))) hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((Data.Option.case.none.some b) f) (Data.Option.some a))) (f a)))))) ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((Data.Option.case.none.some b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((Data.Option.case.none.some b) f) (Data.Option.some a))) (f a))))))) ;)

(; dict ;)

def thm_69 : A : hol.type -> B : hol.type -> hol.proof (hol.eq hol.bool (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3))))) (hol.and (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3))))))) :=
  A : hol.type => B : hol.type => hol.PROVE_HYP (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.eq hol.bool (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3))))) (hol.and (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3))))))) (thm_1 A B) (hyp_1 : hol.proof (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) => thm_68 A B hyp_1).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((Data.Option.case.none.some b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((Data.Option.case.none.some b) f) (Data.Option.some a))) (f a)))))) ;)

(; dict ;)

def thm_70 : A : hol.type -> B : hol.type -> hol.proof (hol.and (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3)))))) :=
  A : hol.type => B : hol.type => hol.EQ_MP (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3))))) (hol.and (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3)))))) (thm_69 A B) (thm_3 A B).

(; Theorem: |- (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((Data.Option.case.none.some b) f) (Data.Option.some a))) (f a))))) ;)

(; dict ;)

def thm_71 : A : hol.type -> B : hol.type -> hyp_1 : hol.proof (hol.and (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3)))))) -> hol.proof (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3))))) :=
  A : hol.type => B : hol.type => hyp_1 : hol.proof (hol.and (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3)))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_59 p_1 q_2 hyp_1) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3))))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((Data.Option.case.none.some b) f) (Data.Option.some a))) (f a))))) ;)

(; dict ;)

def thm_72 : A : hol.type -> B : hol.type -> hol.proof (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3))))) :=
  A : hol.type => B : hol.type => hol.PROVE_HYP (hol.and (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3)))))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3))))) (thm_70 A B) (hyp_1 : hol.proof (hol.and (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3)))))) => thm_71 A B hyp_1).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((Data.Option.case.none.some b) f) (Data.Option.some a))) (f a)))) ;)

(; dict ;)

def thm_73 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> hol.proof (hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => thm_72 A B b_1.

(; Theorem: |- (Data.Bool.! \lambda a. ((= (((Data.Option.case.none.some b) f) (Data.Option.some a))) (f a))) ;)

(; dict ;)

def thm_74 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> hol.proof (hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_2 f_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_1 a_3))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => b_2 : hol.term B => thm_73 B A b_2 f_1.

(; Theorem: |- ((= (((Data.Option.case.none.some b) f) (Data.Option.some a))) (f a)) ;)

(; dict ;)

def thm_75 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> b_3 : hol.term B -> hol.proof (hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_3 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) (f_2 a_1)) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => f_2 : hol.term (hol.arr A B) => b_3 : hol.term B => thm_74 B A f_2 b_3 a_1.

(; Theorem: |- ((= (((Data.Option.case.none.some b) f) (Data.Option.some a))) (f a)) ;)

(; dict ;)

def thm_76 : A : hol.type -> a_1 : hol.term A -> f_2 : hol.term (hol.arr A (Data_2EOption_2Eoption A)) -> b_3 : hol.term (Data_2EOption_2Eoption A) -> hol.proof (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) b_3 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) (f_2 a_1)) :=
  A : hol.type => a_1 : hol.term A => f_2 : hol.term (hol.arr A (Data_2EOption_2Eoption A)) => b_3 : hol.term (Data_2EOption_2Eoption A) => (A : hol.type => B : hol.type => a_1 : hol.term A => f_2 : hol.term (hol.arr A B) => b_3 : hol.term B => hol.EQ_MP (hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_3 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) (f_2 a_1)) (hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_3 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) (f_2 a_1)) (thm_38 A B a_1 f_2 b_3) (thm_75 A B a_1 f_2 b_3)) A (Data_2EOption_2Eoption A) a_1 f_2 b_3.

(; Theorem: |- ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) (Data.Option.some a))) (Data.Option.some a)) ;)

(; dict ;)

def thm_77 : A : hol.type -> a_1 : hol.term A -> hol.proof (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) :=
  A : hol.type => a_1 : hol.term A => (A : hol.type => a_1 : hol.term A => f_2 : hol.term (hol.arr A (Data_2EOption_2Eoption A)) => b_3 : hol.term (Data_2EOption_2Eoption A) => thm_76 A a_1 f_2 b_3) A a_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)).

(; Theorem: |- ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) (Data.Option.some a)) ;)

(; dict ;)

def thm_78 : A : hol.type -> a_1 : hol.term A -> x_2 : hol.term (Data_2EOption_2Eoption A) -> hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) -> hol.proof (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_2) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) :=
  A : hol.type => a_1 : hol.term A => x_2 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) => hol.TRANS (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_2) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1) (thm_36 A a_1 x_2 hyp_1) (thm_77 A a_1).

(; Theorem: |- ((= (= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x))) (= (Data.Option.some a))) ;)

(; dict ;)

def thm_79 : A : hol.type -> a_1 : hol.term A -> x_2 : hol.term (Data_2EOption_2Eoption A) -> hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) -> hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) hol.bool) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_2)) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))) :=
  A : hol.type => a_1 : hol.term A => x_2 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) => hol.APP_THM (Data_2EOption_2Eoption A) (hol.arr (Data_2EOption_2Eoption A) hol.bool) (hol.eq (Data_2EOption_2Eoption A)) (hol.eq (Data_2EOption_2Eoption A)) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_2) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1) (thm_34 A) (thm_78 A a_1 x_2 hyp_1).

(; Theorem: |- ((= ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x)) ((= (Data.Option.some a)) (Data.Option.some a))) ;)

(; dict ;)

def thm_80 : A : hol.type -> a_1 : hol.term A -> x_2 : hol.term (Data_2EOption_2Eoption A) -> hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) -> hol.proof (hol.eq hol.bool (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_2) x_2) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))) :=
  A : hol.type => a_1 : hol.term A => x_2 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) => hol.APP_THM (Data_2EOption_2Eoption A) hol.bool (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_2)) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1) (thm_79 A a_1 x_2 hyp_1) (thm_33 A a_1 x_2 hyp_1).

(; Theorem: |- ((= ((= ((= x) x)) Data.Bool.T)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_81 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.REFL hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true).

(; Theorem: |- ((= ((= ((= x) x)) Data.Bool.T)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_82 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_81 A x_1) (thm_81 A x_1).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_83 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (hol.forall A) (hol.forall A)) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A hol.bool) hol.bool) (hol.forall A).

(; Theorem: |- ((= \lambda x. ((= ((= x) x)) Data.Bool.T)) \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_84 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => hol.REFL (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true).

(; Theorem: |- ((= \lambda x. ((= ((= x) x)) Data.Bool.T)) \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_85 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => hol.TRANS (hol.arr A hol.bool) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_84 A) (thm_84 A).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T))) (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T))) ;)

(; dict ;)

def thm_86 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true))) :=
  A : hol.type => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_83 A) (thm_85 A).

(; Theorem: |- ((= t) Data.Bool.T) ;)

(; dict ;)

def thm_87 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof (hol.eq hol.bool t_1 hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hyp_1.

(; Theorem: |- ((= Data.Bool.T) t) ;)

(; dict ;)

def thm_88 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof (hol.eq hol.bool hol.true t_1) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hol.SYM hol.bool t_1 hol.true (thm_87 t_1 hyp_1).

(; Theorem: |- t ;)

(; dict ;)

def thm_89 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) -> hol.proof t_1 :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => hol.EQ_MP hol.true t_1 (thm_88 t_1 hyp_1) thm_4.

(; Theorem: |- t ;)

(; dict ;)

def thm_90 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof t_1 -> hol.proof t_1 :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof t_1 => hyp_1.

(; Theorem: |- ((= t) Data.Bool.T) ;)

(; dict ;)

def thm_91 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof t_1 -> hol.proof (hol.eq hol.bool t_1 hol.true) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof t_1 => hol.PROP_EXT t_1 hol.true (hyp_2 : hol.proof hol.true => thm_90 t_1 hyp_1) (hyp_2 : hol.proof t_1 => thm_4).

(; Theorem: |- ((= t) ((= t) Data.Bool.T)) ;)

(; dict ;)

def thm_92 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool t_1 (hol.eq hol.bool t_1 hol.true)) :=
  t_1 : hol.term hol.bool => hol.PROP_EXT t_1 (hol.eq hol.bool t_1 hol.true) (hyp_1 : hol.proof (hol.eq hol.bool t_1 hol.true) => thm_89 t_1 hyp_1) (hyp_1 : hol.proof t_1 => thm_91 t_1 hyp_1).

(; Theorem: |- ((= ((= x) x)) ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_93 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_1 x_1) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => (t_1 : hol.term hol.bool => thm_92 t_1) (hol.eq A x_1 x_1).

(; Theorem: |- ((= x) x) ;)

(; dict ;)

def thm_94 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq A x_1 x_1) :=
  A : hol.type => x_1 : hol.term A => thm_5 A x_1.

(; Theorem: |- ((= ((= x) x)) Data.Bool.T) ;)

(; dict ;)

def thm_95 : A : hol.type -> x_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) :=
  A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq A x_1 x_1) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_93 A x_1) (thm_94 A x_1).

(; Theorem: |- (Data.Bool.! \lambda x. ((= ((= x) x)) Data.Bool.T)) ;)

(; dict ;)

def thm_96 : A : hol.type -> hol.proof (hol.forall A (x_1 : hol.term A => hol.eq hol.bool (hol.eq A x_1 x_1) hol.true)) :=
  A : hol.type => x_1 : hol.term A => (A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_81 A x_1) (thm_95 A x_1)) A x_1.

(; Theorem: |- ((= ((= x) x)) Data.Bool.T) ;)

(; dict ;)

def thm_97 : A : hol.type -> x_1 : hol.term (Data_2EOption_2Eoption A) -> hol.proof (hol.eq hol.bool (hol.eq (Data_2EOption_2Eoption A) x_1 x_1) hol.true) :=
  A : hol.type => x_1 : hol.term (Data_2EOption_2Eoption A) => (A : hol.type => x_1 : hol.term A => hol.EQ_MP (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (hol.eq hol.bool (hol.eq A x_1 x_1) hol.true) (thm_82 A x_1) (hol.EQ_MP (hol.forall A (x_2 : hol.term A => hol.eq hol.bool (hol.eq A x_2 x_2) hol.true)) (hol.forall A (x_2 : hol.term A => hol.eq hol.bool (hol.eq A x_2 x_2) hol.true)) (thm_86 A) (thm_96 A) x_1)) (Data_2EOption_2Eoption A) x_1.

(; Theorem: |- ((= ((= (Data.Option.some a)) (Data.Option.some a))) Data.Bool.T) ;)

(; dict ;)

def thm_98 : A : hol.type -> a_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) hol.true) :=
  A : hol.type => a_1 : hol.term A => (A : hol.type => x_1 : hol.term (Data_2EOption_2Eoption A) => thm_97 A x_1) A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1).

(; Theorem: |- ((= ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x)) Data.Bool.T) ;)

(; dict ;)

def thm_99 : A : hol.type -> a_1 : hol.term A -> x_2 : hol.term (Data_2EOption_2Eoption A) -> hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) -> hol.proof (hol.eq hol.bool (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_2) x_2) hol.true) :=
  A : hol.type => a_1 : hol.term A => x_2 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) => hol.TRANS hol.bool (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_2) x_2) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) hol.true (thm_80 A a_1 x_2 hyp_1) (thm_98 A a_1).

(; Theorem: |- ((= Data.Bool.T) ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x)) ;)

(; dict ;)

def thm_100 : A : hol.type -> a_1 : hol.term A -> x_2 : hol.term (Data_2EOption_2Eoption A) -> hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) -> hol.proof (hol.eq hol.bool hol.true (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_2) x_2)) :=
  A : hol.type => a_1 : hol.term A => x_2 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) => hol.SYM hol.bool (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_2) x_2) hol.true (thm_99 A a_1 x_2 hyp_1).

(; Theorem: |- ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x) ;)

(; dict ;)

def thm_101 : A : hol.type -> a_1 : hol.term A -> x_2 : hol.term (Data_2EOption_2Eoption A) -> hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) -> hol.proof (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_2) x_2) :=
  A : hol.type => a_1 : hol.term A => x_2 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) => hol.EQ_MP hol.true (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_2) x_2) (thm_100 A a_1 x_2 hyp_1) thm_4.

(; Theorem: |- ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x) ;)

(; dict ;)

def thm_102 : A : hol.type -> a_1 : hol.term A -> x_2 : hol.term (Data_2EOption_2Eoption A) -> hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) -> hol.proof (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_2) x_2) :=
  A : hol.type => a_1 : hol.term A => x_2 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) => hol.PROVE_HYP (hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_2) x_2) (thm_33 A a_1 x_2 hyp_1) (hyp_2 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) => thm_101 A a_1 x_2 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((= x) (Data.Option.some a))) ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x)) ;)

(; dict ;)

def thm_103 : A : hol.type -> a_1 : hol.term A -> x_2 : hol.term (Data_2EOption_2Eoption A) -> hol.proof (hol.imp (hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_2) x_2)) :=
  A : hol.type => a_1 : hol.term A => x_2 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) => thm_102 A a_1 x_2 hyp_1.

(; Theorem: |- ((= (\lambda a. ((= x) (Data.Option.some a)) a)) ((= x) (Data.Option.some a))) ;)

(; dict ;)

def thm_104 : A : hol.type -> a_1 : hol.term A -> x_2 : hol.term (Data_2EOption_2Eoption A) -> hol.proof (hol.eq hol.bool ((a_3 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) a_1) (hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))) :=
  A : hol.type => a_1 : hol.term A => x_2 : hol.term (Data_2EOption_2Eoption A) => hol.BETA_CONV A hol.bool (a_3 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) a_1.

(; Theorem: |- (\lambda a. ((= x) (Data.Option.some a)) a) ;)

(; dict ;)

def thm_105 : A : hol.type -> a_1 : hol.term A -> x_2 : hol.term (Data_2EOption_2Eoption A) -> hyp_1 : hol.proof ((a_3 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) a_1) -> hol.proof ((a_3 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) a_1) :=
  A : hol.type => a_1 : hol.term A => x_2 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof ((a_3 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) a_1) => hyp_1.

(; Theorem: |- ((= x) (Data.Option.some a)) ;)

(; dict ;)

def thm_106 : A : hol.type -> a_1 : hol.term A -> x_2 : hol.term (Data_2EOption_2Eoption A) -> hyp_1 : hol.proof ((a_3 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) a_1) -> hol.proof (hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) :=
  A : hol.type => a_1 : hol.term A => x_2 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof ((a_3 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) a_1) => hol.EQ_MP ((a_3 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) a_1) (hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) (thm_104 A a_1 x_2) (thm_105 A a_1 x_2 hyp_1).

(; Theorem: |- ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x) ;)

(; dict ;)

def thm_107 : A : hol.type -> a_1 : hol.term A -> x_2 : hol.term (Data_2EOption_2Eoption A) -> hyp_1 : hol.proof ((a_3 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) a_1) -> hol.proof (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_2) x_2) :=
  A : hol.type => a_1 : hol.term A => x_2 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof ((a_3 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) a_1) => thm_103 A a_1 x_2 (thm_106 A a_1 x_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda a. ((= x) (Data.Option.some a)) a)) ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x)) ;)

(; dict ;)

def thm_108 : A : hol.type -> a_1 : hol.term A -> x_2 : hol.term (Data_2EOption_2Eoption A) -> hol.proof (hol.imp ((a_3 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) a_1) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_2) x_2)) :=
  A : hol.type => a_1 : hol.term A => x_2 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof ((a_3 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) a_1) => thm_107 A a_1 x_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda a. ((Data.Bool.==> (\lambda a. ((= x) (Data.Option.some a)) a)) ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x))) ;)

(; dict ;)

def thm_109 : A : hol.type -> x_1 : hol.term (Data_2EOption_2Eoption A) -> hol.proof (hol.forall A (a_2 : hol.term A => hol.imp ((a_3 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) a_2) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1))) :=
  A : hol.type => x_1 : hol.term (Data_2EOption_2Eoption A) => a_2 : hol.term A => thm_108 A a_2 x_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda a. ((= x) (Data.Option.some a)))) ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x)) ;)

(; dict ;)

def thm_110 : A : hol.type -> x_1 : hol.term (Data_2EOption_2Eoption A) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2))) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1)) :=
  A : hol.type => x_1 : hol.term (Data_2EOption_2Eoption A) => thm_32 A x_1 (thm_109 A x_1).

(; Theorem: |- (Data.Bool.? \lambda a. ((= x) (Data.Option.some a))) ;)

(; dict ;)

def thm_111 : A : hol.type -> x_1 : hol.term (Data_2EOption_2Eoption A) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2))) :=
  A : hol.type => x_1 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2))) => hyp_1.

(; Theorem: |- ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x) ;)

(; dict ;)

def thm_112 : A : hol.type -> x_1 : hol.term (Data_2EOption_2Eoption A) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2))) -> hol.proof (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1) :=
  A : hol.type => x_1 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2))) => thm_110 A x_1 (thm_111 A x_1 hyp_1).

(; Theorem: |- ((= x) Data.Option.none) ;)

(; dict ;)

def thm_113 : A : hol.type -> x_1 : hol.term (Data_2EOption_2Eoption A) -> hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) -> hol.proof (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) :=
  A : hol.type => x_1 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) => hyp_1.

(; Theorem: |- ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) (((Data.Option.case.none.some Data.Option.none) Data.Option.some) Data.Option.none)) ;)

(; dict ;)

def thm_114 : A : hol.type -> x_1 : hol.term (Data_2EOption_2Eoption A) -> hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) -> hol.proof (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) :=
  A : hol.type => x_1 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) => hol.APP_THM (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)))) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)))) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (thm_35 A) (thm_113 A x_1 hyp_1).

(; Theorem: |- ((= ((= (((Data.Option.case.none.some b) f) Data.Option.none)) b)) ((= (((Data.Option.case.none.some b) f) Data.Option.none)) b)) ;)

(; dict ;)

def thm_115 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_2 f_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2) (hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_2 f_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2)) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => b_2 : hol.term B => hol.REFL hol.bool (hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_2 f_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2).

(; Theorem: |- ((= ((= (((Data.Option.case.none.some b) f) Data.Option.none)) b)) ((= (((Data.Option.case.none.some b) f) Data.Option.none)) b)) ;)

(; dict ;)

def thm_116 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> hol.proof (hol.eq hol.bool (hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_2 f_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2) (hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_2 f_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2)) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => b_2 : hol.term B => hol.TRANS hol.bool (hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_2 f_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2) (hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_2 f_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2) (hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_2 f_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2) (thm_115 A B f_1 b_2) (thm_115 A B f_1 b_2).

(; Theorem: |- (Data.Bool.! \lambda f. ((= (((Data.Option.case.none.some b) f) Data.Option.none)) b)) ;)

(; dict ;)

def thm_117 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> hol.proof (hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1)) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => thm_1 A B b_1.

(; Theorem: |- ((= (((Data.Option.case.none.some b) f) Data.Option.none)) b) ;)

(; dict ;)

def thm_118 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> hol.proof (hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_2 f_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => b_2 : hol.term B => thm_117 B A b_2 f_1.

(; Theorem: |- ((= (((Data.Option.case.none.some b) f) Data.Option.none)) b) ;)

(; dict ;)

def thm_119 : A : hol.type -> f_1 : hol.term (hol.arr A (Data_2EOption_2Eoption A)) -> b_2 : hol.term (Data_2EOption_2Eoption A) -> hol.proof (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) b_2 f_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2) :=
  A : hol.type => f_1 : hol.term (hol.arr A (Data_2EOption_2Eoption A)) => b_2 : hol.term (Data_2EOption_2Eoption A) => (A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => b_2 : hol.term B => hol.EQ_MP (hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_2 f_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2) (hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) b_2 f_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2) (thm_116 A B f_1 b_2) (thm_118 A B f_1 b_2)) A (Data_2EOption_2Eoption A) f_1 b_2.

(; Theorem: |- ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) Data.Option.none)) Data.Option.none) ;)

(; dict ;)

def thm_120 : A : hol.type -> hol.proof (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) :=
  A : hol.type => (A : hol.type => f_1 : hol.term (hol.arr A (Data_2EOption_2Eoption A)) => b_2 : hol.term (Data_2EOption_2Eoption A) => thm_119 A f_1 b_2) A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)).

(; Theorem: |- ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) Data.Option.none) ;)

(; dict ;)

def thm_121 : A : hol.type -> x_1 : hol.term (Data_2EOption_2Eoption A) -> hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) -> hol.proof (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) :=
  A : hol.type => x_1 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) => hol.TRANS (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (thm_114 A x_1 hyp_1) (thm_120 A).

(; Theorem: |- ((= (= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x))) (= Data.Option.none)) ;)

(; dict ;)

def thm_122 : A : hol.type -> x_1 : hol.term (Data_2EOption_2Eoption A) -> hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) -> hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) hol.bool) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1)) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) :=
  A : hol.type => x_1 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) => hol.APP_THM (Data_2EOption_2Eoption A) (hol.arr (Data_2EOption_2Eoption A) hol.bool) (hol.eq (Data_2EOption_2Eoption A)) (hol.eq (Data_2EOption_2Eoption A)) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (thm_34 A) (thm_121 A x_1 hyp_1).

(; Theorem: |- ((= ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x)) ((= Data.Option.none) Data.Option.none)) ;)

(; dict ;)

def thm_123 : A : hol.type -> x_1 : hol.term (Data_2EOption_2Eoption A) -> hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) -> hol.proof (hol.eq hol.bool (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) :=
  A : hol.type => x_1 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) => hol.APP_THM (Data_2EOption_2Eoption A) hol.bool (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1)) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (thm_122 A x_1 hyp_1) (thm_113 A x_1 hyp_1).

(; Theorem: |- ((= ((= Data.Option.none) Data.Option.none)) Data.Bool.T) ;)

(; dict ;)

def thm_124 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) :=
  A : hol.type => (A : hol.type => x_1 : hol.term (Data_2EOption_2Eoption A) => thm_97 A x_1) A (Data_2EOption_2Enone (Data_2EOption_2Eoption A)).

(; Theorem: |- ((= ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x)) Data.Bool.T) ;)

(; dict ;)

def thm_125 : A : hol.type -> x_1 : hol.term (Data_2EOption_2Eoption A) -> hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) -> hol.proof (hol.eq hol.bool (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1) hol.true) :=
  A : hol.type => x_1 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) => hol.TRANS hol.bool (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true (thm_123 A x_1 hyp_1) (thm_124 A).

(; Theorem: |- ((= Data.Bool.T) ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x)) ;)

(; dict ;)

def thm_126 : A : hol.type -> x_1 : hol.term (Data_2EOption_2Eoption A) -> hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) -> hol.proof (hol.eq hol.bool hol.true (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1)) :=
  A : hol.type => x_1 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) => hol.SYM hol.bool (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1) hol.true (thm_125 A x_1 hyp_1).

(; Theorem: |- ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x) ;)

(; dict ;)

def thm_127 : A : hol.type -> x_1 : hol.term (Data_2EOption_2Eoption A) -> hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) -> hol.proof (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1) :=
  A : hol.type => x_1 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) => hol.EQ_MP hol.true (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1) (thm_126 A x_1 hyp_1) thm_4.

(; Theorem: |- ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x) ;)

(; dict ;)

def thm_128 : A : hol.type -> x_1 : hol.term (Data_2EOption_2Eoption A) -> hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) -> hol.proof (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1) :=
  A : hol.type => x_1 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) => hol.PROVE_HYP (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1) (thm_113 A x_1 hyp_1) (hyp_2 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) => thm_127 A x_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((= x) Data.Option.none)) ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x)) ;)

(; dict ;)

def thm_129 : A : hol.type -> x_1 : hol.term (Data_2EOption_2Eoption A) -> hol.proof (hol.imp (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1)) :=
  A : hol.type => x_1 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) => thm_128 A x_1 hyp_1.

(; Theorem: |- ((Data.Bool.\/ ((= x) Data.Option.none)) (Data.Bool.? \lambda a. ((= x) (Data.Option.some a)))) ;)

(; dict ;)

def thm_130 : A : hol.type -> x_1 : hol.term (Data_2EOption_2Eoption A) -> hyp_1 : hol.proof (hol.or (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)))) -> hol.proof (hol.or (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)))) :=
  A : hol.type => x_1 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof (hol.or (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)))) => hyp_1.

(; Theorem: |- ((= (= ((Data.Bool.\/ P) Q))) (= ((Data.Bool.\/ P) Q))) ;)

(; dict ;)

def thm_131 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or P_2 Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.or P_2 Q_1)).

(; Theorem: |- ((= (\lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) Q)) (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r)))) ;)

(; dict ;)

def thm_132 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3)))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1.

(; Theorem: |- ((= ((= ((Data.Bool.\/ P) Q)) (\lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) Q))) ((= ((Data.Bool.\/ P) Q)) (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r))))) ;)

(; dict ;)

def thm_133 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.or P_2 Q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.or P_2 Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1)) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) (thm_131 Q_1 P_2) (thm_132 Q_1 P_2).

(; Theorem: |- ((= (= (Data.Bool.\/ P))) (= (Data.Bool.\/ P))) ;)

(; dict ;)

def thm_134 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1))) :=
  P_1 : hol.term hol.bool => hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)).

(; Theorem: |- ((= (\lambda p. \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> p) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) P)) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r)))) ;)

(; dict ;)

def thm_135 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))) :=
  P_1 : hol.term hol.bool => hol.BETA_CONV hol.bool (hol.arr hol.bool hol.bool) (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1.

(; Theorem: |- ((= ((= (Data.Bool.\/ P)) (\lambda p. \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> p) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) P))) ((= (Data.Bool.\/ P)) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))))) ;)

(; dict ;)

def thm_136 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3))))) :=
  P_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1)) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3))) (thm_134 P_1) (thm_135 P_1).

(; Theorem: |- ((= P) P) ;)

(; dict ;)

def thm_137 : P_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool P_1 P_1) :=
  P_1 : hol.term hol.bool => hol.REFL hol.bool P_1.

(; Theorem: |- ((= (Data.Bool.\/ P)) (\lambda p. \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> p) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) P)) ;)

(; dict ;)

def thm_138 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1)) :=
  P_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.or (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1 P_1 thm_6 (thm_137 P_1).

(; Theorem: |- ((= (Data.Bool.\/ P)) \lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r)))) ;)

(; dict ;)

def thm_139 : P_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))) :=
  P_1 : hol.term hol.bool => hol.EQ_MP (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp p_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) P_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.or P_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_1 r_3) (hol.imp (hol.imp q_2 r_3) r_3)))) (thm_136 P_1) (thm_138 P_1).

(; Theorem: |- ((= Q) Q) ;)

(; dict ;)

def thm_140 : Q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool Q_1 Q_1) :=
  Q_1 : hol.term hol.bool => hol.REFL hol.bool Q_1.

(; Theorem: |- ((= ((Data.Bool.\/ P) Q)) (\lambda q. (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> q) r)) r))) Q)) ;)

(; dict ;)

def thm_141 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or P_2 Q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1)) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.or P_2) (q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1 Q_1 (thm_139 P_2) (thm_140 Q_1).

(; Theorem: |- ((= ((Data.Bool.\/ P) Q)) (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r)))) ;)

(; dict ;)

def thm_142 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3)))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.or P_2 Q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (r_4 : hol.term hol.bool => hol.imp (hol.imp P_2 r_4) (hol.imp (hol.imp q_3 r_4) r_4))) Q_1)) (hol.eq hol.bool (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3)))) (thm_133 Q_1 P_2) (thm_141 Q_1 P_2).

(; Theorem: |- ((Data.Bool.\/ P) Q) ;)

(; dict ;)

def thm_143 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.or P_2 Q_1) -> hol.proof (hol.or P_2 Q_1) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.or P_2 Q_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool.==> P) r)) ((Data.Bool.==> ((Data.Bool.==> Q) r)) r))) ;)

(; dict ;)

def thm_144 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.or P_2 Q_1) -> hol.proof (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.or P_2 Q_1) => hol.EQ_MP (hol.or P_2 Q_1) (hol.forall hol.bool (r_3 : hol.term hol.bool => hol.imp (hol.imp P_2 r_3) (hol.imp (hol.imp Q_1 r_3) r_3))) (thm_142 Q_1 P_2) (thm_143 Q_1 P_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> P) R)) ((Data.Bool.==> ((Data.Bool.==> Q) R)) R)) ;)

(; dict ;)

def thm_145 : Q_1 : hol.term hol.bool -> R_2 : hol.term hol.bool -> P_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.or P_3 Q_1) -> hol.proof (hol.imp (hol.imp P_3 R_2) (hol.imp (hol.imp Q_1 R_2) R_2)) :=
  Q_1 : hol.term hol.bool => R_2 : hol.term hol.bool => P_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.or P_3 Q_1) => thm_144 Q_1 P_3 hyp_1 R_2.

(; Theorem: |- ((Data.Bool.==> P) R) ;)

(; dict ;)

def thm_146 : R_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp P_2 R_1) -> hol.proof (hol.imp P_2 R_1) :=
  R_1 : hol.term hol.bool => P_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_1) => hyp_1.

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> Q) R)) R) ;)

(; dict ;)

def thm_147 : P_1 : hol.term hol.bool -> R_2 : hol.term hol.bool -> Q_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp P_1 R_2) -> hyp_2 : hol.proof (hol.or P_1 Q_3) -> hol.proof (hol.imp (hol.imp Q_3 R_2) R_2) :=
  P_1 : hol.term hol.bool => R_2 : hol.term hol.bool => Q_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_1 R_2) => hyp_2 : hol.proof (hol.or P_1 Q_3) => thm_145 Q_3 R_2 P_1 hyp_2 (thm_146 R_2 P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> Q) R) ;)

(; dict ;)

def thm_148 : R_1 : hol.term hol.bool -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp Q_2 R_1) -> hol.proof (hol.imp Q_2 R_1) :=
  R_1 : hol.term hol.bool => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp Q_2 R_1) => hyp_1.

(; Theorem: |- R ;)

(; dict ;)

def thm_149 : Q_1 : hol.term hol.bool -> P_2 : hol.term hol.bool -> R_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp P_2 R_3) -> hyp_2 : hol.proof (hol.imp Q_1 R_3) -> hyp_3 : hol.proof (hol.or P_2 Q_1) -> hol.proof R_3 :=
  Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_147 P_2 R_3 Q_1 hyp_1 hyp_3 (thm_148 R_3 Q_1 hyp_2).

(; Theorem: |- ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x) ;)

(; dict ;)

def thm_150 : A : hol.type -> x_1 : hol.term (Data_2EOption_2Eoption A) -> hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2))) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1)) -> hyp_2 : hol.proof (hol.imp (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1)) -> hyp_3 : hol.proof (hol.or (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)))) -> hol.proof (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1) :=
  A : hol.type => x_1 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2))) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1)) => hyp_2 : hol.proof (hol.imp (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1)) => hyp_3 : hol.proof (hol.or (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)))) => (Q_1 : hol.term hol.bool => P_2 : hol.term hol.bool => R_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp P_2 R_3) => hyp_2 : hol.proof (hol.imp Q_1 R_3) => hyp_3 : hol.proof (hol.or P_2 Q_1) => thm_149 Q_1 P_2 R_3 hyp_1 hyp_2 hyp_3) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2))) (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1) hyp_2 hyp_1 hyp_3.

(; Theorem: |- ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x) ;)

(; dict ;)

def thm_151 : A : hol.type -> x_1 : hol.term (Data_2EOption_2Eoption A) -> hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2))) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1)) -> hyp_2 : hol.proof (hol.imp (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1)) -> hyp_3 : hol.proof (hol.or (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)))) -> hol.proof (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1) :=
  A : hol.type => x_1 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2))) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1)) => hyp_2 : hol.proof (hol.imp (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1)) => hyp_3 : hol.proof (hol.or (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)))) => hol.PROVE_HYP (hol.or (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)))) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1) (thm_130 A x_1 hyp_3) (hyp_4 : hol.proof (hol.or (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)))) => thm_150 A x_1 hyp_1 hyp_2 hyp_4).

(; Theorem: |- ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x) ;)

(; dict ;)

def thm_152 : A : hol.type -> x_1 : hol.term (Data_2EOption_2Eoption A) -> hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2))) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1)) -> hyp_2 : hol.proof (hol.or (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)))) -> hol.proof (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1) :=
  A : hol.type => x_1 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2))) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1)) => hyp_2 : hol.proof (hol.or (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)))) => hol.PROVE_HYP (hol.imp (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1)) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1) (thm_129 A x_1) (hyp_3 : hol.proof (hol.imp (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1)) => thm_151 A x_1 hyp_1 hyp_3 hyp_2).

(; Theorem: |- ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x) ;)

(; dict ;)

def thm_153 : A : hol.type -> x_1 : hol.term (Data_2EOption_2Eoption A) -> hyp_1 : hol.proof (hol.or (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)))) -> hol.proof (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1) :=
  A : hol.type => x_1 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof (hol.or (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)))) => hol.PROVE_HYP (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2))) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1)) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1) (hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2))) => thm_112 A x_1 hyp_2) (hyp_2 : hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2))) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1)) => thm_152 A x_1 hyp_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.\/ ((= x) Data.Option.none)) (Data.Bool.? \lambda a. ((= x) (Data.Option.some a))))) ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x)) ;)

(; dict ;)

def thm_154 : A : hol.type -> x_1 : hol.term (Data_2EOption_2Eoption A) -> hol.proof (hol.imp (hol.or (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)))) (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1)) :=
  A : hol.type => x_1 : hol.term (Data_2EOption_2Eoption A) => hyp_1 : hol.proof (hol.or (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)))) => thm_153 A x_1 hyp_1.

(; Theorem: |- ((Data.Bool.\/ ((= x) Data.Option.none)) (Data.Bool.? \lambda a. ((= x) (Data.Option.some a)))) ;)

(; dict ;)

def thm_155 : A : hol.type -> x_1 : hol.term (Data_2EOption_2Eoption A) -> hol.proof (hol.or (hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) (a_2 : hol.term A => hol.eq (Data_2EOption_2Eoption A) x_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)))) :=
  A : hol.type => x_1 : hol.term (Data_2EOption_2Eoption A) => (A : hol.type => thm_7 A) A x_1.

(; Theorem: |- ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x) ;)

(; dict ;)

def thm_156 : A : hol.type -> x_1 : hol.term (Data_2EOption_2Eoption A) -> hol.proof (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1) :=
  A : hol.type => x_1 : hol.term (Data_2EOption_2Eoption A) => thm_154 A x_1 (thm_155 A x_1).

(; Theorem: |- (Data.Bool.! \lambda x. ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x)) ;)

(; dict ;)

def thm_157 : A : hol.type -> hol.proof (hol.forall (Data_2EOption_2Eoption A) (x_1 : hol.term (Data_2EOption_2Eoption A) => hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1)) :=
  A : hol.type => x_1 : hol.term (Data_2EOption_2Eoption A) => thm_156 A x_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((= (((Data.Option.case.none.some Data.Option.none) Data.Option.some) x)) x)) ;)

(; thm ;)

def thm_158 : A : hol.type -> hol.proof (hol.forall (Data_2EOption_2Eoption A) (x_1 : hol.term (Data_2EOption_2Eoption A) => hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1)) :=
  A : hol.type => hol.EQ_MP (hol.forall (Data_2EOption_2Eoption A) (x_1 : hol.term (Data_2EOption_2Eoption A) => hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1)) (hol.forall (Data_2EOption_2Eoption A) (x_1 : hol.term (Data_2EOption_2Eoption A) => hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Ecase_2Enone_2Esome (hol.arr (Data_2EOption_2Eoption A) (hol.arr (hol.arr A (Data_2EOption_2Eoption A)) (hol.arr (Data_2EOption_2Eoption A) (Data_2EOption_2Eoption A)))) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A))) x_1) x_1)) (thm_11 A) (thm_157 A).
