
(; This file was generated by Holide. ;)

#REQUIRE hol.
#NAME option_2Ddest_2Ddef.

Data_2EOption_2Eoption : hol.type -> hol.type.

Data_2EOption_2Enone : A : hol.type -> hol.term A.

Data_2EOption_2Esome : A : hol.type -> hol.term A.

Data_2EBool_2E_3F : A : hol.type -> hol.term A.

(; Constant Data.Option.case.none.some ;)

def Data_2EOption_2Ecase_2Enone_2Esome : A : hol.type -> B : hol.type -> hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) :=
  A : hol.type => B : hol.type => hol.select (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4)))))).

(; Constant Data.Option.isSome ;)

def Data_2EOption_2EisSome : A : hol.type -> hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) :=
  A : hol.type => hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))).

(; Constant Data.Option.isNone ;)

def Data_2EOption_2EisNone : A : hol.type -> hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) :=
  A : hol.type => hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))).

(; axiom ;)

thm_0 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))).

(; axiom ;)

thm_1 : A : hol.type -> B : hol.type -> hol.proof (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) B) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) B) => hol.and (hol.eq B (fn_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1) (hol.forall A (a_4 : hol.term A => hol.eq B (fn_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_2 a_4))))))).

(; axiom ;)

thm_2 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (p_1 x_3) q_2)) q_2))).

(; axiom ;)

thm_3 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))).

(; defineConstList ;)

thm_4 : A : hol.type -> B : hol.type -> hol.proof (hol.and (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3)))))).

(; defineConstList ;)

thm_5 : A : hol.type -> hol.proof (hol.and (hol.eq hol.bool (Data_2EOption_2EisSome A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_1 : hol.term A => hol.eq hol.bool (Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) hol.true))).

(; axiom ;)

thm_6 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1)).

(; axiom ;)

thm_7 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1)).

(; axiom ;)

thm_8 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1))).

(; axiom ;)

thm_9 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))).

(; defineConstList ;)

thm_10 : A : hol.type -> hol.proof (hol.and (hol.eq hol.bool (Data_2EOption_2EisNone A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_1 : hol.term A => hol.eq hol.bool (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) hol.false))).

(; Theorem: |- ((= \lambda case_option. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a))))))) \lambda case_option. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a))))))) ;)

(; dict ;)

def thm_11 : A : hol.type -> B : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) (case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4)))))) (case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4))))))) :=
  A : hol.type => B : hol.type => hol.REFL (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) (case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4)))))).

(; Theorem: |- ((= case_option) (select \lambda case_option. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a)))))))) ;)

(; dict ;)

def thm_12 : A : hol.type -> B : hol.type -> case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_1 (hol.select (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))))) -> hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_1 (hol.select (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))))) :=
  A : hol.type => B : hol.type => case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_1 (hol.select (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))))) => hyp_1.

(; Theorem: |- ((= (select \lambda case_option. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a)))))))) case_option) ;)

(; dict ;)

def thm_13 : A : hol.type -> B : hol.type -> case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_1 (hol.select (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))))) -> hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (hol.select (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5))))))) case__option_1) :=
  A : hol.type => B : hol.type => case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_1 (hol.select (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))))) => hol.SYM (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_1 (hol.select (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5))))))) (thm_12 A B case__option_1 hyp_1).

(; Theorem: |- ((= (\lambda case_option. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a)))))) (select \lambda case_option. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a))))))))) (\lambda case_option. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a)))))) case_option)) ;)

(; dict ;)

def thm_14 : A : hol.type -> B : hol.type -> case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_1 (hol.select (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))))) -> hol.proof (hol.eq hol.bool ((case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))) (hol.select (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))))) ((case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))) case__option_1)) :=
  A : hol.type => B : hol.type => case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_1 (hol.select (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))))) => hol.APP_THM (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool (case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))) (case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))) (hol.select (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5))))))) case__option_1 (thm_11 A B) (thm_13 A B case__option_1 hyp_1).

(; Theorem: |- ((= (\lambda case_option. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a)))))) case_option)) ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a))))))) ;)

(; dict ;)

def thm_15 : A : hol.type -> B : hol.type -> case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hol.proof (hol.eq hol.bool ((case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))) case__option_1) (hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4))))))) :=
  A : hol.type => B : hol.type => case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.BETA_CONV (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool (case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))) case__option_1.

(; Theorem: |- ((= (\lambda case_option. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a)))))) (select \lambda case_option. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a))))))))) ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a))))))) ;)

(; dict ;)

def thm_16 : A : hol.type -> B : hol.type -> case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_1 (hol.select (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))))) -> hol.proof (hol.eq hol.bool ((case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))) (hol.select (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))))) (hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4))))))) :=
  A : hol.type => B : hol.type => case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_1 (hol.select (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))))) => hol.TRANS hol.bool ((case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))) (hol.select (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))))) ((case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))) case__option_1) (hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4)))))) (thm_14 A B case__option_1 hyp_1) (thm_15 A B case__option_1).

(; Theorem: |- ((= ((= Data.Bool.?) \lambda p. (p (select p)))) ((= Data.Bool.?) \lambda p. (p (select p)))) ;)

(; dict ;)

def thm_17 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))) (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1)))) :=
  A : hol.type => hol.REFL hol.bool (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))).

(; Theorem: |- ((= ((= Data.Bool.?) \lambda p. (p (select p)))) ((= Data.Bool.?) \lambda p. (p (select p)))) ;)

(; dict ;)

def thm_18 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))) (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1)))) :=
  A : hol.type => hol.TRANS hol.bool (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))) (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))) (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))) (thm_17 A) (thm_17 A).

(; Theorem: |- ((= Data.Bool.?) \lambda p. (p (select p))) ;)

(; dict ;)

def thm_19 : A : hol.type -> B : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) hol.bool)) (p_1 : hol.term (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) => p_1 (hol.select (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) p_1))) :=
  A : hol.type => B : hol.type => (A : hol.type => hol.EQ_MP (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))) (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_1 : hol.term (hol.arr A hol.bool) => p_1 (hol.select A p_1))) (thm_18 A) (thm_0 A)) (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))).

(; Theorem: |- ((= (Data.Bool.? \lambda case_option. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a)))))))) (\lambda p. (p (select p)) \lambda case_option. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a)))))))) ;)

(; dict ;)

def thm_20 : A : hol.type -> B : hol.type -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) hol.bool) (case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4))))))) ((p_1 : hol.term (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) => p_1 (hol.select (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) p_1)) (case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4)))))))) :=
  A : hol.type => B : hol.type => hol.APP_THM (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) hol.bool)) (p_1 : hol.term (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) => p_1 (hol.select (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) p_1)) (case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4)))))) (case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4)))))) (thm_19 A B) (thm_11 A B).

(; Theorem: |- ((= (\lambda p. (p (select p)) \lambda case_option. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a)))))))) (\lambda case_option. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a)))))) (select \lambda case_option. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a))))))))) ;)

(; dict ;)

def thm_21 : A : hol.type -> B : hol.type -> hol.proof (hol.eq hol.bool ((p_1 : hol.term (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) => p_1 (hol.select (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) p_1)) (case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4))))))) ((case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4)))))) (hol.select (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4))))))))) :=
  A : hol.type => B : hol.type => hol.BETA_CONV (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) hol.bool (p_1 : hol.term (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) => p_1 (hol.select (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) p_1)) (case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4)))))).

(; Theorem: |- ((= (Data.Bool.? \lambda case_option. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a)))))))) (\lambda case_option. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a)))))) (select \lambda case_option. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a))))))))) ;)

(; dict ;)

def thm_22 : A : hol.type -> B : hol.type -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) hol.bool) (case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4))))))) ((case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4)))))) (hol.select (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4))))))))) :=
  A : hol.type => B : hol.type => hol.TRANS hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) hol.bool) (case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4))))))) ((p_1 : hol.term (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) => p_1 (hol.select (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) p_1)) (case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4))))))) ((case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4)))))) (hol.select (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4)))))))) (thm_20 A B) (thm_21 A B).

(; Theorem: |- ((= Data.Bool.?) Data.Bool.?) ;)

(; dict ;)

def thm_23 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool)).

(; Theorem: |- ((= (Data.Bool./\ ((= (fn Data.Option.none)) \lambda b. \lambda f. b))) (Data.Bool./\ ((= (fn Data.Option.none)) \lambda b. \lambda f. b))) ;)

(; dict ;)

def thm_24 : A : hol.type -> B : hol.type -> fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2))) (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)))) :=
  A : hol.type => B : hol.type => fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2))).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_25 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr A hol.bool) hol.bool) (hol.forall A) (hol.forall A)) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr A hol.bool) hol.bool) (hol.forall A).

(; Theorem: |- ((= (= (fn (Data.Option.some a)))) (= (fn (Data.Option.some a)))) ;)

(; dict ;)

def thm_26 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> fn_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq (hol.arr (hol.arr B (hol.arr (hol.arr A B) B)) hol.bool) (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))) (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => fn_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.REFL (hol.arr (hol.arr B (hol.arr (hol.arr A B) B)) hol.bool) (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))).

(; Theorem: |- ((= (\lambda a. \lambda b. \lambda f. (f a) a)) \lambda b. \lambda f. (f a)) ;)

(; dict ;)

def thm_27 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) ((a_2 : hol.term A => b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2) a_1) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => f_3 a_1)) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => hol.BETA_CONV A (hol.arr B (hol.arr (hol.arr A B) B)) (a_2 : hol.term A => b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2) a_1.

(; Theorem: |- ((= ((= (fn (Data.Option.some a))) (\lambda a. \lambda b. \lambda f. (f a) a))) ((= (fn (Data.Option.some a))) \lambda b. \lambda f. (f a))) ;)

(; dict ;)

def thm_28 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> fn_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) ((a_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3) a_1)) (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_1))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => fn_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.APP_THM (hol.arr B (hol.arr (hol.arr A B) B)) hol.bool (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))) (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))) ((a_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3) a_1) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_1) (thm_26 A B a_1 fn_2) (thm_27 A B a_1).

(; Theorem: |- ((= \lambda a. ((= (fn (Data.Option.some a))) (\lambda a. \lambda b. \lambda f. (f a) a))) \lambda a. ((= (fn (Data.Option.some a))) \lambda b. \lambda f. (f a))) ;)

(; dict ;)

def thm_29 : B : hol.type -> A : hol.type -> fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq (hol.arr A hol.bool) (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3) a_2)) (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))) :=
  B : hol.type => A : hol.type => fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.ABS_THM A hol.bool (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3) a_2)) (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)) (a_2 : hol.term A => thm_28 A B a_2 fn_1).

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) (\lambda a. \lambda b. \lambda f. (f a) a)))) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) \lambda b. \lambda f. (f a)))) ;)

(; dict ;)

def thm_30 : B : hol.type -> A : hol.type -> fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq hol.bool (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3) a_2))) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) :=
  B : hol.type => A : hol.type => fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3) a_2)) (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)) (thm_25 A) (thm_29 B A fn_1).

(; Theorem: |- ((= ((Data.Bool./\ ((= (fn Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) (\lambda a. \lambda b. \lambda f. (f a) a))))) ((Data.Bool./\ ((= (fn Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) \lambda b. \lambda f. (f a))))) ;)

(; dict ;)

def thm_31 : A : hol.type -> B : hol.type -> fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3) a_2)))) (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))))) :=
  A : hol.type => B : hol.type => fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2))) (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2))) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3) a_2))) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))) (thm_24 A B fn_1) (thm_30 B A fn_1).

(; Theorem: |- ((= \lambda fn. ((Data.Bool./\ ((= (fn Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) (\lambda a. \lambda b. \lambda f. (f a) a))))) \lambda fn. ((Data.Bool./\ ((= (fn Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) \lambda b. \lambda f. (f a))))) ;)

(; dict ;)

def thm_32 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3) a_2)))) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))))) :=
  B : hol.type => A : hol.type => hol.ABS_THM (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3) a_2)))) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => thm_31 A B fn_1).

(; Theorem: |- ((= (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) (\lambda a. \lambda b. \lambda f. (f a) a)))))) (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) \lambda b. \lambda f. (f a)))))) ;)

(; dict ;)

def thm_33 : B : hol.type -> A : hol.type -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3) a_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))))) :=
  B : hol.type => A : hol.type => hol.APP_THM (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool)) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3) a_2)))) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) (thm_23 B A) (thm_32 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn Data.Option.none)) b)) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) (f a)))))) ;)

(; dict ;)

def thm_34 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> hol.proof (hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) B) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) B) => hol.and (hol.eq B (fn_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1) (hol.forall A (a_4 : hol.term A => hol.eq B (fn_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_2 a_4)))))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => thm_1 A B b_1.

(; Theorem: |- (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn Data.Option.none)) b)) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) (f a))))) ;)

(; dict ;)

def thm_35 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) B) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) B) => hol.and (hol.eq B (fn_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2) (hol.forall A (a_4 : hol.term A => hol.eq B (fn_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_1 a_4))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => b_2 : hol.term B => thm_34 B A b_2 f_1.

(; Theorem: |- (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn Data.Option.none)) b)) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) (f a))))) ;)

(; dict ;)

def thm_36 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A (hol.arr B (hol.arr (hol.arr A B) B))) -> b_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) B)) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2) (hol.forall A (a_4 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_1 a_4))))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr B (hol.arr (hol.arr A B) B))) => b_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) B)) => (B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => b_2 : hol.term B => thm_35 B A f_1 b_2) (hol.arr B (hol.arr (hol.arr A B) B)) A f_1 b_2.

(; Theorem: |- (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) (\lambda a. \lambda b. \lambda f. (f a) a))))) ;)

(; dict ;)

def thm_37 : B : hol.type -> A : hol.type -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3) a_2))))) :=
  B : hol.type => A : hol.type => (B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A (hol.arr B (hol.arr (hol.arr A B) B))) => b_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) B)) => thm_36 B A f_1 b_2) B A (a_1 : hol.term A => b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => f_3 a_1) (b_1 : hol.term B => f_2 : hol.term (hol.arr A B) => b_1).

(; Theorem: |- (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) \lambda b. \lambda f. (f a))))) ;)

(; dict ;)

def thm_38 : B : hol.type -> A : hol.type -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))))) :=
  B : hol.type => A : hol.type => hol.EQ_MP (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3) a_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))))) (thm_33 B A) (thm_37 B A).

(; Theorem: |- ((= p) q) ;)

(; dict ;)

def thm_39 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) -> hol.proof (hol.eq hol.bool p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => hyp_1.

(; Theorem: |- p ;)

(; dict ;)

def thm_40 : p_1 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof p_1 :=
  p_1 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_41 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.eq hol.bool p_1 q_2) -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.eq hol.bool p_1 q_2) => hol.EQ_MP p_1 q_2 (thm_39 q_2 p_1 hyp_2) (thm_40 p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> p) q) ;)

(; dict ;)

def thm_42 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) -> hol.proof (hol.imp p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => hyp_2 : hol.proof p_2 => thm_41 p_2 q_1 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= p) q)) ((Data.Bool.==> p) q)) ;)

(; dict ;)

def thm_43 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp (hol.eq hol.bool p_2 q_1) (hol.imp p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool p_2 q_1) => thm_42 q_1 p_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ((Data.Bool.==> (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ;)

(; dict ;)

def thm_44 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => thm_43 q_1 p_2) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1).

(; Theorem: |- ((= (= (Data.Bool.? P))) (= (Data.Bool.? P))) ;)

(; dict ;)

def thm_45 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)).

(; Theorem: |- ((= (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_46 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.BETA_CONV (hol.arr A hol.bool) hol.bool (p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1.

(; Theorem: |- ((= ((= (Data.Bool.? P)) (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P))) ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)))) ;)

(; dict ;)

def thm_47 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (thm_45 A P_1) (thm_46 A P_1).

(; Theorem: |- ((= P) P) ;)

(; dict ;)

def thm_48 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) P_1 P_1) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.REFL (hol.arr A hol.bool) P_1.

(; Theorem: |- ((= (Data.Bool.? P)) (\lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) q))) q)) P)) ;)

(; dict ;)

def thm_49 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool)) (p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1 P_1 (thm_2 A) (thm_48 A P_1).

(; Theorem: |- ((= (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_50 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.EQ_MP (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) ((p_2 : hol.term (hol.arr A hol.bool) => hol.forall hol.bool (q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (p_2 x_4) q_3)) q_3)) P_1)) (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) (thm_47 A P_1) (thm_49 A P_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? P)) (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) ;)

(; dict ;)

def thm_51 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2))) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => thm_44 A P_1 (thm_50 A P_1).

(; Theorem: |- (Data.Bool.? P) ;)

(; dict ;)

def thm_52 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q)) ;)

(; dict ;)

def thm_53 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => thm_51 A P_1 (thm_52 A P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q) ;)

(; dict ;)

def thm_54 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) => thm_53 A P_2 hyp_1 Q_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q)) ;)

(; dict ;)

def thm_55 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) -> hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => hyp_1.

(; Theorem: |- Q ;)

(; dict ;)

def thm_56 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> Q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) Q_2)) -> hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) -> hol.proof Q_2 :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => Q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) Q_2)) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) => thm_54 A Q_2 P_1 hyp_2 (thm_55 A Q_2 P_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? P)) Q) ;)

(; dict ;)

def thm_57 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => hyp_2 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) => thm_56 A P_2 Q_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) ((Data.Bool.==> (Data.Bool.? P)) Q)) ;)

(; dict ;)

def thm_58 : A : hol.type -> Q_1 : hol.term hol.bool -> P_2 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) Q_1)) :=
  A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_3 : hol.term A => hol.imp (P_2 x_3) Q_1)) => thm_57 A Q_1 P_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda _28035. ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a)))) x)) (Data.Bool.? \lambda _28035. ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a)))))))) ((Data.Bool.==> (Data.Bool.? \lambda _28035. ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a)))))) (Data.Bool.? \lambda _28035. ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a))))))) ;)

(; dict ;)

def thm_59 : B : hol.type -> A : hol.type -> hol.proof (hol.imp (hol.forall (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) (x_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.imp ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3)))) x_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3))))))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))))))) :=
  B : hol.type => A : hol.type => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_58 A Q_1 P_2) (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))))) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))).

(; Theorem: |- ((= (\lambda _28035. ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a)))) _28035)) ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a))))) ;)

(; dict ;)

def thm_60 : B : hol.type -> A : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq hol.bool ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3)))) __28035_1) (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))))) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.BETA_CONV (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool (__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3)))) __28035_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a))))) (\lambda _28035. ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a)))) _28035)) ;)

(; dict ;)

def thm_61 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3)))) __28035_1)) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.SYM hol.bool ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3)))) __28035_1) (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) (thm_60 B A __28035_1).

(; Theorem: |- ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a)))) ;)

(; dict ;)

def thm_62 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) -> hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) => hyp_1.

(; Theorem: |- ((= (= ((Data.Bool./\ p) q))) (= ((Data.Bool./\ p) q))) ;)

(; dict ;)

def thm_63 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and p_2 q_1)) (hol.eq hol.bool (hol.and p_2 q_1))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (hol.and p_2 q_1)).

(; Theorem: |- ((= (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_64 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.BETA_CONV hol.bool hol.bool (q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1.

(; Theorem: |- ((= ((= ((Data.Bool./\ p) q)) (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q))) ((= ((Data.Bool./\ p) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)))) ;)

(; dict ;)

def thm_65 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (hol.and p_2 q_1)) (hol.eq hol.bool (hol.and p_2 q_1)) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_63 q_1 p_2) (thm_64 q_1 p_2).

(; Theorem: |- ((= (= (Data.Bool./\ p))) (= (Data.Bool./\ p))) ;)

(; dict ;)

def thm_66 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1))) :=
  p_1 : hol.term hol.bool => hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)).

(; Theorem: |- ((= (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_67 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) :=
  p_1 : hol.term hol.bool => hol.BETA_CONV hol.bool (hol.arr hol.bool hol.bool) (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1.

(; Theorem: |- ((= ((= (Data.Bool./\ p)) (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p))) ((= (Data.Bool./\ p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)))) ;)

(; dict ;)

def thm_68 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3)))) :=
  p_1 : hol.term hol.bool => hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1)) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3)) (thm_66 p_1) (thm_67 p_1).

(; Theorem: |- ((= p) p) ;)

(; dict ;)

def thm_69 : p_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool p_1 p_1) :=
  p_1 : hol.term hol.bool => hol.REFL hol.bool p_1.

(; Theorem: |- ((= (Data.Bool./\ p)) (\lambda p. \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) p)) ;)

(; dict ;)

def thm_70 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) :=
  p_1 : hol.term hol.bool => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and (p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1 p_1 thm_3 (thm_69 p_1).

(; Theorem: |- ((= (Data.Bool./\ p)) \lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_71 : p_1 : hol.term hol.bool -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) :=
  p_1 : hol.term hol.bool => hol.EQ_MP (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) ((p_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) p_1)) (hol.eq (hol.arr hol.bool hol.bool) (hol.and p_1) (q_2 : hol.term hol.bool => hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_1 (hol.imp q_2 x_3)) x_3))) (thm_68 p_1) (thm_70 p_1).

(; Theorem: |- ((= q) q) ;)

(; dict ;)

def thm_72 : q_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool q_1 q_1) :=
  q_1 : hol.term hol.bool => hol.REFL hol.bool q_1.

(; Theorem: |- ((= ((Data.Bool./\ p) q)) (\lambda q. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) q)) ;)

(; dict ;)

def thm_73 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.APP_THM hol.bool hol.bool (hol.and p_2) (q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1 q_1 (thm_71 p_2) (thm_72 q_1).

(; Theorem: |- ((= ((Data.Bool./\ p) q)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ;)

(; dict ;)

def thm_74 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.and p_2 q_1) ((q_3 : hol.term hol.bool => hol.forall hol.bool (x_4 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_3 x_4)) x_4)) q_1)) (hol.eq hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3))) (thm_65 q_1 p_2) (thm_73 q_1 p_2).

(; Theorem: |- ((Data.Bool./\ p) q) ;)

(; dict ;)

def thm_75 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.and p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => hyp_1.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) ;)

(; dict ;)

def thm_76 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => hol.EQ_MP (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_74 q_1 p_2) (thm_75 q_1 p_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) p))) p) ;)

(; dict ;)

def thm_77 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.imp (hol.imp p_2 (hol.imp q_1 p_2)) p_2) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_76 q_1 p_2 hyp_1 p_2.

(; Theorem: |- q ;)

(; dict ;)

def thm_78 : q_1 : hol.term hol.bool -> hyp_1 : hol.proof q_1 -> hol.proof q_1 :=
  q_1 : hol.term hol.bool => hyp_1 : hol.proof q_1 => hyp_1.

(; Theorem: |- ((= p) q) ;)

(; dict ;)

def thm_79 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.eq hol.bool p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.PROP_EXT p_2 q_1 (hyp_3 : hol.proof q_1 => thm_40 p_2 hyp_1) (hyp_3 : hol.proof p_2 => thm_78 q_1 hyp_2).

(; Theorem: |- ((= q) p) ;)

(; dict ;)

def thm_80 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof q_2 -> hol.proof (hol.eq hol.bool q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => hol.SYM hol.bool p_1 q_2 (thm_79 q_2 p_1 hyp_1 hyp_2).

(; Theorem: |- p ;)

(; dict ;)

def thm_81 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof p_2 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.EQ_MP q_1 p_2 (thm_80 p_2 q_1 hyp_1 hyp_2) (thm_78 q_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> q) p) ;)

(; dict ;)

def thm_82 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.imp q_2 p_1) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => thm_81 q_2 p_1 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) p)) ;)

(; dict ;)

def thm_83 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp p_2 (hol.imp q_1 p_2)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => thm_82 p_2 q_1 hyp_1.

(; Theorem: |- p ;)

(; dict ;)

def thm_84 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof p_2 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_77 q_1 p_2 hyp_1 (thm_83 q_1 p_2).

(; Theorem: |- ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b) ;)

(; dict ;)

def thm_85 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) -> hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_84 q_1 p_2 hyp_1) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))) (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) hyp_1.

(; Theorem: |- ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b) ;)

(; dict ;)

def thm_86 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) -> hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) => hol.PROVE_HYP (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (thm_62 A B __28035_1 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) => thm_85 A B __28035_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) q))) q) ;)

(; dict ;)

def thm_87 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_2 q_1) -> hol.proof (hol.imp (hol.imp p_2 (hol.imp q_1 q_1)) q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_76 q_1 p_2 hyp_1 q_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_88 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof q_2 -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => hol.EQ_MP p_1 q_2 (thm_79 q_2 p_1 hyp_1 hyp_2) (thm_40 p_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> q) q) ;)

(; dict ;)

def thm_89 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.imp q_2 q_2) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof q_2 => thm_88 p_1 q_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) q)) ;)

(; dict ;)

def thm_90 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.imp p_2 (hol.imp q_1 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => thm_89 p_2 q_1 hyp_1.

(; Theorem: |- q ;)

(; dict ;)

def thm_91 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and p_1 q_2) -> hol.proof q_2 :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_87 q_2 p_1 hyp_1 (thm_90 q_2 p_1).

(; Theorem: |- ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x))) ((Data.Bool./\ p) q)) ;)

(; dict ;)

def thm_92 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (hol.and p_2 q_1)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hol.SYM hol.bool (hol.and p_2 q_1) (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (thm_74 q_1 p_2).

(; Theorem: |- ((Data.Bool.==> p) ((Data.Bool.==> q) x)) ;)

(; dict ;)

def thm_93 : x_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) -> hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) :=
  x_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) => hyp_1.

(; Theorem: |- ((Data.Bool.==> q) x) ;)

(; dict ;)

def thm_94 : p_1 : hol.term hol.bool -> x_2 : hol.term hol.bool -> q_3 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hyp_2 : hol.proof (hol.imp p_1 (hol.imp q_3 x_2)) -> hol.proof (hol.imp q_3 x_2) :=
  p_1 : hol.term hol.bool => x_2 : hol.term hol.bool => q_3 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hyp_2 : hol.proof (hol.imp p_1 (hol.imp q_3 x_2)) => thm_93 x_2 q_3 p_1 hyp_2 (thm_40 p_1 hyp_1).

(; Theorem: |- x ;)

(; dict ;)

def thm_95 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> x_3 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hyp_3 : hol.proof (hol.imp p_2 (hol.imp q_1 x_3)) -> hol.proof x_3 :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => x_3 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hyp_3 : hol.proof (hol.imp p_2 (hol.imp q_1 x_3)) => thm_94 p_2 x_3 q_1 hyp_1 hyp_3 (thm_78 q_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x) ;)

(; dict ;)

def thm_96 : x_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> p_3 : hol.term hol.bool -> hyp_1 : hol.proof p_3 -> hyp_2 : hol.proof q_2 -> hol.proof (hol.imp (hol.imp p_3 (hol.imp q_2 x_1)) x_1) :=
  x_1 : hol.term hol.bool => q_2 : hol.term hol.bool => p_3 : hol.term hol.bool => hyp_1 : hol.proof p_3 => hyp_2 : hol.proof q_2 => hyp_3 : hol.proof (hol.imp p_3 (hol.imp q_2 x_1)) => thm_95 q_2 p_3 x_1 hyp_1 hyp_2 hyp_3.

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool.==> p) ((Data.Bool.==> q) x))) x)) ;)

(; dict ;)

def thm_97 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => x_3 : hol.term hol.bool => thm_96 x_3 q_1 p_2 hyp_1 hyp_2.

(; Theorem: |- ((Data.Bool./\ p) q) ;)

(; dict ;)

def thm_98 : q_1 : hol.term hol.bool -> p_2 : hol.term hol.bool -> hyp_1 : hol.proof p_2 -> hyp_2 : hol.proof q_1 -> hol.proof (hol.and p_2 q_1) :=
  q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof p_2 => hyp_2 : hol.proof q_1 => hol.EQ_MP (hol.forall hol.bool (x_3 : hol.term hol.bool => hol.imp (hol.imp p_2 (hol.imp q_1 x_3)) x_3)) (hol.and p_2 q_1) (thm_92 q_1 p_2) (thm_97 q_1 p_2 hyp_1 hyp_2).

(; Theorem: |- ((= q) ((Data.Bool./\ p) q)) ;)

(; dict ;)

def thm_99 : p_1 : hol.term hol.bool -> q_2 : hol.term hol.bool -> hyp_1 : hol.proof p_1 -> hol.proof (hol.eq hol.bool q_2 (hol.and p_1 q_2)) :=
  p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => hol.PROP_EXT q_2 (hol.and p_1 q_2) (hyp_2 : hol.proof (hol.and p_1 q_2) => thm_91 p_1 q_2 hyp_2) (hyp_2 : hol.proof q_2 => thm_98 q_2 p_1 hyp_1 hyp_2).

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a)))) ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a))))) ;)

(; dict ;)

def thm_100 : B : hol.type -> A : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) -> hol.proof (hol.eq hol.bool (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))) (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))))) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_99 p_1 q_2 hyp_1) (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))) hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a)))) ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a))))) ;)

(; dict ;)

def thm_101 : B : hol.type -> A : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) -> hol.proof (hol.eq hol.bool (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))) (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))))) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) => hol.PROVE_HYP (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.eq hol.bool (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))) (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))))) (thm_86 A B __28035_1 hyp_1) (hyp_2 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) => thm_100 B A __28035_1 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a))) ;)

(; dict ;)

def thm_102 : B : hol.type -> A : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) -> hol.proof (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_91 p_1 q_2 hyp_1) (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a))) ;)

(; dict ;)

def thm_103 : B : hol.type -> A : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) -> hol.proof (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) => hol.PROVE_HYP (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))) (thm_62 A B __28035_1 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) => thm_102 B A __28035_1 hyp_2).

(; Theorem: |- (\lambda _28035. ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a)))) _28035) ;)

(; dict ;)

def thm_104 : B : hol.type -> A : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) -> hol.proof ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3)))) __28035_1) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) => hol.EQ_MP (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3)))) __28035_1) (thm_61 A B __28035_1) (hol.EQ_MP (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))) (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) (thm_101 B A __28035_1 hyp_1) (thm_103 B A __28035_1 hyp_1)).

(; Theorem: |- ((= (Data.Bool.! \lambda q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) q))) q))) (Data.Bool.? P)) ;)

(; dict ;)

def thm_105 : A : hol.type -> P_1 : hol.term (hol.arr A hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1)) :=
  A : hol.type => P_1 : hol.term (hol.arr A hol.bool) => hol.SYM hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_1) (hol.forall hol.bool (q_2 : hol.term hol.bool => hol.imp (hol.forall A (x_3 : hol.term A => hol.imp (P_1 x_3) q_2)) q_2)) (thm_50 A P_1).

(; Theorem: |- ((Data.Bool.==> (P x)) Q) ;)

(; dict ;)

def thm_106 : A : hol.type -> Q_1 : hol.term hol.bool -> x_2 : hol.term A -> P_3 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_1)) -> hol.proof (hol.imp (P_3 x_2) Q_1) :=
  A : hol.type => Q_1 : hol.term hol.bool => x_2 : hol.term A => P_3 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_1)) => thm_55 A Q_1 P_3 hyp_1 x_2.

(; Theorem: |- (P x) ;)

(; dict ;)

def thm_107 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (P_2 x_1) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => hyp_1.

(; Theorem: |- Q ;)

(; dict ;)

def thm_108 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> Q_3 : hol.term hol.bool -> hyp_1 : hol.proof (P_2 x_1) -> hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) -> hol.proof Q_3 :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => Q_3 : hol.term hol.bool => hyp_1 : hol.proof (P_2 x_1) => hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) => thm_106 A Q_3 x_1 P_2 hyp_2 (thm_107 A x_1 P_2 hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q) ;)

(; dict ;)

def thm_109 : A : hol.type -> x_1 : hol.term A -> Q_2 : hol.term hol.bool -> P_3 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_3 x_1) -> hol.proof (hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_2)) Q_2) :=
  A : hol.type => x_1 : hol.term A => Q_2 : hol.term hol.bool => P_3 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_3 x_1) => hyp_2 : hol.proof (hol.forall A (x_4 : hol.term A => hol.imp (P_3 x_4) Q_2)) => thm_108 A x_1 P_3 Q_2 hyp_1 hyp_2.

(; Theorem: |- (Data.Bool.! \lambda Q. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (P x)) Q))) Q)) ;)

(; dict ;)

def thm_110 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (hol.forall hol.bool (Q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) Q_3)) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => Q_3 : hol.term hol.bool => thm_109 A x_1 Q_3 P_2 hyp_1.

(; Theorem: |- (Data.Bool.? P) ;)

(; dict ;)

def thm_111 : A : hol.type -> x_1 : hol.term A -> P_2 : hol.term (hol.arr A hol.bool) -> hyp_1 : hol.proof (P_2 x_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) :=
  A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => hol.EQ_MP (hol.forall hol.bool (Q_3 : hol.term hol.bool => hol.imp (hol.forall A (x_4 : hol.term A => hol.imp (P_2 x_4) Q_3)) Q_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr A hol.bool) hol.bool) P_2) (thm_105 A P_2) (thm_110 A x_1 P_2 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda _28035. ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a))))) ;)

(; dict ;)

def thm_112 : B : hol.type -> A : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3)))) __28035_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3))))) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3)))) __28035_1) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_111 A x_1 P_2 hyp_1) (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) __28035_1 (__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3)))) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda _28035. ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a))))) ;)

(; dict ;)

def thm_113 : B : hol.type -> A : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3))))) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) => hol.PROVE_HYP ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3)))) __28035_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3))))) (thm_104 B A __28035_1 hyp_1) (hyp_2 : hol.proof ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3)))) __28035_1) => thm_112 B A __28035_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a))))) (Data.Bool.? \lambda _28035. ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a)))))) ;)

(; dict ;)

def thm_114 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.imp (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3)))))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) => thm_113 B A __28035_1 hyp_1.

(; Theorem: |- (\lambda _28035. ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a)))) _28035) ;)

(; dict ;)

def thm_115 : B : hol.type -> A : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3)))) __28035_1) -> hol.proof ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3)))) __28035_1) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3)))) __28035_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a)))) ;)

(; dict ;)

def thm_116 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3)))) __28035_1) -> hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3)))) __28035_1) => hol.EQ_MP ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3)))) __28035_1) (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) (thm_60 B A __28035_1) (thm_115 B A __28035_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda _28035. ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a)))) _28035)) (Data.Bool.? \lambda _28035. ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a)))))) ;)

(; dict ;)

def thm_117 : B : hol.type -> A : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.imp ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3)))) __28035_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3)))))) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3)))) __28035_1) => thm_114 A B __28035_1 (thm_116 A B __28035_1 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda _28035. ((Data.Bool.==> (\lambda _28035. ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a)))) _28035)) (Data.Bool.? \lambda _28035. ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a))))))) ;)

(; dict ;)

def thm_118 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.imp ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3)))) __28035_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3))))))) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => thm_117 B A __28035_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda _28035. ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a)))))) (Data.Bool.? \lambda _28035. ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a)))))) ;)

(; dict ;)

def thm_119 : B : hol.type -> A : hol.type -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))))) :=
  B : hol.type => A : hol.type => thm_59 B A (thm_118 B A).

(; Theorem: |- (Data.Bool.? \lambda _28035. ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a))))) ;)

(; dict ;)

def thm_120 : B : hol.type -> A : hol.type -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))))) :=
  B : hol.type => A : hol.type => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))))) => hyp_1.

(; Theorem: |- (Data.Bool.? \lambda _28035. ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a))))) ;)

(; dict ;)

def thm_121 : B : hol.type -> A : hol.type -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))))) :=
  B : hol.type => A : hol.type => hol.PROVE_HYP (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))))) (thm_38 B A) (hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))))) => thm_119 B A (thm_120 B A hyp_1)).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda _28035. ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a)))) x)) (Data.Bool.? \lambda _28035. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a)))))))))) ((Data.Bool.==> (Data.Bool.? \lambda _28035. ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a)))))) (Data.Bool.? \lambda _28035. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a))))))))) ;)

(; dict ;)

def thm_122 : B : hol.type -> A : hol.type -> hol.proof (hol.imp (hol.forall (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) (x_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.imp ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3)))) x_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5))))))))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4))))))))) :=
  B : hol.type => A : hol.type => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_58 A Q_1 P_2) (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4))))))) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))).

(; Theorem: |- ((= (\lambda _28035. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a)))))) _28035)) ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a))))))) ;)

(; dict ;)

def thm_123 : B : hol.type -> A : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq hol.bool ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) __28035_1) (hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4))))))) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.BETA_CONV (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool (__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) __28035_1.

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a))))))) (\lambda _28035. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a)))))) _28035)) ;)

(; dict ;)

def thm_124 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4)))))) ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) __28035_1)) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.SYM hol.bool ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) __28035_1) (hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4)))))) (thm_123 B A __28035_1).

(; Theorem: |- ((= (= (((_28035 Data.Option.none) b) f))) (= (((_28035 Data.Option.none) b) f))) ;)

(; dict ;)

def thm_125 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B (__28035_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_1)) (hol.eq B (__28035_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_1))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => b_2 : hol.term B => __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.REFL (hol.arr B hol.bool) (hol.eq B (__28035_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_1)).

(; Theorem: |- ((= (\lambda f. b f)) b) ;)

(; dict ;)

def thm_126 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> hol.proof (hol.eq B ((f_3 : hol.term (hol.arr A B) => b_2) f_1) b_2) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => b_2 : hol.term B => hol.BETA_CONV (hol.arr A B) B (f_3 : hol.term (hol.arr A B) => b_2) f_1.

(; Theorem: |- ((= ((= (((_28035 Data.Option.none) b) f)) (\lambda f. b f))) ((= (((_28035 Data.Option.none) b) f)) b)) ;)

(; dict ;)

def thm_127 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq hol.bool (hol.eq B (__28035_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_1) ((f_4 : hol.term (hol.arr A B) => b_2) f_1)) (hol.eq B (__28035_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_1) b_2)) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => b_2 : hol.term B => __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.APP_THM B hol.bool (hol.eq B (__28035_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_1)) (hol.eq B (__28035_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_1)) ((f_4 : hol.term (hol.arr A B) => b_2) f_1) b_2 (thm_125 A B f_1 b_2 __28035_3) (thm_126 A B f_1 b_2).

(; Theorem: |- ((= (= ((_28035 Data.Option.none) b))) (= ((_28035 Data.Option.none) b))) ;)

(; dict ;)

def thm_128 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> __28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr A B) B) hol.bool) (hol.eq (hol.arr (hol.arr A B) B) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_1)) (hol.eq (hol.arr (hol.arr A B) B) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_1))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => __28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.REFL (hol.arr (hol.arr (hol.arr A B) B) hol.bool) (hol.eq (hol.arr (hol.arr A B) B) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_1)).

(; Theorem: |- ((= (\lambda b. \lambda f. b b)) \lambda f. b) ;)

(; dict ;)

def thm_129 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> hol.proof (hol.eq (hol.arr (hol.arr A B) B) ((b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2) b_1) (f_2 : hol.term (hol.arr A B) => b_1)) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => hol.BETA_CONV B (hol.arr (hol.arr A B) B) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2) b_1.

(; Theorem: |- ((= ((= ((_28035 Data.Option.none) b)) (\lambda b. \lambda f. b b))) ((= ((_28035 Data.Option.none) b)) \lambda f. b)) ;)

(; dict ;)

def thm_130 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> __28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr (hol.arr A B) B) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_1) ((b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3) b_1)) (hol.eq (hol.arr (hol.arr A B) B) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_1) (f_3 : hol.term (hol.arr A B) => b_1))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => __28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.APP_THM (hol.arr (hol.arr A B) B) hol.bool (hol.eq (hol.arr (hol.arr A B) B) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_1)) (hol.eq (hol.arr (hol.arr A B) B) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_1)) ((b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3) b_1) (f_3 : hol.term (hol.arr A B) => b_1) (thm_128 B A b_1 __28035_2) (thm_129 B A b_1).

(; Theorem: |- ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b) ;)

(; dict ;)

def thm_131 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) -> hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) => hyp_1.

(; Theorem: |- ((= b) b) ;)

(; dict ;)

def thm_132 : B : hol.type -> b_1 : hol.term B -> hol.proof (hol.eq B b_1 b_1) :=
  B : hol.type => b_1 : hol.term B => hol.REFL B b_1.

(; Theorem: |- ((= ((_28035 Data.Option.none) b)) (\lambda b. \lambda f. b b)) ;)

(; dict ;)

def thm_133 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> __28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) -> hol.proof (hol.eq (hol.arr (hol.arr A B) B) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_1) ((b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3) b_1)) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => __28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) => hol.APP_THM B (hol.arr (hol.arr A B) B) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3) b_1 b_1 (thm_131 A B __28035_2 hyp_1) (thm_132 B b_1).

(; Theorem: |- ((= ((_28035 Data.Option.none) b)) \lambda f. b) ;)

(; dict ;)

def thm_134 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> __28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) -> hol.proof (hol.eq (hol.arr (hol.arr A B) B) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_1) (f_3 : hol.term (hol.arr A B) => b_1)) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => __28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) => hol.EQ_MP (hol.eq (hol.arr (hol.arr A B) B) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_1) ((b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3) b_1)) (hol.eq (hol.arr (hol.arr A B) B) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_1) (f_3 : hol.term (hol.arr A B) => b_1)) (thm_130 B A b_1 __28035_2) (thm_133 B A b_1 __28035_2 hyp_1).

(; Theorem: |- ((= f) f) ;)

(; dict ;)

def thm_135 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> hol.proof (hol.eq (hol.arr A B) f_1 f_1) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => hol.REFL (hol.arr A B) f_1.

(; Theorem: |- ((= (((_28035 Data.Option.none) b) f)) (\lambda f. b f)) ;)

(; dict ;)

def thm_136 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => b_4)) -> hol.proof (hol.eq B (__28035_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_1) ((f_4 : hol.term (hol.arr A B) => b_2) f_1)) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => b_2 : hol.term B => __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => b_4)) => hol.APP_THM (hol.arr A B) B (__28035_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2) (f_4 : hol.term (hol.arr A B) => b_2) f_1 f_1 (thm_134 B A b_2 __28035_3 hyp_1) (thm_135 B A f_1).

(; Theorem: |- ((= (((_28035 Data.Option.none) b) f)) b) ;)

(; dict ;)

def thm_137 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => b_4)) -> hol.proof (hol.eq B (__28035_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_1) b_2) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => b_2 : hol.term B => __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => b_4)) => hol.EQ_MP (hol.eq B (__28035_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_1) ((f_4 : hol.term (hol.arr A B) => b_2) f_1)) (hol.eq B (__28035_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_1) b_2) (thm_127 A B f_1 b_2 __28035_3) (thm_136 A B f_1 b_2 __28035_3 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)) ;)

(; dict ;)

def thm_138 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> __28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) -> hol.proof (hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_1 f_3) b_1)) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => __28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) => f_3 : hol.term (hol.arr A B) => thm_137 A B f_3 b_1 __28035_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b))) ;)

(; dict ;)

def thm_139 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) -> hol.proof (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) => b_2 : hol.term B => thm_138 B A b_2 __28035_1 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b))) ;)

(; dict ;)

def thm_140 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) -> hol.proof (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) => hol.PROVE_HYP (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (thm_85 A B __28035_1 hyp_1) (hyp_2 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) => thm_139 A B __28035_1 hyp_2).

(; Theorem: |- ((= (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a)))))) ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a))))))) ;)

(; dict ;)

def thm_141 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) -> hol.proof (hol.eq hol.bool (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4))))) (hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4))))))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_99 p_1 q_2 hyp_1) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4))))) hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a)))))) ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a))))))) ;)

(; dict ;)

def thm_142 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) -> hol.proof (hol.eq hol.bool (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4))))) (hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4))))))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) => hol.PROVE_HYP (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.eq hol.bool (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4))))) (hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4))))))) (thm_140 A B __28035_1 hyp_1) (hyp_2 : hol.proof (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) => thm_141 A B __28035_1 hyp_2).

(; Theorem: |- ((= (= (((_28035 (Data.Option.some a)) b) f))) (= (((_28035 (Data.Option.some a)) b) f))) ;)

(; dict ;)

def thm_143 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> a_3 : hol.term A -> __28035_4 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B (__28035_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3) b_2 f_1)) (hol.eq B (__28035_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3) b_2 f_1))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => b_2 : hol.term B => a_3 : hol.term A => __28035_4 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.REFL (hol.arr B hol.bool) (hol.eq B (__28035_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3) b_2 f_1)).

(; Theorem: |- ((= (\lambda f. (f a) f)) (f a)) ;)

(; dict ;)

def thm_144 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> a_2 : hol.term A -> hol.proof (hol.eq B ((f_3 : hol.term (hol.arr A B) => f_3 a_2) f_1) (f_1 a_2)) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => a_2 : hol.term A => hol.BETA_CONV (hol.arr A B) B (f_3 : hol.term (hol.arr A B) => f_3 a_2) f_1.

(; Theorem: |- ((= ((= (((_28035 (Data.Option.some a)) b) f)) (\lambda f. (f a) f))) ((= (((_28035 (Data.Option.some a)) b) f)) (f a))) ;)

(; dict ;)

def thm_145 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> a_3 : hol.term A -> __28035_4 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq hol.bool (hol.eq B (__28035_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3) b_2 f_1) ((f_5 : hol.term (hol.arr A B) => f_5 a_3) f_1)) (hol.eq B (__28035_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3) b_2 f_1) (f_1 a_3))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => b_2 : hol.term B => a_3 : hol.term A => __28035_4 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.APP_THM B hol.bool (hol.eq B (__28035_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3) b_2 f_1)) (hol.eq B (__28035_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3) b_2 f_1)) ((f_5 : hol.term (hol.arr A B) => f_5 a_3) f_1) (f_1 a_3) (thm_143 A B f_1 b_2 a_3 __28035_4) (thm_144 A B f_1 a_3).

(; Theorem: |- ((= (= ((_28035 (Data.Option.some a)) b))) (= ((_28035 (Data.Option.some a)) b))) ;)

(; dict ;)

def thm_146 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr A B) B) hol.bool) (hol.eq (hol.arr (hol.arr A B) B) (__28035_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2) b_1)) (hol.eq (hol.arr (hol.arr A B) B) (__28035_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2) b_1))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => a_2 : hol.term A => __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.REFL (hol.arr (hol.arr (hol.arr A B) B) hol.bool) (hol.eq (hol.arr (hol.arr A B) B) (__28035_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2) b_1)).

(; Theorem: |- ((= (\lambda b. \lambda f. (f a) b)) \lambda f. (f a)) ;)

(; dict ;)

def thm_147 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> hol.proof (hol.eq (hol.arr (hol.arr A B) B) ((b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2) b_1) (f_3 : hol.term (hol.arr A B) => f_3 a_2)) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => a_2 : hol.term A => hol.BETA_CONV B (hol.arr (hol.arr A B) B) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2) b_1.

(; Theorem: |- ((= ((= ((_28035 (Data.Option.some a)) b)) (\lambda b. \lambda f. (f a) b))) ((= ((_28035 (Data.Option.some a)) b)) \lambda f. (f a))) ;)

(; dict ;)

def thm_148 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr (hol.arr A B) B) (__28035_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2) b_1) ((b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_2) b_1)) (hol.eq (hol.arr (hol.arr A B) B) (__28035_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2) b_1) (f_4 : hol.term (hol.arr A B) => f_4 a_2))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => a_2 : hol.term A => __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.APP_THM (hol.arr (hol.arr A B) B) hol.bool (hol.eq (hol.arr (hol.arr A B) B) (__28035_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2) b_1)) (hol.eq (hol.arr (hol.arr A B) B) (__28035_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2) b_1)) ((b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_2) b_1) (f_4 : hol.term (hol.arr A B) => f_4 a_2) (thm_146 B A b_1 a_2 __28035_3) (thm_147 B A b_1 a_2).

(; Theorem: |- (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a))) ;)

(; dict ;)

def thm_149 : B : hol.type -> A : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))) -> hol.proof (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))) => hyp_1.

(; Theorem: |- ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a)) ;)

(; dict ;)

def thm_150 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> __28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3))) -> hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_1)) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => __28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3))) => thm_149 B A __28035_2 hyp_1 a_1.

(; Theorem: |- ((= ((_28035 (Data.Option.some a)) b)) (\lambda b. \lambda f. (f a) b)) ;)

(; dict ;)

def thm_151 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.forall A (a_4 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (b_5 : hol.term B => f_6 : hol.term (hol.arr A B) => f_6 a_4))) -> hol.proof (hol.eq (hol.arr (hol.arr A B) B) (__28035_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2) b_1) ((b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_2) b_1)) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => a_2 : hol.term A => __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.forall A (a_4 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (b_5 : hol.term B => f_6 : hol.term (hol.arr A B) => f_6 a_4))) => hol.APP_THM B (hol.arr (hol.arr A B) B) (__28035_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_2) b_1 b_1 (thm_150 A B a_2 __28035_3 hyp_1) (thm_132 B b_1).

(; Theorem: |- ((= ((_28035 (Data.Option.some a)) b)) \lambda f. (f a)) ;)

(; dict ;)

def thm_152 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> a_2 : hol.term A -> __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.forall A (a_4 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (b_5 : hol.term B => f_6 : hol.term (hol.arr A B) => f_6 a_4))) -> hol.proof (hol.eq (hol.arr (hol.arr A B) B) (__28035_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2) b_1) (f_4 : hol.term (hol.arr A B) => f_4 a_2)) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => a_2 : hol.term A => __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.forall A (a_4 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (b_5 : hol.term B => f_6 : hol.term (hol.arr A B) => f_6 a_4))) => hol.EQ_MP (hol.eq (hol.arr (hol.arr A B) B) (__28035_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2) b_1) ((b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_2) b_1)) (hol.eq (hol.arr (hol.arr A B) B) (__28035_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2) b_1) (f_4 : hol.term (hol.arr A B) => f_4 a_2)) (thm_148 B A b_1 a_2 __28035_3) (thm_151 B A b_1 a_2 __28035_3 hyp_1).

(; Theorem: |- ((= (((_28035 (Data.Option.some a)) b) f)) (\lambda f. (f a) f)) ;)

(; dict ;)

def thm_153 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> a_3 : hol.term A -> __28035_4 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.forall A (a_5 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (b_6 : hol.term B => f_7 : hol.term (hol.arr A B) => f_7 a_5))) -> hol.proof (hol.eq B (__28035_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3) b_2 f_1) ((f_5 : hol.term (hol.arr A B) => f_5 a_3) f_1)) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => b_2 : hol.term B => a_3 : hol.term A => __28035_4 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.forall A (a_5 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (b_6 : hol.term B => f_7 : hol.term (hol.arr A B) => f_7 a_5))) => hol.APP_THM (hol.arr A B) B (__28035_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3) b_2) (f_5 : hol.term (hol.arr A B) => f_5 a_3) f_1 f_1 (thm_152 B A b_2 a_3 __28035_4 hyp_1) (thm_135 B A f_1).

(; Theorem: |- ((= (((_28035 (Data.Option.some a)) b) f)) (f a)) ;)

(; dict ;)

def thm_154 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> a_3 : hol.term A -> __28035_4 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.forall A (a_5 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (b_6 : hol.term B => f_7 : hol.term (hol.arr A B) => f_7 a_5))) -> hol.proof (hol.eq B (__28035_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3) b_2 f_1) (f_1 a_3)) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => b_2 : hol.term B => a_3 : hol.term A => __28035_4 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.forall A (a_5 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (b_6 : hol.term B => f_7 : hol.term (hol.arr A B) => f_7 a_5))) => hol.EQ_MP (hol.eq B (__28035_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3) b_2 f_1) ((f_5 : hol.term (hol.arr A B) => f_5 a_3) f_1)) (hol.eq B (__28035_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3) b_2 f_1) (f_1 a_3)) (thm_145 A B f_1 b_2 a_3 __28035_4) (thm_153 A B f_1 b_2 a_3 __28035_4 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a))) ;)

(; dict ;)

def thm_155 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.forall A (a_4 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (b_5 : hol.term B => f_6 : hol.term (hol.arr A B) => f_6 a_4))) -> hol.proof (hol.forall A (a_4 : hol.term A => hol.eq B (__28035_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_1) (f_1 a_4))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => b_2 : hol.term B => __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.forall A (a_4 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (b_5 : hol.term B => f_6 : hol.term (hol.arr A B) => f_6 a_4))) => a_4 : hol.term A => thm_154 A B f_1 b_2 a_4 __28035_3 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a)))) ;)

(; dict ;)

def thm_156 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> __28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3))) -> hol.proof (hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_1 f_3) (f_3 a_4)))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => __28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3))) => f_3 : hol.term (hol.arr A B) => thm_155 B A f_3 b_1 __28035_2 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a))))) ;)

(; dict ;)

def thm_157 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))) -> hol.proof (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4))))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))) => b_2 : hol.term B => thm_156 B A b_2 __28035_1 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a))))) ;)

(; dict ;)

def thm_158 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) -> hol.proof (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4))))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) => hol.PROVE_HYP (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4))))) (thm_102 B A __28035_1 hyp_1) (hyp_2 : hol.proof (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))) => thm_157 A B __28035_1 hyp_2).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a)))))) ;)

(; dict ;)

def thm_159 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) -> hol.proof (hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4)))))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) => hol.EQ_MP (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4))))) (hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4)))))) (thm_142 A B __28035_1 hyp_1) (thm_158 A B __28035_1 hyp_1).

(; Theorem: |- (\lambda _28035. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a)))))) _28035) ;)

(; dict ;)

def thm_160 : B : hol.type -> A : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) -> hol.proof ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) __28035_1) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) => hol.EQ_MP (hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4)))))) ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) __28035_1) (thm_124 A B __28035_1) (thm_159 A B __28035_1 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda _28035. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a))))))) ;)

(; dict ;)

def thm_161 : B : hol.type -> A : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) __28035_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5))))))) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) __28035_1) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_111 A x_1 P_2 hyp_1) (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) __28035_1 (__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda _28035. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a))))))) ;)

(; dict ;)

def thm_162 : B : hol.type -> A : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5))))))) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) => hol.PROVE_HYP ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) __28035_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5))))))) (thm_160 B A __28035_1 hyp_1) (hyp_2 : hol.proof ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) __28035_1) => thm_161 B A __28035_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a))))) (Data.Bool.? \lambda _28035. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a)))))))) ;)

(; dict ;)

def thm_163 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.imp (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2)))) => thm_162 B A __28035_1 hyp_1.

(; Theorem: |- (Data.Bool.? \lambda _28035. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a))))))) ;)

(; dict ;)

def thm_164 : B : hol.type -> A : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3)))) __28035_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5))))))) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3)))) __28035_1) => thm_163 A B __28035_1 (thm_116 A B __28035_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda _28035. ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a)))) _28035)) (Data.Bool.? \lambda _28035. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a)))))))) ;)

(; dict ;)

def thm_165 : B : hol.type -> A : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.imp ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3)))) __28035_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))))) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3)))) __28035_1) => thm_164 B A __28035_1 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda _28035. ((Data.Bool.==> (\lambda _28035. ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a)))) _28035)) (Data.Bool.? \lambda _28035. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a))))))))) ;)

(; dict ;)

def thm_166 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.imp ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => b_3)) (hol.forall A (a_3 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (b_4 : hol.term B => f_5 : hol.term (hol.arr A B) => f_5 a_3)))) __28035_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5))))))))) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => thm_165 B A __28035_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda _28035. ((Data.Bool./\ ((= (_28035 Data.Option.none)) \lambda b. \lambda f. b)) (Data.Bool.! \lambda a. ((= (_28035 (Data.Option.some a))) \lambda b. \lambda f. (f a)))))) (Data.Bool.? \lambda _28035. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a)))))))) ;)

(; dict ;)

def thm_167 : B : hol.type -> A : hol.type -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4)))))))) :=
  B : hol.type => A : hol.type => thm_122 B A (thm_166 B A).

(; Theorem: |- (Data.Bool.? \lambda _28035. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a))))))) ;)

(; dict ;)

def thm_168 : B : hol.type -> A : hol.type -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4))))))) :=
  B : hol.type => A : hol.type => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))))) => thm_167 B A (thm_120 B A hyp_1).

(; Theorem: |- (Data.Bool.? \lambda _28035. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a))))))) ;)

(; dict ;)

def thm_169 : B : hol.type -> A : hol.type -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4))))))) :=
  B : hol.type => A : hol.type => hol.PROVE_HYP (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4))))))) (thm_121 B A) (hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (b_2 : hol.term B => f_3 : hol.term (hol.arr A B) => b_2)) (hol.forall A (a_2 : hol.term A => hol.eq (hol.arr B (hol.arr (hol.arr A B) B)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (b_3 : hol.term B => f_4 : hol.term (hol.arr A B) => f_4 a_2))))) => thm_168 B A hyp_1).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda _28035. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a)))))) x)) (Data.Bool.? \lambda case_option. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a)))))))))) ((Data.Bool.==> (Data.Bool.? \lambda _28035. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a)))))))) (Data.Bool.? \lambda case_option. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a))))))))) ;)

(; dict ;)

def thm_170 : B : hol.type -> A : hol.type -> hol.proof (hol.imp (hol.forall (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) (x_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.imp ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) x_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) hol.bool) (case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5))))))))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) hol.bool) (case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4))))))))) :=
  B : hol.type => A : hol.type => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_58 A Q_1 P_2) (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) hol.bool) (case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4))))))) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4)))))).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a))))))) (\lambda case_option. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a)))))) case_option)) ;)

(; dict ;)

def thm_171 : A : hol.type -> B : hol.type -> case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4)))))) ((case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))) case__option_1)) :=
  A : hol.type => B : hol.type => case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.SYM hol.bool ((case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))) case__option_1) (hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4)))))) (thm_15 A B case__option_1).

(; Theorem: |- ((= Data.Bool./\) Data.Bool./\) ;)

(; dict ;)

def thm_172 : hol.proof (hol.eq (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and hol.and) :=
  hol.REFL (hol.arr hol.bool (hol.arr hol.bool hol.bool)) hol.and.

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_173 : B : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr B hol.bool) hol.bool) (hol.forall B) (hol.forall B)) :=
  B : hol.type => hol.REFL (hol.arr (hol.arr B hol.bool) hol.bool) (hol.forall B).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_174 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr (hol.arr A B) hol.bool) hol.bool) (hol.forall (hol.arr A B)).

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_175 : B : hol.type -> hol.proof (hol.eq (hol.arr B (hol.arr B hol.bool)) (hol.eq B) (hol.eq B)) :=
  B : hol.type => hol.REFL (hol.arr B (hol.arr B hol.bool)) (hol.eq B).

(; Theorem: |- ((= ((= case_option) \lambda _28032. \lambda _28033. \lambda _28034. (((_28035 _28034) _28032) _28033))) ((= case_option) \lambda _28032. \lambda _28033. \lambda _28034. (((_28035 _28034) _28032) _28033))) ;)

(; dict ;)

def thm_176 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4)) (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.REFL hol.bool (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4)).

(; Theorem: |- ((= ((= case_option) \lambda _28032. \lambda _28033. \lambda _28034. (((_28035 _28034) _28032) _28033))) ((= case_option) \lambda _28032. \lambda _28033. \lambda _28034. (((_28035 _28034) _28032) _28033))) ;)

(; dict ;)

def thm_177 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4)) (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.TRANS hol.bool (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4)) (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4)) (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4)) (thm_176 A B __28035_1 case__option_2) (thm_176 A B __28035_1 case__option_2).

(; Theorem: |- ((= case_option) \lambda _28032. \lambda _28033. \lambda _28034. (((_28035 _28034) _28032) _28033)) ;)

(; dict ;)

def thm_178 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4)) -> hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4)) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4)) => hyp_1.

(; Theorem: |- ((= (case_option b)) (\lambda _28032. \lambda _28033. \lambda _28034. (((_28035 _28034) _28032) _28033) b)) ;)

(; dict ;)

def thm_179 : B : hol.type -> A : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> b_2 : hol.term B -> case__option_3 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_3 (__28032_4 : hol.term B => __28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_6 __28032_4 __28033_5)) -> hol.proof (hol.eq (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B)) (case__option_3 b_2) ((__28032_4 : hol.term B => __28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_6 __28032_4 __28033_5) b_2)) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => b_2 : hol.term B => case__option_3 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_3 (__28032_4 : hol.term B => __28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_6 __28032_4 __28033_5)) => hol.APP_THM B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B)) case__option_3 (__28032_4 : hol.term B => __28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_6 __28032_4 __28033_5) b_2 b_2 (hol.EQ_MP (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_3 (__28032_4 : hol.term B => __28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_6 __28032_4 __28033_5)) (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_3 (__28032_4 : hol.term B => __28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_6 __28032_4 __28033_5)) (thm_177 A B __28035_1 case__option_3) (thm_178 A B __28035_1 case__option_3 hyp_1)) (thm_132 B b_2).

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_180 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B)) (hol.arr (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B)) hol.bool)) (hol.eq (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (hol.eq (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B)))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B)) (hol.arr (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B)) hol.bool)) (hol.eq (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))).

(; Theorem: |- ((= (\lambda _28032. \lambda _28033. \lambda _28034. (((_28035 _28034) _28032) _28033) _28032)) \lambda _28033. \lambda _28034. (((_28035 _28034) _28032) _28033)) ;)

(; dict ;)

def thm_181 : B : hol.type -> A : hol.type -> __28032_1 : hol.term B -> __28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B)) ((__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_2 __28034_5 __28032_3 __28033_4) __28032_1) (__28033_3 : hol.term (hol.arr A B) => __28034_4 : hol.term (Data_2EOption_2Eoption A) => __28035_2 __28034_4 __28032_1 __28033_3)) :=
  B : hol.type => A : hol.type => __28032_1 : hol.term B => __28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.BETA_CONV B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B)) (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_2 __28034_5 __28032_3 __28033_4) __28032_1.

(; Theorem: |- ((= \lambda _28032. (\lambda _28032. \lambda _28033. \lambda _28034. (((_28035 _28034) _28032) _28033) _28032)) \lambda _28032. \lambda _28033. \lambda _28034. (((_28035 _28034) _28032) _28033)) ;)

(; dict ;)

def thm_182 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (__28032_2 : hol.term B => (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4) __28032_2) (__28032_2 : hol.term B => __28033_3 : hol.term (hol.arr A B) => __28034_4 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_4 __28032_2 __28033_3)) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.ABS_THM B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B)) (__28032_2 : hol.term B => (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4) __28032_2) (__28032_2 : hol.term B => __28033_3 : hol.term (hol.arr A B) => __28034_4 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_4 __28032_2 __28033_3) (__28032_2 : hol.term B => thm_181 B A __28032_2 __28035_1).

(; Theorem: |- ((= (\lambda _28032. (\lambda _28032. \lambda _28033. \lambda _28034. (((_28035 _28034) _28032) _28033) _28032) b)) (\lambda _28032. \lambda _28033. \lambda _28034. (((_28035 _28034) _28032) _28033) b)) ;)

(; dict ;)

def thm_183 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> __28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B)) ((__28032_3 : hol.term B => (__28032_4 : hol.term B => __28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_2 __28034_6 __28032_4 __28033_5) __28032_3) b_1) ((__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_2 __28034_5 __28032_3 __28033_4) b_1)) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => __28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.APP_THM B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B)) (__28032_3 : hol.term B => (__28032_4 : hol.term B => __28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_2 __28034_6 __28032_4 __28033_5) __28032_3) (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_2 __28034_5 __28032_3 __28033_4) b_1 b_1 (thm_182 A B __28035_2) (thm_132 B b_1).

(; Theorem: |- ((= (= (\lambda _28032. (\lambda _28032. \lambda _28033. \lambda _28034. (((_28035 _28034) _28032) _28033) _28032) b))) (= (\lambda _28032. \lambda _28033. \lambda _28034. (((_28035 _28034) _28032) _28033) b))) ;)

(; dict ;)

def thm_184 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> __28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B)) hol.bool) (hol.eq (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B)) ((__28032_3 : hol.term B => (__28032_4 : hol.term B => __28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_2 __28034_6 __28032_4 __28033_5) __28032_3) b_1)) (hol.eq (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B)) ((__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_2 __28034_5 __28032_3 __28033_4) b_1))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => __28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.APP_THM (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B)) (hol.arr (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B)) hol.bool) (hol.eq (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (hol.eq (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) ((__28032_3 : hol.term B => (__28032_4 : hol.term B => __28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_2 __28034_6 __28032_4 __28033_5) __28032_3) b_1) ((__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_2 __28034_5 __28032_3 __28033_4) b_1) (thm_180 B A) (thm_183 B A b_1 __28035_2).

(; Theorem: |- ((= (\lambda _28032. \lambda _28033. \lambda _28034. (((_28035 _28034) _28032) _28033) b)) \lambda _28033. \lambda _28034. (((_28035 _28034) b) _28033)) ;)

(; dict ;)

def thm_185 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> __28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B)) ((__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_2 __28034_5 __28032_3 __28033_4) b_1) (__28033_3 : hol.term (hol.arr A B) => __28034_4 : hol.term (Data_2EOption_2Eoption A) => __28035_2 __28034_4 b_1 __28033_3)) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => __28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.BETA_CONV B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B)) (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_2 __28034_5 __28032_3 __28033_4) b_1.

(; Theorem: |- ((= ((= (\lambda _28032. (\lambda _28032. \lambda _28033. \lambda _28034. (((_28035 _28034) _28032) _28033) _28032) b)) (\lambda _28032. \lambda _28033. \lambda _28034. (((_28035 _28034) _28032) _28033) b))) ((= (\lambda _28032. \lambda _28033. \lambda _28034. (((_28035 _28034) _28032) _28033) b)) \lambda _28033. \lambda _28034. (((_28035 _28034) b) _28033))) ;)

(; dict ;)

def thm_186 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> __28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B)) ((__28032_3 : hol.term B => (__28032_4 : hol.term B => __28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_2 __28034_6 __28032_4 __28033_5) __28032_3) b_1) ((__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_2 __28034_5 __28032_3 __28033_4) b_1)) (hol.eq (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B)) ((__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_2 __28034_5 __28032_3 __28033_4) b_1) (__28033_3 : hol.term (hol.arr A B) => __28034_4 : hol.term (Data_2EOption_2Eoption A) => __28035_2 __28034_4 b_1 __28033_3))) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => __28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.APP_THM (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B)) hol.bool (hol.eq (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B)) ((__28032_3 : hol.term B => (__28032_4 : hol.term B => __28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_2 __28034_6 __28032_4 __28033_5) __28032_3) b_1)) (hol.eq (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B)) ((__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_2 __28034_5 __28032_3 __28033_4) b_1)) ((__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_2 __28034_5 __28032_3 __28033_4) b_1) (__28033_3 : hol.term (hol.arr A B) => __28034_4 : hol.term (Data_2EOption_2Eoption A) => __28035_2 __28034_4 b_1 __28033_3) (thm_184 B A b_1 __28035_2) (thm_185 B A b_1 __28035_2).

(; Theorem: |- ((= (case_option b)) \lambda _28033. \lambda _28034. (((_28035 _28034) b) _28033)) ;)

(; dict ;)

def thm_187 : B : hol.type -> A : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> b_2 : hol.term B -> case__option_3 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_3 (__28032_4 : hol.term B => __28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_6 __28032_4 __28033_5)) -> hol.proof (hol.eq (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B)) (case__option_3 b_2) (__28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 b_2 __28033_4)) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => b_2 : hol.term B => case__option_3 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_3 (__28032_4 : hol.term B => __28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_6 __28032_4 __28033_5)) => hol.TRANS (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B)) (case__option_3 b_2) ((__28032_4 : hol.term B => __28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_6 __28032_4 __28033_5) b_2) (__28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 b_2 __28033_4) (thm_179 B A __28035_1 b_2 case__option_3 hyp_1) (hol.EQ_MP (hol.eq (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B)) ((__28032_4 : hol.term B => (__28032_5 : hol.term B => __28033_6 : hol.term (hol.arr A B) => __28034_7 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_7 __28032_5 __28033_6) __28032_4) b_2) ((__28032_4 : hol.term B => __28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_6 __28032_4 __28033_5) b_2)) (hol.eq (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B)) ((__28032_4 : hol.term B => __28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_6 __28032_4 __28033_5) b_2) (__28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 b_2 __28033_4)) (thm_186 B A b_2 __28035_1) (thm_183 B A b_2 __28035_1)).

(; Theorem: |- ((= ((case_option b) f)) (\lambda _28033. \lambda _28034. (((_28035 _28034) b) _28033) f)) ;)

(; dict ;)

def thm_188 : B : hol.type -> A : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> f_2 : hol.term (hol.arr A B) -> b_3 : hol.term B -> case__option_4 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_4 (__28032_5 : hol.term B => __28033_6 : hol.term (hol.arr A B) => __28034_7 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_7 __28032_5 __28033_6)) -> hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) B) (case__option_4 b_3 f_2) ((__28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_6 b_3 __28033_5) f_2)) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => f_2 : hol.term (hol.arr A B) => b_3 : hol.term B => case__option_4 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_4 (__28032_5 : hol.term B => __28033_6 : hol.term (hol.arr A B) => __28034_7 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_7 __28032_5 __28033_6)) => hol.APP_THM (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B) (case__option_4 b_3) (__28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_6 b_3 __28033_5) f_2 f_2 (thm_187 B A __28035_1 b_3 case__option_4 hyp_1) (thm_135 B A f_2).

(; Theorem: |- ((= =) =) ;)

(; dict ;)

def thm_189 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (Data_2EOption_2Eoption A) B) (hol.arr (hol.arr (Data_2EOption_2Eoption A) B) hol.bool)) (hol.eq (hol.arr (Data_2EOption_2Eoption A) B)) (hol.eq (hol.arr (Data_2EOption_2Eoption A) B))) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (hol.arr (Data_2EOption_2Eoption A) B) (hol.arr (hol.arr (Data_2EOption_2Eoption A) B) hol.bool)) (hol.eq (hol.arr (Data_2EOption_2Eoption A) B)).

(; Theorem: |- ((= (\lambda _28033. \lambda _28034. (((_28035 _28034) b) _28033) _28033)) \lambda _28034. (((_28035 _28034) b) _28033)) ;)

(; dict ;)

def thm_190 : B : hol.type -> A : hol.type -> __28033_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) B) ((__28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_5 b_2 __28033_4) __28033_1) (__28034_4 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_4 b_2 __28033_1)) :=
  B : hol.type => A : hol.type => __28033_1 : hol.term (hol.arr A B) => b_2 : hol.term B => __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.BETA_CONV (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B) (__28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_5 b_2 __28033_4) __28033_1.

(; Theorem: |- ((= \lambda _28033. (\lambda _28033. \lambda _28034. (((_28035 _28034) b) _28033) _28033)) \lambda _28033. \lambda _28034. (((_28035 _28034) b) _28033)) ;)

(; dict ;)

def thm_191 : B : hol.type -> A : hol.type -> b_1 : hol.term B -> __28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B)) (__28033_3 : hol.term (hol.arr A B) => (__28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_2 __28034_5 b_1 __28033_4) __28033_3) (__28033_3 : hol.term (hol.arr A B) => __28034_4 : hol.term (Data_2EOption_2Eoption A) => __28035_2 __28034_4 b_1 __28033_3)) :=
  B : hol.type => A : hol.type => b_1 : hol.term B => __28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.ABS_THM (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B) (__28033_3 : hol.term (hol.arr A B) => (__28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_2 __28034_5 b_1 __28033_4) __28033_3) (__28033_3 : hol.term (hol.arr A B) => __28034_4 : hol.term (Data_2EOption_2Eoption A) => __28035_2 __28034_4 b_1 __28033_3) (__28033_3 : hol.term (hol.arr A B) => thm_190 B A __28033_3 b_1 __28035_2).

(; Theorem: |- ((= (\lambda _28033. (\lambda _28033. \lambda _28034. (((_28035 _28034) b) _28033) _28033) f)) (\lambda _28033. \lambda _28034. (((_28035 _28034) b) _28033) f)) ;)

(; dict ;)

def thm_192 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) B) ((__28033_4 : hol.term (hol.arr A B) => (__28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_6 b_2 __28033_5) __28033_4) f_1) ((__28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_5 b_2 __28033_4) f_1)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => b_2 : hol.term B => __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.APP_THM (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B) (__28033_4 : hol.term (hol.arr A B) => (__28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_6 b_2 __28033_5) __28033_4) (__28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_5 b_2 __28033_4) f_1 f_1 (thm_191 B A b_2 __28035_3) (thm_135 B A f_1).

(; Theorem: |- ((= (= (\lambda _28033. (\lambda _28033. \lambda _28034. (((_28035 _28034) b) _28033) _28033) f))) (= (\lambda _28033. \lambda _28034. (((_28035 _28034) b) _28033) f))) ;)

(; dict ;)

def thm_193 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq (hol.arr (hol.arr (Data_2EOption_2Eoption A) B) hol.bool) (hol.eq (hol.arr (Data_2EOption_2Eoption A) B) ((__28033_4 : hol.term (hol.arr A B) => (__28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_6 b_2 __28033_5) __28033_4) f_1)) (hol.eq (hol.arr (Data_2EOption_2Eoption A) B) ((__28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_5 b_2 __28033_4) f_1))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => b_2 : hol.term B => __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.APP_THM (hol.arr (Data_2EOption_2Eoption A) B) (hol.arr (hol.arr (Data_2EOption_2Eoption A) B) hol.bool) (hol.eq (hol.arr (Data_2EOption_2Eoption A) B)) (hol.eq (hol.arr (Data_2EOption_2Eoption A) B)) ((__28033_4 : hol.term (hol.arr A B) => (__28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_6 b_2 __28033_5) __28033_4) f_1) ((__28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_5 b_2 __28033_4) f_1) (thm_189 B A) (thm_192 B A f_1 b_2 __28035_3).

(; Theorem: |- ((= (\lambda _28033. \lambda _28034. (((_28035 _28034) b) _28033) f)) \lambda _28034. (((_28035 _28034) b) f)) ;)

(; dict ;)

def thm_194 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) B) ((__28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_5 b_2 __28033_4) f_1) (__28034_4 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_4 b_2 f_1)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => b_2 : hol.term B => __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.BETA_CONV (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B) (__28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_5 b_2 __28033_4) f_1.

(; Theorem: |- ((= ((= (\lambda _28033. (\lambda _28033. \lambda _28034. (((_28035 _28034) b) _28033) _28033) f)) (\lambda _28033. \lambda _28034. (((_28035 _28034) b) _28033) f))) ((= (\lambda _28033. \lambda _28034. (((_28035 _28034) b) _28033) f)) \lambda _28034. (((_28035 _28034) b) f))) ;)

(; dict ;)

def thm_195 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq hol.bool (hol.eq (hol.arr (Data_2EOption_2Eoption A) B) ((__28033_4 : hol.term (hol.arr A B) => (__28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_6 b_2 __28033_5) __28033_4) f_1) ((__28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_5 b_2 __28033_4) f_1)) (hol.eq (hol.arr (Data_2EOption_2Eoption A) B) ((__28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_5 b_2 __28033_4) f_1) (__28034_4 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_4 b_2 f_1))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => b_2 : hol.term B => __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.APP_THM (hol.arr (Data_2EOption_2Eoption A) B) hol.bool (hol.eq (hol.arr (Data_2EOption_2Eoption A) B) ((__28033_4 : hol.term (hol.arr A B) => (__28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_6 b_2 __28033_5) __28033_4) f_1)) (hol.eq (hol.arr (Data_2EOption_2Eoption A) B) ((__28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_5 b_2 __28033_4) f_1)) ((__28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_5 b_2 __28033_4) f_1) (__28034_4 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_4 b_2 f_1) (thm_193 B A f_1 b_2 __28035_3) (thm_194 B A f_1 b_2 __28035_3).

(; Theorem: |- ((= ((case_option b) f)) \lambda _28034. (((_28035 _28034) b) f)) ;)

(; dict ;)

def thm_196 : B : hol.type -> A : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> f_2 : hol.term (hol.arr A B) -> b_3 : hol.term B -> case__option_4 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_4 (__28032_5 : hol.term B => __28033_6 : hol.term (hol.arr A B) => __28034_7 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_7 __28032_5 __28033_6)) -> hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) B) (case__option_4 b_3 f_2) (__28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 b_3 f_2)) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => f_2 : hol.term (hol.arr A B) => b_3 : hol.term B => case__option_4 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_4 (__28032_5 : hol.term B => __28033_6 : hol.term (hol.arr A B) => __28034_7 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_7 __28032_5 __28033_6)) => hol.TRANS (hol.arr (Data_2EOption_2Eoption A) B) (case__option_4 b_3 f_2) ((__28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_6 b_3 __28033_5) f_2) (__28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 b_3 f_2) (thm_188 B A __28035_1 f_2 b_3 case__option_4 hyp_1) (hol.EQ_MP (hol.eq (hol.arr (Data_2EOption_2Eoption A) B) ((__28033_5 : hol.term (hol.arr A B) => (__28033_6 : hol.term (hol.arr A B) => __28034_7 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_7 b_3 __28033_6) __28033_5) f_2) ((__28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_6 b_3 __28033_5) f_2)) (hol.eq (hol.arr (Data_2EOption_2Eoption A) B) ((__28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_6 b_3 __28033_5) f_2) (__28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 b_3 f_2)) (thm_195 B A f_2 b_3 __28035_1) (thm_192 B A f_2 b_3 __28035_1)).

(; Theorem: |- ((= Data.Option.none) Data.Option.none) ;)

(; dict ;)

def thm_197 : A : hol.type -> hol.proof (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) :=
  A : hol.type => hol.REFL (Data_2EOption_2Eoption A) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)).

(; Theorem: |- ((= (((case_option b) f) Data.Option.none)) (\lambda _28034. (((_28035 _28034) b) f) Data.Option.none)) ;)

(; dict ;)

def thm_198 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> f_2 : hol.term (hol.arr A B) -> b_3 : hol.term B -> case__option_4 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_4 (__28032_5 : hol.term B => __28033_6 : hol.term (hol.arr A B) => __28034_7 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_7 __28032_5 __28033_6)) -> hol.proof (hol.eq B (case__option_4 b_3 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) ((__28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 b_3 f_2) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => f_2 : hol.term (hol.arr A B) => b_3 : hol.term B => case__option_4 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_4 (__28032_5 : hol.term B => __28033_6 : hol.term (hol.arr A B) => __28034_7 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_7 __28032_5 __28033_6)) => hol.APP_THM (Data_2EOption_2Eoption A) B (case__option_4 b_3 f_2) (__28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 b_3 f_2) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (thm_196 B A __28035_1 f_2 b_3 case__option_4 hyp_1) (thm_197 A).

(; Theorem: |- ((= (\lambda _28034. (((_28035 _28034) b) f) _28034)) (((_28035 _28034) b) f)) ;)

(; dict ;)

def thm_199 : A : hol.type -> B : hol.type -> __28034_1 : hol.term (Data_2EOption_2Eoption A) -> f_2 : hol.term (hol.arr A B) -> b_3 : hol.term B -> __28035_4 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq B ((__28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_4 __28034_5 b_3 f_2) __28034_1) (__28035_4 __28034_1 b_3 f_2)) :=
  A : hol.type => B : hol.type => __28034_1 : hol.term (Data_2EOption_2Eoption A) => f_2 : hol.term (hol.arr A B) => b_3 : hol.term B => __28035_4 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.BETA_CONV (Data_2EOption_2Eoption A) B (__28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_4 __28034_5 b_3 f_2) __28034_1.

(; Theorem: |- ((= \lambda _28034. (\lambda _28034. (((_28035 _28034) b) f) _28034)) \lambda _28034. (((_28035 _28034) b) f)) ;)

(; dict ;)

def thm_200 : B : hol.type -> A : hol.type -> f_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) B) (__28034_4 : hol.term (Data_2EOption_2Eoption A) => (__28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_5 b_2 f_1) __28034_4) (__28034_4 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_4 b_2 f_1)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => b_2 : hol.term B => __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.ABS_THM (Data_2EOption_2Eoption A) B (__28034_4 : hol.term (Data_2EOption_2Eoption A) => (__28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_5 b_2 f_1) __28034_4) (__28034_4 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_4 b_2 f_1) (__28034_4 : hol.term (Data_2EOption_2Eoption A) => thm_199 A B __28034_4 f_1 b_2 __28035_3).

(; Theorem: |- ((= (\lambda _28034. (\lambda _28034. (((_28035 _28034) b) f) _28034) Data.Option.none)) (\lambda _28034. (((_28035 _28034) b) f) Data.Option.none)) ;)

(; dict ;)

def thm_201 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq B ((__28034_4 : hol.term (Data_2EOption_2Eoption A) => (__28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_5 b_2 f_1) __28034_4) (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) ((__28034_4 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_4 b_2 f_1) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => b_2 : hol.term B => __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.APP_THM (Data_2EOption_2Eoption A) B (__28034_4 : hol.term (Data_2EOption_2Eoption A) => (__28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_5 b_2 f_1) __28034_4) (__28034_4 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_4 b_2 f_1) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) (thm_200 B A f_1 b_2 __28035_3) (thm_197 A).

(; Theorem: |- ((= (= (\lambda _28034. (\lambda _28034. (((_28035 _28034) b) f) _28034) Data.Option.none))) (= (\lambda _28034. (((_28035 _28034) b) f) Data.Option.none))) ;)

(; dict ;)

def thm_202 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B ((__28034_4 : hol.term (Data_2EOption_2Eoption A) => (__28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_5 b_2 f_1) __28034_4) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) (hol.eq B ((__28034_4 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_4 b_2 f_1) (Data_2EOption_2Enone (Data_2EOption_2Eoption A))))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => b_2 : hol.term B => __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.APP_THM B (hol.arr B hol.bool) (hol.eq B) (hol.eq B) ((__28034_4 : hol.term (Data_2EOption_2Eoption A) => (__28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_5 b_2 f_1) __28034_4) (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) ((__28034_4 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_4 b_2 f_1) (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (thm_175 B) (thm_201 A B f_1 b_2 __28035_3).

(; Theorem: |- ((= (\lambda _28034. (((_28035 _28034) b) f) Data.Option.none)) (((_28035 Data.Option.none) b) f)) ;)

(; dict ;)

def thm_203 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq B ((__28034_4 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_4 b_2 f_1) (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (__28035_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_1)) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => b_2 : hol.term B => __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.BETA_CONV (Data_2EOption_2Eoption A) B (__28034_4 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_4 b_2 f_1) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)).

(; Theorem: |- ((= ((= (\lambda _28034. (\lambda _28034. (((_28035 _28034) b) f) _28034) Data.Option.none)) (\lambda _28034. (((_28035 _28034) b) f) Data.Option.none))) ((= (\lambda _28034. (((_28035 _28034) b) f) Data.Option.none)) (((_28035 Data.Option.none) b) f))) ;)

(; dict ;)

def thm_204 : A : hol.type -> B : hol.type -> f_1 : hol.term (hol.arr A B) -> b_2 : hol.term B -> __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq hol.bool (hol.eq B ((__28034_4 : hol.term (Data_2EOption_2Eoption A) => (__28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_5 b_2 f_1) __28034_4) (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) ((__28034_4 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_4 b_2 f_1) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) (hol.eq B ((__28034_4 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_4 b_2 f_1) (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (__28035_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_1))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (hol.arr A B) => b_2 : hol.term B => __28035_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.APP_THM B hol.bool (hol.eq B ((__28034_4 : hol.term (Data_2EOption_2Eoption A) => (__28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_5 b_2 f_1) __28034_4) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) (hol.eq B ((__28034_4 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_4 b_2 f_1) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) ((__28034_4 : hol.term (Data_2EOption_2Eoption A) => __28035_3 __28034_4 b_2 f_1) (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (__28035_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_1) (thm_202 A B f_1 b_2 __28035_3) (thm_203 A B f_1 b_2 __28035_3).

(; Theorem: |- ((= (((case_option b) f) Data.Option.none)) (((_28035 Data.Option.none) b) f)) ;)

(; dict ;)

def thm_205 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> f_2 : hol.term (hol.arr A B) -> b_3 : hol.term B -> case__option_4 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_4 (__28032_5 : hol.term B => __28033_6 : hol.term (hol.arr A B) => __28034_7 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_7 __28032_5 __28033_6)) -> hol.proof (hol.eq B (case__option_4 b_3 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_2)) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => f_2 : hol.term (hol.arr A B) => b_3 : hol.term B => case__option_4 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_4 (__28032_5 : hol.term B => __28033_6 : hol.term (hol.arr A B) => __28034_7 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_7 __28032_5 __28033_6)) => hol.TRANS B (case__option_4 b_3 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) ((__28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 b_3 f_2) (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_2) (thm_198 A B __28035_1 f_2 b_3 case__option_4 hyp_1) (hol.EQ_MP (hol.eq B ((__28034_5 : hol.term (Data_2EOption_2Eoption A) => (__28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_6 b_3 f_2) __28034_5) (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) ((__28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 b_3 f_2) (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) (hol.eq B ((__28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 b_3 f_2) (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_2)) (thm_204 A B f_2 b_3 __28035_1) (thm_201 A B f_2 b_3 __28035_1)).

(; Theorem: |- ((= (= (((case_option b) f) Data.Option.none))) (= (((_28035 Data.Option.none) b) f))) ;)

(; dict ;)

def thm_206 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> f_2 : hol.term (hol.arr A B) -> b_3 : hol.term B -> case__option_4 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_4 (__28032_5 : hol.term B => __28033_6 : hol.term (hol.arr A B) => __28034_7 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_7 __28032_5 __28033_6)) -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B (case__option_4 b_3 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) (hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_2))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => f_2 : hol.term (hol.arr A B) => b_3 : hol.term B => case__option_4 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_4 (__28032_5 : hol.term B => __28033_6 : hol.term (hol.arr A B) => __28034_7 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_7 __28032_5 __28033_6)) => hol.APP_THM B (hol.arr B hol.bool) (hol.eq B) (hol.eq B) (case__option_4 b_3 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_2) (thm_175 B) (thm_205 A B __28035_1 f_2 b_3 case__option_4 hyp_1).

(; Theorem: |- ((= ((= (((case_option b) f) Data.Option.none)) b)) ((= (((_28035 Data.Option.none) b) f)) b)) ;)

(; dict ;)

def thm_207 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> f_2 : hol.term (hol.arr A B) -> b_3 : hol.term B -> case__option_4 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_4 (__28032_5 : hol.term B => __28033_6 : hol.term (hol.arr A B) => __28034_7 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_7 __28032_5 __28033_6)) -> hol.proof (hol.eq hol.bool (hol.eq B (case__option_4 b_3 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3) (hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_2) b_3)) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => f_2 : hol.term (hol.arr A B) => b_3 : hol.term B => case__option_4 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_4 (__28032_5 : hol.term B => __28033_6 : hol.term (hol.arr A B) => __28034_7 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_7 __28032_5 __28033_6)) => hol.APP_THM B hol.bool (hol.eq B (case__option_4 b_3 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) (hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_2)) b_3 b_3 (thm_206 A B __28035_1 f_2 b_3 case__option_4 hyp_1) (thm_132 B b_3).

(; Theorem: |- ((= \lambda f. ((= (((case_option b) f) Data.Option.none)) b)) \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)) ;)

(; dict ;)

def thm_208 : B : hol.type -> A : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> b_2 : hol.term B -> case__option_3 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_3 (__28032_4 : hol.term B => __28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_6 __28032_4 __28033_5)) -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_3 b_2 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_4) b_2)) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => b_2 : hol.term B => case__option_3 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_3 (__28032_4 : hol.term B => __28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_6 __28032_4 __28033_5)) => hol.ABS_THM (hol.arr A B) hol.bool (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_3 b_2 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_4) b_2) (f_4 : hol.term (hol.arr A B) => thm_207 A B __28035_1 f_4 b_2 case__option_3 hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b))) (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b))) ;)

(; dict ;)

def thm_209 : B : hol.type -> A : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> b_2 : hol.term B -> case__option_3 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_3 (__28032_4 : hol.term B => __28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_6 __28032_4 __28033_5)) -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_3 b_2 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2)) (hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_4) b_2))) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => b_2 : hol.term B => case__option_3 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_3 (__28032_4 : hol.term B => __28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_6 __28032_4 __28033_5)) => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B)) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_3 b_2 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_4) b_2) (thm_174 B A) (thm_208 B A __28035_1 b_2 case__option_3 hyp_1).

(; Theorem: |- ((= \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b))) \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b))) ;)

(; dict ;)

def thm_210 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4)) -> hol.proof (hol.eq (hol.arr B hol.bool) (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3)) (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4)) => hol.ABS_THM B hol.bool (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3)) (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3)) (b_3 : hol.term B => thm_209 B A __28035_1 b_3 case__option_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) ;)

(; dict ;)

def thm_211 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4)) -> hol.proof (hol.eq hol.bool (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3)))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4)) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3)) (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3)) (thm_173 B) (thm_210 A B __28035_1 case__option_2 hyp_1).

(; Theorem: |- ((= (Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b))))) (Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b))))) ;)

(; dict ;)

def thm_212 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4)) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3)))) (hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4)) => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) thm_172 (thm_211 A B __28035_1 case__option_2 hyp_1).

(; Theorem: |- ((= (Data.Option.some a)) (Data.Option.some a)) ;)

(; dict ;)

def thm_213 : A : hol.type -> a_1 : hol.term A -> hol.proof (hol.eq (Data_2EOption_2Eoption A) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) :=
  A : hol.type => a_1 : hol.term A => hol.REFL (Data_2EOption_2Eoption A) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1).

(; Theorem: |- ((= (((case_option b) f) (Data.Option.some a))) (\lambda _28034. (((_28035 _28034) b) f) (Data.Option.some a))) ;)

(; dict ;)

def thm_214 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> a_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> b_4 : hol.term B -> case__option_5 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_5 (__28032_6 : hol.term B => __28033_7 : hol.term (hol.arr A B) => __28034_8 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_8 __28032_6 __28033_7)) -> hol.proof (hol.eq B (case__option_5 b_4 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((__28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_6 b_4 f_3) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => a_2 : hol.term A => f_3 : hol.term (hol.arr A B) => b_4 : hol.term B => case__option_5 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_5 (__28032_6 : hol.term B => __28033_7 : hol.term (hol.arr A B) => __28034_8 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_8 __28032_6 __28033_7)) => hol.APP_THM (Data_2EOption_2Eoption A) B (case__option_5 b_4 f_3) (__28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_6 b_4 f_3) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2) (thm_196 B A __28035_1 f_3 b_4 case__option_5 hyp_1) (thm_213 A a_2).

(; Theorem: |- ((= (\lambda _28034. (\lambda _28034. (((_28035 _28034) b) f) _28034) (Data.Option.some a))) (\lambda _28034. (((_28035 _28034) b) f) (Data.Option.some a))) ;)

(; dict ;)

def thm_215 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> b_3 : hol.term B -> __28035_4 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq B ((__28034_5 : hol.term (Data_2EOption_2Eoption A) => (__28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_4 __28034_6 b_3 f_2) __28034_5) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) ((__28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_4 __28034_5 b_3 f_2) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => f_2 : hol.term (hol.arr A B) => b_3 : hol.term B => __28035_4 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.APP_THM (Data_2EOption_2Eoption A) B (__28034_5 : hol.term (Data_2EOption_2Eoption A) => (__28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_4 __28034_6 b_3 f_2) __28034_5) (__28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_4 __28034_5 b_3 f_2) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1) (thm_200 B A f_2 b_3 __28035_4) (thm_213 A a_1).

(; Theorem: |- ((= (= (\lambda _28034. (\lambda _28034. (((_28035 _28034) b) f) _28034) (Data.Option.some a)))) (= (\lambda _28034. (((_28035 _28034) b) f) (Data.Option.some a)))) ;)

(; dict ;)

def thm_216 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> b_3 : hol.term B -> __28035_4 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B ((__28034_5 : hol.term (Data_2EOption_2Eoption A) => (__28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_4 __28034_6 b_3 f_2) __28034_5) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))) (hol.eq B ((__28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_4 __28034_5 b_3 f_2) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => f_2 : hol.term (hol.arr A B) => b_3 : hol.term B => __28035_4 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.APP_THM B (hol.arr B hol.bool) (hol.eq B) (hol.eq B) ((__28034_5 : hol.term (Data_2EOption_2Eoption A) => (__28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_4 __28034_6 b_3 f_2) __28034_5) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) ((__28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_4 __28034_5 b_3 f_2) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) (thm_175 B) (thm_215 A B a_1 f_2 b_3 __28035_4).

(; Theorem: |- ((= (\lambda _28034. (((_28035 _28034) b) f) (Data.Option.some a))) (((_28035 (Data.Option.some a)) b) f)) ;)

(; dict ;)

def thm_217 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> b_3 : hol.term B -> __28035_4 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq B ((__28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_4 __28034_5 b_3 f_2) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) (__28035_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1) b_3 f_2)) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => f_2 : hol.term (hol.arr A B) => b_3 : hol.term B => __28035_4 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.BETA_CONV (Data_2EOption_2Eoption A) B (__28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_4 __28034_5 b_3 f_2) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1).

(; Theorem: |- ((= ((= (\lambda _28034. (\lambda _28034. (((_28035 _28034) b) f) _28034) (Data.Option.some a))) (\lambda _28034. (((_28035 _28034) b) f) (Data.Option.some a)))) ((= (\lambda _28034. (((_28035 _28034) b) f) (Data.Option.some a))) (((_28035 (Data.Option.some a)) b) f))) ;)

(; dict ;)

def thm_218 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> b_3 : hol.term B -> __28035_4 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq hol.bool (hol.eq B ((__28034_5 : hol.term (Data_2EOption_2Eoption A) => (__28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_4 __28034_6 b_3 f_2) __28034_5) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) ((__28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_4 __28034_5 b_3 f_2) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))) (hol.eq B ((__28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_4 __28034_5 b_3 f_2) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) (__28035_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1) b_3 f_2))) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => f_2 : hol.term (hol.arr A B) => b_3 : hol.term B => __28035_4 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.APP_THM B hol.bool (hol.eq B ((__28034_5 : hol.term (Data_2EOption_2Eoption A) => (__28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_4 __28034_6 b_3 f_2) __28034_5) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))) (hol.eq B ((__28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_4 __28034_5 b_3 f_2) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))) ((__28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_4 __28034_5 b_3 f_2) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) (__28035_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1) b_3 f_2) (thm_216 A B a_1 f_2 b_3 __28035_4) (thm_217 A B a_1 f_2 b_3 __28035_4).

(; Theorem: |- ((= (((case_option b) f) (Data.Option.some a))) (((_28035 (Data.Option.some a)) b) f)) ;)

(; dict ;)

def thm_219 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> a_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> b_4 : hol.term B -> case__option_5 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_5 (__28032_6 : hol.term B => __28033_7 : hol.term (hol.arr A B) => __28034_8 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_8 __28032_6 __28033_7)) -> hol.proof (hol.eq B (case__option_5 b_4 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2) b_4 f_3)) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => a_2 : hol.term A => f_3 : hol.term (hol.arr A B) => b_4 : hol.term B => case__option_5 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_5 (__28032_6 : hol.term B => __28033_7 : hol.term (hol.arr A B) => __28034_8 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_8 __28032_6 __28033_7)) => hol.TRANS B (case__option_5 b_4 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((__28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_6 b_4 f_3) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2) b_4 f_3) (thm_214 A B __28035_1 a_2 f_3 b_4 case__option_5 hyp_1) (hol.EQ_MP (hol.eq B ((__28034_6 : hol.term (Data_2EOption_2Eoption A) => (__28034_7 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_7 b_4 f_3) __28034_6) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((__28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_6 b_4 f_3) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2))) (hol.eq B ((__28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_6 b_4 f_3) (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2) b_4 f_3)) (thm_218 A B a_2 f_3 b_4 __28035_1) (thm_215 A B a_2 f_3 b_4 __28035_1)).

(; Theorem: |- ((= (= (((case_option b) f) (Data.Option.some a)))) (= (((_28035 (Data.Option.some a)) b) f))) ;)

(; dict ;)

def thm_220 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> a_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> b_4 : hol.term B -> case__option_5 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_5 (__28032_6 : hol.term B => __28033_7 : hol.term (hol.arr A B) => __28034_8 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_8 __28032_6 __28033_7)) -> hol.proof (hol.eq (hol.arr B hol.bool) (hol.eq B (case__option_5 b_4 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2))) (hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2) b_4 f_3))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => a_2 : hol.term A => f_3 : hol.term (hol.arr A B) => b_4 : hol.term B => case__option_5 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_5 (__28032_6 : hol.term B => __28033_7 : hol.term (hol.arr A B) => __28034_8 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_8 __28032_6 __28033_7)) => hol.APP_THM B (hol.arr B hol.bool) (hol.eq B) (hol.eq B) (case__option_5 b_4 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2) b_4 f_3) (thm_175 B) (thm_219 A B __28035_1 a_2 f_3 b_4 case__option_5 hyp_1).

(; Theorem: |- ((= (f a)) (f a)) ;)

(; dict ;)

def thm_221 : A : hol.type -> B : hol.type -> a_1 : hol.term A -> f_2 : hol.term (hol.arr A B) -> hol.proof (hol.eq B (f_2 a_1) (f_2 a_1)) :=
  A : hol.type => B : hol.type => a_1 : hol.term A => f_2 : hol.term (hol.arr A B) => hol.REFL B (f_2 a_1).

(; Theorem: |- ((= ((= (((case_option b) f) (Data.Option.some a))) (f a))) ((= (((_28035 (Data.Option.some a)) b) f)) (f a))) ;)

(; dict ;)

def thm_222 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> a_2 : hol.term A -> f_3 : hol.term (hol.arr A B) -> b_4 : hol.term B -> case__option_5 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_5 (__28032_6 : hol.term B => __28033_7 : hol.term (hol.arr A B) => __28034_8 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_8 __28032_6 __28033_7)) -> hol.proof (hol.eq hol.bool (hol.eq B (case__option_5 b_4 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) (f_3 a_2)) (hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2) b_4 f_3) (f_3 a_2))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => a_2 : hol.term A => f_3 : hol.term (hol.arr A B) => b_4 : hol.term B => case__option_5 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_5 (__28032_6 : hol.term B => __28033_7 : hol.term (hol.arr A B) => __28034_8 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_8 __28032_6 __28033_7)) => hol.APP_THM B hol.bool (hol.eq B (case__option_5 b_4 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2))) (hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2) b_4 f_3)) (f_3 a_2) (f_3 a_2) (thm_220 A B __28035_1 a_2 f_3 b_4 case__option_5 hyp_1) (thm_221 A B a_2 f_3).

(; Theorem: |- ((= \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a))) \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a))) ;)

(; dict ;)

def thm_223 : B : hol.type -> A : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> f_2 : hol.term (hol.arr A B) -> b_3 : hol.term B -> case__option_4 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_4 (__28032_5 : hol.term B => __28033_6 : hol.term (hol.arr A B) => __28034_7 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_7 __28032_5 __28033_6)) -> hol.proof (hol.eq (hol.arr A hol.bool) (a_5 : hol.term A => hol.eq B (case__option_4 b_3 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_2 a_5)) (a_5 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_2) (f_2 a_5))) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => f_2 : hol.term (hol.arr A B) => b_3 : hol.term B => case__option_4 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_4 (__28032_5 : hol.term B => __28033_6 : hol.term (hol.arr A B) => __28034_7 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_7 __28032_5 __28033_6)) => hol.ABS_THM A hol.bool (a_5 : hol.term A => hol.eq B (case__option_4 b_3 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_2 a_5)) (a_5 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_2) (f_2 a_5)) (a_5 : hol.term A => thm_222 A B __28035_1 a_5 f_2 b_3 case__option_4 hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a)))) (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a)))) ;)

(; dict ;)

def thm_224 : B : hol.type -> A : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> f_2 : hol.term (hol.arr A B) -> b_3 : hol.term B -> case__option_4 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_4 (__28032_5 : hol.term B => __28033_6 : hol.term (hol.arr A B) => __28034_7 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_7 __28032_5 __28033_6)) -> hol.proof (hol.eq hol.bool (hol.forall A (a_5 : hol.term A => hol.eq B (case__option_4 b_3 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_2 a_5))) (hol.forall A (a_5 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_2) (f_2 a_5)))) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => f_2 : hol.term (hol.arr A B) => b_3 : hol.term B => case__option_4 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_4 (__28032_5 : hol.term B => __28033_6 : hol.term (hol.arr A B) => __28034_7 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_7 __28032_5 __28033_6)) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (a_5 : hol.term A => hol.eq B (case__option_4 b_3 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_2 a_5)) (a_5 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_2) (f_2 a_5)) (thm_25 A) (thm_223 B A __28035_1 f_2 b_3 case__option_4 hyp_1).

(; Theorem: |- ((= \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a)))) \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a)))) ;)

(; dict ;)

def thm_225 : B : hol.type -> A : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> b_2 : hol.term B -> case__option_3 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_3 (__28032_4 : hol.term B => __28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_6 __28032_4 __28033_5)) -> hol.proof (hol.eq (hol.arr (hol.arr A B) hol.bool) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_3 b_2 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5))) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_2 f_4) (f_4 a_5)))) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => b_2 : hol.term B => case__option_3 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_3 (__28032_4 : hol.term B => __28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_6 __28032_4 __28033_5)) => hol.ABS_THM (hol.arr A B) hol.bool (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_3 b_2 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5))) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_2 f_4) (f_4 a_5))) (f_4 : hol.term (hol.arr A B) => thm_224 B A __28035_1 f_4 b_2 case__option_3 hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a))))) (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a))))) ;)

(; dict ;)

def thm_226 : B : hol.type -> A : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> b_2 : hol.term B -> case__option_3 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_3 (__28032_4 : hol.term B => __28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_6 __28032_4 __28033_5)) -> hol.proof (hol.eq hol.bool (hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_3 b_2 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))) (hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_2 f_4) (f_4 a_5))))) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => b_2 : hol.term B => case__option_3 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_3 (__28032_4 : hol.term B => __28033_5 : hol.term (hol.arr A B) => __28034_6 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_6 __28032_4 __28033_5)) => hol.APP_THM (hol.arr (hol.arr A B) hol.bool) hol.bool (hol.forall (hol.arr A B)) (hol.forall (hol.arr A B)) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_3 b_2 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5))) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_2 f_4) (f_4 a_5))) (thm_174 B A) (thm_225 B A __28035_1 b_2 case__option_3 hyp_1).

(; Theorem: |- ((= \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a))))) \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a))))) ;)

(; dict ;)

def thm_227 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4)) -> hol.proof (hol.eq (hol.arr B hol.bool) (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))) (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5))))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4)) => hol.ABS_THM B hol.bool (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))) (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))) (b_3 : hol.term B => thm_226 B A __28035_1 b_3 case__option_2 hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a)))))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a)))))) ;)

(; dict ;)

def thm_228 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4)) -> hol.proof (hol.eq hol.bool (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5))))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4)) => hol.APP_THM (hol.arr B hol.bool) hol.bool (hol.forall B) (hol.forall B) (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))) (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))) (thm_173 B) (thm_227 A B __28035_1 case__option_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a))))))) ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a))))))) ;)

(; dict ;)

def thm_229 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4)) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))) (hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5))))))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4)) => hol.APP_THM hol.bool hol.bool (hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3)))) (hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3)))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5))))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5))))) (thm_212 A B __28035_1 case__option_2 hyp_1) (thm_228 A B __28035_1 case__option_2 hyp_1).

(; Theorem: |- ((= ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a))))))) ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a))))))) ;)

(; dict ;)

def thm_230 : A : hol.type -> B : hol.type -> case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> __28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_1 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_2 __28034_5 __28032_3 __28033_4)) -> hol.proof (hol.eq hol.bool (hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) (hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_1 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5))))))) :=
  A : hol.type => B : hol.type => case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => __28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_1 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_2 __28034_5 __28032_3 __28033_4)) => hol.SYM hol.bool (hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_1 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))) (hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) (thm_229 A B __28035_2 case__option_1 hyp_1).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a)))))) ;)

(; dict ;)

def thm_231 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4)))))) -> hol.proof (hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4)))))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4)))))) => hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a)))))) ;)

(; dict ;)

def thm_232 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4)) -> hyp_2 : hol.proof (hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) -> hol.proof (hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4)) => hyp_2 : hol.proof (hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) => hol.EQ_MP (hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) (hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))) (thm_230 A B case__option_2 __28035_1 hyp_1) (thm_231 A B __28035_1 hyp_2).

(; Theorem: |- (\lambda case_option. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a)))))) case_option) ;)

(; dict ;)

def thm_233 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4)) -> hyp_2 : hol.proof (hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) -> hol.proof ((case__option_3 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_4 : hol.term B => hol.forall (hol.arr A B) (f_5 : hol.term (hol.arr A B) => hol.eq B (case__option_3 b_4 f_5 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_4))) (hol.forall B (b_4 : hol.term B => hol.forall (hol.arr A B) (f_5 : hol.term (hol.arr A B) => hol.forall A (a_6 : hol.term A => hol.eq B (case__option_3 b_4 f_5 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_6)) (f_5 a_6)))))) case__option_2) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4)) => hyp_2 : hol.proof (hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) => hol.EQ_MP (hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))) ((case__option_3 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_4 : hol.term B => hol.forall (hol.arr A B) (f_5 : hol.term (hol.arr A B) => hol.eq B (case__option_3 b_4 f_5 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_4))) (hol.forall B (b_4 : hol.term B => hol.forall (hol.arr A B) (f_5 : hol.term (hol.arr A B) => hol.forall A (a_6 : hol.term A => hol.eq B (case__option_3 b_4 f_5 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_6)) (f_5 a_6)))))) case__option_2) (thm_171 A B case__option_2) (thm_232 A B __28035_1 case__option_2 hyp_1 hyp_2).

(; Theorem: |- (Data.Bool.? \lambda case_option. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a))))))) ;)

(; dict ;)

def thm_234 : A : hol.type -> B : hol.type -> case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof ((case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))) case__option_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) hol.bool) (case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5))))))) :=
  A : hol.type => B : hol.type => case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof ((case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))) case__option_1) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_111 A x_1 P_2 hyp_1) (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_1 (case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda case_option. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a))))))) ;)

(; dict ;)

def thm_235 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4)) -> hyp_2 : hol.proof (hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) hol.bool) (case__option_3 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_4 : hol.term B => hol.forall (hol.arr A B) (f_5 : hol.term (hol.arr A B) => hol.eq B (case__option_3 b_4 f_5 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_4))) (hol.forall B (b_4 : hol.term B => hol.forall (hol.arr A B) (f_5 : hol.term (hol.arr A B) => hol.forall A (a_6 : hol.term A => hol.eq B (case__option_3 b_4 f_5 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_6)) (f_5 a_6))))))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4)) => hyp_2 : hol.proof (hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) => hol.PROVE_HYP ((case__option_3 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_4 : hol.term B => hol.forall (hol.arr A B) (f_5 : hol.term (hol.arr A B) => hol.eq B (case__option_3 b_4 f_5 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_4))) (hol.forall B (b_4 : hol.term B => hol.forall (hol.arr A B) (f_5 : hol.term (hol.arr A B) => hol.forall A (a_6 : hol.term A => hol.eq B (case__option_3 b_4 f_5 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_6)) (f_5 a_6)))))) case__option_2) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) hol.bool) (case__option_3 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_4 : hol.term B => hol.forall (hol.arr A B) (f_5 : hol.term (hol.arr A B) => hol.eq B (case__option_3 b_4 f_5 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_4))) (hol.forall B (b_4 : hol.term B => hol.forall (hol.arr A B) (f_5 : hol.term (hol.arr A B) => hol.forall A (a_6 : hol.term A => hol.eq B (case__option_3 b_4 f_5 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_6)) (f_5 a_6))))))) (thm_233 A B __28035_1 case__option_2 hyp_1 hyp_2) (hyp_3 : hol.proof ((case__option_3 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_4 : hol.term B => hol.forall (hol.arr A B) (f_5 : hol.term (hol.arr A B) => hol.eq B (case__option_3 b_4 f_5 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_4))) (hol.forall B (b_4 : hol.term B => hol.forall (hol.arr A B) (f_5 : hol.term (hol.arr A B) => hol.forall A (a_6 : hol.term A => hol.eq B (case__option_3 b_4 f_5 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_6)) (f_5 a_6)))))) case__option_2) => thm_234 A B case__option_2 hyp_3).

(; Theorem: |- ((Data.Bool.==> ((= case_option) \lambda _28032. \lambda _28033. \lambda _28034. (((_28035 _28034) _28032) _28033))) (Data.Bool.? \lambda case_option. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a)))))))) ;)

(; dict ;)

def thm_236 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) -> hol.proof (hol.imp (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) hol.bool) (case__option_3 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_4 : hol.term B => hol.forall (hol.arr A B) (f_5 : hol.term (hol.arr A B) => hol.eq B (case__option_3 b_4 f_5 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_4))) (hol.forall B (b_4 : hol.term B => hol.forall (hol.arr A B) (f_5 : hol.term (hol.arr A B) => hol.forall A (a_6 : hol.term A => hol.eq B (case__option_3 b_4 f_5 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_6)) (f_5 a_6)))))))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) => hyp_2 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_2 (__28032_3 : hol.term B => __28033_4 : hol.term (hol.arr A B) => __28034_5 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_5 __28032_3 __28033_4)) => thm_235 A B __28035_1 case__option_2 hyp_2 hyp_1.

(; Theorem: |- ((Data.Bool.==> ((= \lambda _28032. \lambda _28033. \lambda _28034. (((_28035 _28034) _28032) _28033)) \lambda _28032. \lambda _28033. \lambda _28034. (((_28035 _28034) _28032) _28033))) (Data.Bool.? \lambda case_option_1. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option_1 b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option_1 b) f) (Data.Option.some a))) (f a)))))))) ;)

(; dict ;)

def thm_237 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4)))))) -> hol.proof (hol.imp (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (__28032_2 : hol.term B => __28033_3 : hol.term (hol.arr A B) => __28034_4 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_4 __28032_2 __28033_3) (__28032_2 : hol.term B => __28033_3 : hol.term (hol.arr A B) => __28034_4 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_4 __28032_2 __28033_3)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) hol.bool) (case__option__1_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option__1_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option__1_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4)))))) => (A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) => thm_236 A B __28035_1 case__option_2 hyp_1) A B __28035_1 (__28032_2 : hol.term B => __28033_3 : hol.term (hol.arr A B) => __28034_4 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_4 __28032_2 __28033_3) hyp_1.

(; Theorem: |- ((= \lambda _28032. \lambda _28033. \lambda _28034. (((_28035 _28034) _28032) _28033)) \lambda _28032. \lambda _28033. \lambda _28034. (((_28035 _28034) _28032) _28033)) ;)

(; dict ;)

def thm_238 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (__28032_2 : hol.term B => __28033_3 : hol.term (hol.arr A B) => __28034_4 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_4 __28032_2 __28033_3) (__28032_2 : hol.term B => __28033_3 : hol.term (hol.arr A B) => __28034_4 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_4 __28032_2 __28033_3)) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.REFL (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (__28032_2 : hol.term B => __28033_3 : hol.term (hol.arr A B) => __28034_4 : hol.term (Data_2EOption_2Eoption A) => __28035_1 __28034_4 __28032_2 __28033_3).

(; Theorem: |- (Data.Bool.? \lambda case_option_1. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option_1 b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option_1 b) f) (Data.Option.some a))) (f a))))))) ;)

(; dict ;)

def thm_239 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof (hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4)))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) hol.bool) (case__option__1_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option__1_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option__1_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5))))))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4)))))) => thm_237 A B __28035_1 hyp_1 (thm_238 A B __28035_1).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a))))))) (Data.Bool.? \lambda case_option_1. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option_1 b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option_1 b) f) (Data.Option.some a))) (f a)))))))) ;)

(; dict ;)

def thm_240 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.imp (hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4)))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) hol.bool) (case__option__1_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option__1_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option__1_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof (hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4)))))) => thm_239 A B __28035_1 hyp_1.

(; Theorem: |- (\lambda _28035. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a)))))) _28035) ;)

(; dict ;)

def thm_241 : B : hol.type -> A : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) __28035_1) -> hol.proof ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) __28035_1) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) __28035_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a)))))) ;)

(; dict ;)

def thm_242 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) __28035_1) -> hol.proof (hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4)))))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) __28035_1) => hol.EQ_MP ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) __28035_1) (hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4)))))) (thm_123 B A __28035_1) (thm_241 B A __28035_1 hyp_1).

(; Theorem: |- (Data.Bool.? \lambda case_option_1. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option_1 b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option_1 b) f) (Data.Option.some a))) (f a))))))) ;)

(; dict ;)

def thm_243 : A : hol.type -> B : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hyp_1 : hol.proof ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) __28035_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) hol.bool) (case__option__1_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option__1_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option__1_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5))))))) :=
  A : hol.type => B : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) __28035_1) => thm_240 A B __28035_1 (thm_242 A B __28035_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda _28035. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a)))))) _28035)) (Data.Bool.? \lambda case_option_1. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option_1 b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option_1 b) f) (Data.Option.some a))) (f a)))))))) ;)

(; dict ;)

def thm_244 : B : hol.type -> A : hol.type -> __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) -> hol.proof (hol.imp ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) __28035_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) hol.bool) (case__option__1_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option__1_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option__1_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))))) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hyp_1 : hol.proof ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) __28035_1) => thm_243 A B __28035_1 hyp_1.

(; Theorem: |- (Data.Bool.! \lambda _28035. ((Data.Bool.==> (\lambda _28035. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a)))))) _28035)) (Data.Bool.? \lambda case_option_1. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option_1 b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option_1 b) f) (Data.Option.some a))) (f a))))))))) ;)

(; dict ;)

def thm_245 : B : hol.type -> A : hol.type -> hol.proof (hol.forall (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.imp ((__28035_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (__28035_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_3 f_4) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (__28035_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5) b_3 f_4) (f_4 a_5)))))) __28035_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) hol.bool) (case__option__1_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option__1_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option__1_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5))))))))) :=
  B : hol.type => A : hol.type => __28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => thm_244 B A __28035_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda _28035. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a)))))))) (Data.Bool.? \lambda case_option. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a)))))))) ;)

(; dict ;)

def thm_246 : B : hol.type -> A : hol.type -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) hol.bool) (case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4)))))))) :=
  B : hol.type => A : hol.type => thm_170 B A (thm_245 B A).

(; Theorem: |- (Data.Bool.? \lambda _28035. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((_28035 Data.Option.none) b) f)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((_28035 (Data.Option.some a)) b) f)) (f a))))))) ;)

(; dict ;)

def thm_247 : B : hol.type -> A : hol.type -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4))))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4))))))) :=
  B : hol.type => A : hol.type => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4))))))) => hyp_1.

(; Theorem: |- (Data.Bool.? \lambda case_option. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a))))))) ;)

(; dict ;)

def thm_248 : A : hol.type -> B : hol.type -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4))))))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) hol.bool) (case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4))))))) :=
  A : hol.type => B : hol.type => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4))))))) => thm_246 B A (thm_247 B A hyp_1).

(; Theorem: |- (Data.Bool.? \lambda case_option. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a))))))) ;)

(; dict ;)

def thm_249 : A : hol.type -> B : hol.type -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) hol.bool) (case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4))))))) :=
  A : hol.type => B : hol.type => hol.PROVE_HYP (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4))))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) hol.bool) (case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4))))))) (thm_169 B A) (hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) hol.bool) hol.bool) (__28035_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) (hol.arr B (hol.arr (hol.arr A B) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (__28035_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A)) b_2 f_3) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (__28035_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4) b_2 f_3) (f_3 a_4))))))) => thm_248 A B hyp_1).

(; Theorem: |- (\lambda case_option. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a)))))) (select \lambda case_option. ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a)))))))) ;)

(; dict ;)

def thm_250 : A : hol.type -> B : hol.type -> hol.proof ((case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4)))))) (hol.select (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4)))))))) :=
  A : hol.type => B : hol.type => hol.EQ_MP (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) hol.bool) hol.bool) (case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4))))))) ((case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4)))))) (hol.select (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4)))))))) (thm_22 A B) (thm_249 A B).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((case_option b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((case_option b) f) (Data.Option.some a))) (f a)))))) ;)

(; dict ;)

def thm_251 : A : hol.type -> B : hol.type -> case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) -> hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_1 (hol.select (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))))) -> hol.proof (hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4)))))) :=
  A : hol.type => B : hol.type => case__option_1 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hyp_1 : hol.proof (hol.eq (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) case__option_1 (hol.select (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))))) => hol.EQ_MP ((case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))) (hol.select (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) (case__option_2 : hol.term (hol.arr B (hol.arr (hol.arr A B) (hol.arr (Data_2EOption_2Eoption A) B))) => hol.and (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_3))) (hol.forall B (b_3 : hol.term B => hol.forall (hol.arr A B) (f_4 : hol.term (hol.arr A B) => hol.forall A (a_5 : hol.term A => hol.eq B (case__option_2 b_3 f_4 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_5)) (f_4 a_5)))))))) (hol.and (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2))) (hol.forall B (b_2 : hol.term B => hol.forall (hol.arr A B) (f_3 : hol.term (hol.arr A B) => hol.forall A (a_4 : hol.term A => hol.eq B (case__option_1 b_2 f_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_3 a_4)))))) (thm_16 A B case__option_1 hyp_1) (thm_250 A B).

(; Theorem: |- (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((Data.Option.case.none.some b) f) Data.Option.none)) b))) ;)

(; dict ;)

def thm_252 : A : hol.type -> B : hol.type -> hyp_1 : hol.proof (hol.and (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3)))))) -> hol.proof (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) :=
  A : hol.type => B : hol.type => hyp_1 : hol.proof (hol.and (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3)))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_84 q_1 p_2 hyp_1) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3))))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((Data.Option.case.none.some b) f) Data.Option.none)) b))) ;)

(; dict ;)

def thm_253 : A : hol.type -> B : hol.type -> hol.proof (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) :=
  A : hol.type => B : hol.type => hol.PROVE_HYP (hol.and (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3)))))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (thm_4 A B) (hyp_1 : hol.proof (hol.and (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3)))))) => thm_252 A B hyp_1).

(; Theorem: |- ((= (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((Data.Option.case.none.some b) f) (Data.Option.some a))) (f a)))))) ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((Data.Option.case.none.some b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((Data.Option.case.none.some b) f) (Data.Option.some a))) (f a))))))) ;)

(; dict ;)

def thm_254 : A : hol.type -> B : hol.type -> hyp_1 : hol.proof (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) -> hol.proof (hol.eq hol.bool (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3))))) (hol.and (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3))))))) :=
  A : hol.type => B : hol.type => hyp_1 : hol.proof (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_99 p_1 q_2 hyp_1) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3))))) hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((Data.Option.case.none.some b) f) (Data.Option.some a))) (f a)))))) ((Data.Bool./\ (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((Data.Option.case.none.some b) f) Data.Option.none)) b)))) (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((Data.Option.case.none.some b) f) (Data.Option.some a))) (f a))))))) ;)

(; dict ;)

def thm_255 : A : hol.type -> B : hol.type -> hol.proof (hol.eq hol.bool (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3))))) (hol.and (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3))))))) :=
  A : hol.type => B : hol.type => hol.PROVE_HYP (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.eq hol.bool (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3))))) (hol.and (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3))))))) (thm_253 A B) (hyp_1 : hol.proof (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) => thm_254 A B hyp_1).

(; Theorem: |- (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((Data.Option.case.none.some b) f) (Data.Option.some a))) (f a))))) ;)

(; dict ;)

def thm_256 : A : hol.type -> B : hol.type -> hyp_1 : hol.proof (hol.and (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3)))))) -> hol.proof (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3))))) :=
  A : hol.type => B : hol.type => hyp_1 : hol.proof (hol.and (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3)))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_91 p_1 q_2 hyp_1) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3))))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((Data.Option.case.none.some b) f) (Data.Option.some a))) (f a))))) ;)

(; dict ;)

def thm_257 : A : hol.type -> B : hol.type -> hol.proof (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3))))) :=
  A : hol.type => B : hol.type => hol.PROVE_HYP (hol.and (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3)))))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3))))) (thm_4 A B) (hyp_1 : hol.proof (hol.and (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3)))))) => thm_256 A B hyp_1).

(; Theorem: |- (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((Data.Option.case.none.some b) f) Data.Option.none)) b))) ;)

(; dict ;)

def thm_258 : A : hol.type -> B : hol.type -> hol.proof (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) :=
  A : hol.type => B : hol.type => hol.PROVE_HYP (hol.and (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3)))))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.EQ_MP (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3))))) (hol.and (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3)))))) (thm_255 A B) (thm_257 A B)) (hyp_1 : hol.proof (hol.and (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_1))) (hol.forall B (b_1 : hol.term B => hol.forall (hol.arr A B) (f_2 : hol.term (hol.arr A B) => hol.forall A (a_3 : hol.term A => hol.eq B (Data_2EOption_2Ecase_2Enone_2Esome A B b_1 f_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) (f_2 a_3)))))) => thm_252 A B hyp_1).

(; Theorem: |- ((= \lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T)))) \lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T)))) ;)

(; dict ;)

def thm_259 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))).

(; Theorem: |- ((= is_some) (select \lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))))) ;)

(; dict ;)

def thm_260 : A : hol.type -> is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) hol.bool) is__some_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))))) -> hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) hol.bool) is__some_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))))) :=
  A : hol.type => is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) hol.bool) is__some_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))))) => hyp_1.

(; Theorem: |- ((= (select \lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))))) is_some) ;)

(; dict ;)

def thm_261 : A : hol.type -> is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) hol.bool) is__some_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))))) -> hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) hol.bool) (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true)))) is__some_1) :=
  A : hol.type => is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) hol.bool) is__some_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))))) => hol.SYM (hol.arr (Data_2EOption_2Eoption A) hol.bool) is__some_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true)))) (thm_260 A is__some_1 hyp_1).

(; Theorem: |- ((= (\lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))) (select \lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T)))))) (\lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))) is_some)) ;)

(; dict ;)

def thm_262 : A : hol.type -> is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) hol.bool) is__some_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))))) -> hol.proof (hol.eq hol.bool ((is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))) (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))))) ((is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))) is__some_1)) :=
  A : hol.type => is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) hol.bool) is__some_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))))) => hol.APP_THM (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool (is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))) (is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))) (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true)))) is__some_1 (thm_259 A) (thm_261 A is__some_1 hyp_1).

(; Theorem: |- ((= (\lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))) is_some)) ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T)))) ;)

(; dict ;)

def thm_263 : A : hol.type -> is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hol.proof (hol.eq hol.bool ((is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))) is__some_1) (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) :=
  A : hol.type => is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.BETA_CONV (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool (is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))) is__some_1.

(; Theorem: |- ((= (\lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))) (select \lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T)))))) ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T)))) ;)

(; dict ;)

def thm_264 : A : hol.type -> is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) hol.bool) is__some_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))))) -> hol.proof (hol.eq hol.bool ((is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))) (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))))) (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) :=
  A : hol.type => is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) hol.bool) is__some_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))))) => hol.TRANS hol.bool ((is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))) (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))))) ((is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))) is__some_1) (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) (thm_262 A is__some_1 hyp_1) (thm_263 A is__some_1).

(; Theorem: |- ((= Data.Bool.?) \lambda p. (p (select p))) ;)

(; dict ;)

def thm_265 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool)) (p_1 : hol.term (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) => p_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) p_1))) :=
  A : hol.type => (A : hol.type => thm_0 A) (hol.arr (Data_2EOption_2Eoption A) hol.bool).

(; Theorem: |- ((= (Data.Bool.? \lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))))) (\lambda p. (p (select p)) \lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))))) ;)

(; dict ;)

def thm_266 : A : hol.type -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) ((p_1 : hol.term (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) => p_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) p_1)) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))))) :=
  A : hol.type => hol.APP_THM (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool)) (p_1 : hol.term (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) => p_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) p_1)) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) (thm_265 A) (thm_259 A).

(; Theorem: |- ((= (\lambda p. (p (select p)) \lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))))) (\lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))) (select \lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T)))))) ;)

(; dict ;)

def thm_267 : A : hol.type -> hol.proof (hol.eq hol.bool ((p_1 : hol.term (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) => p_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) p_1)) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) ((is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))))) :=
  A : hol.type => hol.BETA_CONV (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool (p_1 : hol.term (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) => p_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) p_1)) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))).

(; Theorem: |- ((= (Data.Bool.? \lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))))) (\lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))) (select \lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T)))))) ;)

(; dict ;)

def thm_268 : A : hol.type -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) ((is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))))) :=
  A : hol.type => hol.TRANS hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) ((p_1 : hol.term (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) => p_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) p_1)) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) ((is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))))) (thm_266 A) (thm_267 A).

(; Theorem: |- ((= Data.Bool.?) Data.Bool.?) ;)

(; dict ;)

def thm_269 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool)).

(; Theorem: |- ((= (Data.Bool./\ ((= (fn Data.Option.none)) Data.Bool.F))) (Data.Bool./\ ((= (fn Data.Option.none)) Data.Bool.F))) ;)

(; dict ;)

def thm_270 : A : hol.type -> fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false)) (hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false))) :=
  A : hol.type => fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false)).

(; Theorem: |- ((= (= (fn (Data.Option.some a)))) (= (fn (Data.Option.some a)))) ;)

(; dict ;)

def thm_271 : A : hol.type -> a_1 : hol.term A -> fn_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.eq hol.bool (fn_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))) (hol.eq hol.bool (fn_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)))) :=
  A : hol.type => a_1 : hol.term A => fn_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.REFL (hol.arr hol.bool hol.bool) (hol.eq hol.bool (fn_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))).

(; Theorem: |- ((= (\lambda a. Data.Bool.T a)) Data.Bool.T) ;)

(; dict ;)

def thm_272 : A : hol.type -> a_1 : hol.term A -> hol.proof (hol.eq hol.bool ((a_2 : hol.term A => hol.true) a_1) hol.true) :=
  A : hol.type => a_1 : hol.term A => hol.BETA_CONV A hol.bool (a_2 : hol.term A => hol.true) a_1.

(; Theorem: |- ((= ((= (fn (Data.Option.some a))) (\lambda a. Data.Bool.T a))) ((= (fn (Data.Option.some a))) Data.Bool.T)) ;)

(; dict ;)

def thm_273 : A : hol.type -> a_1 : hol.term A -> fn_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (fn_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) ((a_3 : hol.term A => hol.true) a_1)) (hol.eq hol.bool (fn_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) hol.true)) :=
  A : hol.type => a_1 : hol.term A => fn_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (fn_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))) (hol.eq hol.bool (fn_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))) ((a_3 : hol.term A => hol.true) a_1) hol.true (thm_271 A a_1 fn_2) (thm_272 A a_1).

(; Theorem: |- ((= \lambda a. ((= (fn (Data.Option.some a))) (\lambda a. Data.Bool.T a))) \lambda a. ((= (fn (Data.Option.some a))) Data.Bool.T)) ;)

(; dict ;)

def thm_274 : A : hol.type -> fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => hol.true) a_2)) (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)) :=
  A : hol.type => fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.ABS_THM A hol.bool (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => hol.true) a_2)) (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true) (a_2 : hol.term A => thm_273 A a_2 fn_1).

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) (\lambda a. Data.Bool.T a)))) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) Data.Bool.T))) ;)

(; dict ;)

def thm_275 : A : hol.type -> fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => hol.true) a_2))) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) :=
  A : hol.type => fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => hol.true) a_2)) (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true) (thm_25 A) (thm_274 A fn_1).

(; Theorem: |- ((= ((Data.Bool./\ ((= (fn Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) (\lambda a. Data.Bool.T a))))) ((Data.Bool./\ ((= (fn Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) Data.Bool.T)))) ;)

(; dict ;)

def thm_276 : A : hol.type -> fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => hol.true) a_2)))) (hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) :=
  A : hol.type => fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false)) (hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false)) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => hol.true) a_2))) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)) (thm_270 A fn_1) (thm_275 A fn_1).

(; Theorem: |- ((= \lambda fn. ((Data.Bool./\ ((= (fn Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) (\lambda a. Data.Bool.T a))))) \lambda fn. ((Data.Bool./\ ((= (fn Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) Data.Bool.T)))) ;)

(; dict ;)

def thm_277 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => hol.true) a_2)))) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) :=
  A : hol.type => hol.ABS_THM (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => hol.true) a_2)))) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => thm_276 A fn_1).

(; Theorem: |- ((= (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) (\lambda a. Data.Bool.T a)))))) (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) Data.Bool.T))))) ;)

(; dict ;)

def thm_278 : A : hol.type -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => hol.true) a_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))))) :=
  A : hol.type => hol.APP_THM (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool)) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => hol.true) a_2)))) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) (thm_269 A) (thm_277 A).

(; Theorem: |- (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn Data.Option.none)) b)) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) (f a))))) ;)

(; dict ;)

def thm_279 : A : hol.type -> f_1 : hol.term (hol.arr A hol.bool) -> b_2 : hol.term hol.bool -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (fn_3 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (fn_3 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) b_2) (hol.forall A (a_4 : hol.term A => hol.eq hol.bool (fn_3 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_4)) (f_1 a_4))))) :=
  A : hol.type => f_1 : hol.term (hol.arr A hol.bool) => b_2 : hol.term hol.bool => (B : hol.type => A : hol.type => f_1 : hol.term (hol.arr A B) => b_2 : hol.term B => thm_35 B A f_1 b_2) hol.bool A f_1 b_2.

(; Theorem: |- (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) (\lambda a. Data.Bool.T a))))) ;)

(; dict ;)

def thm_280 : A : hol.type -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => hol.true) a_2))))) :=
  A : hol.type => (A : hol.type => f_1 : hol.term (hol.arr A hol.bool) => b_2 : hol.term hol.bool => thm_279 A f_1 b_2) A (a_1 : hol.term A => hol.true) hol.false.

(; Theorem: |- (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) Data.Bool.T)))) ;)

(; dict ;)

def thm_281 : A : hol.type -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) :=
  A : hol.type => hol.EQ_MP (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => hol.true) a_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) (thm_278 A) (thm_280 A).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))) x)) (Data.Bool.? \lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))))))) ((Data.Bool.==> (Data.Bool.? \lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))))) (Data.Bool.? \lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T)))))) ;)

(; dict ;)

def thm_282 : A : hol.type -> hol.proof (hol.imp (hol.forall (hol.arr (Data_2EOption_2Eoption A) hol.bool) (x_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.imp ((is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))) x_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true)))))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))))) :=
  A : hol.type => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_58 A Q_1 P_2) (hol.arr (Data_2EOption_2Eoption A) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))).

(; Theorem: |- ((= ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T)))) (\lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))) is_some)) ;)

(; dict ;)

def thm_283 : A : hol.type -> is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) ((is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))) is__some_1)) :=
  A : hol.type => is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.SYM hol.bool ((is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))) is__some_1) (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) (thm_263 A is__some_1).

(; Theorem: |- ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))) ;)

(; dict ;)

def thm_284 : A : hol.type -> is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) -> hol.proof (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) :=
  A : hol.type => is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) => hyp_1.

(; Theorem: |- ((= (is_some Data.Option.none)) Data.Bool.F) ;)

(; dict ;)

def thm_285 : A : hol.type -> is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) -> hol.proof (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) :=
  A : hol.type => is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_84 q_1 p_2 hyp_1) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)) (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) hyp_1.

(; Theorem: |- ((= (is_some Data.Option.none)) Data.Bool.F) ;)

(; dict ;)

def thm_286 : A : hol.type -> is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) -> hol.proof (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) :=
  A : hol.type => is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) => hol.PROVE_HYP (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (thm_284 A is__some_1 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) => thm_285 A is__some_1 hyp_2).

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))) ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T)))) ;)

(; dict ;)

def thm_287 : A : hol.type -> is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) -> hol.proof (hol.eq hol.bool (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)) (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) :=
  A : hol.type => is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_99 p_1 q_2 hyp_1) (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)) hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))) ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T)))) ;)

(; dict ;)

def thm_288 : A : hol.type -> is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) -> hol.proof (hol.eq hol.bool (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)) (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) :=
  A : hol.type => is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) => hol.PROVE_HYP (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.eq hol.bool (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)) (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) (thm_286 A is__some_1 hyp_1) (hyp_2 : hol.proof (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) => thm_287 A is__some_1 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T)) ;)

(; dict ;)

def thm_289 : A : hol.type -> is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) -> hol.proof (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)) :=
  A : hol.type => is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_91 p_1 q_2 hyp_1) (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T)) ;)

(; dict ;)

def thm_290 : A : hol.type -> is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) -> hol.proof (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)) :=
  A : hol.type => is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) => hol.PROVE_HYP (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)) (thm_284 A is__some_1 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) => thm_289 A is__some_1 hyp_2).

(; Theorem: |- (\lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))) is_some) ;)

(; dict ;)

def thm_291 : A : hol.type -> is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) -> hol.proof ((is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))) is__some_1) :=
  A : hol.type => is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) => hol.EQ_MP (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) ((is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))) is__some_1) (thm_283 A is__some_1) (hol.EQ_MP (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)) (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) (thm_288 A is__some_1 hyp_1) (thm_290 A is__some_1 hyp_1)).

(; Theorem: |- (Data.Bool.? \lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T)))) ;)

(; dict ;)

def thm_292 : A : hol.type -> is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof ((is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))) is__some_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true)))) :=
  A : hol.type => is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof ((is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))) is__some_1) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_111 A x_1 P_2 hyp_1) (hol.arr (Data_2EOption_2Eoption A) hol.bool) is__some_1 (is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T)))) ;)

(; dict ;)

def thm_293 : A : hol.type -> is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true)))) :=
  A : hol.type => is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) => hol.PROVE_HYP ((is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))) is__some_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true)))) (thm_291 A is__some_1 hyp_1) (hyp_2 : hol.proof ((is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))) is__some_1) => thm_292 A is__some_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T)))) (Data.Bool.? \lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))))) ;)

(; dict ;)

def thm_294 : A : hol.type -> is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hol.proof (hol.imp (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))))) :=
  A : hol.type => is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) => thm_293 A is__some_1 hyp_1.

(; Theorem: |- (\lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))) is_some) ;)

(; dict ;)

def thm_295 : A : hol.type -> is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof ((is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))) is__some_1) -> hol.proof ((is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))) is__some_1) :=
  A : hol.type => is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof ((is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))) is__some_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))) ;)

(; dict ;)

def thm_296 : A : hol.type -> is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof ((is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))) is__some_1) -> hol.proof (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) :=
  A : hol.type => is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof ((is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))) is__some_1) => hol.EQ_MP ((is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))) is__some_1) (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) (thm_263 A is__some_1) (thm_295 A is__some_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))) is_some)) (Data.Bool.? \lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))))) ;)

(; dict ;)

def thm_297 : A : hol.type -> is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hol.proof (hol.imp ((is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))) is__some_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))))) :=
  A : hol.type => is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof ((is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))) is__some_1) => thm_294 A is__some_1 (thm_296 A is__some_1 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda is_some. ((Data.Bool.==> (\lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))) is_some)) (Data.Bool.? \lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T)))))) ;)

(; dict ;)

def thm_298 : A : hol.type -> hol.proof (hol.forall (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.imp ((is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))) is__some_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true)))))) :=
  A : hol.type => is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => thm_297 A is__some_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))))) (Data.Bool.? \lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))))) ;)

(; dict ;)

def thm_299 : A : hol.type -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))))) :=
  A : hol.type => thm_282 A (thm_298 A).

(; Theorem: |- (Data.Bool.? \lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T)))) ;)

(; dict ;)

def thm_300 : A : hol.type -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) :=
  A : hol.type => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) => hyp_1.

(; Theorem: |- (Data.Bool.? \lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T)))) ;)

(; dict ;)

def thm_301 : A : hol.type -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) :=
  A : hol.type => hol.PROVE_HYP (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) (thm_281 A) (hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) => thm_299 A (thm_300 A hyp_1)).

(; Theorem: |- (Data.Bool.? \lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T)))) ;)

(; dict ;)

def thm_302 : A : hol.type -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) :=
  A : hol.type => hol.PROVE_HYP (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) (thm_301 A) (hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) => thm_300 A hyp_1).

(; Theorem: |- (Data.Bool.? \lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T)))) ;)

(; dict ;)

def thm_303 : A : hol.type -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) :=
  A : hol.type => hol.PROVE_HYP (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) (thm_302 A) (hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) => thm_300 A hyp_1).

(; Theorem: |- (\lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))) (select \lambda is_some. ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))))) ;)

(; dict ;)

def thm_304 : A : hol.type -> hol.proof ((is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))))) :=
  A : hol.type => hol.EQ_MP (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true)))) ((is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))))) (thm_268 A) (thm_303 A).

(; Theorem: |- ((Data.Bool./\ ((= (is_some Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (is_some (Data.Option.some a))) Data.Bool.T))) ;)

(; dict ;)

def thm_305 : A : hol.type -> is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) hol.bool) is__some_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))))) -> hol.proof (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) :=
  A : hol.type => is__some_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) hol.bool) is__some_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))))) => hol.EQ_MP ((is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))) (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__some_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__some_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__some_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.true))))) (hol.and (hol.eq hol.bool (is__some_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__some_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.true))) (thm_264 A is__some_1 hyp_1) (thm_304 A).

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_306 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)).

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_307 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (thm_306 t_1) (thm_306 t_1).

(; Theorem: |- ((= Data.Bool.!) Data.Bool.!) ;)

(; dict ;)

def thm_308 : hol.proof (hol.eq (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.forall hol.bool) (hol.forall hol.bool)) :=
  hol.REFL (hol.arr (hol.arr hol.bool hol.bool) hol.bool) (hol.forall hol.bool).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_309 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  hol.REFL (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))).

(; Theorem: |- ((= \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_310 : hol.proof (hol.eq (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  hol.TRANS (hol.arr hol.bool hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) thm_309 thm_309.

(; Theorem: |- ((= (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))))) (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))))) ;)

(; dict ;)

def thm_311 : hol.proof (hol.eq hol.bool (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))))) :=
  hol.APP_THM (hol.arr hol.bool hol.bool) hol.bool (hol.forall hol.bool) (hol.forall hol.bool) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) thm_308 thm_310.

(; Theorem: |- ((= ((= ((= Data.Bool.T) t)) t)) ((= ((= Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_312 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1).

(; Theorem: |- ((= ((= ((= Data.Bool.T) t)) t)) ((= ((= Data.Bool.T) t)) t)) ;)

(; dict ;)

def thm_313 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (thm_312 t_1) (thm_312 t_1).

(; Theorem: |- ((= ((= Data.Bool.T) t)) t) ;)

(; dict ;)

def thm_314 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) :=
  t_1 : hol.term hol.bool => thm_6 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_315 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_99 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_316 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (thm_313 t_1) (thm_314 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) => thm_315 t_1 hyp_1).

(; Theorem: |- ((= ((= ((= t) Data.Bool.T)) t)) ((= ((= t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_317 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1).

(; Theorem: |- ((= ((= ((= t) Data.Bool.T)) t)) ((= ((= t) Data.Bool.T)) t)) ;)

(; dict ;)

def thm_318 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1)) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (thm_317 t_1) (thm_317 t_1).

(; Theorem: |- ((= ((= t) Data.Bool.T)) t) ;)

(; dict ;)

def thm_319 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) :=
  t_1 : hol.term hol.bool => thm_7 t_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_320 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_99 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) hyp_1.

(; Theorem: |- ((= ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_321 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (thm_318 t_1) (thm_319 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) => thm_320 t_1 hyp_1).

(; Theorem: |- ((= ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_322 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.REFL hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)).

(; Theorem: |- ((= ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_323 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.TRANS hol.bool (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (thm_322 t_1) (thm_322 t_1).

(; Theorem: |- ((= ((= Data.Bool.F) t)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_324 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => thm_8 t_1.

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_325 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_99 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) hyp_1.

(; Theorem: |- ((= ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_326 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (thm_323 t_1) (thm_324 t_1)) (hyp_1 : hol.proof (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) => thm_325 t_1 hyp_1).

(; Theorem: |- ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_327 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => thm_9 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_328 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (thm_326 t_1) (hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (thm_306 t_1) (thm_327 t_1)).

(; Theorem: |- ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_329 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (thm_321 t_1) (thm_328 t_1).

(; Theorem: |- ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))))) ;)

(; dict ;)

def thm_330 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) :=
  t_1 : hol.term hol.bool => hol.EQ_MP (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (thm_316 t_1) (thm_329 t_1).

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool./\ ((= ((= Data.Bool.T) t)) t)) ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))))) ;)

(; dict ;)

def thm_331 : hol.proof (hol.forall hol.bool (t_1 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))))) :=
  t_1 : hol.term hol.bool => thm_330 t_1.

(; Theorem: |- ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_332 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_91 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((= t) Data.Bool.T)) t)) ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)))) ;)

(; dict ;)

def thm_333 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.EQ_MP (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_2) (hol.not t_2)) (hol.eq hol.bool (hol.eq hol.bool t_2 hol.false) (hol.not t_2)))))) (hol.forall hol.bool (t_2 : hol.term hol.bool => hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_2) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_2 hol.true) t_2) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_2) (hol.not t_2)) (hol.eq hol.bool (hol.eq hol.bool t_2 hol.false) (hol.not t_2)))))) thm_311 thm_331 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.true t_1) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))))) => thm_332 t_1 hyp_1).

(; Theorem: |- ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_334 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_91 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= ((= Data.Bool.F) t)) (Data.Bool.~ t))) ((= ((= t) Data.Bool.F)) (Data.Bool.~ t))) ;)

(; dict ;)

def thm_335 : t_1 : hol.term hol.bool -> hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (thm_333 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool t_1 hol.true) t_1) (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)))) => thm_334 t_1 hyp_1).

(; Theorem: |- ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_336 : t_1 : hol.term hol.bool -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_91 p_1 q_2 hyp_1) (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) hyp_1.

(; Theorem: |- ((= ((= t) Data.Bool.F)) (Data.Bool.~ t)) ;)

(; dict ;)

def thm_337 : t_1 : hol.term hol.bool -> hol.proof (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) :=
  t_1 : hol.term hol.bool => hol.PROVE_HYP (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (thm_335 t_1) (hyp_1 : hol.proof (hol.and (hol.eq hol.bool (hol.eq hol.bool hol.false t_1) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1))) => thm_336 t_1 hyp_1).

(; Theorem: |- ((= ((= (Data.Option.isSome Data.Option.none)) Data.Bool.F)) (Data.Bool.~ (Data.Option.isSome Data.Option.none))) ;)

(; dict ;)

def thm_338 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EOption_2EisSome A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.not (Data_2EOption_2EisSome A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))))) :=
  A : hol.type => (t_1 : hol.term hol.bool => hol.EQ_MP (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (hol.eq hol.bool (hol.eq hol.bool t_1 hol.false) (hol.not t_1)) (thm_307 t_1) (thm_337 t_1)) (Data_2EOption_2EisSome A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))).

(; Theorem: |- ((= (Data.Bool./\ ((= (Data.Option.isSome Data.Option.none)) Data.Bool.F))) (Data.Bool./\ (Data.Bool.~ (Data.Option.isSome Data.Option.none)))) ;)

(; dict ;)

def thm_339 : A : hol.type -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq hol.bool (Data_2EOption_2EisSome A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false)) (hol.and (hol.not (Data_2EOption_2EisSome A (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))))) :=
  A : hol.type => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.eq hol.bool (Data_2EOption_2EisSome A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.not (Data_2EOption_2EisSome A (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) thm_172 (thm_338 A).

(; Theorem: |- ((= ((= (Data.Option.isSome (Data.Option.some a))) Data.Bool.T)) (Data.Option.isSome (Data.Option.some a))) ;)

(; dict ;)

def thm_340 : A : hol.type -> a_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) hol.true) (Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))) :=
  A : hol.type => a_1 : hol.term A => (t_1 : hol.term hol.bool => thm_319 t_1) (Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)).

(; Theorem: |- ((= \lambda a. ((= (Data.Option.isSome (Data.Option.some a))) Data.Bool.T)) \lambda a. (Data.Option.isSome (Data.Option.some a))) ;)

(; dict ;)

def thm_341 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (a_1 : hol.term A => hol.eq hol.bool (Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) hol.true) (a_1 : hol.term A => Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))) :=
  A : hol.type => hol.ABS_THM A hol.bool (a_1 : hol.term A => hol.eq hol.bool (Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) hol.true) (a_1 : hol.term A => Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) (a_1 : hol.term A => thm_340 A a_1).

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((= (Data.Option.isSome (Data.Option.some a))) Data.Bool.T))) (Data.Bool.! \lambda a. (Data.Option.isSome (Data.Option.some a)))) ;)

(; dict ;)

def thm_342 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall A (a_1 : hol.term A => hol.eq hol.bool (Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) hol.true)) (hol.forall A (a_1 : hol.term A => Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)))) :=
  A : hol.type => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (a_1 : hol.term A => hol.eq hol.bool (Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) hol.true) (a_1 : hol.term A => Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) (thm_25 A) (thm_341 A).

(; Theorem: |- ((= ((Data.Bool./\ ((= (Data.Option.isSome Data.Option.none)) Data.Bool.F)) (Data.Bool.! \lambda a. ((= (Data.Option.isSome (Data.Option.some a))) Data.Bool.T)))) ((Data.Bool./\ (Data.Bool.~ (Data.Option.isSome Data.Option.none))) (Data.Bool.! \lambda a. (Data.Option.isSome (Data.Option.some a))))) ;)

(; dict ;)

def thm_343 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (Data_2EOption_2EisSome A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_1 : hol.term A => hol.eq hol.bool (Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) hol.true))) (hol.and (hol.not (Data_2EOption_2EisSome A (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) (hol.forall A (a_1 : hol.term A => Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))))) :=
  A : hol.type => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq hol.bool (Data_2EOption_2EisSome A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false)) (hol.and (hol.not (Data_2EOption_2EisSome A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))))) (hol.forall A (a_1 : hol.term A => hol.eq hol.bool (Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) hol.true)) (hol.forall A (a_1 : hol.term A => Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))) (thm_339 A) (thm_342 A).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.~ (Data.Option.isSome Data.Option.none))) (Data.Bool.! \lambda a. (Data.Option.isSome (Data.Option.some a)))) ;)

(; dict ;)

def thm_344 : A : hol.type -> hol.proof (hol.and (hol.not (Data_2EOption_2EisSome A (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) (hol.forall A (a_1 : hol.term A => Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)))) :=
  A : hol.type => hol.EQ_MP (hol.and (hol.eq hol.bool (Data_2EOption_2EisSome A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.false) (hol.forall A (a_1 : hol.term A => hol.eq hol.bool (Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) hol.true))) (hol.and (hol.not (Data_2EOption_2EisSome A (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) (hol.forall A (a_1 : hol.term A => Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)))) (thm_343 A) (thm_5 A).

(; Theorem: |- (Data.Bool.~ (Data.Option.isSome Data.Option.none)) ;)

(; dict ;)

def thm_345 : A : hol.type -> hyp_1 : hol.proof (hol.and (hol.not (Data_2EOption_2EisSome A (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) (hol.forall A (a_1 : hol.term A => Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)))) -> hol.proof (hol.not (Data_2EOption_2EisSome A (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) :=
  A : hol.type => hyp_1 : hol.proof (hol.and (hol.not (Data_2EOption_2EisSome A (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) (hol.forall A (a_1 : hol.term A => Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_84 q_1 p_2 hyp_1) (hol.forall A (a_1 : hol.term A => Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))) (hol.not (Data_2EOption_2EisSome A (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) hyp_1.

(; Theorem: |- (Data.Bool.~ (Data.Option.isSome Data.Option.none)) ;)

(; dict ;)

def thm_346 : A : hol.type -> hol.proof (hol.not (Data_2EOption_2EisSome A (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) :=
  A : hol.type => hol.PROVE_HYP (hol.and (hol.not (Data_2EOption_2EisSome A (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) (hol.forall A (a_1 : hol.term A => Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)))) (hol.not (Data_2EOption_2EisSome A (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) (thm_344 A) (hyp_1 : hol.proof (hol.and (hol.not (Data_2EOption_2EisSome A (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) (hol.forall A (a_1 : hol.term A => Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)))) => thm_345 A hyp_1).

(; Theorem: |- (Data.Bool.! \lambda a. (Data.Option.isSome (Data.Option.some a))) ;)

(; dict ;)

def thm_347 : A : hol.type -> hyp_1 : hol.proof (hol.and (hol.not (Data_2EOption_2EisSome A (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) (hol.forall A (a_1 : hol.term A => Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)))) -> hol.proof (hol.forall A (a_1 : hol.term A => Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))) :=
  A : hol.type => hyp_1 : hol.proof (hol.and (hol.not (Data_2EOption_2EisSome A (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) (hol.forall A (a_1 : hol.term A => Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_91 p_1 q_2 hyp_1) (hol.not (Data_2EOption_2EisSome A (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) (hol.forall A (a_1 : hol.term A => Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda a. (Data.Option.isSome (Data.Option.some a))) ;)

(; dict ;)

def thm_348 : A : hol.type -> hol.proof (hol.forall A (a_1 : hol.term A => Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))) :=
  A : hol.type => hol.PROVE_HYP (hol.and (hol.not (Data_2EOption_2EisSome A (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) (hol.forall A (a_1 : hol.term A => Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)))) (hol.forall A (a_1 : hol.term A => Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))) (thm_344 A) (hyp_1 : hol.proof (hol.and (hol.not (Data_2EOption_2EisSome A (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) (hol.forall A (a_1 : hol.term A => Data_2EOption_2EisSome A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)))) => thm_347 A hyp_1).

(; Theorem: |- ((= \lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F)))) \lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F)))) ;)

(; dict ;)

def thm_349 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) :=
  A : hol.type => hol.REFL (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))).

(; Theorem: |- ((= is_none) (select \lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))))) ;)

(; dict ;)

def thm_350 : A : hol.type -> is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) hol.bool) is__none_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))))) -> hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) hol.bool) is__none_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))))) :=
  A : hol.type => is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) hol.bool) is__none_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))))) => hyp_1.

(; Theorem: |- ((= (select \lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))))) is_none) ;)

(; dict ;)

def thm_351 : A : hol.type -> is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) hol.bool) is__none_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))))) -> hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) hol.bool) (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false)))) is__none_1) :=
  A : hol.type => is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) hol.bool) is__none_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))))) => hol.SYM (hol.arr (Data_2EOption_2Eoption A) hol.bool) is__none_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false)))) (thm_350 A is__none_1 hyp_1).

(; Theorem: |- ((= (\lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))) (select \lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F)))))) (\lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))) is_none)) ;)

(; dict ;)

def thm_352 : A : hol.type -> is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) hol.bool) is__none_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))))) -> hol.proof (hol.eq hol.bool ((is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))) (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))))) ((is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))) is__none_1)) :=
  A : hol.type => is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) hol.bool) is__none_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))))) => hol.APP_THM (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool (is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))) (is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))) (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false)))) is__none_1 (thm_349 A) (thm_351 A is__none_1 hyp_1).

(; Theorem: |- ((= (\lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))) is_none)) ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F)))) ;)

(; dict ;)

def thm_353 : A : hol.type -> is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hol.proof (hol.eq hol.bool ((is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))) is__none_1) (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) :=
  A : hol.type => is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.BETA_CONV (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool (is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))) is__none_1.

(; Theorem: |- ((= (\lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))) (select \lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F)))))) ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F)))) ;)

(; dict ;)

def thm_354 : A : hol.type -> is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) hol.bool) is__none_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))))) -> hol.proof (hol.eq hol.bool ((is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))) (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))))) (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) :=
  A : hol.type => is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) hol.bool) is__none_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))))) => hol.TRANS hol.bool ((is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))) (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))))) ((is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))) is__none_1) (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) (thm_352 A is__none_1 hyp_1) (thm_353 A is__none_1).

(; Theorem: |- ((= (Data.Bool.? \lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))))) (\lambda p. (p (select p)) \lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))))) ;)

(; dict ;)

def thm_355 : A : hol.type -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) ((p_1 : hol.term (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) => p_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) p_1)) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))))) :=
  A : hol.type => hol.APP_THM (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool)) (p_1 : hol.term (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) => p_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) p_1)) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) (thm_265 A) (thm_349 A).

(; Theorem: |- ((= (\lambda p. (p (select p)) \lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))))) (\lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))) (select \lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F)))))) ;)

(; dict ;)

def thm_356 : A : hol.type -> hol.proof (hol.eq hol.bool ((p_1 : hol.term (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) => p_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) p_1)) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) ((is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))))) :=
  A : hol.type => hol.BETA_CONV (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool (p_1 : hol.term (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) => p_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) p_1)) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))).

(; Theorem: |- ((= (Data.Bool.? \lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))))) (\lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))) (select \lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F)))))) ;)

(; dict ;)

def thm_357 : A : hol.type -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) ((is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))))) :=
  A : hol.type => hol.TRANS hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) ((p_1 : hol.term (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) => p_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) p_1)) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) ((is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))))) (thm_355 A) (thm_356 A).

(; Theorem: |- ((= (Data.Bool./\ ((= (fn Data.Option.none)) Data.Bool.T))) (Data.Bool./\ ((= (fn Data.Option.none)) Data.Bool.T))) ;)

(; dict ;)

def thm_358 : A : hol.type -> fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true)) (hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true))) :=
  A : hol.type => fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.REFL (hol.arr hol.bool hol.bool) (hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true)).

(; Theorem: |- ((= (\lambda a. Data.Bool.F a)) Data.Bool.F) ;)

(; dict ;)

def thm_359 : A : hol.type -> a_1 : hol.term A -> hol.proof (hol.eq hol.bool ((a_2 : hol.term A => hol.false) a_1) hol.false) :=
  A : hol.type => a_1 : hol.term A => hol.BETA_CONV A hol.bool (a_2 : hol.term A => hol.false) a_1.

(; Theorem: |- ((= ((= (fn (Data.Option.some a))) (\lambda a. Data.Bool.F a))) ((= (fn (Data.Option.some a))) Data.Bool.F)) ;)

(; dict ;)

def thm_360 : A : hol.type -> a_1 : hol.term A -> fn_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (fn_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) ((a_3 : hol.term A => hol.false) a_1)) (hol.eq hol.bool (fn_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) hol.false)) :=
  A : hol.type => a_1 : hol.term A => fn_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.APP_THM hol.bool hol.bool (hol.eq hol.bool (fn_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))) (hol.eq hol.bool (fn_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))) ((a_3 : hol.term A => hol.false) a_1) hol.false (thm_271 A a_1 fn_2) (thm_359 A a_1).

(; Theorem: |- ((= \lambda a. ((= (fn (Data.Option.some a))) (\lambda a. Data.Bool.F a))) \lambda a. ((= (fn (Data.Option.some a))) Data.Bool.F)) ;)

(; dict ;)

def thm_361 : A : hol.type -> fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hol.proof (hol.eq (hol.arr A hol.bool) (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => hol.false) a_2)) (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)) :=
  A : hol.type => fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.ABS_THM A hol.bool (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => hol.false) a_2)) (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false) (a_2 : hol.term A => thm_360 A a_2 fn_1).

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) (\lambda a. Data.Bool.F a)))) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) Data.Bool.F))) ;)

(; dict ;)

def thm_362 : A : hol.type -> fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hol.proof (hol.eq hol.bool (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => hol.false) a_2))) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) :=
  A : hol.type => fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => hol.false) a_2)) (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false) (thm_25 A) (thm_361 A fn_1).

(; Theorem: |- ((= ((Data.Bool./\ ((= (fn Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) (\lambda a. Data.Bool.F a))))) ((Data.Bool./\ ((= (fn Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) Data.Bool.F)))) ;)

(; dict ;)

def thm_363 : A : hol.type -> fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => hol.false) a_2)))) (hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) :=
  A : hol.type => fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true)) (hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true)) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => hol.false) a_2))) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)) (thm_358 A fn_1) (thm_362 A fn_1).

(; Theorem: |- ((= \lambda fn. ((Data.Bool./\ ((= (fn Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) (\lambda a. Data.Bool.F a))))) \lambda fn. ((Data.Bool./\ ((= (fn Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) Data.Bool.F)))) ;)

(; dict ;)

def thm_364 : A : hol.type -> hol.proof (hol.eq (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => hol.false) a_2)))) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) :=
  A : hol.type => hol.ABS_THM (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => hol.false) a_2)))) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => thm_363 A fn_1).

(; Theorem: |- ((= (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) (\lambda a. Data.Bool.F a)))))) (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) Data.Bool.F))))) ;)

(; dict ;)

def thm_365 : A : hol.type -> hol.proof (hol.eq hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => hol.false) a_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))))) :=
  A : hol.type => hol.APP_THM (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool)) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool)) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => hol.false) a_2)))) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) (thm_269 A) (thm_364 A).

(; Theorem: |- (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) (\lambda a. Data.Bool.F a))))) ;)

(; dict ;)

def thm_366 : A : hol.type -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => hol.false) a_2))))) :=
  A : hol.type => (A : hol.type => f_1 : hol.term (hol.arr A hol.bool) => b_2 : hol.term hol.bool => thm_279 A f_1 b_2) A (a_1 : hol.term A => hol.false) hol.true.

(; Theorem: |- (Data.Bool.? \lambda fn. ((Data.Bool./\ ((= (fn Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (fn (Data.Option.some a))) Data.Bool.F)))) ;)

(; dict ;)

def thm_367 : A : hol.type -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) :=
  A : hol.type => hol.EQ_MP (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) ((a_3 : hol.term A => hol.false) a_2))))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) (thm_365 A) (thm_366 A).

(; Theorem: |- ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (\lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))) x)) (Data.Bool.? \lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))))))) ((Data.Bool.==> (Data.Bool.? \lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))))) (Data.Bool.? \lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F)))))) ;)

(; dict ;)

def thm_368 : A : hol.type -> hol.proof (hol.imp (hol.forall (hol.arr (Data_2EOption_2Eoption A) hol.bool) (x_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.imp ((is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))) x_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false)))))) (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))))) :=
  A : hol.type => (A : hol.type => Q_1 : hol.term hol.bool => P_2 : hol.term (hol.arr A hol.bool) => thm_58 A Q_1 P_2) (hol.arr (Data_2EOption_2Eoption A) hol.bool) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))).

(; Theorem: |- ((= ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F)))) (\lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))) is_none)) ;)

(; dict ;)

def thm_369 : A : hol.type -> is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) ((is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))) is__none_1)) :=
  A : hol.type => is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.SYM hol.bool ((is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))) is__none_1) (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) (thm_353 A is__none_1).

(; Theorem: |- ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))) ;)

(; dict ;)

def thm_370 : A : hol.type -> is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) -> hol.proof (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) :=
  A : hol.type => is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) => hyp_1.

(; Theorem: |- ((= (is_none Data.Option.none)) Data.Bool.T) ;)

(; dict ;)

def thm_371 : A : hol.type -> is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) -> hol.proof (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) :=
  A : hol.type => is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_84 q_1 p_2 hyp_1) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)) (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) hyp_1.

(; Theorem: |- ((= (is_none Data.Option.none)) Data.Bool.T) ;)

(; dict ;)

def thm_372 : A : hol.type -> is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) -> hol.proof (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) :=
  A : hol.type => is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) => hol.PROVE_HYP (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (thm_370 A is__none_1 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) => thm_371 A is__none_1 hyp_2).

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))) ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F)))) ;)

(; dict ;)

def thm_373 : A : hol.type -> is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) -> hol.proof (hol.eq hol.bool (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)) (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) :=
  A : hol.type => is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof p_1 => thm_99 p_1 q_2 hyp_1) (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)) hyp_1.

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))) ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F)))) ;)

(; dict ;)

def thm_374 : A : hol.type -> is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) -> hol.proof (hol.eq hol.bool (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)) (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) :=
  A : hol.type => is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) => hol.PROVE_HYP (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.eq hol.bool (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)) (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) (thm_372 A is__none_1 hyp_1) (hyp_2 : hol.proof (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) => thm_373 A is__none_1 hyp_2).

(; Theorem: |- (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F)) ;)

(; dict ;)

def thm_375 : A : hol.type -> is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) -> hol.proof (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)) :=
  A : hol.type => is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_91 p_1 q_2 hyp_1) (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F)) ;)

(; dict ;)

def thm_376 : A : hol.type -> is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) -> hol.proof (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)) :=
  A : hol.type => is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) => hol.PROVE_HYP (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)) (thm_370 A is__none_1 hyp_1) (hyp_2 : hol.proof (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) => thm_375 A is__none_1 hyp_2).

(; Theorem: |- (\lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))) is_none) ;)

(; dict ;)

def thm_377 : A : hol.type -> is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) -> hol.proof ((is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))) is__none_1) :=
  A : hol.type => is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) => hol.EQ_MP (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) ((is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))) is__none_1) (thm_369 A is__none_1) (hol.EQ_MP (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)) (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) (thm_374 A is__none_1 hyp_1) (thm_376 A is__none_1 hyp_1)).

(; Theorem: |- (Data.Bool.? \lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F)))) ;)

(; dict ;)

def thm_378 : A : hol.type -> is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof ((is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))) is__none_1) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false)))) :=
  A : hol.type => is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof ((is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))) is__none_1) => (A : hol.type => x_1 : hol.term A => P_2 : hol.term (hol.arr A hol.bool) => hyp_1 : hol.proof (P_2 x_1) => thm_111 A x_1 P_2 hyp_1) (hol.arr (Data_2EOption_2Eoption A) hol.bool) is__none_1 (is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))) hyp_1.

(; Theorem: |- (Data.Bool.? \lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F)))) ;)

(; dict ;)

def thm_379 : A : hol.type -> is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false)))) :=
  A : hol.type => is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) => hol.PROVE_HYP ((is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))) is__none_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false)))) (thm_377 A is__none_1 hyp_1) (hyp_2 : hol.proof ((is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))) is__none_1) => thm_378 A is__none_1 hyp_2).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F)))) (Data.Bool.? \lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))))) ;)

(; dict ;)

def thm_380 : A : hol.type -> is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hol.proof (hol.imp (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))))) :=
  A : hol.type => is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) => thm_379 A is__none_1 hyp_1.

(; Theorem: |- (\lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))) is_none) ;)

(; dict ;)

def thm_381 : A : hol.type -> is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof ((is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))) is__none_1) -> hol.proof ((is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))) is__none_1) :=
  A : hol.type => is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof ((is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))) is__none_1) => hyp_1.

(; Theorem: |- ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))) ;)

(; dict ;)

def thm_382 : A : hol.type -> is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof ((is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))) is__none_1) -> hol.proof (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) :=
  A : hol.type => is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof ((is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))) is__none_1) => hol.EQ_MP ((is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))) is__none_1) (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) (thm_353 A is__none_1) (thm_381 A is__none_1 hyp_1).

(; Theorem: |- ((Data.Bool.==> (\lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))) is_none)) (Data.Bool.? \lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))))) ;)

(; dict ;)

def thm_383 : A : hol.type -> is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hol.proof (hol.imp ((is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))) is__none_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))))) :=
  A : hol.type => is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof ((is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))) is__none_1) => thm_380 A is__none_1 (thm_382 A is__none_1 hyp_1).

(; Theorem: |- (Data.Bool.! \lambda is_none. ((Data.Bool.==> (\lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))) is_none)) (Data.Bool.? \lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F)))))) ;)

(; dict ;)

def thm_384 : A : hol.type -> hol.proof (hol.forall (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.imp ((is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))) is__none_1) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false)))))) :=
  A : hol.type => is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => thm_383 A is__none_1.

(; Theorem: |- ((Data.Bool.==> (Data.Bool.? \lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))))) (Data.Bool.? \lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))))) ;)

(; dict ;)

def thm_385 : A : hol.type -> hol.proof (hol.imp (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))))) :=
  A : hol.type => thm_368 A (thm_384 A).

(; Theorem: |- (Data.Bool.? \lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F)))) ;)

(; dict ;)

def thm_386 : A : hol.type -> hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) :=
  A : hol.type => hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) => hyp_1.

(; Theorem: |- (Data.Bool.? \lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F)))) ;)

(; dict ;)

def thm_387 : A : hol.type -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) :=
  A : hol.type => hol.PROVE_HYP (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) (thm_367 A) (hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (fn_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (fn_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (fn_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) => thm_385 A (thm_386 A hyp_1)).

(; Theorem: |- (Data.Bool.? \lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F)))) ;)

(; dict ;)

def thm_388 : A : hol.type -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) :=
  A : hol.type => hol.PROVE_HYP (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) (thm_387 A) (hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) => thm_386 A hyp_1).

(; Theorem: |- (Data.Bool.? \lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F)))) ;)

(; dict ;)

def thm_389 : A : hol.type -> hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) :=
  A : hol.type => hol.PROVE_HYP (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) (thm_388 A) (hyp_1 : hol.proof (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) => thm_386 A hyp_1).

(; Theorem: |- (\lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))) (select \lambda is_none. ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))))) ;)

(; dict ;)

def thm_390 : A : hol.type -> hol.proof ((is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))))) :=
  A : hol.type => hol.EQ_MP (Data_2EBool_2E_3F (hol.arr (hol.arr (hol.arr (Data_2EOption_2Eoption A) hol.bool) hol.bool) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false)))) ((is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))))) (thm_357 A) (thm_389 A).

(; Theorem: |- ((Data.Bool./\ ((= (is_none Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (is_none (Data.Option.some a))) Data.Bool.F))) ;)

(; dict ;)

def thm_391 : A : hol.type -> is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) -> hyp_1 : hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) hol.bool) is__none_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))))) -> hol.proof (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) :=
  A : hol.type => is__none_1 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hyp_1 : hol.proof (hol.eq (hol.arr (Data_2EOption_2Eoption A) hol.bool) is__none_1 (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))))) => hol.EQ_MP ((is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))) (hol.select (hol.arr (Data_2EOption_2Eoption A) hol.bool) (is__none_2 : hol.term (hol.arr (Data_2EOption_2Eoption A) hol.bool) => hol.and (hol.eq hol.bool (is__none_2 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_3 : hol.term A => hol.eq hol.bool (is__none_2 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_3)) hol.false))))) (hol.and (hol.eq hol.bool (is__none_1 (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_2 : hol.term A => hol.eq hol.bool (is__none_1 (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_2)) hol.false))) (thm_354 A is__none_1 hyp_1) (thm_390 A).

(; Theorem: |- ((= ((= (Data.Option.isNone Data.Option.none)) Data.Bool.T)) (Data.Option.isNone Data.Option.none)) ;)

(; dict ;)

def thm_392 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EOption_2EisNone A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (Data_2EOption_2EisNone A (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) :=
  A : hol.type => (t_1 : hol.term hol.bool => thm_319 t_1) (Data_2EOption_2EisNone A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))).

(; Theorem: |- ((= (Data.Bool./\ ((= (Data.Option.isNone Data.Option.none)) Data.Bool.T))) (Data.Bool./\ (Data.Option.isNone Data.Option.none))) ;)

(; dict ;)

def thm_393 : A : hol.type -> hol.proof (hol.eq (hol.arr hol.bool hol.bool) (hol.and (hol.eq hol.bool (Data_2EOption_2EisNone A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true)) (hol.and (Data_2EOption_2EisNone A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))))) :=
  A : hol.type => hol.APP_THM hol.bool (hol.arr hol.bool hol.bool) hol.and hol.and (hol.eq hol.bool (Data_2EOption_2EisNone A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (Data_2EOption_2EisNone A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) thm_172 (thm_392 A).

(; Theorem: |- ((= ((= (Data.Option.isNone (Data.Option.some a))) Data.Bool.F)) (Data.Bool.~ (Data.Option.isNone (Data.Option.some a)))) ;)

(; dict ;)

def thm_394 : A : hol.type -> a_1 : hol.term A -> hol.proof (hol.eq hol.bool (hol.eq hol.bool (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) hol.false) (hol.not (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)))) :=
  A : hol.type => a_1 : hol.term A => (t_1 : hol.term hol.bool => thm_327 t_1) (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)).

(; Theorem: |- ((= \lambda a. ((= (Data.Option.isNone (Data.Option.some a))) Data.Bool.F)) \lambda a. (Data.Bool.~ (Data.Option.isNone (Data.Option.some a)))) ;)

(; dict ;)

def thm_395 : A : hol.type -> hol.proof (hol.eq (hol.arr A hol.bool) (a_1 : hol.term A => hol.eq hol.bool (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) hol.false) (a_1 : hol.term A => hol.not (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)))) :=
  A : hol.type => hol.ABS_THM A hol.bool (a_1 : hol.term A => hol.eq hol.bool (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) hol.false) (a_1 : hol.term A => hol.not (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))) (a_1 : hol.term A => thm_394 A a_1).

(; Theorem: |- ((= (Data.Bool.! \lambda a. ((= (Data.Option.isNone (Data.Option.some a))) Data.Bool.F))) (Data.Bool.! \lambda a. (Data.Bool.~ (Data.Option.isNone (Data.Option.some a))))) ;)

(; dict ;)

def thm_396 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.forall A (a_1 : hol.term A => hol.eq hol.bool (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) hol.false)) (hol.forall A (a_1 : hol.term A => hol.not (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))))) :=
  A : hol.type => hol.APP_THM (hol.arr A hol.bool) hol.bool (hol.forall A) (hol.forall A) (a_1 : hol.term A => hol.eq hol.bool (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) hol.false) (a_1 : hol.term A => hol.not (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))) (thm_25 A) (thm_395 A).

(; Theorem: |- ((= ((Data.Bool./\ ((= (Data.Option.isNone Data.Option.none)) Data.Bool.T)) (Data.Bool.! \lambda a. ((= (Data.Option.isNone (Data.Option.some a))) Data.Bool.F)))) ((Data.Bool./\ (Data.Option.isNone Data.Option.none)) (Data.Bool.! \lambda a. (Data.Bool.~ (Data.Option.isNone (Data.Option.some a)))))) ;)

(; dict ;)

def thm_397 : A : hol.type -> hol.proof (hol.eq hol.bool (hol.and (hol.eq hol.bool (Data_2EOption_2EisNone A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_1 : hol.term A => hol.eq hol.bool (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) hol.false))) (hol.and (Data_2EOption_2EisNone A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (hol.forall A (a_1 : hol.term A => hol.not (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)))))) :=
  A : hol.type => hol.APP_THM hol.bool hol.bool (hol.and (hol.eq hol.bool (Data_2EOption_2EisNone A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true)) (hol.and (Data_2EOption_2EisNone A (Data_2EOption_2Enone (Data_2EOption_2Eoption A)))) (hol.forall A (a_1 : hol.term A => hol.eq hol.bool (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) hol.false)) (hol.forall A (a_1 : hol.term A => hol.not (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)))) (thm_393 A) (thm_396 A).

(; Theorem: |- ((Data.Bool./\ (Data.Option.isNone Data.Option.none)) (Data.Bool.! \lambda a. (Data.Bool.~ (Data.Option.isNone (Data.Option.some a))))) ;)

(; dict ;)

def thm_398 : A : hol.type -> hol.proof (hol.and (Data_2EOption_2EisNone A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (hol.forall A (a_1 : hol.term A => hol.not (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))))) :=
  A : hol.type => hol.EQ_MP (hol.and (hol.eq hol.bool (Data_2EOption_2EisNone A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hol.true) (hol.forall A (a_1 : hol.term A => hol.eq hol.bool (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)) hol.false))) (hol.and (Data_2EOption_2EisNone A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (hol.forall A (a_1 : hol.term A => hol.not (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))))) (thm_397 A) (thm_10 A).

(; Theorem: |- (Data.Option.isNone Data.Option.none) ;)

(; dict ;)

def thm_399 : A : hol.type -> hyp_1 : hol.proof (hol.and (Data_2EOption_2EisNone A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (hol.forall A (a_1 : hol.term A => hol.not (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))))) -> hol.proof (Data_2EOption_2EisNone A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) :=
  A : hol.type => hyp_1 : hol.proof (hol.and (Data_2EOption_2EisNone A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (hol.forall A (a_1 : hol.term A => hol.not (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))))) => (q_1 : hol.term hol.bool => p_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_2 q_1) => thm_84 q_1 p_2 hyp_1) (hol.forall A (a_1 : hol.term A => hol.not (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)))) (Data_2EOption_2EisNone A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) hyp_1.

(; Theorem: |- (Data.Option.isNone Data.Option.none) ;)

(; dict ;)

def thm_400 : A : hol.type -> hol.proof (Data_2EOption_2EisNone A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) :=
  A : hol.type => hol.PROVE_HYP (hol.and (Data_2EOption_2EisNone A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (hol.forall A (a_1 : hol.term A => hol.not (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))))) (Data_2EOption_2EisNone A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (thm_398 A) (hyp_1 : hol.proof (hol.and (Data_2EOption_2EisNone A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (hol.forall A (a_1 : hol.term A => hol.not (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))))) => thm_399 A hyp_1).

(; Theorem: |- (Data.Bool.! \lambda a. (Data.Bool.~ (Data.Option.isNone (Data.Option.some a)))) ;)

(; dict ;)

def thm_401 : A : hol.type -> hyp_1 : hol.proof (hol.and (Data_2EOption_2EisNone A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (hol.forall A (a_1 : hol.term A => hol.not (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))))) -> hol.proof (hol.forall A (a_1 : hol.term A => hol.not (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)))) :=
  A : hol.type => hyp_1 : hol.proof (hol.and (Data_2EOption_2EisNone A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (hol.forall A (a_1 : hol.term A => hol.not (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))))) => (p_1 : hol.term hol.bool => q_2 : hol.term hol.bool => hyp_1 : hol.proof (hol.and p_1 q_2) => thm_91 p_1 q_2 hyp_1) (Data_2EOption_2EisNone A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (hol.forall A (a_1 : hol.term A => hol.not (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)))) hyp_1.

(; Theorem: |- (Data.Bool.! \lambda a. (Data.Bool.~ (Data.Option.isNone (Data.Option.some a)))) ;)

(; dict ;)

def thm_402 : A : hol.type -> hol.proof (hol.forall A (a_1 : hol.term A => hol.not (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)))) :=
  A : hol.type => hol.PROVE_HYP (hol.and (Data_2EOption_2EisNone A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (hol.forall A (a_1 : hol.term A => hol.not (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))))) (hol.forall A (a_1 : hol.term A => hol.not (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1)))) (thm_398 A) (hyp_1 : hol.proof (hol.and (Data_2EOption_2EisNone A (Data_2EOption_2Enone (Data_2EOption_2Eoption A))) (hol.forall A (a_1 : hol.term A => hol.not (Data_2EOption_2EisNone A (Data_2EOption_2Esome (hol.arr A (Data_2EOption_2Eoption A)) a_1))))) => thm_401 A hyp_1).
