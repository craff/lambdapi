
(; This file was generated by Holide. ;)

#REQUIRE hol.
#NAME set_2Dsize_2Ddef.

Number_2ENatural_2Enatural : hol.type.

Set_2Eset : hol.type -> hol.type.

Set_2Efold : A : hol.type -> hol.term A.

Number_2ENatural_2Esuc : A : hol.type -> hol.term A.

Unwanted_2Eid : A : hol.type -> hol.term A.

Number_2ENatural_2Ezero : A : hol.type -> hol.term A.

(; Constant Set.size ;)

def Set_2Esize : A : hol.type -> hol.term (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) :=
  A : hol.type => Set_2Efold (hol.arr (hol.arr A (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural))) (x_1 : hol.term A => n_2 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)).

(; Theorem: |- ((= Set.size) ((Set.fold \lambda x. \lambda n. (Number.Natural.suc n)) (Unwanted.id Number.Natural.zero))) ;)

(; dict ;)

def thm_0 : A : hol.type -> hol.proof (hol.eq (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) (Set_2Esize A) (Set_2Efold (hol.arr (hol.arr A (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural))) (x_1 : hol.term A => n_2 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) :=
  A : hol.type => hol.REFL (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) (Set_2Esize A).

(; Theorem: |- ((= ((Set.fold \lambda x. \lambda n. (Number.Natural.suc n)) (Unwanted.id Number.Natural.zero))) ((Set.fold \lambda x. \lambda n. (Number.Natural.suc n)) (Unwanted.id Number.Natural.zero))) ;)

(; dict ;)

def thm_1 : A : hol.type -> hol.proof (hol.eq (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) (Set_2Efold (hol.arr (hol.arr A (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural))) (x_1 : hol.term A => n_2 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2Efold (hol.arr (hol.arr A (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural))) (x_1 : hol.term A => n_2 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) :=
  A : hol.type => hol.REFL (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) (Set_2Efold (hol.arr (hol.arr A (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural))) (x_1 : hol.term A => n_2 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))).

(; Theorem: |- ((= ((Set.fold \lambda x. \lambda n. (Number.Natural.suc n)) (Unwanted.id Number.Natural.zero))) ((Set.fold \lambda x. \lambda n. (Number.Natural.suc n)) (Unwanted.id Number.Natural.zero))) ;)

(; dict ;)

def thm_2 : A : hol.type -> hol.proof (hol.eq (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) (Set_2Efold (hol.arr (hol.arr A (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural))) (x_1 : hol.term A => n_2 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2Efold (hol.arr (hol.arr A (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural))) (x_1 : hol.term A => n_2 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) :=
  A : hol.type => hol.SYM (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) (Set_2Efold (hol.arr (hol.arr A (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural))) (x_1 : hol.term A => n_2 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2Efold (hol.arr (hol.arr A (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural))) (x_1 : hol.term A => n_2 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (thm_1 A).

(; Theorem: |- ((= Set.size) ((Set.fold \lambda x. \lambda n. (Number.Natural.suc n)) (Unwanted.id Number.Natural.zero))) ;)

(; dict ;)

def thm_3 : A : hol.type -> hol.proof (hol.eq (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) (Set_2Esize A) (Set_2Efold (hol.arr (hol.arr A (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural))) (x_1 : hol.term A => n_2 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural)))) :=
  A : hol.type => hol.TRANS (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural) (Set_2Esize A) (Set_2Efold (hol.arr (hol.arr A (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural))) (x_1 : hol.term A => n_2 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) (Set_2Efold (hol.arr (hol.arr A (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural)) (hol.arr Number_2ENatural_2Enatural (hol.arr (Set_2Eset A) Number_2ENatural_2Enatural))) (x_1 : hol.term A => n_2 : hol.term Number_2ENatural_2Enatural => Number_2ENatural_2Esuc (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) n_2) (Unwanted_2Eid (hol.arr Number_2ENatural_2Enatural Number_2ENatural_2Enatural) (Number_2ENatural_2Ezero Number_2ENatural_2Enatural))) ((A : hol.type => thm_0 A) A) (thm_2 A).
